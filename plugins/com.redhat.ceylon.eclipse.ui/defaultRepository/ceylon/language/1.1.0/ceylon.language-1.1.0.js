(function(define) {
define(function(rq$, ex$, module) {
//the Ceylon language module
var $CCMM$={"ceylon.language.impl":{rethrow:{$t:{$pk:"$",$nm:"Anything"},$ps:[[{$t:{$pk:"$",$nm:"Throwable"},$mt:"prm",$nm:"x"}]],$mt:"m",$an:{shared:[],doc:["Rethrows an exception without declaring it. This is used as a cheap replacement for\nUnsafe.throwException() in our Java Util class, used by the metamodel."],by:["Stephane Epardaud"]},$nm:"rethrow"},SequenceBuilder:{super:{$pk:"$",$nm:"Basic"},$ps:[{$t:{$pk:"$",$nm:"Integer"},$mt:"prm",$def:1,$nm:"initialSize"}],$mt:"c",$tp:[{$nm:"Element"}],$an:{shared:[]},$m:{append:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"SequenceBuilder"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"element"}]],$mt:"m",$an:{shared:[],doc:["Append the given [[element]]."]},$nm:"append"},sequence:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:"$",$nm:"Sequential"},$mt:"m",$an:{shared:[],doc:["The resulting sequential."]},$nm:"sequence"},appendAll:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"SequenceBuilder"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$pk:"$",$nm:"Null"}],$pk:"$",$nm:"Iterable"},$mt:"prm",$nm:"elements"}]],$mt:"m",$an:{shared:[],doc:["Append all of the given elements."]},$nm:"appendAll"},newSize$hd5k5:{$t:{$pk:"$",$nm:"Integer"},$ps:[[{$t:{$pk:"$",$nm:"Integer"},$mt:"prm",$nm:"existingSize"},{$t:{$pk:"$",$nm:"Integer"},$mt:"prm",$nm:"extra"}]],$mt:"m",$an:{doc:["Resize policy"]},$nm:"newSize"},getStorage$hb50af:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:"$",$nm:"Array"},$ps:[[{$t:{$pk:"$",$nm:"Integer"},$mt:"prm",$nm:"extra"},{$t:{$nm:"Element"},$mt:"prm",$nm:"example"}]],$mt:"m",$an:{doc:["Returns the storage array ready for storing [[extra]] more elements.\nReallocates and copies existing entries if needed."]},$nm:"getStorage"}},$at:{length$ffk3eq:{$t:{$pk:"$",$nm:"Integer"},var:1,$mt:"a",$an:{doc:["The number of items in [[array]] which have actually been appended."],variable:[]},$nm:"length"},initialSize$rb9uf:{$t:{$pk:"$",$nm:"Integer"},$mt:"a",$nm:"initialSize"},store$acm4cb:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$tp:[{$mt:"tp",$nm:"Element"}],$pk:"$",$nm:"Array"}]},var:1,$mt:"a",$an:{doc:["The storage"],variable:[]},$nm:"store"},size:{$t:{$pk:"$",$nm:"Integer"},$mt:"g",$an:{shared:[],doc:["Returns the length of the current content"]},$nm:"size"}},$nm:"SequenceBuilder"}},"$mod-name":"ceylon.language","ceylon.language.meta.declaration":{Import:{$sts:[{$pk:"$",$nm:"Identifiable"},{$pk:"$",$nm:"Annotated"}],$mt:"i",$an:{shared:[],doc:["Model of an `import` declaration \nwithin a module declaration."]},$at:{shared:{$t:{$pk:"$",$nm:"Boolean"},$mt:"a",$an:{shared:[],formal:[],doc:["True if this imported module is shared."]},$nm:"shared"},container:{$t:{$pk:".",$nm:"Module"},$mt:"a",$an:{shared:[],formal:[],doc:["The containing module."]},$nm:"container"},optional:{$t:{$pk:"$",$nm:"Boolean"},$mt:"a",$an:{shared:[],formal:[],doc:["True if this imported module is optional."]},$nm:"optional"},name:{$t:{$pk:"$",$nm:"String"},$mt:"a",$an:{shared:[],formal:[],doc:["The name of the imported module."]},$nm:"name"},version:{$t:{$pk:"$",$nm:"String"},$mt:"a",$an:{shared:[],formal:[],doc:["The compile-time version of the imported module."]},$nm:"version"}},$nm:"Import"},Variance:{of:[{$pk:".",$nm:"invariant"},{$pk:".",$nm:"covariant"},{$pk:".",$nm:"contravariant"}],$mt:"i",$an:{shared:[],doc:["Variance information."]},$nm:"Variance"},AnnotatedDeclaration:{of:[{$pk:".",$nm:"NestableDeclaration"},{$pk:".",$nm:"Module"},{$pk:".",$nm:"Package"}],$sts:[{$pk:".",$nm:"Declaration"},{$pk:"$",$nm:"Annotated"}],$mt:"i",$an:{shared:[],doc:["Declaration which can be annotated, such as:\n\n- [[NestableDeclaration]]\n- [[Module]]\n- [[Package]]\n\nYou can query annotations that are placed on a given annotated declaration with:\n\n"]},$m:{annotations:{$t:{$tp:[{$mt:"tp",$nm:"Annotation"}],$pk:"$",$nm:"Sequential"},$mt:"m",$tp:[{$sts:[{$pk:"$",$nm:"Annotation"}],variance:"out",$nm:"Annotation"}],$an:{shared:[],formal:[],doc:["The annotation instances of the given \nannotation type on this declaration.\n\nFor example, you can list all the [[See|ceylon.language::See]] \nannotations on [[List|ceylon.language::List]]\nwith the following code:\n\n    for(annot in `interface List`.annotations<See>()){\n        for(elems in annot.programElements){\n            print(\"See: ``elems``\");\n        }\n    }\n\nAlternatively, you can use the [[ceylon.language.meta::annotations]] \nfunction.\n"]},$nm:"annotations"}},$nm:"AnnotatedDeclaration"},OpenTypeVariable:{$sts:[{$pk:".",$nm:"OpenType"}],$mt:"i",$an:{shared:[],doc:["An open type variable."]},$at:{declaration:{$t:{$pk:".",$nm:"TypeParameter"},$mt:"a",$an:{shared:[],formal:[],doc:["This type variable's type parameter declaration."]},$nm:"declaration"}},$nm:"OpenTypeVariable"},OpenIntersection:{$sts:[{$pk:".",$nm:"OpenType"}],$mt:"i",$an:{shared:[],doc:["An open intersection type."]},$at:{satisfiedTypes:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"OpenType"}],$pk:"$",$nm:"List"},$mt:"a",$an:{shared:[],formal:[],doc:["This intersection's list of satisfied open types."]},$nm:"satisfiedTypes"}},$nm:"OpenIntersection"},OpenType:{of:[{$pk:".",$nm:"nothingType"},{$pk:".",$nm:"OpenClassOrInterfaceType"},{$pk:".",$nm:"OpenTypeVariable"},{$pk:".",$nm:"OpenUnion"},{$pk:".",$nm:"OpenIntersection"}],$mt:"i",$an:{shared:[],doc:["An open type.\n\nAn open type is a type which may contain unbound type variables, such as `List<T>`."]},$nm:"OpenType"},SetterDeclaration:{$sts:[{$pk:".",$nm:"NestableDeclaration"}],$mt:"i",$an:{shared:[],doc:["A setter declaration for a variable `ValueDeclaration`."]},$at:{shared:{$t:{$pk:"$",$nm:"Boolean"},$mt:"g",$an:{shared:[],actual:[]},$nm:"shared"},containingModule:{$t:{$pk:".",$nm:"Module"},$mt:"g",$an:{shared:[],actual:[]},$nm:"containingModule"},toplevel:{$t:{$pk:"$",$nm:"Boolean"},$mt:"g",$an:{shared:[],actual:[]},$nm:"toplevel"},formal:{$t:{$pk:"$",$nm:"Boolean"},$mt:"g",$an:{shared:[],actual:[]},$nm:"formal"},default:{$t:{$pk:"$",$nm:"Boolean"},$mt:"g",$an:{shared:[],actual:[]},$nm:"default"},container:{$t:{comp:"u",$ts:[{$pk:".",$nm:"NestableDeclaration"},{$pk:".",$nm:"Package"}]},$mt:"g",$an:{shared:[],actual:[]},$nm:"container"},containingPackage:{$t:{$pk:".",$nm:"Package"},$mt:"g",$an:{shared:[],actual:[]},$nm:"containingPackage"},actual:{$t:{$pk:"$",$nm:"Boolean"},$mt:"g",$an:{shared:[],actual:[]},$nm:"actual"},variable:{$t:{$pk:".",$nm:"ValueDeclaration"},$mt:"a",$an:{shared:[],formal:[],doc:["The variable value this setter is for."]},$nm:"variable"}},$nm:"SetterDeclaration"},InterfaceDeclaration:{$sts:[{$pk:".",$nm:"ClassOrInterfaceDeclaration"}],$mt:"i",$an:{shared:[],doc:["An interface declaration.\n\n<a name=\"toplevel-sample\"><\/a>\n### Usage sample for toplevel interfaces\n\nBecause some interfaces have type parameters, getting a model requires applying type arguments to the\ninterface declaration with [[interfaceApply]] in order to be able to get a closed type. For example, here is how you would\nobtain an interface model from a toplevel interface declaration:\n\n    interface Foo<T> satisfies List<T> {\n    }\n    \n    void test(){\n        \/\/ We need to apply the Integer closed type to the Foo declaration in order to get the Foo<Integer> closed type\n        Interface<Foo<Integer>> interfaceModel = `interface Foo`.interfaceApply<Foo<Integer>>(`Integer`);\n        \/\/ This will print: ceylon.language::List<ceylon.language::Integer>\n        for(satisfiedType in interfaceModel.satisfiedTypes){\n            print(satisfiedType);\n        }\n    }\n\n<a name=\"member-sample\"><\/a>\n### Usage sample for member interfaces\n\nFor member interfaces it is a bit longer, because member interfaces need to be applied not only their type arguments but also\nthe containing type, so you should use [[memberInterfaceApply]] and start by giving the containing closed type:\n\n    class Outer(){\n        shared interface Inner<T> satisfies List<T> {\n        }\n    }\n\n    void test(){\n        \/\/ apply the containing closed type `Outer` to the member class declaration `Outer.Inner`\n        MemberInterface<Outer,Outer.Inner<Integer>> memberInterfaceModel = `interface Outer.Inner`.memberInterfaceApply<Outer,Outer.Inner<Integer>>(`Outer`, `Integer`);\n        \/\/ This will print: ceylon.language::List<ceylon.language::Integer>\n        for(satisfiedType in memberInterfaceModel.satisfiedTypes){\n            print(satisfiedType);\n        }\n    }\n"]},$m:{interfaceApply:{$t:{$tp:[{$mt:"tp",$nm:"Type"}],$pk:"ceylon.language.meta.model",$nm:"Interface"},$ps:[[{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"ceylon.language.meta.model",$nm:"Type"}],$pk:"$",$nm:"Sequential"},$mt:"prm",seq:1,$nm:"typeArguments"}]],$mt:"m",$tp:[{$def:{$pk:"$",$nm:"Anything"},$nm:"Type"}],$an:{shared:[],formal:[],throws:["TypeApplicationException","If the specified closed type argument values are not compatible with the actual result's type parameters."],doc:["Applies the given closed type arguments to this toplevel interface declaration in order to obtain an interface model. \nSee [this code sample](#toplevel-sample) for an example on how to use this."]},$nm:"interfaceApply"},memberInterfaceApply:{$t:{$tp:[{$mt:"tp",$nm:"Container"},{$mt:"tp",$nm:"Type"}],$pk:"ceylon.language.meta.model",$nm:"MemberInterface"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Container"}],$pk:"ceylon.language.meta.model",$nm:"Type"},$mt:"prm",$nm:"containerType"},{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"ceylon.language.meta.model",$nm:"Type"}],$pk:"$",$nm:"Sequential"},$mt:"prm",seq:1,$nm:"typeArguments"}]],$mt:"m",$tp:[{$def:{$pk:".",$nm:"Nothing"},$nm:"Container"},{$def:{$pk:"$",$nm:"Anything"},$nm:"Type"}],$an:{shared:[],formal:[],throws:["TypeApplicationException","If the specified closed container type or type argument values are not compatible with the actual result's container type or type parameters."],doc:["Applies the given closed container type and type arguments to this member interface declaration in order to obtain a member interface model. \nSee [this code sample](#member-sample) for an example on how to use this."]},$nm:"memberInterfaceApply"}},$nm:"InterfaceDeclaration"},Module:{$sts:[{$pk:"$",$nm:"Identifiable"},{$pk:".",$nm:"AnnotatedDeclaration"}],$mt:"i",$an:{shared:[],doc:["A `module` declaration\nfrom a `module.ceylon` compilation unit"]},$m:{resourceByPath:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$pk:"$",$nm:"Resource"}]},$ps:[[{$t:{$pk:"$",$nm:"String"},$mt:"prm",$nm:"path"}]],$mt:"m",$an:{shared:[],formal:[],doc:["Searches for a resource by its path inside the module."]},$nm:"resourceByPath"},findImportedPackage:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$pk:".",$nm:"Package"}]},$ps:[[{$t:{$pk:"$",$nm:"String"},$mt:"prm",$nm:"name"}]],$mt:"m",$an:{shared:[],formal:[],doc:["Finds a package by name in this module or in its dependencies. Note that all transitive `shared`\ndependencies are searched. Returns `null` if not found."]},$nm:"findImportedPackage"},findPackage:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$pk:".",$nm:"Package"}]},$ps:[[{$t:{$pk:"$",$nm:"String"},$mt:"prm",$nm:"name"}]],$mt:"m",$an:{shared:[],formal:[],doc:["Finds a package by name. Returns `null` if not found."]},$nm:"findPackage"}},$at:{dependencies:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Import"}],$pk:"$",$nm:"Sequential"},$mt:"a",$an:{shared:[],formal:[],doc:["The modules this module depends on."]},$nm:"dependencies"},members:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Package"}],$pk:"$",$nm:"Sequential"},$mt:"a",$an:{shared:[],formal:[],doc:["The package members of the module."]},$nm:"members"},version:{$t:{$pk:"$",$nm:"String"},$mt:"a",$an:{shared:[],formal:[],doc:["The module version."]},$nm:"version"}},$nm:"Module"},TypeParameter:{$sts:[{$pk:".",$nm:"Declaration"}],$mt:"i",$an:{shared:[],doc:["A type parameter declaration."]},$at:{caseTypes:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"OpenType"}],$pk:"$",$nm:"Sequential"},$mt:"a",$an:{shared:[],formal:[],doc:["The `of` enumerated bounds for this type parameter."]},$nm:"caseTypes"},defaultTypeArgument:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$pk:".",$nm:"OpenType"}]},$mt:"a",$an:{shared:[],formal:[],doc:["This type parameter's default type argument, if it has one."]},$nm:"defaultTypeArgument"},container:{$t:{$pk:".",$nm:"NestableDeclaration"},$mt:"a",$an:{shared:[],formal:[],doc:["The declaration that declared this type parameter. This is either a [[ClassOrInterfaceDeclaration]] or a\n[[FunctionDeclaration]]."]},$nm:"container"},variance:{$t:{$pk:".",$nm:"Variance"},$mt:"a",$an:{shared:[],formal:[],doc:["This type parameter's variance, as defined by `in` or `out` keywords."]},$nm:"variance"},satisfiedTypes:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"OpenType"}],$pk:"$",$nm:"Sequential"},$mt:"a",$an:{shared:[],formal:[],doc:["The `satisfies` upper bounds for this type parameter."]},$nm:"satisfiedTypes"},defaulted:{$t:{$pk:"$",$nm:"Boolean"},$mt:"a",$an:{shared:[],formal:[],doc:["True if this type parameter has a default type argument and can be omitted."]},$nm:"defaulted"}},$nm:"TypeParameter"},FunctionalDeclaration:{$mt:"i",$an:{shared:[],doc:["Declaration which can be invoked, and may have parameters. Classes\nand functions are functional declarations.\n\nNote that multiple-parameter lists are not reified at runtime, so if you\nhave a function declaration like this:\n\n    Integer add(Integer a)(Integer b) => a + b;\n\nIt will only have a single parameter list at runtime (the first), and its return\ntype will be `Callable<Integer,[Integer]>`.\n"]},$m:{getParameterDeclaration:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$pk:".",$nm:"FunctionOrValueDeclaration"}]},$ps:[[{$t:{$pk:"$",$nm:"String"},$mt:"prm",$nm:"name"}]],$mt:"m",$an:{shared:[],formal:[],doc:["Gets a parameter declaration by name. Returns `null` if no such parameter exists."]},$nm:"getParameterDeclaration"}},$at:{annotation:{$t:{$pk:"$",$nm:"Boolean"},$mt:"a",$an:{shared:[],formal:[],doc:["True if the current declaration is an annotation class or function."]},$nm:"annotation"},parameterDeclarations:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"FunctionOrValueDeclaration"}],$pk:"$",$nm:"Sequential"},$mt:"a",$an:{shared:[],formal:[],doc:["The list of parameter declarations for this functional declaration."]},$nm:"parameterDeclarations"}},$nm:"FunctionalDeclaration"},"$pkg-shared":1,GenericDeclaration:{$mt:"i",$an:{shared:[],doc:["A declaration that can have type parameters."]},$m:{getTypeParameterDeclaration:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$pk:".",$nm:"TypeParameter"}]},$ps:[[{$t:{$pk:"$",$nm:"String"},$mt:"prm",$nm:"name"}]],$mt:"m",$an:{shared:[],formal:[],doc:["Finds a type parameter by name. Returns `null` if not found."]},$nm:"getTypeParameterDeclaration"}},$at:{typeParameterDeclarations:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"TypeParameter"}],$pk:"$",$nm:"Sequential"},$mt:"a",$an:{shared:[],formal:[],doc:["The list of type parameters declared on this generic declaration."]},$nm:"typeParameterDeclarations"}},$nm:"GenericDeclaration"},invariant:{super:{$pk:"$",$nm:"Basic"},$sts:[{$pk:".",$nm:"Variance"}],$mt:"o",$an:{shared:[],doc:["Invariant means that neither subtype nor supertype can be accepted, the\ntype has to be exactly that which is declared."]},$at:{string:{$t:{$pk:"$",$nm:"String"},$mt:"g",$an:{shared:[],actual:[]},$nm:"string"}},$nm:"invariant"},OpenInterfaceType:{$sts:[{$pk:".",$nm:"OpenClassOrInterfaceType"}],$mt:"i",$an:{shared:[],doc:["An open interface type."]},$at:{declaration:{$t:{$pk:".",$nm:"InterfaceDeclaration"},$mt:"a",$an:{shared:[],formal:[],doc:["This declaration's package container."],actual:[]},$nm:"declaration"}},$nm:"OpenInterfaceType"},Package:{$sts:[{$pk:"$",$nm:"Identifiable"},{$pk:".",$nm:"AnnotatedDeclaration"}],$mt:"i",$an:{shared:[],doc:["Model of a `package` declaration \nfrom a `package.ceylon` compilation unit"]},$m:{getValue:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$pk:".",$nm:"ValueDeclaration"}]},$ps:[[{$t:{$pk:"$",$nm:"String"},$mt:"prm",$nm:"name"}]],$mt:"m",$an:{shared:[],formal:[],doc:["The value with the given name. Returns `null` if not found."]},$nm:"getValue"},getAlias:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$pk:".",$nm:"AliasDeclaration"}]},$ps:[[{$t:{$pk:"$",$nm:"String"},$mt:"prm",$nm:"name"}]],$mt:"m",$an:{shared:[],formal:[],doc:["The type alias with the given name. Returns `null` if not found."]},$nm:"getAlias"},getMember:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$nm:"Kind"}]},$ps:[[{$t:{$pk:"$",$nm:"String"},$mt:"prm",$nm:"name"}]],$mt:"m",$tp:[{$sts:[{$pk:".",$nm:"NestableDeclaration"}],$nm:"Kind"}],$an:{shared:[],formal:[],doc:["Looks up a member declaration by name, provided it satisfies the given `Kind` type\nargument. Returns `null` if no such member matches."]},$nm:"getMember"},getFunction:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$pk:".",$nm:"FunctionDeclaration"}]},$ps:[[{$t:{$pk:"$",$nm:"String"},$mt:"prm",$nm:"name"}]],$mt:"m",$an:{shared:[],formal:[],doc:["The function with the given name. Returns `null` if not found."]},$nm:"getFunction"},annotatedMembers:{$t:{$tp:[{$mt:"tp",$nm:"Kind"}],$pk:"$",$nm:"Sequential"},$mt:"m",$tp:[{$sts:[{$pk:".",$nm:"NestableDeclaration"}],$nm:"Kind"},{$sts:[{$pk:"$",$nm:"Annotation"}],$nm:"Annotation"}],$an:{shared:[],formal:[],doc:["Returns the list of member declarations that satisfy the given `Kind` type argument and\nthat are annotated with the given `Annotation` type argument"]},$nm:"annotatedMembers"},getClassOrInterface:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$pk:".",$nm:"ClassOrInterfaceDeclaration"}]},$ps:[[{$t:{$pk:"$",$nm:"String"},$mt:"prm",$nm:"name"}]],$mt:"m",$an:{shared:[],formal:[],doc:["The class or interface with the given name. Returns `null` if not found."]},$nm:"getClassOrInterface"},members:{$t:{$tp:[{$mt:"tp",$nm:"Kind"}],$pk:"$",$nm:"Sequential"},$mt:"m",$tp:[{$sts:[{$pk:".",$nm:"NestableDeclaration"}],$nm:"Kind"}],$an:{shared:[],formal:[],doc:["Returns the list of member declarations that satisfy the given `Kind` type argument."]},$nm:"members"}},$at:{shared:{$t:{$pk:"$",$nm:"Boolean"},$mt:"a",$an:{shared:[],formal:[],doc:["True if this package is shared."]},$nm:"shared"},container:{$t:{$pk:".",$nm:"Module"},$mt:"a",$an:{shared:[],formal:[],doc:["The module this package belongs to."]},$nm:"container"}},$nm:"Package"},OpenClassType:{$sts:[{$pk:".",$nm:"OpenClassOrInterfaceType"}],$mt:"i",$an:{shared:[],doc:["An open class type."]},$at:{declaration:{$t:{$pk:".",$nm:"ClassDeclaration"},$mt:"a",$an:{shared:[],formal:[],doc:["This class declaration."],actual:[]},$nm:"declaration"}},$nm:"OpenClassType"},TypedDeclaration:{$mt:"i",$an:{shared:[],doc:["Declaration which has an open type."]},$at:{openType:{$t:{$pk:".",$nm:"OpenType"},$mt:"a",$an:{shared:[],formal:[],doc:["The open type for this declaration. For example, the open type for `List<T> f<T>()` is `List<T>`."]},$nm:"openType"}},$nm:"TypedDeclaration"},OpenUnion:{$sts:[{$pk:".",$nm:"OpenType"}],$mt:"i",$an:{shared:[],doc:["An open union type."]},$at:{caseTypes:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"OpenType"}],$pk:"$",$nm:"List"},$mt:"a",$an:{shared:[],formal:[],doc:["The list of case types for this open union type."]},$nm:"caseTypes"}},$nm:"OpenUnion"},ModelError:{super:{$pk:"$",$nm:"Error"},$ps:[{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$pk:"$",$nm:"String"}]},$mt:"prm",$def:1,$nm:"description"},{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$pk:"$",$nm:"Throwable"}]},$mt:"prm",$def:1,$nm:"cause"}],$mt:"c",$an:{shared:[],doc:["Thrown when the metamodel cannot be loaded, due to bugs in the metamodel loading, or \nin the model descriptor.\n"]},$at:{description$30i5d2:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$pk:"$",$nm:"String"}]},$mt:"a",$nm:"description"},cause$bteyyd:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$pk:"$",$nm:"Throwable"}]},$mt:"a",$nm:"cause"}},$nm:"ModelError"},FunctionDeclaration:{$sts:[{$pk:".",$nm:"FunctionOrValueDeclaration"},{$pk:".",$nm:"GenericDeclaration"},{$pk:".",$nm:"FunctionalDeclaration"}],$mt:"i",$an:{shared:[],doc:["A function declaration.\n\n<a name=\"toplevel-sample\"><\/a>\n### Usage sample for toplevel function\n\nBecause some functions have type parameters, getting a model requires applying type arguments to the\nfunction declaration with [[apply]] in order to be able to invoke that function. For example, here is how you would\nobtain a function model that you can invoke from a toplevel function declaration:\n\n    String foo<T>(){\n        return \"Hello, our T is: ``typeLiteral<T>()``\";\n    }\n    \n    void test(){\n        \/\/ We need to apply the Integer closed type to the foo declaration in order to get the foo<Integer> function model\n        Function<String,[]> functionModel = `function foo`.apply<String,[]>(`Integer`);\n        \/\/ This will print: Hello, our T is: ceylon.language::Integer\n        print(functionModel());\n    }\n\n<a name=\"member-sample\"><\/a>\n### Usage sample for methods\n\nFor methods it is a bit longer, because methods need to be applied not only their type arguments but also\nthe containing type, so you should use [[memberApply]] and start by giving the containing closed type:\n\n    class Outer(){\n        shared String hello() => \"Hello\";\n    }\n\n    void test(){\n        \/\/ apply the containing closed type `Outer` to the method declaration `Outer.hello`\n        Method<Outer,String,[]> methodModel = `function Outer.hello`.memberApply<Outer,String,[]>(`Outer`);\n        \/\/ We now have a Method, which needs to be applied to a containing instance in order to become an\n        \/\/ invokable function:\n        Function<String,[]> boundMethodModel = methodModel(Outer());\n        \/\/ This will print: Hello\n        print(boundMethodModel());\n    }\n"]},$m:{apply:{$t:{$tp:[{$mt:"tp",$nm:"Return"},{$mt:"tp",$nm:"Arguments"}],$pk:"ceylon.language.meta.model",$nm:"Function"},$ps:[[{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"ceylon.language.meta.model",$nm:"Type"}],$pk:"$",$nm:"Sequential"},$mt:"prm",seq:1,$nm:"typeArguments"}]],$mt:"m",$tp:[{$def:{$pk:"$",$nm:"Anything"},$nm:"Return"},{$sts:[{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"$",$nm:"Sequential"}],$def:{$pk:".",$nm:"Nothing"},$nm:"Arguments"}],$an:{shared:[],formal:[],throws:["TypeApplicationException","If the specified closed type argument values are not compatible with the actual result's type parameters."],doc:["Applies the given closed type arguments to this function declaration in order to obtain a function model. \nSee [this code sample](#toplevel-sample) for an example on how to use this."]},$nm:"apply"},memberInvoke:{$t:{$pk:"$",$nm:"Anything"},$ps:[[{$t:{$pk:"$",$nm:"Object"},$mt:"prm",$nm:"container"},{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"ceylon.language.meta.model",$nm:"Type"}],$pk:"$",$nm:"Sequential"},$mt:"prm",$def:1,$nm:"typeArguments"},{$t:{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"$",$nm:"Sequential"},$mt:"prm",seq:1,$nm:"arguments"}]],$mt:"m",$an:{shared:[],default:[],throws:["IncompatibleTypeException","If the specified container, type or value arguments are not compatible with this method."],doc:["Invokes the underlying method, by applying the specified type arguments and value arguments."]},$nm:"memberInvoke"},invoke:{$t:{$pk:"$",$nm:"Anything"},$ps:[[{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"ceylon.language.meta.model",$nm:"Type"}],$pk:"$",$nm:"Sequential"},$mt:"prm",$def:1,$nm:"typeArguments"},{$t:{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"$",$nm:"Sequential"},$mt:"prm",seq:1,$nm:"arguments"}]],$mt:"m",$an:{shared:[],default:[],throws:["IncompatibleTypeException","If the specified type or value arguments are not compatible with this toplevel function."],doc:["Invokes the underlying toplevel function, by applying the specified type arguments and value arguments."]},$nm:"invoke"},memberApply:{$t:{$tp:[{$mt:"tp",$nm:"Container"},{$mt:"tp",$nm:"Return"},{$mt:"tp",$nm:"Arguments"}],$pk:"ceylon.language.meta.model",$nm:"Method"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Container"}],$pk:"ceylon.language.meta.model",$nm:"Type"},$mt:"prm",$nm:"containerType"},{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"ceylon.language.meta.model",$nm:"Type"}],$pk:"$",$nm:"Sequential"},$mt:"prm",seq:1,$nm:"typeArguments"}]],$mt:"m",$tp:[{$def:{$pk:".",$nm:"Nothing"},$nm:"Container"},{$def:{$pk:"$",$nm:"Anything"},$nm:"Return"},{$sts:[{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"$",$nm:"Sequential"}],$def:{$pk:".",$nm:"Nothing"},$nm:"Arguments"}],$an:{shared:[],formal:[],throws:["TypeApplicationException","If the specified closed container type or type argument values are not compatible with the actual result's container type or type parameters."],doc:["Applies the given closed container type and type arguments to this method declaration in order to obtain a method model. \nSee [this code sample](#member-sample) for an example on how to use this."]},$nm:"memberApply"}},$nm:"FunctionDeclaration"},NestableDeclaration:{of:[{$pk:".",$nm:"FunctionOrValueDeclaration"},{$pk:".",$nm:"ClassOrInterfaceDeclaration"},{$pk:".",$nm:"SetterDeclaration"},{$pk:".",$nm:"AliasDeclaration"}],$sts:[{$pk:".",$nm:"AnnotatedDeclaration"},{$pk:".",$nm:"TypedDeclaration"}],$mt:"i",$an:{shared:[],doc:["A declaration which can be contained in a [[Package]] or in another [[NestableDeclaration]].\n\nFunctions, values, classes, interfaes and aliases are such declarations."]},$at:{shared:{$t:{$pk:"$",$nm:"Boolean"},$mt:"a",$an:{shared:[],formal:[],doc:["True if this declaration is annotated with [[shared|ceylon.language::shared]]."]},$nm:"shared"},containingModule:{$t:{$pk:".",$nm:"Module"},$mt:"a",$an:{shared:[],formal:[],doc:["This declaration's module container."]},$nm:"containingModule"},toplevel:{$t:{$pk:"$",$nm:"Boolean"},$mt:"a",$an:{shared:[],formal:[],doc:["True if this declaration is a toplevel declaration."]},$nm:"toplevel"},formal:{$t:{$pk:"$",$nm:"Boolean"},$mt:"a",$an:{shared:[],formal:[],doc:["True if this declaration is annotated with [[formal|ceylon.language::formal]]."]},$nm:"formal"},default:{$t:{$pk:"$",$nm:"Boolean"},$mt:"a",$an:{shared:[],formal:[],doc:["True if this declaration is annotated with [[default|ceylon.language::default]]."]},$nm:"default"},container:{$t:{comp:"u",$ts:[{$pk:".",$nm:"NestableDeclaration"},{$pk:".",$nm:"Package"}]},$mt:"a",$an:{shared:[],formal:[],doc:["This declaration's immediate container, which can be either a [[NestableDeclaration]]\nor a [[Package]]."]},$nm:"container"},containingPackage:{$t:{$pk:".",$nm:"Package"},$mt:"a",$an:{shared:[],formal:[],doc:["This declaration's package container."]},$nm:"containingPackage"},actual:{$t:{$pk:"$",$nm:"Boolean"},$mt:"a",$an:{shared:[],formal:[],doc:["True if this declaration is annotated with [[actual|ceylon.language::actual]]."]},$nm:"actual"}},$nm:"NestableDeclaration"},Declaration:{of:[{$pk:".",$nm:"AnnotatedDeclaration"},{$pk:".",$nm:"TypeParameter"}],$mt:"i",$an:{shared:[],doc:["A declaration.\n\nThere are only two types of declarations:\n\n- [[AnnotatedDeclaration]]s such as modules, packages, classes or functions, and\n- [[TypeParameter]] declarations."]},$at:{qualifiedName:{$t:{$pk:"$",$nm:"String"},$mt:"a",$an:{shared:[],formal:[],doc:["The qualified name of this declaration. This includes the container qualified name. For\nexample, the [[Declaration]] class' qualified name is \"ceylon.language.meta.declaration::Declaration\"."]},$nm:"qualifiedName"},name:{$t:{$pk:"$",$nm:"String"},$mt:"a",$an:{shared:[],formal:[],doc:["The name of this declaration. For example, the [[Declaration]] class is named \"Declaration\"."]},$nm:"name"}},$nm:"Declaration"},ClassOrInterfaceDeclaration:{of:[{$pk:".",$nm:"ClassDeclaration"},{$pk:".",$nm:"InterfaceDeclaration"}],$sts:[{$pk:".",$nm:"NestableDeclaration"},{$pk:".",$nm:"GenericDeclaration"}],$mt:"i",$an:{shared:[],doc:["A class or interface declaration.\n\n<a name=\"toplevel-sample\"><\/a>\n### Usage sample for toplevel classes\n\nBecause some classes have type parameters, getting a model requires applying type arguments to the\nclass declaration with [[apply]] in order to be able to instantiate that class. For example, here is how you would\nobtain a class or interface model that you can instantiate from a toplevel class declaration:\n\n    class Foo<T>() {\n        string => \"Hello, our T is: ``typeLiteral<T>()``\";\n    }\n    \n    void test(){\n        \/\/ We need to apply the Integer closed type to the Foo declaration in order to get the Foo<Integer> closed type\n        ClassOrInterface<Foo<Integer>> classOrInterfaceModel = `class Foo`.apply<Foo<Integer>>(`Integer`);\n        assert(is Class<Foo<Integer>,[]> classOrInterfaceModel);\n        \/\/ This will print: Hello, our T is: ceylon.language::Integer\n        print(classOrInterfaceModel());\n    }\n\nNote that there are more specialised versions of [[apply]] in [[ClassDeclaration.classApply]] and \n[[InterfaceDeclaration.interfaceApply]].\n\n<a name=\"member-sample\"><\/a>\n### Usage sample for member classes\n\nFor member classes or interfaces it is a bit longer, because member types need to be applied not only their type arguments but also\nthe containing type, so you should use [[memberApply]] and start by giving the containing closed type:\n\n    class Outer(){\n        shared class Inner(){\n            string => \"Hello\";\n        }\n    }\n\n    void test(){\n        \/\/ apply the containing closed type `Outer` to the member class declaration `Outer.Inner`\n        value memberClassModel = `class Outer.Inner`.memberApply<Outer,Outer.Inner>(`Outer`);\n        assert(is MemberClass<Outer,Outer.Inner,[]> memberClassModel);\n        \/\/ We now have a MemberClass, which needs to be applied to a containing instance in order to become an\n        \/\/ invokable class model:\n        Class<Outer.Inner,[]> boundMemberClassModel = memberClassModel(Outer());\n        \/\/ This will print: Hello\n        print(boundMemberClassModel());\n    }\n\nNote that there are more specialised versions of [[memberApply]] in [[ClassDeclaration.memberClassApply]] and \n[[InterfaceDeclaration.memberInterfaceApply]].\n"]},$m:{memberDeclarations:{$t:{$tp:[{$mt:"tp",$nm:"Kind"}],$pk:"$",$nm:"Sequential"},$mt:"m",$tp:[{$sts:[{$pk:".",$nm:"NestableDeclaration"}],$nm:"Kind"}],$an:{shared:[],formal:[],doc:["Returns the list of shared member declarations that satisfy the given `Kind` type argument. This includes inherited\ndeclarations but not unshared declarations."]},$nm:"memberDeclarations"},apply:{$t:{$tp:[{$mt:"tp",$nm:"Type"}],$pk:"ceylon.language.meta.model",$nm:"ClassOrInterface"},$ps:[[{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"ceylon.language.meta.model",$nm:"Type"}],$pk:"$",$nm:"Sequential"},$mt:"prm",seq:1,$nm:"typeArguments"}]],$mt:"m",$tp:[{$def:{$pk:"$",$nm:"Anything"},$nm:"Type"}],$an:{shared:[],formal:[],throws:["TypeApplicationException","If the specified closed type argument values are not compatible with the actual result's type parameters."],doc:["Applies the given closed type arguments to this toplevel class or interface declaration in order to obtain a class or interface model. \nSee [this code sample](#toplevel-sample) for an example on how to use this."]},$nm:"apply"},getDeclaredMemberDeclaration:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$nm:"Kind"}]},$ps:[[{$t:{$pk:"$",$nm:"String"},$mt:"prm",$nm:"name"}]],$mt:"m",$tp:[{$sts:[{$pk:".",$nm:"NestableDeclaration"}],$nm:"Kind"}],$an:{shared:[],formal:[],doc:["Looks up a member declaration directly declared on this class or interface, by name, \nprovided it satisfies the given `Kind` type argument. Returns `null` if no such member matches. \nThis includes unshared declarations but not inherited declarations."]},$nm:"getDeclaredMemberDeclaration"},memberApply:{$t:{comp:"i",$ts:[{$tp:[{$mt:"tp",$nm:"Container"},{$mt:"tp",$tp:[{$mt:"tp",$nm:"Type"}],$pk:"ceylon.language.meta.model",$nm:"ClassOrInterface"}],$pk:"ceylon.language.meta.model",$nm:"Member"},{$tp:[{$mt:"tp",$nm:"Type"}],$pk:"ceylon.language.meta.model",$nm:"ClassOrInterface"}]},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Container"}],$pk:"ceylon.language.meta.model",$nm:"Type"},$mt:"prm",$nm:"containerType"},{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"ceylon.language.meta.model",$nm:"Type"}],$pk:"$",$nm:"Sequential"},$mt:"prm",seq:1,$nm:"typeArguments"}]],$mt:"m",$tp:[{$def:{$pk:".",$nm:"Nothing"},$nm:"Container"},{$def:{$pk:"$",$nm:"Anything"},$nm:"Type"}],$an:{shared:[],formal:[],throws:["TypeApplicationException","If the specified closed container type or type argument values are not compatible with the actual result's container type or type parameters."],doc:["Applies the given closed container type and type arguments to this member class or interface declaration in order to obtain a \nmember class or interface model. See [this code sample](#member-sample) for an example on how to use this."]},$nm:"memberApply"},annotatedDeclaredMemberDeclarations:{$t:{$tp:[{$mt:"tp",$nm:"Kind"}],$pk:"$",$nm:"Sequential"},$mt:"m",$tp:[{$sts:[{$pk:".",$nm:"NestableDeclaration"}],$nm:"Kind"},{$sts:[{$pk:"$",$nm:"Annotation"}],$nm:"Annotation"}],$an:{shared:[],formal:[],doc:["Returns the list of member declarations directly declared on this class or interface, which satisfy the given \n`Kind` type argument and that are annotated with the given `Annotation` type argument.\nThis includes unshared declarations but not inherited declarations."]},$nm:"annotatedDeclaredMemberDeclarations"},annotatedMemberDeclarations:{$t:{$tp:[{$mt:"tp",$nm:"Kind"}],$pk:"$",$nm:"Sequential"},$mt:"m",$tp:[{$sts:[{$pk:".",$nm:"NestableDeclaration"}],$nm:"Kind"},{$sts:[{$pk:"$",$nm:"Annotation"}],$nm:"Annotation"}],$an:{shared:[],formal:[],doc:["Returns the list of shared member declarations that satisfy the given `Kind` type argument and\nthat are annotated with the given `Annotation` type argument. This includes inherited\ndeclarations but not unshared declarations."]},$nm:"annotatedMemberDeclarations"},getMemberDeclaration:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$nm:"Kind"}]},$ps:[[{$t:{$pk:"$",$nm:"String"},$mt:"prm",$nm:"name"}]],$mt:"m",$tp:[{$sts:[{$pk:".",$nm:"NestableDeclaration"}],$nm:"Kind"}],$an:{shared:[],formal:[],doc:["Looks up a shared member declaration by name, provided it satisfies the given `Kind` type\nargument. Returns `null` if no such member matches. This includes inherited\ndeclarations but not unshared declarations"]},$nm:"getMemberDeclaration"},declaredMemberDeclarations:{$t:{$tp:[{$mt:"tp",$nm:"Kind"}],$pk:"$",$nm:"Sequential"},$mt:"m",$tp:[{$sts:[{$pk:".",$nm:"NestableDeclaration"}],$nm:"Kind"}],$an:{shared:[],formal:[],doc:["Returns the list of member declarations directly declared on this class or interface, which satisfy the given \n`Kind` type argument. This includes unshared declarations but not inherited declarations."]},$nm:"declaredMemberDeclarations"}},$at:{extendedType:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$pk:".",$nm:"OpenClassType"}]},$mt:"a",$an:{shared:[],formal:[],doc:["This type's extended type, unless this is the class for [[Anything|ceylon.language::Anything]], which\nis the root of the type hierarchy and thus does not have any extended type."]},$nm:"extendedType"},caseTypes:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"OpenType"}],$pk:"$",$nm:"Sequential"},$mt:"a",$an:{shared:[],formal:[],doc:["If this type has an `of` clause, this is the list of case types for the current type."]},$nm:"caseTypes"},satisfiedTypes:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"OpenInterfaceType"}],$pk:"$",$nm:"Sequential"},$mt:"a",$an:{shared:[],formal:[],doc:["The list of types satisfied by this type."]},$nm:"satisfiedTypes"},isAlias:{$t:{$pk:"$",$nm:"Boolean"},$mt:"a",$an:{shared:[],formal:[],doc:["True if this type is an alias type, in which case the [[extendedType]] will \ncontain the substituted type."]},$nm:"isAlias"}},$nm:"ClassOrInterfaceDeclaration"},OpenClassOrInterfaceType:{of:[{$pk:".",$nm:"OpenClassType"},{$pk:".",$nm:"OpenInterfaceType"}],$sts:[{$pk:".",$nm:"OpenType"}],$mt:"i",$an:{shared:[],doc:["An open class or interface, with open type arguments.\n\nFor example, `List<T>` is an open interface type, with a type argument which is the\n[[OpenTypeVariable]] `T`."]},$at:{extendedType:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$pk:".",$nm:"OpenClassType"}]},$mt:"a",$an:{shared:[],formal:[],doc:["The extended type of this open type."]},$nm:"extendedType"},declaration:{$t:{$pk:".",$nm:"ClassOrInterfaceDeclaration"},$mt:"a",$an:{shared:[],formal:[],doc:["The class or interface declaration for this open type."]},$nm:"declaration"},typeArguments:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"TypeParameter"},{$mt:"tp",$pk:".",$nm:"OpenType"}],$pk:"$",$nm:"Map"},$mt:"a",$an:{shared:[],formal:[],doc:["The set of open type arguments."]},$nm:"typeArguments"},satisfiedTypes:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"OpenInterfaceType"}],$pk:"$",$nm:"Sequential"},$mt:"a",$an:{shared:[],formal:[],doc:["The satisfied types of this open type."]},$nm:"satisfiedTypes"}},$nm:"OpenClassOrInterfaceType"},covariant:{super:{$pk:"$",$nm:"Basic"},$sts:[{$pk:".",$nm:"Variance"}],$mt:"o",$an:{shared:[],doc:["Covariant means that subtypes of the given type may be returned."]},$at:{string:{$t:{$pk:"$",$nm:"String"},$mt:"g",$an:{shared:[],actual:[]},$nm:"string"}},$nm:"covariant"},nothingType:{super:{$pk:"$",$nm:"Basic"},$sts:[{$pk:".",$nm:"OpenType"}],$mt:"o",$an:{shared:[],doc:["The singleton open type for [[Nothing|ceylon.language::nothing]]."]},$at:{string:{$t:{$pk:"$",$nm:"String"},$mt:"g",$an:{shared:[],actual:[]},$nm:"string"}},$nm:"nothingType"},ValueDeclaration:{$sts:[{$pk:".",$nm:"FunctionOrValueDeclaration"}],$mt:"i",$an:{shared:[],doc:["A value declaration.\n\n<a name=\"toplevel-sample\"><\/a>\n### Usage sample for toplevel value\n\nGetting a model requires applying type arguments to the\nvalue declaration with [[apply]] in order to be able to read that value. For example, here is how you would\nobtain a value model that you can read from a toplevel attribute declaration:\n\n    String foo = \"Hello\";\n    \n    void test(){\n        \/\/ We need to apply the the foo declaration in order to get the foo value model\n        Value<String> valueModel = `value foo`.apply<String>();\n        \/\/ This will print: Hello\n        print(valueModel.get());\n    }\n\n<a name=\"member-sample\"><\/a>\n### Usage sample for attributes\n\nFor attributes it is a bit longer, because attributes need to be applied the containing type, so you should \nuse [[memberApply]] and start by giving the containing closed type:\n\n    class Outer(){\n        shared String foo => \"Hello\";\n    }\n\n    void test(){\n        \/\/ Apply the containing closed type `Outer` to the attribute declaration `Outer.foo`\n        Attribute<Outer,String> valueModel = `value Outer.foo`.memberApply<Outer,String>(`Outer`);\n        \/\/ We now have an Attribute, which needs to be applied to a containing instance in order to become a\n        \/\/ readable value:\n        Value<String> boundValueModel = valueModel(Outer());\n        \/\/ This will print: Hello\n        print(boundValueModel.get());\n    }\n"]},$m:{apply:{$t:{$tp:[{$mt:"tp",$nm:"Get"},{$mt:"tp",$nm:"Set"}],$pk:"ceylon.language.meta.model",$nm:"Value"},$mt:"m",$tp:[{$def:{$pk:"$",$nm:"Anything"},$nm:"Get"},{$def:{$pk:".",$nm:"Nothing"},$nm:"Set"}],$an:{shared:[],formal:[],throws:["IncompatibleTypeException","If the specified `Get` or `Set` type arguments are not compatible with the actual result."],doc:["Applies this value declaration in order to obtain a value model. \nSee [this code sample](#toplevel-sample) for an example on how to use this."]},$nm:"apply"},get:{$t:{$pk:"$",$nm:"Anything"},$mt:"m",$an:{shared:[],default:[],doc:["Reads the current value of this toplevel value."]},$nm:"get"},memberSet:{$t:{$pk:"$",$nm:"Anything"},$ps:[[{$t:{$pk:"$",$nm:"Object"},$mt:"prm",$nm:"container"},{$t:{$pk:"$",$nm:"Anything"},$mt:"prm",$nm:"newValue"}]],$mt:"m",$an:{shared:[],formal:[],throws:["IncompatibleTypeException","If the specified container or new value type is not compatible with this attribute."],doc:["Sets the current value of this attribute on the given container instance."]},$nm:"memberSet"},set:{$t:{$pk:"$",$nm:"Anything"},$ps:[[{$t:{$pk:"$",$nm:"Anything"},$mt:"prm",$nm:"newValue"}]],$mt:"m",$an:{shared:[],default:[],doc:["Sets the current value of this toplevel value."]},$nm:"set"},memberApply:{$t:{$tp:[{$mt:"tp",$nm:"Container"},{$mt:"tp",$nm:"Get"},{$mt:"tp",$nm:"Set"}],$pk:"ceylon.language.meta.model",$nm:"Attribute"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Container"}],$pk:"ceylon.language.meta.model",$nm:"Type"},$mt:"prm",$nm:"containerType"}]],$mt:"m",$tp:[{$def:{$pk:".",$nm:"Nothing"},$nm:"Container"},{$def:{$pk:"$",$nm:"Anything"},$nm:"Get"},{$def:{$pk:".",$nm:"Nothing"},$nm:"Set"}],$an:{shared:[],formal:[],throws:["IncompatibleTypeException","If the specified `Container`, `Get` or `Set` type arguments are not compatible with the actual result."],doc:["Applies the given closed container type to this attribute declaration in order to obtain an attribute model. \nSee [this code sample](#member-sample) for an example on how to use this."]},$nm:"memberApply"},memberGet:{$t:{$pk:"$",$nm:"Anything"},$ps:[[{$t:{$pk:"$",$nm:"Object"},$mt:"prm",$nm:"container"}]],$mt:"m",$an:{shared:[],default:[],throws:["IncompatibleTypeException","If the specified container is not compatible with this attribute."],doc:["Reads the current value of this attribute on the given container instance."]},$nm:"memberGet"}},$at:{setter:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$pk:".",$nm:"SetterDeclaration"}]},$mt:"a",$an:{shared:[],formal:[],doc:["Returns the setter declaration for this variable.\n\nFor modelling purposes `variable` reference \nvalues have a SetterDeclaration even though there is no \nsuch setter explicit in the source code."]},$nm:"setter"},objectClass:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$pk:".",$nm:"ClassDeclaration"}]},$mt:"a",$an:{shared:[],formal:[],doc:["This value's anonymous class declaration if this value is an object declaration. `null` otherwise."]},$nm:"objectClass"},variable:{$t:{$pk:"$",$nm:"Boolean"},$mt:"a",$an:{shared:[],formal:[],doc:["True if this declaration is annotated with [[variable|ceylon.language::variable]]."]},$nm:"variable"},objectValue:{$t:{$pk:"$",$nm:"Boolean"},$mt:"a",$an:{shared:[],formal:[],doc:["True if this declaration is an `object` declaration, whose type is an anonymous class."]},$nm:"objectValue"}},$nm:"ValueDeclaration"},ClassDeclaration:{$sts:[{$pk:".",$nm:"ClassOrInterfaceDeclaration"},{$pk:".",$nm:"FunctionalDeclaration"}],$mt:"i",$an:{shared:[],doc:["Class declaration.\n\n<a name=\"toplevel-sample\"><\/a>\n### Usage sample for toplevel classes\n\nBecause some classes have type parameters, getting a model requires applying type arguments to the\nclass declaration with [[classApply]] in order to be able to instantiate that class. For example, here is how you would\nobtain a class model that you can instantiate from a toplevel class declaration:\n\n    class Foo<T>(){\n        string => \"Hello, our T is: ``typeLiteral<T>()``\";\n    }\n    \n    void test(){\n        \/\/ We need to apply the Integer closed type to the Foo declaration in order to get the Foo<Integer> closed type\n        Class<Foo<Integer>,[]> classModel = `class Foo`.classApply<Foo<Integer>,[]>(`Integer`);\n        \/\/ This will print: Hello, our T is: ceylon.language::Integer\n        print(classModel());\n    }\n\n<a name=\"member-sample\"><\/a>\n### Usage sample for member classes\n\nFor member classes it is a bit longer, because member classes need to be applied not only their type arguments but also\nthe containing type, so you should use [[memberClassApply]] and start by giving the containing closed type:\n\n    class Outer(){\n        shared class Inner(){\n            string => \"Hello\";\n        }\n    }\n\n    void test(){\n        \/\/ apply the containing closed type `Outer` to the member class declaration `Outer.Inner`\n        MemberClass<Outer,Outer.Inner,[]> memberClassModel = `class Outer.Inner`.memberClassApply<Outer,Outer.Inner,[]>(`Outer`);\n        \/\/ We now have a MemberClass, which needs to be applied to a containing instance in order to become an\n        \/\/ invokable class model:\n        Class<Outer.Inner,[]> boundMemberClassModel = memberClassModel(Outer());\n        \/\/ This will print: Hello\n        print(boundMemberClassModel());\n    }\n"]},$m:{instantiate:{$t:{$pk:"$",$nm:"Anything"},$ps:[[{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"ceylon.language.meta.model",$nm:"Type"}],$pk:"$",$nm:"Sequential"},$mt:"prm",$def:1,$nm:"typeArguments"},{$t:{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"$",$nm:"Sequential"},$mt:"prm",seq:1,$nm:"arguments"}]],$mt:"m",$an:{shared:[],default:[],throws:["IncompatibleTypeException","If the specified type or value arguments are not compatible with this toplevel class."],doc:["Creates a new instance of this toplevel class, by applying the specified type arguments and value arguments."]},$nm:"instantiate"},memberInstantiate:{$t:{$pk:"$",$nm:"Anything"},$ps:[[{$t:{$pk:"$",$nm:"Object"},$mt:"prm",$nm:"container"},{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"ceylon.language.meta.model",$nm:"Type"}],$pk:"$",$nm:"Sequential"},$mt:"prm",$def:1,$nm:"typeArguments"},{$t:{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"$",$nm:"Sequential"},$mt:"prm",seq:1,$nm:"arguments"}]],$mt:"m",$an:{shared:[],default:[],throws:["IncompatibleTypeException","If the specified container, type or value arguments are not compatible with this method."],doc:["Creates a new instance of this member class, by applying the specified type arguments and value arguments."]},$nm:"memberInstantiate"},memberClassApply:{$t:{$tp:[{$mt:"tp",$nm:"Container"},{$mt:"tp",$nm:"Type"},{$mt:"tp",$nm:"Arguments"}],$pk:"ceylon.language.meta.model",$nm:"MemberClass"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Container"}],$pk:"ceylon.language.meta.model",$nm:"Type"},$mt:"prm",$nm:"containerType"},{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"ceylon.language.meta.model",$nm:"Type"}],$pk:"$",$nm:"Sequential"},$mt:"prm",seq:1,$nm:"typeArguments"}]],$mt:"m",$tp:[{$def:{$pk:".",$nm:"Nothing"},$nm:"Container"},{$def:{$pk:"$",$nm:"Anything"},$nm:"Type"},{$sts:[{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"$",$nm:"Sequential"}],$def:{$pk:".",$nm:"Nothing"},$nm:"Arguments"}],$an:{shared:[],formal:[],throws:["TypeApplicationException","If the specified closed container type or type argument values are not compatible with the actual result's container type or type parameters."],doc:["Applies the given closed container type and type arguments to this member class declaration in order to obtain a member class model. \nSee [this code sample](#member-sample) for an example on how to use this."]},$nm:"memberClassApply"},classApply:{$t:{$tp:[{$mt:"tp",$nm:"Type"},{$mt:"tp",$nm:"Arguments"}],$pk:"ceylon.language.meta.model",$nm:"Class"},$ps:[[{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"ceylon.language.meta.model",$nm:"Type"}],$pk:"$",$nm:"Sequential"},$mt:"prm",seq:1,$nm:"typeArguments"}]],$mt:"m",$tp:[{$def:{$pk:"$",$nm:"Anything"},$nm:"Type"},{$sts:[{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"$",$nm:"Sequential"}],$def:{$pk:".",$nm:"Nothing"},$nm:"Arguments"}],$an:{shared:[],formal:[],throws:["TypeApplicationException","If the specified closed type argument values are not compatible with the actual result's type parameters."],doc:["Applies the given closed type arguments to this toplevel class declaration in order to obtain a class model. \nSee [this code sample](#toplevel-sample) for an example on how to use this."]},$nm:"classApply"}},$at:{anonymous:{$t:{$pk:"$",$nm:"Boolean"},$mt:"a",$an:{shared:[],formal:[],doc:["True if the class is an object class."]},$nm:"anonymous"},abstract:{$t:{$pk:"$",$nm:"Boolean"},$mt:"a",$an:{shared:[],formal:[],doc:["True if the class has an [[abstract|ceylon.language::abstract]] annotation."]},$nm:"abstract"},final:{$t:{$pk:"$",$nm:"Boolean"},$mt:"a",$an:{shared:[],formal:[],doc:["True if the class has a [[final|ceylon.language::final]] annotation."]},$nm:"final"}},$nm:"ClassDeclaration"},contravariant:{super:{$pk:"$",$nm:"Basic"},$sts:[{$pk:".",$nm:"Variance"}],$mt:"o",$an:{shared:[],doc:["Contravariant means that supertypes of the given type may be accepted."]},$at:{string:{$t:{$pk:"$",$nm:"String"},$mt:"g",$an:{shared:[],actual:[]},$nm:"string"}},$nm:"contravariant"},FunctionOrValueDeclaration:{of:[{$pk:".",$nm:"FunctionDeclaration"},{$pk:".",$nm:"ValueDeclaration"}],$sts:[{$pk:".",$nm:"NestableDeclaration"}],$mt:"i",$an:{shared:[],doc:["A function or value declaration."]},$at:{parameter:{$t:{$pk:"$",$nm:"Boolean"},$mt:"a",$an:{shared:[],formal:[],doc:["True if this function or value is a parameter to a [[FunctionalDeclaration]]."]},$nm:"parameter"},variadic:{$t:{$pk:"$",$nm:"Boolean"},$mt:"a",$an:{shared:[],formal:[],doc:["True if this function or value is a parameter and is variadic (accepts a list of values)."]},$nm:"variadic"},defaulted:{$t:{$pk:"$",$nm:"Boolean"},$mt:"a",$an:{shared:[],formal:[],doc:["True if this function or value is a parameter and has a default value."]},$nm:"defaulted"}},$nm:"FunctionOrValueDeclaration"},AliasDeclaration:{$sts:[{$pk:".",$nm:"NestableDeclaration"},{$pk:".",$nm:"GenericDeclaration"}],$mt:"i",$an:{shared:[],doc:["Type alias declaration. While type aliases are erased (substituted for what they alias is a better term) from every \ndeclaration that uses them during compile-time, the declaration of the type alias is still visible at run-time."]},$at:{extendedType:{$t:{$pk:".",$nm:"OpenType"},$mt:"a",$an:{shared:[],formal:[],doc:["The open type that is substituted by this type alias."]},$nm:"extendedType"}},$nm:"AliasDeclaration"}},"$mod-version":"1.1.0","ceylon.language.meta":{"$pkg-shared":1,sequencedAnnotations:{$t:{$tp:[{$mt:"tp",$nm:"Value"}],$pk:"$",$nm:"Sequential"},$ps:[[{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$nm:"Value"},{$mt:"tp",$nm:"ProgramElement"}],$pk:"$",$nm:"SequencedAnnotation"},{$mt:"tp",$pk:"ceylon.language.meta.model",$nm:"Nothing"}],$pk:"ceylon.language.meta.model",$nm:"Class"},$mt:"prm",$nm:"annotationType"},{$t:{$nm:"ProgramElement"},$mt:"prm",$nm:"programElement"}]],$mt:"m",$tp:[{$sts:[{$tp:[{$mt:"tp",$nm:"Value"},{$mt:"tp",$nm:"ProgramElement"}],$pk:"$",$nm:"SequencedAnnotation"}],$nm:"Value"},{$sts:[{$pk:"$",$nm:"Annotated"}],variance:"in",$nm:"ProgramElement"}],$an:{shared:[],doc:["The values of given sequenced annotation type on the given program element, \nor empty if the program element was not annotated with that annotation type.\nFor example:\n\n    \/\/ Does the sum declaration have any ThrownException annotations?\n    value throwsSomething = sequencedAnnotation(`ThrownException`, `function sum`) nonempty;\n\nThe annotations may be returned in any order.\n"]},$nm:"sequencedAnnotations"},optionalAnnotation:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$nm:"Value"}]},$ps:[[{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$nm:"Value"},{$mt:"tp",$nm:"ProgramElement"}],$pk:"$",$nm:"OptionalAnnotation"},{$mt:"tp",$pk:"ceylon.language.meta.model",$nm:"Nothing"}],$pk:"ceylon.language.meta.model",$nm:"Class"},$mt:"prm",$nm:"annotationType"},{$t:{$nm:"ProgramElement"},$mt:"prm",$nm:"programElement"}]],$mt:"m",$tp:[{$sts:[{$tp:[{$mt:"tp",$nm:"Value"},{$mt:"tp",$nm:"ProgramElement"}],$pk:"$",$nm:"OptionalAnnotation"}],$nm:"Value"},{$sts:[{$pk:"$",$nm:"Annotated"}],variance:"in",$nm:"ProgramElement"}],$an:{shared:[],doc:["The value of given optional annotation type on the given program element, \nor null if the program element was not annotated with that annotation type.\nFor example:\n\n    \/\/ Does the process declaration have the Shared annotation?\n    value isShared = optionalAnnotation(`Shared`, `value process`) exists;\n"]},$nm:"optionalAnnotation"},typeLiteral:{$t:{$tp:[{$mt:"tp",$nm:"Type"}],$pk:"ceylon.language.meta.model",$nm:"Type"},$mt:"m",$tp:[{$sts:[{$pk:"$",$nm:"Anything"}],variance:"out",$nm:"Type"}],$an:{shared:[],native:[],doc:["Functional equivalent to type literals. Allows you to get a closed type instance\nfor a given type argument.\n\nFor example:\n\n    assert(is Interface<List<Integer>> listOfIntegers = typeLiteral<List<Integer>>());\n"]},$nm:"typeLiteral"},annotations:{$t:{$nm:"Values"},$ps:[[{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$nm:"Value"},{$mt:"tp",$nm:"Values"},{$mt:"tp",$nm:"ProgramElement"}],$pk:"$",$nm:"ConstrainedAnnotation"},{$mt:"tp",$pk:"ceylon.language.meta.model",$nm:"Nothing"}],$pk:"ceylon.language.meta.model",$nm:"Class"},$mt:"prm",$nm:"annotationType"},{$t:{$nm:"ProgramElement"},$mt:"prm",$nm:"programElement"}]],$mt:"m",$tp:[{$sts:[{$tp:[{$mt:"tp",$nm:"Value"},{$mt:"tp",$nm:"Values"},{$mt:"tp",$nm:"ProgramElement"}],$pk:"$",$nm:"ConstrainedAnnotation"}],$nm:"Value"},{$nm:"Values"},{$sts:[{$pk:"$",$nm:"Annotated"}],variance:"in",$nm:"ProgramElement"}],$an:{shared:[],native:[],doc:["The annotations of the given type on the given program element. For example:\n\n    \/\/ Does the process declaration have the Shared annotation?\n    value isShared = annotations(`Shared`, `value process`) exists;\n\nThe annotations may be returned in any order.\n"]},$nm:"annotations"},modules:{super:{$pk:"$",$nm:"Basic"},$mt:"o",$an:{shared:[],native:[],doc:["Represents the list of Ceylon modules currently loaded at runtime.\n\nNote that this contains all loaded modules, including those that are\nnot imported by your module.\n\nSince Ceylon supports module isolation at runtime, it is possible that\nthere are more than one version of a given module loaded at the same time.\n\n### Usage example\n\nHere's how you would iterate all the loaded modules and print their name and version:\n\n    import ceylon.language.meta { modules }\n\n    for(mod in modules.list){\n        print(\"Module: ``mod.name``\/``mod.version``\");\n    }\n"]},$m:{find:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$pk:"ceylon.language.meta.declaration",$nm:"Module"}]},$ps:[[{$t:{$pk:"$",$nm:"String"},$mt:"prm",$nm:"name"},{$t:{$pk:"$",$nm:"String"},$mt:"prm",$nm:"version"}]],$mt:"m",$an:{shared:[],native:[],doc:["Finds a module by name and version, returns `null` if not found."]},$nm:"find"}},$at:{default:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$pk:"ceylon.language.meta.declaration",$nm:"Module"}]},$mt:"a",$an:{shared:[],native:[],doc:["Returns the default module, if there is one. This is only the case when\nyou are running the default module."]},$nm:"default"},list:{$t:{$tp:[{$mt:"tp",$pk:"ceylon.language.meta.declaration",$nm:"Module"}],$pk:"$",$nm:"Sequential"},$mt:"a",$an:{shared:[],native:[],doc:["Returns the list of all currently loaded modules. This may include modules that\nwere not imported directly but your module, and multiple versions of the same\nmodule."]},$nm:"list"}},$nm:"modules"},type:{$t:{$tp:[{$mt:"tp",$nm:"Type"},{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:"ceylon.language.meta.model",$nm:"ClassModel"},$ps:[[{$t:{$nm:"Type"},$mt:"prm",$nm:"instance"}]],$mt:"m",$tp:[{$sts:[{$pk:"$",$nm:"Anything"}],variance:"out",$nm:"Type"}],$an:{shared:[],native:[],doc:["Returns the closed type and model of a given instance. Since only classes\ncan be instantiated, this will always be a [[ClassModel]] model."]},$nm:"type"}},"ceylon.language.meta.model":{Member:{$sts:[{$tp:[{$mt:"tp",$nm:"Kind"},{$mt:"tp",$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Container"},{$pk:".",$nm:"Nothing"}]},{$mt:"tp",$nm:"Container"},{$mt:"tp",$pk:"$",$nm:"Empty"}],$pk:"$",$nm:"Tuple"}],$pk:"$",$nm:"Callable"}],$mt:"i",$tp:[{variance:"in",$nm:"Container"},{$sts:[{$pk:".",$nm:"Model"}],variance:"out",$nm:"Kind"}],$an:{shared:[],doc:["Model for members that can be bound to a containing instance to turn them into toplevel models.\n\nYou can bind a member to an instance by invoking that member with the instance as parameter:\n\n    shared class Outer(String name){\n        shared class Inner(){\n            shared String hello => \"Hello \"+name;\n        }\n    }\n    \n    void test(){\n        Member<Outer,Class<Outer.Inner,[]>> memberClass = `Outer.Inner`;\n        Class<Outer.Inner,[]> c = memberClass(Outer(\"Stef\"));\n        \/\/ This will print: Hello Stef\n        print(c().hello);\n    }\n"]},$m:{bind:{$t:{$pk:".",$nm:"Model"},$ps:[[{$t:{$pk:"$",$nm:"Object"},$mt:"prm",$nm:"container"}]],$mt:"m",$an:{shared:[],formal:[],throws:["IncompatibleTypeException","If the container is not assignable to this member's container"],doc:["Type-unsafe container binding, to be used when the container type is unknown until runtime.\n\nThis has the same behaviour as invoking this `Member` directly, but exchanges compile-time type\nsafety with runtime checks."]},$nm:"bind"}},$at:{declaringType:{$t:{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:".",$nm:"Type"},$mt:"a",$an:{shared:[],formal:[],doc:["The declaring closed type. This is the type that declared this member."]},$nm:"declaringType"}},$nm:"Member"},Model:{of:[{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:".",$nm:"ClassOrInterface"},{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"},{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"FunctionModel"},{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"},{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"ValueModel"}],$mt:"i",$an:{shared:[],doc:["The root of all models. There are several types of models:\n\n- [[ClassOrInterface]]\n- [[FunctionModel]]\n- [[ValueModel]]\n"]},$at:{declaration:{$t:{$pk:"ceylon.language.meta.declaration",$nm:"NestableDeclaration"},$mt:"a",$an:{shared:[],formal:[],doc:["The declaration for this model."]},$nm:"declaration"},container:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:".",$nm:"Type"}]},$mt:"a",$an:{shared:[],formal:[],doc:["The container type of this model, or `null` if this is a toplevel model."]},$nm:"container"}},$nm:"Model"},InterfaceModel:{$sts:[{$tp:[{$mt:"tp",$nm:"Type"}],$pk:".",$nm:"ClassOrInterface"}],$mt:"i",$tp:[{$def:{$pk:"$",$nm:"Anything"},variance:"out",$nm:"Type"}],$an:{shared:[],doc:["An interface model represents the model of a Ceylon interface that you can inspect.\n\nAn interface model can be either a toplevel [[Interface]] or a member [[MemberInterface]].\n"]},$at:{declaration:{$t:{$pk:"ceylon.language.meta.declaration",$nm:"InterfaceDeclaration"},$mt:"a",$an:{shared:[],formal:[],actual:[]},$nm:"declaration"}},$nm:"InterfaceModel"},Method:{$sts:[{$tp:[{$mt:"tp",$nm:"Type"},{$mt:"tp",$nm:"Arguments"}],$pk:".",$nm:"FunctionModel"},{$tp:[{$mt:"tp",$nm:"Container"},{$mt:"tp",$tp:[{$mt:"tp",$nm:"Type"},{$mt:"tp",$nm:"Arguments"}],$pk:".",$nm:"Function"}],$pk:".",$nm:"Member"}],$mt:"i",$tp:[{variance:"in",$nm:"Container"},{$def:{$pk:"$",$nm:"Anything"},variance:"out",$nm:"Type"},{$sts:[{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"$",$nm:"Sequential"}],$def:{$pk:".",$nm:"Nothing"},variance:"in",$nm:"Arguments"}],$an:{shared:[],doc:["A function model represents the model of a Ceylon function that you can invoke and inspect.\n\nA method is a member function: it is declared on classes or interfaces.\n\nThis is both a [[FunctionModel]] and a [[Member]]: you can invoke it with an instance value\nto bind it to that instance and obtain a [[Function]]:\n\n    class Outer(){\n        shared String foo(String name) => \"Hello \"+name;\n    }\n    \n    void test(){\n        Method<Outer,String,[String]> method = `Outer.foo`;\n        \/\/ Bind it to an instance value\n        Function<String,[String]> f = method(Outer());\n        \/\/ This will print: Hello Stef\n        print(f(\"Stef\"));\n    }\n"]},$m:{bind:{$t:{$tp:[{$mt:"tp",$nm:"Type"},{$mt:"tp",$nm:"Arguments"}],$pk:".",$nm:"Function"},$ps:[[{$t:{$pk:"$",$nm:"Object"},$mt:"prm",$nm:"container"}]],$mt:"m",$an:{shared:[],formal:[],actual:[]},$nm:"bind"}},$nm:"Method"},Type:{$mt:"i",$tp:[{$def:{$pk:"$",$nm:"Anything"},variance:"out",$nm:"Type"}],$an:{shared:[],doc:["A closed type.\n\nA closed type is a type which is fully resolved and bound and contains no open type variables.\nAll instance types are closed at runtime.\n\nYou have only four sorts of types:\n\n- [[ClassOrInterface]]\n- [[UnionType]]\n- [[IntersectionType]]\n- [[nothingType]]"]},$m:{exactly:{$t:{$pk:"$",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:".",$nm:"Type"},$mt:"prm",$nm:"type"}]],$mt:"m",$an:{shared:[],formal:[],doc:["True if the given type is a exactly this type."]},$nm:"exactly"},subtypeOf:{$t:{$pk:"$",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:".",$nm:"Type"},$mt:"prm",$nm:"type"}]],$mt:"m",$an:{shared:[],default:[],doc:["True if this type is a subtype of the given type, or if both types are the same."]},$nm:"subtypeOf"},typeOf:{$t:{$pk:"$",$nm:"Boolean"},$ps:[[{$t:{$pk:"$",$nm:"Anything"},$mt:"prm",$nm:"instance"}]],$mt:"m",$an:{shared:[],formal:[],doc:["True if the given instance is of this type, or is of a subtype of this type."]},$nm:"typeOf"},supertypeOf:{$t:{$pk:"$",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:".",$nm:"Type"},$mt:"prm",$nm:"type"}]],$mt:"m",$an:{shared:[],formal:[],doc:["True if this type is a supertype of the given type, or if both types are the same."]},$nm:"supertypeOf"}},$nm:"Type"},IntersectionType:{$sts:[{$tp:[{$mt:"tp",$nm:"Intersection"}],$pk:".",$nm:"Type"}],$mt:"i",$tp:[{$def:{$pk:"$",$nm:"Anything"},variance:"out",$nm:"Intersection"}],$an:{shared:[],doc:["A closed intersection type."]},$at:{satisfiedTypes:{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:".",$nm:"Type"}],$pk:"$",$nm:"List"},$mt:"a",$an:{shared:[],formal:[],doc:["The list of closed satisfied types of this intersection."]},$nm:"satisfiedTypes"}},$nm:"IntersectionType"},Applicable:{$mt:"i",$tp:[{$def:{$pk:"$",$nm:"Anything"},variance:"out",$nm:"Type"}],$an:{shared:[],doc:["Represents classes or functions that you can apply in a type-unsafe way.\n"]},$m:{namedApply:{$t:{$nm:"Type"},$ps:[[{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"String"},{$mt:"tp",$pk:"$",$nm:"Object"}],$pk:"$",$nm:"Entry"},{$mt:"tp",$pk:"$",$nm:"Null"}],$pk:"$",$nm:"Iterable"},$mt:"prm",$nm:"arguments"}]],$mt:"m",$an:{shared:[],formal:[],throws:["InvocationException","If there are not enough or too many provided arguments, \nor if the target does not support named invocation"],doc:["Type-unsafe application by name, to be used when the argument types are unknown until runtime.\n\nIf you need to pass [[null]] values, use the [[nullArgument]] singleton.\n\nThis has the same behaviour as invoking the applicable directly, but exchanges compile-time type\nsafety with runtime checks."]},$nm:"namedApply"},apply:{$t:{$nm:"Type"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"$",$nm:"Sequential"},$mt:"prm",seq:1,$nm:"arguments"}]],$mt:"m",$an:{shared:[],formal:[],throws:["InvocationException","If there are not enough or too many provided arguments"],doc:["Type-unsafe application, to be used when the argument types are unknown until runtime.\n\nThis has the same behaviour as invoking the applicable directly, but exchanges compile-time type\nsafety with runtime checks."]},$nm:"apply"}},$nm:"Applicable"},UnionType:{$sts:[{$tp:[{$mt:"tp",$nm:"Union"}],$pk:".",$nm:"Type"}],$mt:"i",$tp:[{$def:{$pk:"$",$nm:"Anything"},variance:"out",$nm:"Union"}],$an:{shared:[],doc:["A closed union type."]},$at:{caseTypes:{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$nm:"Union"}],$pk:".",$nm:"Type"}],$pk:"$",$nm:"List"},$mt:"a",$an:{shared:[],formal:[],doc:["The list of closed case types of this union."]},$nm:"caseTypes"}},$nm:"UnionType"},"$pkg-shared":1,FunctionModel:{$sts:[{$pk:".",$nm:"Model"},{$pk:".",$nm:"Generic"}],$mt:"i",$tp:[{$def:{$pk:"$",$nm:"Anything"},variance:"out",$nm:"Type"},{$sts:[{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"$",$nm:"Sequential"}],$def:{$pk:".",$nm:"Nothing"},variance:"in",$nm:"Arguments"}],$an:{shared:[],doc:["A function model represents the model of a Ceylon function that you can inspect.\n\nA function model can be either a toplevel [[Function]] or a member [[Method]].\n"]},$at:{declaration:{$t:{$pk:"ceylon.language.meta.declaration",$nm:"FunctionDeclaration"},$mt:"a",$an:{shared:[],formal:[],doc:["This function's declaration."],actual:[]},$nm:"declaration"},type:{$t:{$tp:[{$mt:"tp",$nm:"Type"}],$pk:".",$nm:"Type"},$mt:"a",$an:{shared:[],formal:[],doc:["This function's return closed type."]},$nm:"type"},parameterTypes:{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:".",$nm:"Type"}],$pk:"$",$nm:"Sequential"},$mt:"a",$an:{shared:[],formal:[],doc:["This function's parameter closed types"]},$nm:"parameterTypes"}},$nm:"FunctionModel"},ValueModel:{$sts:[{$pk:".",$nm:"Model"}],$mt:"i",$tp:[{$def:{$pk:"$",$nm:"Anything"},variance:"out",$nm:"Get"},{$def:{$pk:".",$nm:"Nothing"},variance:"in",$nm:"Set"}],$an:{shared:[],doc:["A value model represents the model of a Ceylon value that you can inspect.\n\nA value model can be either a toplevel [[Value]] or a member [[Attribute]].\n"]},$at:{declaration:{$t:{$pk:"ceylon.language.meta.declaration",$nm:"ValueDeclaration"},$mt:"a",$an:{shared:[],formal:[],doc:["This value's declaration."],actual:[]},$nm:"declaration"},type:{$t:{$tp:[{$mt:"tp",$nm:"Get"}],$pk:".",$nm:"Type"},$mt:"a",$an:{shared:[],formal:[],doc:["This value's closed type."]},$nm:"type"}},$nm:"ValueModel"},ClassModel:{$sts:[{$tp:[{$mt:"tp",$nm:"Type"}],$pk:".",$nm:"ClassOrInterface"}],$mt:"i",$tp:[{$def:{$pk:"$",$nm:"Anything"},variance:"out",$nm:"Type"},{$sts:[{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"$",$nm:"Sequential"}],$def:{$pk:".",$nm:"Nothing"},variance:"in",$nm:"Arguments"}],$an:{shared:[],doc:["A class model represents the model of a Ceylon class that you can inspect.\n\nA class model can be either a toplevel [[Class]] or a member [[MemberClass]].\n"]},$at:{declaration:{$t:{$pk:"ceylon.language.meta.declaration",$nm:"ClassDeclaration"},$mt:"a",$an:{shared:[],formal:[],actual:[]},$nm:"declaration"},parameterTypes:{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:".",$nm:"Type"}],$pk:"$",$nm:"Sequential"},$mt:"a",$an:{shared:[],formal:[],doc:["This function's parameter closed types"]},$nm:"parameterTypes"}},$nm:"ClassModel"},Attribute:{$sts:[{$tp:[{$mt:"tp",$nm:"Get"},{$mt:"tp",$nm:"Set"}],$pk:".",$nm:"ValueModel"},{$tp:[{$mt:"tp",$nm:"Container"},{$mt:"tp",$tp:[{$mt:"tp",$nm:"Get"},{$mt:"tp",$nm:"Set"}],$pk:".",$nm:"Value"}],$pk:".",$nm:"Member"}],$mt:"i",$tp:[{variance:"in",$nm:"Container"},{$def:{$pk:"$",$nm:"Anything"},variance:"out",$nm:"Get"},{$def:{$pk:".",$nm:"Nothing"},variance:"in",$nm:"Set"}],$an:{shared:[],doc:["An attribute model represents the model of a Ceylon attribute that you can read and inspect.\n\nAn attribute is a member value: it is declared on classes or interfaces.\n\nThis is both a [[ValueModel]] and a [[Member]]: you can invoke it with an instance value\nto bind it to that instance and obtain a [[Value]]:\n\n    class Outer(){\n        shared String foo = \"Hello\";\n    }\n    \n    void test(){\n        Attribute<Outer,String> attribute = `Outer.foo`;\n        Value<String> boundAttribute = attribute(Outer());\n        \/\/ This will print: Hello\n        print(boundAttribute.get());\n    }\n"]},$m:{bind:{$t:{$tp:[{$mt:"tp",$nm:"Get"},{$mt:"tp",$nm:"Set"}],$pk:".",$nm:"Value"},$ps:[[{$t:{$pk:"$",$nm:"Object"},$mt:"prm",$nm:"container"}]],$mt:"m",$an:{shared:[],formal:[],actual:[]},$nm:"bind"}},$nm:"Attribute"},Value:{$sts:[{$tp:[{$mt:"tp",$nm:"Get"},{$mt:"tp",$nm:"Set"}],$pk:".",$nm:"ValueModel"}],$mt:"i",$tp:[{$def:{$pk:"$",$nm:"Anything"},variance:"out",$nm:"Get"},{$def:{$pk:".",$nm:"Nothing"},variance:"in",$nm:"Set"}],$an:{shared:[],doc:["A value model represents the model of a Ceylon value that you can read and inspect.\n\nA value is a toplevel binding, declared on a package.\n\nThis is a [[ValueModel]] that you can query for a value declaration's current value:\n\n    shared String foo = \"Hello\";\n    \n    void test(){\n        Value<String> val = `foo`;\n        \/\/ This will print: Hello\n        print(val.get());\n    }\n"]},$m:{get:{$t:{$nm:"Get"},$mt:"m",$an:{shared:[],formal:[],doc:["Reads the current value for this value binding. Note that in the case of getter\nvalues, this can throw if the getter throws."]},$nm:"get"},set:{$t:{$pk:"$",$nm:"Anything"},$ps:[[{$t:{$nm:"Set"},$mt:"prm",$nm:"newValue"}]],$mt:"m",$an:{shared:[],formal:[],doc:["Changes this variable's value to the given new value. Note that in the case of\nsetter attributes, this can throw if the setter throws."]},$nm:"set"},setIfAssignable:{$t:{$pk:"$",$nm:"Anything"},$ps:[[{$t:{$pk:"$",$nm:"Anything"},$mt:"prm",$nm:"newValue"}]],$mt:"m",$an:{shared:[],formal:[],throws:["MutationException","If this value is not variable"],doc:["Non type-safe equivalent to [[Value.set]], to be used when you don't know the \nvariable type at compile-time. This only works if the underlying value is \nvariable. Note that if the underlying variable is a setter, this can throw \nexceptions thrown in the setter block."]},$nm:"setIfAssignable"}},$nm:"Value"},nullArgument:{super:{$pk:"$",$nm:"Basic"},$mt:"o",$an:{shared:[],doc:["Use this singleton value to specify a named parameter which should have a [[null]] value in [[Applicable.namedApply]].\n"]},$nm:"nullArgument"},InvocationException:{super:{$pk:"$",$nm:"Exception"},$ps:[{$t:{$pk:"$",$nm:"String"},$mt:"prm",$nm:"message"}],$mt:"c",$an:{shared:[],doc:["Thrown when attempting to invoke something which can't be invoked, like abstract class\ninitialisers."]},$at:{message$g4ihko:{$t:{$pk:"$",$nm:"String"},$mt:"a",$nm:"message"}},$nm:"InvocationException"},Function:{$sts:[{$tp:[{$mt:"tp",$nm:"Type"},{$mt:"tp",$nm:"Arguments"}],$pk:".",$nm:"FunctionModel"},{$tp:[{$mt:"tp",$nm:"Type"},{$mt:"tp",$nm:"Arguments"}],$pk:"$",$nm:"Callable"},{$tp:[{$mt:"tp",$nm:"Type"}],$pk:".",$nm:"Applicable"}],$mt:"i",$tp:[{$def:{$pk:"$",$nm:"Anything"},variance:"out",$nm:"Type"},{$sts:[{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"$",$nm:"Sequential"}],$def:{$pk:".",$nm:"Nothing"},variance:"in",$nm:"Arguments"}],$an:{shared:[],doc:["A function model represents the model of a Ceylon function that you can invoke and inspect.\n\nA function is a toplevel binding, declared on a package.\n\nThis is a [[FunctionModel]] that you can also invoke:\n\n    shared String foo(String name) => \"Hello \"+name;\n    \n    void test(){\n        Function<String,[String]> f = `foo`;\n        \/\/ This will print: Hello Stef\n        print(f(\"Stef\"));\n    }\n"]},$nm:"Function"},TypeApplicationException:{super:{$pk:"$",$nm:"Exception"},$ps:[{$t:{$pk:"$",$nm:"String"},$mt:"prm",$nm:"message"}],$mt:"c",$an:{shared:[],doc:["Thrown when declarations are applied with invalid or incompatible type arguments.\nAlso throw when trying to apply member declarations with no containers, or toplevel\ndeclarations with a container.\n\nFor example if you try to apply `Foo` with `String`, hoping to get a `Foo<String>`\nbut the type parameter for `Foo` only accepts types that satisfy `Numeric`.\n"]},$at:{message$9tu43y:{$t:{$pk:"$",$nm:"String"},$mt:"a",$nm:"message"}},$nm:"TypeApplicationException"},MemberClass:{$sts:[{$tp:[{$mt:"tp",$nm:"Type"},{$mt:"tp",$nm:"Arguments"}],$pk:".",$nm:"ClassModel"},{$tp:[{$mt:"tp",$nm:"Container"},{$mt:"tp",$tp:[{$mt:"tp",$nm:"Type"},{$mt:"tp",$nm:"Arguments"}],$pk:".",$nm:"Class"}],$pk:".",$nm:"Member"}],$mt:"i",$tp:[{variance:"in",$nm:"Container"},{$def:{$pk:"$",$nm:"Anything"},variance:"out",$nm:"Type"},{$sts:[{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"$",$nm:"Sequential"}],$def:{$pk:".",$nm:"Nothing"},variance:"in",$nm:"Arguments"}],$an:{shared:[],doc:["A class model represents the model of a Ceylon class that you can instantiate and inspect.\n\nA member class is is declared on classes or interfaces.\n\nThis is both a [[ClassModel]] and a [[Member]]: you can invoke it with an instance value\nto bind it to that instance and obtain a [[Class]]:\n\n    shared class Outer(String name){\n        shared class Inner(){\n            shared String hello => \"Hello \"+name;\n        }\n    }\n    \n    void test(){\n        MemberClass<Outer,Outer.Inner,[]> memberClass = `Outer.Inner`;\n        Class<Outer.Inner,[]> c = memberClass(Outer(\"Stef\"));\n        \/\/ This will print: Hello Stef\n        print(c().hello);\n    }\n"]},$m:{bind:{$t:{$tp:[{$mt:"tp",$nm:"Type"},{$mt:"tp",$nm:"Arguments"}],$pk:".",$nm:"Class"},$ps:[[{$t:{$pk:"$",$nm:"Object"},$mt:"prm",$nm:"container"}]],$mt:"m",$an:{shared:[],formal:[],actual:[]},$nm:"bind"}},$nm:"MemberClass"},Interface:{$sts:[{$tp:[{$mt:"tp",$nm:"Type"}],$pk:".",$nm:"InterfaceModel"}],$mt:"i",$tp:[{$def:{$pk:"$",$nm:"Anything"},variance:"out",$nm:"Type"}],$an:{shared:[],doc:["An interface model that you can inspect."]},$nm:"Interface"},MutationException:{super:{$pk:"$",$nm:"Exception"},$ps:[{$t:{$pk:"$",$nm:"String"},$mt:"prm",$nm:"message"}],$mt:"c",$an:{shared:[],doc:["Thrown when you try to change the value of a non-variable value"]},$at:{message$l7zqwp:{$t:{$pk:"$",$nm:"String"},$mt:"a",$nm:"message"}},$nm:"MutationException"},Class:{$sts:[{$tp:[{$mt:"tp",$nm:"Type"},{$mt:"tp",$nm:"Arguments"}],$pk:".",$nm:"ClassModel"},{$tp:[{$mt:"tp",$nm:"Type"},{$mt:"tp",$nm:"Arguments"}],$pk:"$",$nm:"Callable"},{$tp:[{$mt:"tp",$nm:"Type"}],$pk:".",$nm:"Applicable"}],$mt:"i",$tp:[{$def:{$pk:"$",$nm:"Anything"},variance:"out",$nm:"Type"},{$sts:[{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"$",$nm:"Sequential"}],$def:{$pk:".",$nm:"Nothing"},variance:"in",$nm:"Arguments"}],$an:{shared:[],doc:["A class model represents the model of a Ceylon class that you can instantiate and inspect.\n\nA class is a toplevel type, declared on a package.\n\nThis is a [[ClassModel]] that you can also invoke to instantiate new instances of the class:\n\n    shared class Foo(String name){\n        shared String hello => \"Hello \"+name;\n    }\n    \n    void test(){\n        Class<Foo,[String]> c = `Foo`;\n        \/\/ This will print: Hello Stef\n        print(c(\"Stef\").hello);\n    }\n"]},$nm:"Class"},nothingType:{super:{$pk:"$",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Type"}],$mt:"o",$an:{shared:[],doc:["The singleton closed type for [[Nothing|ceylon.language::nothing]]."]},$m:{exactly:{$t:{$pk:"$",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:".",$nm:"Type"},$mt:"prm",$nm:"type"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"exactly"},subtypeOf:{$t:{$pk:"$",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:".",$nm:"Type"},$mt:"prm",$nm:"type"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"subtypeOf"},typeOf:{$t:{$pk:"$",$nm:"Boolean"},$ps:[[{$t:{$pk:"$",$nm:"Anything"},$mt:"prm",$nm:"instance"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"typeOf"},supertypeOf:{$t:{$pk:"$",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:".",$nm:"Type"},$mt:"prm",$nm:"type"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"supertypeOf"}},$at:{string:{$t:{$pk:"$",$nm:"String"},$mt:"g",$an:{shared:[],actual:[]},$nm:"string"}},$nm:"nothingType"},Generic:{$mt:"i",$an:{shared:[],doc:["A generic model which has closed type arguments."]},$at:{typeArguments:{$t:{$tp:[{$mt:"tp",$pk:"ceylon.language.meta.declaration",$nm:"TypeParameter"},{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:".",$nm:"Type"}],$pk:"$",$nm:"Map"},$mt:"a",$an:{shared:[],formal:[],doc:["The map of type parameter declaration to type arguments for this generic model."]},$nm:"typeArguments"}},$nm:"Generic"},ClassOrInterface:{of:[{$tp:[{$mt:"tp",$nm:"Type"},{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"ClassModel"},{$tp:[{$mt:"tp",$nm:"Type"}],$pk:".",$nm:"InterfaceModel"}],$sts:[{$pk:".",$nm:"Model"},{$pk:".",$nm:"Generic"},{$tp:[{$mt:"tp",$nm:"Type"}],$pk:".",$nm:"Type"}],$mt:"i",$tp:[{$def:{$pk:"$",$nm:"Anything"},variance:"out",$nm:"Type"}],$an:{shared:[],doc:["Model of a class or interface that you can inspect.\n\nThe models of classes and interfaces are also closed types."]},$m:{getClasses:{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$nm:"Container"},{$mt:"tp",$nm:"Type"},{$mt:"tp",$nm:"Arguments"}],$pk:".",$nm:"MemberClass"}],$pk:"$",$nm:"Sequential"},$ps:[[{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Annotation"}],$pk:".",$nm:"Type"}],$pk:"$",$nm:"Sequential"},$mt:"prm",seq:1,$nm:"annotationTypes"}]],$mt:"m",$tp:[{$def:{$pk:".",$nm:"Nothing"},$nm:"Container"},{$def:{$pk:"$",$nm:"Anything"},$nm:"Type"},{$sts:[{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"$",$nm:"Sequential"}],$def:{$pk:".",$nm:"Nothing"},$nm:"Arguments"}],$an:{shared:[],formal:[],doc:["Gets a list of member classes matching the given container, return and parameter types, annotated with all the\nspecified annotations, which are declared on this type or inherited."]},$nm:"getClasses"},getClass:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$tp:[{$mt:"tp",$nm:"Container"},{$mt:"tp",$nm:"Type"},{$mt:"tp",$nm:"Arguments"}],$pk:".",$nm:"MemberClass"}]},$ps:[[{$t:{$pk:"$",$nm:"String"},$mt:"prm",$nm:"name"},{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:".",$nm:"Type"}],$pk:"$",$nm:"Sequential"},$mt:"prm",seq:1,$nm:"types"}]],$mt:"m",$tp:[{$def:{$pk:".",$nm:"Nothing"},$nm:"Container"},{$def:{$pk:"$",$nm:"Anything"},$nm:"Type"},{$sts:[{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"$",$nm:"Sequential"}],$def:{$pk:".",$nm:"Nothing"},$nm:"Arguments"}],$an:{shared:[],formal:[],throws:["TypeApplicationException","If the specified closed type argument values are not compatible with the actual result's type parameters."],doc:["Gets a member class by name. Returns `null` if not found."]},$nm:"getClass"},getDeclaredClassOrInterface:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$tp:[{$mt:"tp",$nm:"Container"},{$mt:"tp",$nm:"Kind"}],$pk:".",$nm:"Member"}]},$ps:[[{$t:{$pk:"$",$nm:"String"},$mt:"prm",$nm:"name"},{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:".",$nm:"Type"}],$pk:"$",$nm:"Sequential"},$mt:"prm",seq:1,$nm:"types"}]],$mt:"m",$tp:[{$def:{$pk:".",$nm:"Nothing"},$nm:"Container"},{$sts:[{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:".",$nm:"ClassOrInterface"}],$def:{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:".",$nm:"ClassOrInterface"},$nm:"Kind"}],$an:{shared:[],formal:[],throws:["TypeApplicationException","If the specified closed type argument values are not compatible with the actual result's type parameters."],doc:["Gets a member class or interface by name. Returns `null` if not found."]},$nm:"getDeclaredClassOrInterface"},getDeclaredInterface:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$tp:[{$mt:"tp",$nm:"Container"},{$mt:"tp",$nm:"Type"}],$pk:".",$nm:"MemberInterface"}]},$ps:[[{$t:{$pk:"$",$nm:"String"},$mt:"prm",$nm:"name"},{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:".",$nm:"Type"}],$pk:"$",$nm:"Sequential"},$mt:"prm",seq:1,$nm:"types"}]],$mt:"m",$tp:[{$def:{$pk:".",$nm:"Nothing"},$nm:"Container"},{$def:{$pk:"$",$nm:"Anything"},$nm:"Type"}],$an:{shared:[],formal:[],throws:["TypeApplicationException","If the specified closed type argument values are not compatible with the actual result's type parameters."],doc:["Gets a member interface by name. Returns `null` if not found."]},$nm:"getDeclaredInterface"},getMethod:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$tp:[{$mt:"tp",$nm:"Container"},{$mt:"tp",$nm:"Type"},{$mt:"tp",$nm:"Arguments"}],$pk:".",$nm:"Method"}]},$ps:[[{$t:{$pk:"$",$nm:"String"},$mt:"prm",$nm:"name"},{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:".",$nm:"Type"}],$pk:"$",$nm:"Sequential"},$mt:"prm",seq:1,$nm:"types"}]],$mt:"m",$tp:[{$def:{$pk:".",$nm:"Nothing"},$nm:"Container"},{$def:{$pk:"$",$nm:"Anything"},$nm:"Type"},{$sts:[{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"$",$nm:"Sequential"}],$def:{$pk:".",$nm:"Nothing"},$nm:"Arguments"}],$an:{shared:[],formal:[],throws:["TypeApplicationException","If the specified closed type argument values are not compatible with the actual result's type parameters."],doc:["Gets a method by name. Returns `null` if not found."]},$nm:"getMethod"},getInterfaces:{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$nm:"Container"},{$mt:"tp",$nm:"Type"}],$pk:".",$nm:"MemberInterface"}],$pk:"$",$nm:"Sequential"},$ps:[[{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Annotation"}],$pk:".",$nm:"Type"}],$pk:"$",$nm:"Sequential"},$mt:"prm",seq:1,$nm:"annotationTypes"}]],$mt:"m",$tp:[{$def:{$pk:".",$nm:"Nothing"},$nm:"Container"},{$def:{$pk:"$",$nm:"Anything"},$nm:"Type"}],$an:{shared:[],formal:[],doc:["Gets a list of interfaces matching the given container and interface types, annotated with all the\nspecified annotations, which are declared on this type or inherited."]},$nm:"getInterfaces"},getDeclaredAttributes:{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$nm:"Container"},{$mt:"tp",$nm:"Get"},{$mt:"tp",$nm:"Set"}],$pk:".",$nm:"Attribute"}],$pk:"$",$nm:"Sequential"},$ps:[[{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Annotation"}],$pk:".",$nm:"Type"}],$pk:"$",$nm:"Sequential"},$mt:"prm",seq:1,$nm:"annotationTypes"}]],$mt:"m",$tp:[{$def:{$pk:".",$nm:"Nothing"},$nm:"Container"},{$def:{$pk:"$",$nm:"Anything"},$nm:"Get"},{$def:{$pk:".",$nm:"Nothing"},$nm:"Set"}],$an:{shared:[],formal:[],doc:["Gets a list of attributes matching the given container and attribute type, annotated with all the\nspecified annotations, which are directly declared on this type."]},$nm:"getDeclaredAttributes"},getClassOrInterface:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$tp:[{$mt:"tp",$nm:"Container"},{$mt:"tp",$nm:"Kind"}],$pk:".",$nm:"Member"}]},$ps:[[{$t:{$pk:"$",$nm:"String"},$mt:"prm",$nm:"name"},{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:".",$nm:"Type"}],$pk:"$",$nm:"Sequential"},$mt:"prm",seq:1,$nm:"types"}]],$mt:"m",$tp:[{$def:{$pk:".",$nm:"Nothing"},$nm:"Container"},{$sts:[{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:".",$nm:"ClassOrInterface"}],$def:{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:".",$nm:"ClassOrInterface"},$nm:"Kind"}],$an:{shared:[],formal:[],throws:["TypeApplicationException","If the specified closed type argument values are not compatible with the actual result's type parameters."],doc:["Gets a member class or interface by name. Returns `null` if not found."]},$nm:"getClassOrInterface"},getAttribute:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$tp:[{$mt:"tp",$nm:"Container"},{$mt:"tp",$nm:"Get"},{$mt:"tp",$nm:"Set"}],$pk:".",$nm:"Attribute"}]},$ps:[[{$t:{$pk:"$",$nm:"String"},$mt:"prm",$nm:"name"}]],$mt:"m",$tp:[{$def:{$pk:".",$nm:"Nothing"},$nm:"Container"},{$def:{$pk:"$",$nm:"Anything"},$nm:"Get"},{$def:{$pk:".",$nm:"Nothing"},$nm:"Set"}],$an:{shared:[],formal:[],throws:["IncompatibleTypeException","If the specified `Container`, `Get` or `Set` type arguments are not compatible with the actual result."],doc:["Gets an attribute by name. Returns `null` if not found."]},$nm:"getAttribute"},getDeclaredAttribute:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$tp:[{$mt:"tp",$nm:"Container"},{$mt:"tp",$nm:"Get"},{$mt:"tp",$nm:"Set"}],$pk:".",$nm:"Attribute"}]},$ps:[[{$t:{$pk:"$",$nm:"String"},$mt:"prm",$nm:"name"}]],$mt:"m",$tp:[{$def:{$pk:".",$nm:"Nothing"},$nm:"Container"},{$def:{$pk:"$",$nm:"Anything"},$nm:"Get"},{$def:{$pk:".",$nm:"Nothing"},$nm:"Set"}],$an:{shared:[],formal:[],throws:["IncompatibleTypeException","If the specified `Container`, `Get` or `Set` type arguments are not compatible with the actual result."],doc:["Gets an attribute by name. Returns `null` if not found."]},$nm:"getDeclaredAttribute"},getDeclaredClass:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$tp:[{$mt:"tp",$nm:"Container"},{$mt:"tp",$nm:"Type"},{$mt:"tp",$nm:"Arguments"}],$pk:".",$nm:"MemberClass"}]},$ps:[[{$t:{$pk:"$",$nm:"String"},$mt:"prm",$nm:"name"},{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:".",$nm:"Type"}],$pk:"$",$nm:"Sequential"},$mt:"prm",seq:1,$nm:"types"}]],$mt:"m",$tp:[{$def:{$pk:".",$nm:"Nothing"},$nm:"Container"},{$def:{$pk:"$",$nm:"Anything"},$nm:"Type"},{$sts:[{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"$",$nm:"Sequential"}],$def:{$pk:".",$nm:"Nothing"},$nm:"Arguments"}],$an:{shared:[],formal:[],throws:["TypeApplicationException","If the specified closed type argument values are not compatible with the actual result's type parameters."],doc:["Gets a member class by name. Returns `null` if not found."]},$nm:"getDeclaredClass"},getMethods:{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$nm:"Container"},{$mt:"tp",$nm:"Type"},{$mt:"tp",$nm:"Arguments"}],$pk:".",$nm:"Method"}],$pk:"$",$nm:"Sequential"},$ps:[[{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Annotation"}],$pk:".",$nm:"Type"}],$pk:"$",$nm:"Sequential"},$mt:"prm",seq:1,$nm:"annotationTypes"}]],$mt:"m",$tp:[{$def:{$pk:".",$nm:"Nothing"},$nm:"Container"},{$def:{$pk:"$",$nm:"Anything"},$nm:"Type"},{$sts:[{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"$",$nm:"Sequential"}],$def:{$pk:".",$nm:"Nothing"},$nm:"Arguments"}],$an:{shared:[],formal:[],doc:["Gets a list of methods matching the given container, return and parameter types, annotated with all the\nspecified annotations, which are declared on this type or inherited."]},$nm:"getMethods"},getDeclaredInterfaces:{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$nm:"Container"},{$mt:"tp",$nm:"Type"}],$pk:".",$nm:"MemberInterface"}],$pk:"$",$nm:"Sequential"},$ps:[[{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Annotation"}],$pk:".",$nm:"Type"}],$pk:"$",$nm:"Sequential"},$mt:"prm",seq:1,$nm:"annotationTypes"}]],$mt:"m",$tp:[{$def:{$pk:".",$nm:"Nothing"},$nm:"Container"},{$def:{$pk:"$",$nm:"Anything"},$nm:"Type"}],$an:{shared:[],formal:[],doc:["Gets a list of interfaces matching the given container and interface types, annotated with all the\nspecified annotations, which are directly declared on this type."]},$nm:"getDeclaredInterfaces"},getDeclaredMethod:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$tp:[{$mt:"tp",$nm:"Container"},{$mt:"tp",$nm:"Type"},{$mt:"tp",$nm:"Arguments"}],$pk:".",$nm:"Method"}]},$ps:[[{$t:{$pk:"$",$nm:"String"},$mt:"prm",$nm:"name"},{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:".",$nm:"Type"}],$pk:"$",$nm:"Sequential"},$mt:"prm",seq:1,$nm:"types"}]],$mt:"m",$tp:[{$def:{$pk:".",$nm:"Nothing"},$nm:"Container"},{$def:{$pk:"$",$nm:"Anything"},$nm:"Type"},{$sts:[{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"$",$nm:"Sequential"}],$def:{$pk:".",$nm:"Nothing"},$nm:"Arguments"}],$an:{shared:[],formal:[],throws:["TypeApplicationException","If the specified closed type argument values are not compatible with the actual result's type parameters."],doc:["Gets a method by name. Returns `null` if not found."]},$nm:"getDeclaredMethod"},getDeclaredMethods:{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$nm:"Container"},{$mt:"tp",$nm:"Type"},{$mt:"tp",$nm:"Arguments"}],$pk:".",$nm:"Method"}],$pk:"$",$nm:"Sequential"},$ps:[[{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Annotation"}],$pk:".",$nm:"Type"}],$pk:"$",$nm:"Sequential"},$mt:"prm",seq:1,$nm:"annotationTypes"}]],$mt:"m",$tp:[{$def:{$pk:".",$nm:"Nothing"},$nm:"Container"},{$def:{$pk:"$",$nm:"Anything"},$nm:"Type"},{$sts:[{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"$",$nm:"Sequential"}],$def:{$pk:".",$nm:"Nothing"},$nm:"Arguments"}],$an:{shared:[],formal:[],doc:["Gets a list of methods matching the given container, return and parameter types, annotated with all the\nspecified annotations, which are directly declared on this type."]},$nm:"getDeclaredMethods"},getInterface:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$tp:[{$mt:"tp",$nm:"Container"},{$mt:"tp",$nm:"Type"}],$pk:".",$nm:"MemberInterface"}]},$ps:[[{$t:{$pk:"$",$nm:"String"},$mt:"prm",$nm:"name"},{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:".",$nm:"Type"}],$pk:"$",$nm:"Sequential"},$mt:"prm",seq:1,$nm:"types"}]],$mt:"m",$tp:[{$def:{$pk:".",$nm:"Nothing"},$nm:"Container"},{$def:{$pk:"$",$nm:"Anything"},$nm:"Type"}],$an:{shared:[],formal:[],throws:["TypeApplicationException","If the specified closed type argument values are not compatible with the actual result's type parameters."],doc:["Gets a member interface by name. Returns `null` if not found."]},$nm:"getInterface"},getAttributes:{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$nm:"Container"},{$mt:"tp",$nm:"Get"},{$mt:"tp",$nm:"Set"}],$pk:".",$nm:"Attribute"}],$pk:"$",$nm:"Sequential"},$ps:[[{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Annotation"}],$pk:".",$nm:"Type"}],$pk:"$",$nm:"Sequential"},$mt:"prm",seq:1,$nm:"annotationTypes"}]],$mt:"m",$tp:[{$def:{$pk:".",$nm:"Nothing"},$nm:"Container"},{$def:{$pk:"$",$nm:"Anything"},$nm:"Get"},{$def:{$pk:".",$nm:"Nothing"},$nm:"Set"}],$an:{shared:[],formal:[],doc:["Gets a list of attributes matching the given container and attribute type, annotated with all the\nspecified annotations, which are declared on this type or inherited."]},$nm:"getAttributes"},getDeclaredClasses:{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$nm:"Container"},{$mt:"tp",$nm:"Type"},{$mt:"tp",$nm:"Arguments"}],$pk:".",$nm:"MemberClass"}],$pk:"$",$nm:"Sequential"},$ps:[[{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Annotation"}],$pk:".",$nm:"Type"}],$pk:"$",$nm:"Sequential"},$mt:"prm",seq:1,$nm:"annotationTypes"}]],$mt:"m",$tp:[{$def:{$pk:".",$nm:"Nothing"},$nm:"Container"},{$def:{$pk:"$",$nm:"Anything"},$nm:"Type"},{$sts:[{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:"$",$nm:"Sequential"}],$def:{$pk:".",$nm:"Nothing"},$nm:"Arguments"}],$an:{shared:[],formal:[],doc:["Gets a list of member classes matching the given container, return and parameter types, annotated with all the\nspecified annotations, which are directly declared on this type."]},$nm:"getDeclaredClasses"}},$at:{extendedType:{$t:{comp:"u",$ts:[{$pk:"$",$nm:"Null"},{$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"},{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"ClassModel"}]},$mt:"a",$an:{shared:[],formal:[],doc:["The extended closed type for this class or interface. Note that the [[Anything|ceylon.language::Anything]] type\nhas no extended type since it is the top of the type hierarchy."]},$nm:"extendedType"},declaration:{$t:{$pk:"ceylon.language.meta.declaration",$nm:"ClassOrInterfaceDeclaration"},$mt:"a",$an:{shared:[],formal:[],doc:["The declaration for this class or interface."],actual:[]},$nm:"declaration"},caseValues:{$t:{$tp:[{$mt:"tp",$nm:"Type"}],$pk:"$",$nm:"Sequential"},$mt:"a",$an:{shared:[],formal:[],doc:["The list of case values for this type. This omits any case type to only contain case values."]},$nm:"caseValues"},satisfiedTypes:{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:"$",$nm:"Anything"}],$pk:".",$nm:"InterfaceModel"}],$pk:"$",$nm:"Sequential"},$mt:"a",$an:{shared:[],formal:[],doc:["The list of closed types that this class or interface satisfies."]},$nm:"satisfiedTypes"}},$nm:"ClassOrInterface"},IncompatibleTypeException:{super:{$pk:"$",$nm:"Exception"},$ps:[{$t:{$pk:"$",$nm:"String"},$mt:"prm",$nm:"message"}],$mt:"c",$an:{shared:[],doc:["Thrown when you invoke metamodel methods with invalid or incompatible type arguments.\n\nFor example if you try to get an attribute from a class and expect an attribute of `String`\ntype but it is an attribute of `Integer` type.\n"]},$at:{message$kubtzh:{$t:{$pk:"$",$nm:"String"},$mt:"a",$nm:"message"}},$nm:"IncompatibleTypeException"},MemberInterface:{$sts:[{$tp:[{$mt:"tp",$nm:"Type"}],$pk:".",$nm:"InterfaceModel"},{$tp:[{$mt:"tp",$nm:"Container"},{$mt:"tp",$tp:[{$mt:"tp",$nm:"Type"}],$pk:".",$nm:"Interface"}],$pk:".",$nm:"Member"}],$mt:"i",$tp:[{variance:"in",$nm:"Container"},{$def:{$pk:"$",$nm:"Anything"},variance:"out",$nm:"Type"}],$an:{shared:[],doc:["A member interface model that you can inspect."]},$m:{bind:{$t:{$tp:[{$mt:"tp",$nm:"Type"}],$pk:".",$nm:"Interface"},$ps:[[{$t:{$pk:"$",$nm:"Object"},$mt:"prm",$nm:"container"}]],$mt:"m",$an:{shared:[],formal:[],actual:[]},$nm:"bind"}},$nm:"MemberInterface"}},"ceylon.language":{Iterator:{$mt:"i",$tp:[{variance:"out",$nm:"Element"}],$an:{shared:[],see:["Iterable"],doc:["Produces elements of an [[Iterable]] object."],by:["Gavin"]},$m:{next:{$t:{comp:"u",$ts:[{$nm:"Element"},{$pk:".",$nm:"Finished"}]},$mt:"m",$an:{shared:[],formal:[],doc:["The next element, or [[finished]] if there are no more \nelements to be iterated."]},$nm:"next"}},$nm:"Iterator"},LateAnnotation:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"LateAnnotation"},{$mt:"tp",$pk:"ceylon.language.meta.declaration",$nm:"ValueDeclaration"}],$pk:".",$nm:"OptionalAnnotation"}],$mt:"c",$an:{annotation:[],shared:[],final:[],doc:["The annotation class for [[late]]."]},$annot:1,$nm:"LateAnnotation"},Callable:{$mt:"i",$tp:[{variance:"out",$nm:"Return"},{$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"Anything"}],$pk:".",$nm:"Sequential"}],variance:"in",$nm:"Arguments"}],$an:{shared:[],see:["Tuple"],doc:["A reference to a function. The type arguments encode the \n[[return type|Return]] of the function along with its \n[[parameter types|Arguments]]. The parameter types are \nrepresented by a tuple type. Functions declared `void`\nare considered to have the return type `Anything`.\n\nFor example, the type of the function reference \n`plus<Float>` to the function [[plus]] is:\n\n    Callable<Float, [Float,Float]>\n\nwhich we usually abbreviate `Float(Float,Float)`.\n\nA variadic function is represented using an unterminated \ntuple type. For example, the type of the function reference\n`concatenate<Object>` to the function [[concatenate]] is:\n\n    Callable<Object[], [{Object*}*]>\n\nwhich we usually abbreviate `Object({Object*}*)`.\n\nA function with defaulted parameters is represented using\na union type. For example, the type of the method reference\n`process.writeLine` to the method [[process.writeLine]] is:\n\n    Callable<Anything, [String]|[]>\n\nwhich we usually abbreviate `Anything(String=)`.\n\nAny instance of `Callable` may be _invoked_ by supplying a \npositional argument list:\n\n    Float(Float,Float) add = plus<Float>;\n    value four = add(2.0, 2.0);\n\nor by supplying a tuple containing the arguments:\n\n    Float(Float,Float) add = plus<Float>;\n    [Float,Float] twoAndTwo = [2.0, 2.0];\n    value four = add(*twoAndTwo);\n\nThe type of the tuple must be assignable to the type \nargument of `Arguments`.\n\nThis interface may not be implemented by user code."]},$nm:"Callable"},ThrownExceptionAnnotation:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"ThrownExceptionAnnotation"},{comp:"u",$mt:"tp",$ts:[{$pk:"ceylon.language.meta.declaration",$nm:"FunctionOrValueDeclaration"},{$pk:"ceylon.language.meta.declaration",$nm:"ClassDeclaration"}]}],$pk:".",$nm:"SequencedAnnotation"}],$ps:[{$t:{$pk:"ceylon.language.meta.declaration",$nm:"Declaration"},$mt:"prm",$an:{shared:[],doc:["The [[Exception]] type that this thrown."]},$nm:"type"},{$t:{$pk:".",$nm:"String"},$mt:"prm",$an:{shared:[],doc:["A description, in Markdown syntax, of the circumstances \nthat cause this exception to be thrown."]},$nm:"when"}],$mt:"c",$an:{annotation:[],shared:[],final:[],doc:["The annotation class for [[throws]]."]},$annot:1,$at:{when:{$t:{$pk:".",$nm:"String"},$mt:"a",$an:{shared:[],doc:["A description, in Markdown syntax, of the circumstances \nthat cause this exception to be thrown."]},$nm:"when"},type:{$t:{$pk:"ceylon.language.meta.declaration",$nm:"Declaration"},$mt:"a",$an:{shared:[],doc:["The [[Exception]] type that this thrown."]},$nm:"type"}},$nm:"ThrownExceptionAnnotation"},Array:{super:{$pk:".",$nm:"Object"},$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},{$tp:[{$mt:"tp",$pk:".",$nm:"Integer"},{$mt:"tp",$nm:"Element"},{$mt:"tp",$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Array"}],$pk:".",$nm:"Ranged"}],$ps:[{$t:{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"elements"}],$mt:"c",$tp:[{$nm:"Element"}],$an:{shared:[],final:[],native:[],doc:["A fixed-sized array of mutable elements. An _empty_ array \nis an array of [[size]] `0`. Any element of an array may be\nset to a new value.\n\n    value array = Array { \"hello\", \"world\" };\n    array.set(0, \"goodbye\");\n\nThis class is provided primarily to support interoperation \nwith Java, and for some performance-critical low-level \nprogramming tasks."]},$m:{clone:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Array"},$mt:"m",$an:{shared:[],native:[],doc:["A new array with the same elements as this array."],actual:[]},$nm:"clone"},iterator:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"},$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"iterator"},sortInPlace:{$t:{$pk:".",$nm:"Anything"},$ps:[[{$t:{$pk:".",$nm:"Comparison"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"x"},{$t:{$nm:"Element"},$mt:"prm",$nm:"y"}]],$mt:"prm",$pt:"f",$nm:"comparing"}]],$mt:"m",$an:{shared:[],native:[],doc:["Sorts the elements in this array according \nto the ordering induced by the given function."]},$nm:"sortInPlace"},get:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$nm:"Element"}]},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],native:[],doc:["Get the element at the specified index, or `null` if\nthe index falls outside the bounds of this array."],actual:[]},$nm:"get"},count:{$t:{$pk:".",$nm:"Integer"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"selecting"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"count"},segment:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Array"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"length"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"segment"},set:{$t:{$pk:".",$nm:"Anything"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$an:{doc:["The index of the element to replace."]},$nm:"index"},{$t:{$nm:"Element"},$mt:"prm",$an:{doc:["The new element."]},$nm:"element"}]],$mt:"m",$an:{shared:[],native:[],throws:["AssertionError","if the given index is out of bounds, that is, \nif `index<0` or if `index>lastIndex`"],doc:["Replace the existing element at the specified index \nwith the given element."]},$nm:"set"},by:{$t:{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"step"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"by"},contains:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"element"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"contains"},skip:{$t:{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"skipping"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"skip"},getFromLast:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$nm:"Element"}]},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],native:[],doc:["Get the element at the specified index, where the array\nis indexed from the _end_ of the array, or `null` if\nthe index falls outside the bounds of this array."],actual:[]},$nm:"getFromLast"},getFromFirst:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$nm:"Element"}]},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],native:[],doc:["Get the element at the specified index, or `null` if\nthe index falls outside the bounds of this array."],actual:[]},$nm:"getFromFirst"},copyTo:{$t:{$pk:".",$nm:"Anything"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Array"},$mt:"prm",$an:{doc:["The array into which to copy the elements."]},$nm:"destination"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$def:1,$an:{doc:["The index of the first element in this array to copy."]},$nm:"sourcePosition"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$def:1,$an:{doc:["The index in the given array into which to \ncopy the first element."]},$nm:"destinationPosition"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$def:1,$an:{doc:["The number of elements to copy."]},$nm:"length"}]],$mt:"m",$an:{shared:[],native:[],doc:["Efficiently copy the elements in the segment\n`sourcePosition:length` of this array to the segment \n`destinationPosition:length` of the given \n[[array|destination]]."]},$nm:"copyTo"},defines:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"defines"},spanTo:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Array"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"to"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"spanTo"},take:{$t:{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"taking"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"take"},sequence:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"},$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"sequence"},spanFrom:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Array"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"spanFrom"},span:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Array"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"to"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"span"}},$at:{lastIndex:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Integer"}]},$mt:"a",$an:{shared:[],native:[],actual:[]},$nm:"lastIndex"},last:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$nm:"Element"}]},$mt:"a",$an:{shared:[],native:[],actual:[]},$nm:"last"},empty:{$t:{$pk:".",$nm:"Boolean"},$mt:"a",$an:{shared:[],native:[],actual:[]},$nm:"empty"},elements$v26qpk:{$t:{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$mt:"a",$nm:"elements"},first:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$nm:"Element"}]},$mt:"a",$an:{shared:[],native:[],actual:[]},$nm:"first"},size:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],native:[],actual:[]},$nm:"size"}},$nm:"Array"},ArraySequence:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequence"}],$ps:[{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Array"},$mt:"prm",$nm:"array"}],$mt:"c",$tp:[{$nm:"Element"}],$an:{doc:["A [[Sequence]] backed by an [[Array]]. \n\nSince `Array` is mutable, this class is private to the\nlanguage module, where we can be sure the `Array` is not\nmodified after the `ArraySequence` has been initialized."]},$m:{iterator:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"},$mt:"m",$an:{shared:[],actual:[]},$nm:"iterator"},equals:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"that"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"equals"},spanTo:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"to"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"spanTo"},segment:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"length"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"segment"},contains:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"element"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"contains"},spanFrom:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"spanFrom"},getFromFirst:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$nm:"Element"}]},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"getFromFirst"},span:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"to"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"span"}},$at:{lastIndex:{$t:{$pk:".",$nm:"Integer"},$mt:"g",$an:{shared:[],actual:[]},$nm:"lastIndex"},last:{$t:{$nm:"Element"},$mt:"g",$an:{shared:[],actual:[]},$nm:"last"},hash:{$t:{$pk:".",$nm:"Integer"},$mt:"g",$an:{shared:[],actual:[]},$nm:"hash"},reversed:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequence"},$mt:"g",$an:{shared:[],actual:[]},$nm:"reversed"},rest:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"},$mt:"g",$an:{shared:[],actual:[]},$nm:"rest"},array$sfdy8d:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Array"},$mt:"a",$nm:"array"},first:{$t:{$nm:"Element"},$mt:"g",$an:{shared:[],actual:[]},$nm:"first"},size:{$t:{$pk:".",$nm:"Integer"},$mt:"g",$an:{shared:[],actual:[]},$nm:"size"}},$nm:"ArraySequence"},Singleton:{super:{$pk:".",$nm:"Object"},$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequence"}],$ps:[{$t:{$nm:"Element"},$mt:"prm",$nm:"element"}],$mt:"c",$tp:[{variance:"out",$nm:"Element"}],$an:{shared:[],doc:["A sequence with exactly one element, which may be null."]},$m:{clone:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Singleton"},$mt:"m",$an:{shared:[],doc:["Returns a `Singleton` with the same element."],actual:[]},$nm:"clone"},iterator:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"},$mt:"m",$an:{shared:[],default:[],actual:[]},$c:{SingletonIterator$qt0efi:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"}],$mt:"c",$m:{next:{$t:{comp:"u",$ts:[{$nm:"Element"},{$pk:".",$nm:"Finished"}]},$mt:"m",$an:{shared:[],actual:[]},$nm:"next"}},$at:{string:{$t:{$pk:".",$nm:"String"},$mt:"g",$an:{shared:[],actual:[]},$nm:"string"},done$wm9d4h:{$t:{$pk:".",$nm:"Boolean"},var:1,$mt:"a",$an:{shared:[],actual:[],variable:[]},$nm:"done"}},$nm:"SingletonIterator$qt0efi"}},$nm:"iterator"},sort:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Singleton"},$ps:[[{$t:{$pk:".",$nm:"Comparison"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"a"},{$t:{$nm:"Element"},$mt:"prm",$nm:"b"}]],$mt:"prm",$pt:"f",$nm:"comparing"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"sort"},count:{$t:{$pk:".",$nm:"Integer"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"selecting"}]],$mt:"m",$an:{shared:[],doc:["Returns `1` if this `Singleton`'s element\nsatisfies the predicate, or `0` otherwise."],actual:[]},$nm:"count"},equals:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"that"}]],$mt:"m",$an:{shared:[],doc:["A `Singleton` can be equal to another `List` if \nthat `List` has only one element which is equal to \nthis `Singleton`'s element."],actual:[]},$nm:"equals"},select:{$t:{comp:"u",$ts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Singleton"},{$pk:".",$nm:"Empty"}]},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"selecting"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"select"},segment:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Empty"},{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Singleton"}]},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"length"}]],$mt:"m",$an:{shared:[],doc:["Returns a `Singleton` if the given starting index \nis `0` and the given `length` is greater than `0`.\nOtherwise, returns an instance of `Empty`."],actual:[]},$nm:"segment"},contains:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"element"}]],$mt:"m",$an:{shared:[],doc:["Returns `true` if the specified element is this \n`Singleton`'s element."],actual:[]},$nm:"contains"},skip:{$t:{comp:"u",$ts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Singleton"},{$pk:".",$nm:"Empty"}]},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"skipping"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"skip"},every:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"e"}]],$mt:"prm",$pt:"f",$nm:"selecting"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"every"},fold:{$t:{$nm:"Result"},$ps:[[{$t:{$nm:"Result"},$mt:"prm",$nm:"initial"},{$t:{$nm:"Result"},$ps:[[{$t:{$nm:"Result"},$mt:"prm",$nm:"partial"},{$t:{$nm:"Element"},$mt:"prm",$nm:"e"}]],$mt:"prm",$pt:"f",$nm:"accumulating"}]],$mt:"m",$tp:[{$nm:"Result"}],$an:{shared:[],actual:[]},$nm:"fold"},reduce:{$t:{$nm:"Element"},$ps:[[{$t:{$nm:"Result"},$ps:[[{$t:{comp:"u",$ts:[{$nm:"Result"},{$nm:"Element"}]},$mt:"prm",$nm:"partial"},{$t:{$nm:"Element"},$mt:"prm",$nm:"e"}]],$mt:"prm",$pt:"f",$nm:"accumulating"}]],$mt:"m",$tp:[{$nm:"Result"}],$an:{shared:[],actual:[]},$nm:"reduce"},getFromFirst:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$nm:"Element"}]},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],doc:["Returns the contained element, if the specified \nindex is `0`."],actual:[]},$nm:"getFromFirst"},chain:{$t:{$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Element"},{$nm:"Other"}]},{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Other"},{$mt:"tp",$nm:"OtherAbsent"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"other"}]],$mt:"m",$tp:[{$nm:"Other"},{$sts:[{$pk:".",$nm:"Null"}],$nm:"OtherAbsent"}],$an:{shared:[],actual:[]},$nm:"chain"},spanTo:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Empty"},{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Singleton"}]},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"to"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"spanTo"},take:{$t:{comp:"u",$ts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Singleton"},{$pk:".",$nm:"Empty"}]},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"taking"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"take"},any:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"e"}]],$mt:"prm",$pt:"f",$nm:"selecting"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"any"},map:{$t:{$tp:[{$mt:"tp",$nm:"Result"}],$pk:".",$nm:"Singleton"},$ps:[[{$t:{$nm:"Result"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"e"}]],$mt:"prm",$pt:"f",$nm:"collecting"}]],$mt:"m",$tp:[{$nm:"Result"}],$an:{shared:[],actual:[]},$nm:"map"},findLast:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$nm:"Element"}]},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"elem"}]],$mt:"prm",$pt:"f",$nm:"selecting"}]],$mt:"m",$an:{shared:[],default:[],actual:[]},$nm:"findLast"},spanFrom:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Empty"},{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Singleton"}]},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"spanFrom"},find:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$nm:"Element"}]},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"e"}]],$mt:"prm",$pt:"f",$nm:"selecting"}]],$mt:"m",$an:{shared:[],actual:[]},$m:{selecting$4omgca:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"e"}]],$mt:"m",$nm:"selecting"}},$nm:"find"},filter:{$t:{comp:"u",$ts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Singleton"},{$pk:".",$nm:"Empty"}]},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"e"}]],$mt:"prm",$pt:"f",$nm:"selecting"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"filter"},collect:{$t:{$tp:[{$mt:"tp",$nm:"Result"}],$pk:".",$nm:"Singleton"},$ps:[[{$t:{$nm:"Result"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"collecting"}]],$mt:"m",$tp:[{$nm:"Result"}],$an:{shared:[],actual:[]},$nm:"collect"},span:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Empty"},{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Singleton"}]},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"to"}]],$mt:"m",$an:{shared:[],doc:["Returns a `Singleton` if the given starting index \nis `0`. Otherwise, returns an instance of `Empty`."],actual:[]},$nm:"span"}},$at:{lastIndex:{$t:{$pk:".",$nm:"Integer"},$mt:"g",$an:{shared:[],doc:["Returns `0`."],actual:[]},$nm:"lastIndex"},last:{$t:{$nm:"Element"},$mt:"g",$an:{shared:[],doc:["Returns the element contained in this `Singleton`."],actual:[]},$nm:"last"},hash:{$t:{$pk:".",$nm:"Integer"},$mt:"g",$an:{shared:[],actual:[]},$nm:"hash"},string:{$t:{$pk:".",$nm:"String"},$mt:"g",$an:{shared:[],actual:[]},$nm:"string"},coalesced:{$t:{comp:"u",$ts:[{$tp:[{comp:"i",$mt:"tp",$ts:[{$nm:"Element"},{$pk:".",$nm:"Object"}]}],$pk:".",$nm:"Singleton"},{$pk:".",$nm:"Empty"}]},$mt:"g",$an:{shared:[],actual:[]},$nm:"coalesced"},reversed:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Singleton"},$mt:"g",$an:{shared:[],doc:["Return this singleton."],actual:[]},$nm:"reversed"},rest:{$t:{$pk:".",$nm:"Empty"},$mt:"g",$an:{shared:[],doc:["Returns `Empty`."],actual:[]},$nm:"rest"},element$kjdnp3:{$t:{$nm:"Element"},$mt:"a",$nm:"element"},first:{$t:{$nm:"Element"},$mt:"g",$an:{shared:[],doc:["Returns the element contained in this `Singleton`."],actual:[]},$nm:"first"},size:{$t:{$pk:".",$nm:"Integer"},$mt:"g",$an:{shared:[],doc:["Returns `1`."],actual:[]},$nm:"size"}},$nm:"Singleton"},byKey:{$t:{$pk:".",$nm:"Comparison"},$ps:[[{$t:{$pk:".",$nm:"Comparison"},$ps:[[{$t:{$nm:"Key"},$mt:"prm",$nm:"x"},{$t:{$nm:"Key"},$mt:"prm",$nm:"y"}]],$mt:"prm",$pt:"f",$nm:"comparing"}],[{$t:{$tp:[{$mt:"tp",$nm:"Key"},{$mt:"tp",$pk:".",$nm:"Object"}],$pk:".",$nm:"Entry"},$mt:"prm",$nm:"x"},{$t:{$tp:[{$mt:"tp",$nm:"Key"},{$mt:"tp",$pk:".",$nm:"Object"}],$pk:".",$nm:"Entry"},$mt:"prm",$nm:"y"}]],$mt:"m",$tp:[{$sts:[{$pk:".",$nm:"Object"}],$nm:"Key"}],$an:{shared:[],see:["byItem"],doc:["A comparator for [[Entry]]s which compares their keys \naccording to the given [[comparing]] function.\n\n    value sortedEntries = map.sort(byKey(byIncreasing(String.lowercased)));"]},$nm:"byKey"},Comparable:{of:[{$nm:"Other"}],$mt:"i",$tp:[{$sts:[{$tp:[{$mt:"tp",$nm:"Other"}],$pk:".",$nm:"Comparable"}],variance:"in",$nm:"Other"}],$an:{shared:[],doc:["The general contract for values whose magnitude can be \ncompared. `Comparable` imposes a total ordering upon\ninstances of any type that satisfies the interface.\n\nIf a type `T` satisfies `Comparable<T>`, then instances \nof `T` may be compared using the comparison operators\n`<`, `>`, `<=`, `>=`.\n\n    assert (x>=0.0);\n\nA _ternary comparison_ is useful for asserting lower and \nupper bounds.\n\n    assert (0.0<=x<1.0);\n\nFinally, the _compare_ operator `<=>` may be used to \nproduce an instance of [[Comparison]].\n\n    switch (x<=>y)\n    case (equal) {\n        print(\"same same\");\n    }\n    case (smaller) {\n        print(\"x smaller\");\n    }\n    case (larger) {\n        print(\"y smaller\");\n    }\n\nThe total order of a type must be consistent with the \ndefinition of equality for the type. That is, there are \nthree mutually exclusive possibilities:\n\n- `x<y`,\n- `x>y`, or\n- `x==y`\n\n(These possibilities are expressed by the enumerated\ninstances [[smaller]], [[larger]], and [[equal]] of\n`Comparison`.)"],by:["Gavin"]},$m:{notLargerThan:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Other"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],default:[],doc:["Determines if this value is smaller than or equal to \nthe given value."]},$nm:"notLargerThan"},largerThan:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Other"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],default:[],doc:["Determines if this value is strictly larger than the \ngiven value."]},$nm:"largerThan"},notSmallerThan:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Other"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],default:[],doc:["Determines if this value is larger than or equal to the \ngiven value."]},$nm:"notSmallerThan"},compare:{$t:{$pk:".",$nm:"Comparison"},$ps:[[{$t:{$nm:"Other"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],formal:[],see:["equals"],doc:["Compares this value with the given value. \nImplementations must respect the constraints that: \n\n- `x==y` if and only if `x<=>y == equal` \n   (consistency with `equals()`), \n- if `x>y` then `y<x` (symmetry), and \n- if `x>y` and `y>z` then `x>z` (transitivity)."]},$nm:"compare"},smallerThan:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Other"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],default:[],doc:["Determines if this value is strictly smaller than the \ngiven value."]},$nm:"smallerThan"}},$nm:"Comparable",$st:"Other"},AbstractAnnotation:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"AbstractAnnotation"},{$mt:"tp",$pk:"ceylon.language.meta.declaration",$nm:"ClassDeclaration"}],$pk:".",$nm:"OptionalAnnotation"}],$mt:"c",$an:{annotation:[],shared:[],final:[],doc:["The annotation class for [[abstract]]."]},$annot:1,$nm:"AbstractAnnotation"},Comparison:{abstract:1,super:{$pk:".",$nm:"Basic"},of:[{$pk:".",$nm:"larger"},{$pk:".",$nm:"smaller"},{$pk:".",$nm:"equal"}],$ps:[{$t:{$pk:".",$nm:"String"},$mt:"prm",$an:{shared:[],actual:[]},$nm:"string"}],$mt:"c",$an:{abstract:[],shared:[],see:["Comparable"],doc:["The result of a comparison between two [[Comparable]] \nobjects."],by:["Gavin"]},$at:{string:{$t:{$pk:".",$nm:"String"},$mt:"a",$an:{shared:[],actual:[]},$nm:"string"}},$nm:"Comparison"},annotation:{$t:{$pk:".",$nm:"AnnotationAnnotation"},$mt:"m",$an:{annotation:[],shared:[],see:["Annotation"],doc:["Annotation to mark a class as an *annotation class*, or a \ntop-level function as an *annotation constructor*."]},$annot:1,$nm:"annotation"},Empty:{of:[{$pk:".",$nm:"empty"}],$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Sequential"},{$tp:[{$mt:"tp",$pk:".",$nm:"Integer"},{$mt:"tp",$pk:".",$nm:"Nothing"},{$mt:"tp",$pk:".",$nm:"Empty"}],$pk:".",$nm:"Ranged"}],$mt:"i",$an:{shared:[],see:["Sequence"],doc:["A sequence with no elements. The type `Empty` may be\nabbreviated `[]`, and an instance is produced by the \nexpression `[]`. That is, in the following expression,\n`none` has type `[]` and refers to the value `[]`:\n\n    [] none = [];\n\n(Whether the syntax `[]` refers to the type or the value \ndepends upon how it occurs grammatically.)"]},$m:{sort:{$t:{$pk:".",$nm:"Empty"},$ps:[[{$t:{$pk:".",$nm:"Comparison"},$ps:[[{$t:{$pk:".",$nm:"Nothing"},$mt:"prm",$nm:"a"},{$t:{$pk:".",$nm:"Nothing"},$mt:"prm",$nm:"b"}]],$mt:"prm",$pt:"f",$nm:"comparing"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"sort"},count:{$t:{$pk:".",$nm:"Integer"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Nothing"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"selecting"}]],$mt:"m",$an:{shared:[],doc:["Returns 0 for any given predicate."],actual:[]},$nm:"count"},segment:{$t:{$pk:".",$nm:"Empty"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"length"}]],$mt:"m",$an:{shared:[],doc:["Returns an `Empty` for any given segment."],actual:[]},$nm:"segment"},by:{$t:{$pk:".",$nm:"Empty"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"step"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"by"},contains:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"element"}]],$mt:"m",$an:{shared:[],doc:["Returns `false` for any given element."],actual:[]},$nm:"contains"},skip:{$t:{$pk:".",$nm:"Empty"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"skipping"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"skip"},every:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Nothing"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"selecting"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"every"},getFromLast:{$t:{$pk:".",$nm:"Null"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],doc:["Returns `null` for any given index."],actual:[]},$nm:"getFromLast"},following:{$t:{$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Other"},{$pk:".",$nm:"Nothing"}]},{$mt:"tp",$nm:"Other"},{$mt:"tp",$pk:".",$nm:"Empty"}],$pk:".",$nm:"Tuple"},$ps:[[{$t:{$nm:"Other"},$mt:"prm",$nm:"head"}]],$mt:"m",$tp:[{$nm:"Other"}],$an:{shared:[],actual:[]},$nm:"following"},withTrailing:{$t:{$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Element"},{$pk:".",$nm:"Nothing"}]},{$mt:"tp",$nm:"Element"},{$mt:"tp",$pk:".",$nm:"Empty"}],$pk:".",$nm:"Tuple"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"element"}]],$mt:"m",$tp:[{$nm:"Element"}],$an:{shared:[],actual:[]},$nm:"withTrailing"},spanTo:{$t:{$pk:".",$nm:"Empty"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"to"}]],$mt:"m",$an:{shared:[],doc:["Returns an `Empty` for any given span."],actual:[]},$nm:"spanTo"},any:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Nothing"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"selecting"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"any"},map:{$t:{$pk:".",$nm:"Empty"},$ps:[[{$t:{$nm:"Result"},$ps:[[{$t:{$pk:".",$nm:"Nothing"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"collecting"}]],$mt:"m",$tp:[{$nm:"Result"}],$an:{shared:[],actual:[]},$nm:"map"},spanFrom:{$t:{$pk:".",$nm:"Empty"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"}]],$mt:"m",$an:{shared:[],doc:["Returns an `Empty` for any given span."],actual:[]},$nm:"spanFrom"},find:{$t:{$pk:".",$nm:"Null"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Nothing"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"selecting"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"find"},clone:{$t:{$pk:".",$nm:"Empty"},$mt:"m",$an:{shared:[],doc:["Returns an `Empty`."],actual:[]},$nm:"clone"},iterator:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Iterator"},$mt:"m",$an:{shared:[],doc:["Returns an iterator that is already exhausted."],actual:[]},$nm:"iterator"},get:{$t:{$pk:".",$nm:"Null"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],doc:["Returns `null` for any given index."],actual:[]},$nm:"get"},select:{$t:{$pk:".",$nm:"Empty"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Nothing"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"selecting"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"select"},fold:{$t:{$nm:"Result"},$ps:[[{$t:{$nm:"Result"},$mt:"prm",$nm:"initial"},{$t:{$nm:"Result"},$ps:[[{$t:{$nm:"Result"},$mt:"prm",$nm:"partial"},{$t:{$pk:".",$nm:"Nothing"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"accumulating"}]],$mt:"m",$tp:[{$nm:"Result"}],$an:{shared:[],actual:[]},$nm:"fold"},getFromFirst:{$t:{$pk:".",$nm:"Null"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],doc:["Returns `null` for any given index."],actual:[]},$nm:"getFromFirst"},reduce:{$t:{$pk:".",$nm:"Null"},$ps:[[{$t:{$nm:"Result"},$ps:[[{$t:{$nm:"Result"},$mt:"prm",$nm:"partial"},{$t:{$pk:".",$nm:"Nothing"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"accumulating"}]],$mt:"m",$tp:[{$nm:"Result"}],$an:{shared:[],actual:[]},$nm:"reduce"},defines:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"defines"},chain:{$t:{$tp:[{$mt:"tp",$nm:"Other"},{$mt:"tp",$nm:"OtherAbsent"}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Other"},{$mt:"tp",$nm:"OtherAbsent"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"other"}]],$mt:"m",$tp:[{$nm:"Other"},{$sts:[{$pk:".",$nm:"Null"}],$nm:"OtherAbsent"}],$an:{shared:[],doc:["Returns `other`."],actual:[]},$nm:"chain"},take:{$t:{$pk:".",$nm:"Empty"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"taking"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"take"},sequence:{$t:{$pk:".",$nm:"Empty"},$mt:"m",$an:{shared:[],doc:["Returns an `Empty`."],actual:[]},$nm:"sequence"},withLeading:{$t:{$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Element"},{$pk:".",$nm:"Nothing"}]},{$mt:"tp",$nm:"Element"},{$mt:"tp",$pk:".",$nm:"Empty"}],$pk:".",$nm:"Tuple"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"element"}]],$mt:"m",$tp:[{$nm:"Element"}],$an:{shared:[],actual:[]},$nm:"withLeading"},filter:{$t:{$pk:".",$nm:"Empty"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Nothing"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"selecting"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"filter"},span:{$t:{$pk:".",$nm:"Empty"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"to"}]],$mt:"m",$an:{shared:[],doc:["Returns an `Empty` for any given span."],actual:[]},$nm:"span"},collect:{$t:{$pk:".",$nm:"Empty"},$ps:[[{$t:{$nm:"Result"},$ps:[[{$t:{$pk:".",$nm:"Nothing"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"collecting"}]],$mt:"m",$tp:[{$nm:"Result"}],$an:{shared:[],actual:[]},$nm:"collect"}},$at:{lastIndex:{$t:{$pk:".",$nm:"Null"},$mt:"g",$an:{shared:[],doc:["Returns `null`."],actual:[]},$nm:"lastIndex"},last:{$t:{$pk:".",$nm:"Null"},$mt:"g",$an:{shared:[],doc:["Returns `null`."],actual:[]},$nm:"last"},indexed:{$t:{$pk:".",$nm:"Empty"},$mt:"g",$an:{shared:[],doc:["Returns an `Empty`."],actual:[]},$nm:"indexed"},keys:{$t:{$pk:".",$nm:"Empty"},$mt:"g",$an:{shared:[],doc:["Returns an `Empty`."],actual:[]},$nm:"keys"},string:{$t:{$pk:".",$nm:"String"},$mt:"g",$an:{shared:[],doc:["Returns a string description of the empty sequence: \n`[]`."],actual:[]},$nm:"string"},coalesced:{$t:{$pk:".",$nm:"Empty"},$mt:"g",$an:{shared:[],doc:["Returns an `Empty`."],actual:[]},$nm:"coalesced"},empty:{$t:{$pk:".",$nm:"Boolean"},$mt:"g",$an:{shared:[],doc:["Returns `true`."],actual:[]},$nm:"empty"},rest:{$t:{$pk:".",$nm:"Empty"},$mt:"g",$an:{shared:[],doc:["Returns an `Empty`."],actual:[]},$nm:"rest"},reversed:{$t:{$pk:".",$nm:"Empty"},$mt:"g",$an:{shared:[],doc:["Returns an `Empty`."],actual:[]},$nm:"reversed"},first:{$t:{$pk:".",$nm:"Null"},$mt:"g",$an:{shared:[],doc:["Returns `null`."],actual:[]},$nm:"first"},size:{$t:{$pk:".",$nm:"Integer"},$mt:"g",$an:{shared:[],doc:["Returns 0."],actual:[]},$nm:"size"}},$nm:"Empty"},ActualAnnotation:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"ActualAnnotation"},{comp:"u",$mt:"tp",$ts:[{$pk:"ceylon.language.meta.declaration",$nm:"FunctionOrValueDeclaration"},{$pk:"ceylon.language.meta.declaration",$nm:"ClassOrInterfaceDeclaration"}]}],$pk:".",$nm:"OptionalAnnotation"}],$mt:"c",$an:{annotation:[],shared:[],final:[],doc:["The annotation class for [[actual]]."]},$annot:1,$nm:"ActualAnnotation"},maximumIntegerExponent:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$nm:"maximumIntegerExponent"},SeeAnnotation:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"SeeAnnotation"},{$mt:"tp",$pk:".",$nm:"Annotated"}],$pk:".",$nm:"SequencedAnnotation"}],$ps:[{$t:{$tp:[{$mt:"tp",$pk:"ceylon.language.meta.declaration",$nm:"Declaration"}],$pk:".",$nm:"Sequential"},$mt:"prm",seq:1,$an:{shared:[],doc:["The program elements being referred to."]},$nm:"programElements"}],$mt:"c",$an:{annotation:[],shared:[],final:[],doc:["The annotation class for [[see]]."]},$annot:1,$at:{programElements:{$t:{$tp:[{$mt:"tp",$pk:"ceylon.language.meta.declaration",$nm:"Declaration"}],$pk:".",$nm:"Sequential"},$mt:"a",$an:{shared:[],doc:["The program elements being referred to."]},$nm:"programElements"}},$nm:"SeeAnnotation"},Enumerable:{of:[{$nm:"Other"}],$sts:[{$tp:[{$mt:"tp",$nm:"Other"}],$pk:".",$nm:"Ordinal"}],$mt:"i",$tp:[{$sts:[{$tp:[{$mt:"tp",$nm:"Other"}],$pk:".",$nm:"Enumerable"}],variance:"out",$nm:"Other"}],$an:{shared:[],doc:["Abstraction of [[ordinal types|Ordinal]] whose instances \ncan be mapped to the [[integers|Integer]] or to a range of \nintegers."]},$m:{neighbour:{$t:{$nm:"Other"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"offset"}]],$mt:"m",$an:{shared:[],formal:[],doc:["The indirect successor or predecessor at the given\n[[offset]], where:\n\n- `x.neighbour(0) == x`,\n- `x.neighbour(i+1) == x.neighbour(i).successor`, and\n- `x.neighbour(i-1) == x.neighbour(i).predecessor`."]},$nm:"neighbour"}},$at:{predecessor:{$t:{$nm:"Other"},$mt:"g",$an:{shared:[],default:[],actual:[]},$nm:"predecessor"},successor:{$t:{$nm:"Other"},$mt:"g",$an:{shared:[],default:[],actual:[]},$nm:"successor"},integerValue:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],formal:[],doc:["The corresponding integer. The implementation must\nsatisfy these constraints:\n\n    (x.successor).integerValue = x.integerValue+1\n    (x.predecessor).integerValue = x.integerValue-1\n\nfor every instance `x` of the enumerable type."]},$nm:"integerValue"}},$nm:"Enumerable",$st:"Other"},empty:{super:{$pk:".",$nm:"Object"},$sts:[{$pk:".",$nm:"Empty"}],$mt:"o",$an:{shared:[],doc:["A sequence with no elements, abbreviated `[]`. The unique \ninstance of the type `[]`."],by:["Tako Schotanus"]},$nm:"empty"},DeprecationAnnotation:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"DeprecationAnnotation"},{$mt:"tp",$pk:".",$nm:"Annotated"}],$pk:".",$nm:"OptionalAnnotation"}],$ps:[{$t:{$pk:".",$nm:"String"},$mt:"prm",$an:{shared:[],doc:["A description, in Markdown syntax, of why the element \nis deprecated, and of what alternatives are available."]},$nm:"description"}],$mt:"c",$an:{annotation:[],shared:[],final:[],doc:["The annotation class for [[deprecated]]."]},$annot:1,$at:{reason:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"String"}]},$mt:"g",$an:{shared:[],doc:["A description, in Markdown syntax, of why the element \nis deprecated, and what alternatives are available, or \nnull."]},$nm:"reason"},description:{$t:{$pk:".",$nm:"String"},$mt:"a",$an:{shared:[],doc:["A description, in Markdown syntax, of why the element \nis deprecated, and of what alternatives are available."]},$nm:"description"}},$nm:"DeprecationAnnotation"},false:{super:{$pk:".",$nm:"Boolean"},$mt:"o",$an:{shared:[],native:[],doc:["A value representing falsity in Boolean logic."]},$at:{string:{$t:{$pk:".",$nm:"String"},$mt:"g",$an:{shared:[],actual:[]},$nm:"string"}},$nm:"false"},compose:{$t:{$tp:[{$mt:"tp",$nm:"X"},{$mt:"tp",$nm:"Args"}],$pk:".",$nm:"Callable"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"X"},{$mt:"tp",$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Y"},{$pk:".",$nm:"Nothing"}]},{$mt:"tp",$nm:"Y"},{$mt:"tp",$pk:".",$nm:"Empty"}],$pk:".",$nm:"Tuple"}],$pk:".",$nm:"Callable"},$mt:"prm",$nm:"x"},{$t:{$tp:[{$mt:"tp",$nm:"Y"},{$mt:"tp",$nm:"Args"}],$pk:".",$nm:"Callable"},$mt:"prm",$nm:"y"}]],$mt:"m",$tp:[{$nm:"X"},{$nm:"Y"},{$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"Anything"}],$pk:".",$nm:"Sequential"}],$nm:"Args"}],$an:{shared:[],see:["curry","uncurry"],doc:["Given a function with return type `Y`, and a second \nfunction with a single parameter also of type `Y`, \nreturn the composition of the two functions. The\nfirst function may have any number of parameters.\n\nFor any such functions `f()` and `g()`,\n\n    compose(g,f)(*args)==g(f(*args))\n\nfor every possible argument tuple `args` of `f()`."]},$nm:"compose"},Sequential:{of:[{$pk:".",$nm:"Empty"},{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequence"}],$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},{$tp:[{$mt:"tp",$pk:".",$nm:"Integer"},{$mt:"tp",$nm:"Element"},{$mt:"tp",$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"}],$pk:".",$nm:"Ranged"}],$mt:"i",$tp:[{variance:"out",$nm:"Element"}],$an:{shared:[],see:["Tuple"],doc:["A possibly-empty, immutable sequence of values. The type \n`Sequential<Element>` may be abbreviated `[Element*]` or \n`Element[]`. \n\n`Sequential` has two enumerated subtypes:\n\n- `Empty`, abbreviated `[]`, represents an empty sequence, \n   and\n- `Sequence<Element>`, abbreviated `[Element+]` represents \n   a non-empty sequence, and has the very important \n   subclass [[Tuple]]."]},$m:{clone:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"},$mt:"m",$an:{shared:[],default:[],doc:["This sequence."],actual:[]},$nm:"clone"},following:{$t:{$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Other"},{comp:"u",$ts:[{$nm:"Element"},{$pk:".",$nm:"Nothing"}]}]},{$mt:"tp",$nm:"Other"},{$mt:"tp",$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"}],$pk:".",$nm:"Tuple"},$ps:[[{$t:{$nm:"Other"},$mt:"prm",$nm:"head"}]],$mt:"m",$tp:[{$nm:"Other"}],$an:{shared:[],formal:[],doc:["Produces a sequence with a given [[initial element|head]], \nfollowed by the elements of this sequence."],actual:[]},$nm:"following"},terminal:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"length"}]],$mt:"m",$an:{shared:[],default:[],doc:["Select the last elements of the sequence, returning a \nsequence no longer than the given length. If this \nsequence is shorter than the given length, return this \nsequence. Otherwise return a sequence of the given \nlength."],actual:[]},$nm:"terminal"},trimTrailing:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"elem"}]],$mt:"prm",$pt:"f",$nm:"trimming"}]],$mt:"m",$an:{shared:[],default:[],doc:["Trim the elements satisfying the given predicate\nfunction from the end of this sequence, returning a \nsequence no longer than this sequence."],actual:[]},$nm:"trimTrailing"},initial:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"length"}]],$mt:"m",$an:{shared:[],default:[],doc:["Select the first elements of this sequence, returning \na sequence no longer than the given length. If this \nsequence is shorter than the given length, return this \nsequence. Otherwise return a sequence of the given \nlength."],actual:[]},$nm:"initial"},sequence:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"},$mt:"m",$an:{shared:[],default:[],doc:["This sequence."],actual:[]},$nm:"sequence"},trimLeading:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"elem"}]],$mt:"prm",$pt:"f",$nm:"trimming"}]],$mt:"m",$an:{shared:[],default:[],doc:["Trim the elements satisfying the given predicate\nfunction from the start of this sequence, returning \na sequence no longer than this sequence."],actual:[]},$nm:"trimLeading"},repeat:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"times"}]],$mt:"m",$an:{shared:[],default:[],doc:["Returns a sequence formed by repeating the elements of \nthis sequence the given number of times, or an empty \nsequence if `times<=0`."],actual:[]},$nm:"repeat"},trim:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"elem"}]],$mt:"prm",$pt:"f",$nm:"trimming"}]],$mt:"m",$an:{shared:[],default:[],doc:["Trim the elements satisfying the given predicate\nfunction from the start and end of this sequence, \nreturning a sequence no longer than this sequence."],actual:[]},$nm:"trim"}},$at:{keys:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Integer"}],$pk:".",$nm:"Sequential"},$mt:"g",$an:{shared:[],default:[],doc:["A sequence containing all indexes of this sequence."],actual:[]},$nm:"keys"},string:{$t:{$pk:".",$nm:"String"},$mt:"g",$an:{shared:[],default:[],doc:["A string of form `\"[ x, y, z ]\"` where `x`, `y`, and \n`z` are the `string` representations of the elements of \nthis collection, as produced by the iterator of the \ncollection, or the string `\"{}\"` if this collection \nis empty. If the collection iterator produces the value \n`null`, the string representation contains the string \n`\"null\"`."],actual:[]},$nm:"string"},rest:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"},$mt:"a",$an:{shared:[],formal:[],doc:["The rest of the sequence, without the first element."],actual:[]},$nm:"rest"},reversed:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"},$mt:"a",$an:{shared:[],formal:[],doc:["Reverse this sequence, returning a new sequence."],actual:[]},$nm:"reversed"}},$nm:"Sequential"},Finished:{abstract:1,super:{$pk:".",$nm:"Basic"},of:[{$pk:".",$nm:"finished"}],$mt:"c",$an:{abstract:[],shared:[],see:["Iterator"],doc:["The type of the value that indicates that an [[Iterator]] \nis exhausted and has no more values to return."]},$nm:"Finished"},EnumerableRangeBy:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Iterable"}],$ps:[{$t:{$nm:"Element"},$mt:"prm",$nm:"first"},{$t:{$nm:"Element"},$mt:"prm",$nm:"last"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"step"}],$mt:"c",$tp:[{$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Comparable"}],$nm:"Element"}],$m:{iterator:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"},$mt:"m",$an:{shared:[],actual:[]},$nm:"iterator",$o:{iterator$adqg2f:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"}],$mt:"o",$m:{next:{$t:{comp:"u",$ts:[{$nm:"Element"},{$pk:".",$nm:"Finished"}]},$mt:"m",$an:{shared:[],actual:[]},$nm:"next"}},$at:{current$p03b2b:{$t:{comp:"i",$ts:[{$nm:"Element"},{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Enumerable"}]},var:1,$mt:"a",$an:{shared:[],actual:[],variable:[]},$nm:"current"},string:{$t:{$pk:".",$nm:"String"},$mt:"g",$an:{shared:[],actual:[]},$nm:"string"}},$nm:"iterator"}}}},$at:{last$uv619y:{$t:{$nm:"Element"},$mt:"a",$nm:"last"},step$pqo568:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$nm:"step"},first$upfu98:{$t:{$nm:"Element"},$mt:"a",$nm:"first"}},$nm:"EnumerableRangeBy"},plus:{$t:{$nm:"Value"},$ps:[[{$t:{$nm:"Value"},$mt:"prm",$nm:"x"},{$t:{$nm:"Value"},$mt:"prm",$nm:"y"}]],$mt:"m",$tp:[{$sts:[{$tp:[{$mt:"tp",$nm:"Value"}],$pk:".",$nm:"Summable"}],$nm:"Value"}],$an:{shared:[],see:["times","sum"],doc:["Add the given `Summable` values."]},$nm:"plus"},final:{$t:{$pk:".",$nm:"FinalAnnotation"},$mt:"m",$an:{annotation:[],shared:[],doc:["Annotation to mark a class as final. A `final` class may \nnot be extended. Marking a class as final affects disjoint\ntype analysis."]},$annot:1,$nm:"final"},coalesce:{$t:{$tp:[{comp:"i",$mt:"tp",$ts:[{$nm:"Element"},{$pk:".",$nm:"Object"}]},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$mt:"prm",$an:{doc:["The values, some of which may be null."]},$nm:"values"}]],$mt:"m",$tp:[{$nm:"Element"}],$an:{shared:[],doc:["Return a sequence containing the given values which are not\nnull. If there are no values which are not null, return an \nempty sequence."]},$nm:"coalesce"},Entry:{super:{$pk:".",$nm:"Object"},$ps:[{$t:{$nm:"Key"},$hdn:1,$mt:"prm",$an:{shared:[],doc:["The key used to access the entry."]},$nm:"key"},{$t:{$nm:"Item"},$hdn:1,$mt:"prm",$an:{shared:[],doc:["The value associated with the key."]},$nm:"item"}],$mt:"c",$tp:[{$sts:[{$pk:".",$nm:"Object"}],variance:"out",$nm:"Key"},{$sts:[{$pk:".",$nm:"Object"}],variance:"out",$nm:"Item"}],$an:{shared:[],final:[],doc:["A pair containing a _key_ and an associated value called \nthe _item_. Used primarily to represent the elements of a \n[[Map]]. The type `Entry<Key,Item>` may be abbreviated \n`Key->Item`. An instance of `Entry` may be constructed \nusing the `->` operator:\n\n    String->Person entry = person.name->person;"],by:["Gavin"]},$m:{equals:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"that"}]],$mt:"m",$an:{shared:[],doc:["Determines if this entry is equal to the given entry. \nTwo entries are equal if they have the same key and \nthe same value."],actual:[]},$nm:"equals"}},$at:{hash:{$t:{$pk:".",$nm:"Integer"},$mt:"g",$an:{shared:[],actual:[]},$nm:"hash"},pair:{$t:{$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Key"},{comp:"u",$ts:[{$nm:"Item"},{$pk:".",$nm:"Nothing"}]}]},{$mt:"tp",$nm:"Key"},{$mt:"tp",$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Item"},{$pk:".",$nm:"Nothing"}]},{$mt:"tp",$nm:"Item"},{$mt:"tp",$pk:".",$nm:"Empty"}],$pk:".",$nm:"Tuple"}],$pk:".",$nm:"Tuple"},$mt:"g",$an:{shared:[],doc:["A pair (2 element tuple) with the key and\nitem of this entry."]},$nm:"pair"},string:{$t:{$pk:".",$nm:"String"},$mt:"g",$an:{shared:[],doc:["Returns a description of the entry in the form \n`key->item`."],actual:[]},$nm:"string"},item:{$t:{$nm:"Item"},$mt:"a",$an:{shared:[],doc:["The value associated with the key."]},$nm:"item"},key:{$t:{$nm:"Key"},$mt:"a",$an:{shared:[],doc:["The key used to access the entry."]},$nm:"key"}},$nm:"Entry"},Invertable:{of:[{$nm:"Other"}],$sts:[{$tp:[{$mt:"tp",$nm:"Other"}],$pk:".",$nm:"Summable"}],$mt:"i",$tp:[{$sts:[{$tp:[{$mt:"tp",$nm:"Other"}],$pk:".",$nm:"Invertable"}],$nm:"Other"}],$an:{shared:[],see:["Integer","Float"],doc:["Abstraction of [[additive|Summable]] numeric types which \nsupport a unary operation `-x` producing the additive\ninverse of `x`. Every `Invertable` type supports a binary \nsubtraction operation `x-y`.\n\n    Integer negativeOne = -1;\n    Float delta = x-y;\n\nA concrete class that implements this interface should be a \nmathematical _group_. That is, it should have an additive \nidentity, denoted `0`, and satisfy:\n\n- `0+x == x+0 == x`\n- `x + -x == 0`\n\nSubtraction must be defined so that it is consistent with\nthe additive inverse:\n\n- `x - y == x + -y`"],by:["Gavin"]},$m:{minus:{$t:{$nm:"Other"},$ps:[[{$t:{$nm:"Other"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],default:[],doc:["The difference between this number and the given \nnumber. Must produce the value `x + -y`."]},$nm:"minus"}},$at:{negated:{$t:{$nm:"Other"},$mt:"a",$an:{shared:[],formal:[],doc:["The additive inverse of this value."]},$nm:"negated"}},$nm:"Invertable",$st:"Other"},Ordinal:{of:[{$nm:"Other"}],$mt:"i",$tp:[{$sts:[{$tp:[{$mt:"tp",$nm:"Other"}],$pk:".",$nm:"Ordinal"}],variance:"out",$nm:"Other"}],$an:{shared:[],see:["Character","Integer","Integral","Enumerable","Range"],doc:["Abstraction of ordinal types, that is, types with \n[[successor]] and [[predecessor]] operations, including \n[[Integer]] and other [[Integral]] numeric types.\n[[Character]] is also considered an ordinal type.\n\nThe _increment_ operator `++` and _decrement_ operator `--`\nare defined for all `Ordinal` types.\n\n    function increment() {\n        count++;\n    }\n\nAn `Ordinal` type which is also [[Comparable]] may be used \nto generate a [[Range]], using the span or segment \noperators.\n\nThe _span_ operator `..` accepts the first and last values \nof the range.\n\n    0..5    \/\/ [0, 1, 2, 3, 4, 5]\n    0..0    \/\/ [0]\n\nIf the last value is smaller than the first value, the\nrange is reversed.\n\n    5..0    \/\/ [5, 4, 3, 2, 1, 0]\n    0..-5   \/\/ [0, -1, -2, -3, -4, -5]\n\nThe _segment_ operator `:` accepts the first index and \nmaximum length of the subrange.\n\n    0:5     \/\/ [0, 1, 2, 3, 4]\n\nIf the length is nonpositive, the subrange is empty.\n\n    0:0     \/\/ []\n    5:0     \/\/ []\n    0:-5    \/\/ []\n\nMost `Ordinal` types are also [[Enumerable]]."],by:["Gavin"]},$at:{predecessor:{$t:{$nm:"Other"},$mt:"a",$an:{shared:[],formal:[],doc:["The predecessor of this value."]},$nm:"predecessor"},successor:{$t:{$nm:"Other"},$mt:"a",$an:{shared:[],formal:[],doc:["The successor of this value."]},$nm:"successor"}},$nm:"Ordinal",$st:"Other"},or:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Boolean"},{$mt:"tp",$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Value"},{$pk:".",$nm:"Nothing"}]},{$mt:"tp",$nm:"Value"},{$mt:"tp",$pk:".",$nm:"Empty"}],$pk:".",$nm:"Tuple"}],$pk:".",$nm:"Callable"},$mt:"prm",$an:{doc:["The first predicate function"]},$nm:"p"},{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Boolean"},{$mt:"tp",$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Value"},{$pk:".",$nm:"Nothing"}]},{$mt:"tp",$nm:"Value"},{$mt:"tp",$pk:".",$nm:"Empty"}],$pk:".",$nm:"Tuple"}],$pk:".",$nm:"Callable"},$mt:"prm",$an:{doc:["The second predicate function"]},$nm:"q"}],[{$t:{$nm:"Value"},$mt:"prm",$nm:"val"}]],$mt:"m",$tp:[{variance:"in",$nm:"Value"}],$an:{shared:[],doc:["Returns a function which is the logical disjunction of the \ngiven predicate functions."]},$nm:"or"},largest:{$t:{$nm:"Element"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"x"},{$t:{$nm:"Element"},$mt:"prm",$nm:"y"}]],$mt:"m",$tp:[{$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Comparable"}],$nm:"Element"}],$an:{shared:[],see:["Comparable","smallest","max"],doc:["Given two [[Comparable]] values, return largest of the two."]},$nm:"largest"},aIntUpper:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$nm:"aIntUpper"},not:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Boolean"},{$mt:"tp",$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Value"},{$pk:".",$nm:"Nothing"}]},{$mt:"tp",$nm:"Value"},{$mt:"tp",$pk:".",$nm:"Empty"}],$pk:".",$nm:"Tuple"}],$pk:".",$nm:"Callable"},$mt:"prm",$an:{doc:["The predicate function to negate"]},$nm:"p"}],[{$t:{$nm:"Value"},$mt:"prm",$nm:"val"}]],$mt:"m",$tp:[{variance:"in",$nm:"Value"}],$an:{shared:[],doc:["Returns a function which is the logical negation of the \ngiven predicate function."]},$nm:"not"},zipPairs:{$t:{$tp:[{$mt:"tp",$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"First"},{comp:"u",$ts:[{$nm:"Second"},{$pk:".",$nm:"Nothing"}]}]},{$mt:"tp",$nm:"First"},{$mt:"tp",$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Second"},{$pk:".",$nm:"Nothing"}]},{$mt:"tp",$nm:"Second"},{$mt:"tp",$pk:".",$nm:"Empty"}],$pk:".",$nm:"Tuple"}],$pk:".",$nm:"Tuple"},{comp:"u",$mt:"tp",$ts:[{$nm:"FirstAbsent"},{$nm:"SecondAbsent"}]}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"First"},{$mt:"tp",$nm:"FirstAbsent"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"firstElements"},{$t:{$tp:[{$mt:"tp",$nm:"Second"},{$mt:"tp",$nm:"SecondAbsent"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"secondElements"}]],$mt:"m",$tp:[{$nm:"First"},{$nm:"Second"},{$sts:[{$pk:".",$nm:"Null"}],$nm:"FirstAbsent"},{$sts:[{$pk:".",$nm:"Null"}],$nm:"SecondAbsent"}],$an:{shared:[],doc:["Given two streams, form a new stream consisting of\nall pairs where, for any given index in the resulting\nstream, the first element of the pair is the element \noccurring at the same index in the first stream, and \nthe second element of the pair is the element occurring \nat the same index in the second stream. The length of \nthe resulting stream is the length of the shorter of the \ntwo given streams.\n\nThus:\n\n    zipPairs(xs,ys)[i]==[xs[i],ys[i]]\n\nfor every `0<=i<min({xs.size,ys.size})`."]},$nm:"zipPairs"},system:{super:{$pk:".",$nm:"Basic"},$mt:"o",$an:{shared:[],native:[],doc:["Represents the system on which the current process is running.\n\nHolds information about system time and locale."]},$at:{string:{$t:{$pk:".",$nm:"String"},$mt:"g",$an:{shared:[],actual:[]},$nm:"string"},locale:{$t:{$pk:".",$nm:"String"},$mt:"a",$an:{shared:[],native:[],doc:["Returns the IETF language tag representing the default locale for this system."]},$nm:"locale"},nanoseconds:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],native:[],doc:["The elapsed time in nanoseconds since an arbitrary starting point."]},$nm:"nanoseconds"},timezoneOffset:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],native:[],doc:["Returns the offset from UTC, in milliseconds, of the default timezone for this system."]},$nm:"timezoneOffset"},milliseconds:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],native:[],doc:["The elapsed time in milliseconds since midnight, 1 January 1970."]},$nm:"milliseconds"}},$nm:"system"},unflatten:{$t:{$nm:"Return"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Return"},{$mt:"tp",$nm:"Args"}],$pk:".",$nm:"Callable"},$mt:"prm",$nm:"flatFunction"}],[{$t:{$nm:"Args"},$mt:"prm",$nm:"args"}]],$mt:"m",$tp:[{$nm:"Return"},{$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"Anything"}],$pk:".",$nm:"Sequential"}],$nm:"Args"}],$an:{shared:[],native:[],see:["flatten"],doc:["Given a function with parameter types \n`P1`, `P2`, ..., `Pn`, return a function with a single\nparameter of tuple type `[P1, P2, ..., Pn]`.\n\nThat is, if `fun` has type `W(X,Y,Z)` then `unflatten(fun)` \nhas type `W([X,Y,Z])`."]},$nm:"unflatten"},native:{$t:{$pk:".",$nm:"NativeAnnotation"},$mt:"m",$an:{annotation:[],shared:[],doc:["Annotation to mark a member whose implementation is defined \nin platform-native code."]},$annot:1,$nm:"native"},formatInteger:{$t:{$pk:".",$nm:"String"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$an:{doc:["The integer value to format."]},$nm:"integer"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$def:1,$an:{doc:["The base, between [[minRadix]] and [[maxRadix]] \ninclusive."]},$nm:"radix"}]],$mt:"m",$an:{shared:[],see:["parseInteger"],throws:["AssertionError","if [[radix]] is not between [[minRadix]] and \n[[maxRadix]]"],doc:["The string representation of the given [[integer]] in the \nbase given by [[radix]]. If the given integer is negative, \nthe string representation will begin with `-`. Digits \nconsist of decimal digits `0` to `9`, together with and \nlowercase letters `a` to `z` for bases greater than 10.\n\nFor example:\n\n- `formatInteger(-46)` is `\"-46\"`\n- `formatInteger(9,2)` is `\"1001\"`\n- `formatInteger(10,8)` is `\"12\"`\n- `formatInteger(511,16)` is `\"1ff\"`\n- `formatInteger(512,32)` is `\"g0\"`"]},$nm:"formatInteger"},greaterThan:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"val"}],[{$t:{$nm:"Element"},$mt:"prm",$nm:"element"}]],$mt:"m",$tp:[{$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Comparable"}],$nm:"Element"}],$an:{shared:[],deprecated:["use [[Comparable.smallerThan]]"],doc:["Returns a partial function that will compare an element\nto any other element and returns true if the compared\nelement is greater than its element.\nThis is useful in conjunction with methods that receive\na predicate function."]},$nm:"greaterThan"},Destroyable:{$mt:"i",$an:{shared:[],see:["Obtainable"],doc:["Abstract supertype of resources which are created at the \nbeginning of a `try` statement and destroyed when the \nstatement completes. Unlike an [[Obtainable]] resource, a \nsingle instance of `Destroyable` may not be reused between \nmultiple `try` statements or multiple executions of the \nsame `try` statement. \n\n    try (tx = Transaction()) {\n        ...\n    }\n\n- The resource is instantiated before the body of the `try` \n  statement is executed, and\n- [[destroy]] is called when execution of the body of the \n  `try` statement ends, even if an exception propagates out \n  of the body of the `try`."]},$m:{destroy:{$t:{$pk:".",$nm:"Anything"},$ps:[[{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Throwable"}]},$mt:"prm",$an:{doc:["The exception propagating out of the body of the \n`try` statement, or `null` if no exception was\npropagated."]},$nm:"error"}]],$mt:"m",$an:{shared:[],formal:[],doc:["Destroy this resource. Called when execution of the \nbody of the `try` statement ends, even if an exception \npropagates out of the body of the `try`."]},$nm:"destroy"}},$nm:"Destroyable"},Identifiable:{$mt:"i",$an:{shared:[],doc:["The abstract supertype of all types with a well-defined\nnotion of identity. Values of type `Identifiable` may be \ncompared using the `===` operator to determine if they are \nreferences to the same object instance.\n\nFor the sake of convenience, this interface defines a \ndefault implementation of value equality equivalent to \nidentity. Of course, subtypes are encouraged to refine this \nimplementation."],by:["Gavin"]},$m:{equals:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"that"}]],$mt:"m",$an:{shared:[],default:[],doc:["Identity equality comparing the identity of the two \nvalues. May be refined by subtypes for which value \nequality is more appropriate. Implementations must\nrespect the constraint that if `x===y` then `x==y` \n(equality is consistent with identity)."],actual:[]},$nm:"equals"}},$at:{hash:{$t:{$pk:".",$nm:"Integer"},$mt:"g",$an:{shared:[],default:[],see:["identityHash"],doc:["The system-defined identity hash value of the instance. \nSubtypes which refine `equals()` must also refine \n`hash`, according to the general contract defined by \n[[Object]]."],actual:[]},$nm:"hash"}},$nm:"Identifiable"},language:{super:{$pk:".",$nm:"Basic"},$mt:"o",$an:{shared:[],native:[],doc:["Contains information about the language"]},$at:{majorVersion:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],native:[],doc:["The Ceylon language major version."]},$nm:"majorVersion"},majorVersionBinary:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],native:[],doc:["The major version of the code generated for the underlying runtime."]},$nm:"majorVersionBinary"},string:{$t:{$pk:".",$nm:"String"},$mt:"a",$an:{shared:[],native:[],actual:[]},$nm:"string"},minorVersion:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],native:[],doc:["The Ceylon language minor version."]},$nm:"minorVersion"},versionName:{$t:{$pk:".",$nm:"String"},$mt:"a",$an:{shared:[],native:[],doc:["The Ceylon language release name."]},$nm:"versionName"},releaseVersion:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],native:[],doc:["The Ceylon language release version."]},$nm:"releaseVersion"},minorVersionBinary:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],native:[],doc:["The minor version of the code generated for the underlying runtime."]},$nm:"minorVersionBinary"},version:{$t:{$pk:".",$nm:"String"},$mt:"a",$an:{shared:[],native:[],doc:["The Ceylon language version."]},$nm:"version"}},$nm:"language"},Throwable:{abstract:1,super:{$pk:".",$nm:"Basic"},of:[{$pk:".",$nm:"Exception"},{$pk:".",$nm:"Error"}],$ps:[{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"String"}]},$hdn:1,$mt:"prm",$def:1,$an:{doc:["A description of the problem."]},$nm:"description"},{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Throwable"}]},$hdn:1,$mt:"prm",$def:1,$an:{shared:[],doc:["The underlying cause of this exception."]},$nm:"cause"}],$mt:"c",$an:{abstract:[],shared:[],native:[],doc:["The supertype of instances that can be thrown using the `throw` statement\nand caught using the `catch` clause of the `try` statement. \nSuch instances are used to represent \nproblems, typically _unexpected failures_, with the running program \nand can be classified as either\n[[errors|Error]] which are non-transient and generally unrecoverable \nor [[exceptions|Exception]] which are transient problems which \nmay be recovered from.\n\nThe use of throwables to indicate _expected failures_, that \nis, failures that are usually handled by the immediate \ncaller of an operation, is discouraged. (For example,\nnonexistence of a file should not result in an exception.) \nInstead, the failure should be respresented as a return \nvalue of the operation being called."],by:["Gavin","Tom"]},$m:{addSuppressed:{$t:{$pk:".",$nm:"Anything"},$ps:[[{$t:{$pk:".",$nm:"Throwable"},$mt:"prm",$nm:"suppressed"}]],$mt:"m",$an:{shared:[],native:[],doc:["The given exception was suppressed in order to \npropagate this exception."]},$nm:"addSuppressed"},printStackTrace:{$t:{$pk:".",$nm:"Anything"},$mt:"m",$an:{shared:[],see:["printTrace"],doc:["Print the stack trace to the standard error of the \nvirtual machine process."]},$nm:"printStackTrace"}},$at:{message:{$t:{$pk:".",$nm:"String"},$mt:"g",$an:{shared:[],default:[],see:["cause"],doc:["A message describing the problem. This default \nimplementation returns the description, if any, or \notherwise the message of the cause, if any."]},$nm:"message"},suppressed:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Throwable"}],$pk:".",$nm:"Sequential"},$mt:"a",$an:{shared:[],native:[],doc:["The exceptions that were suppressed in order to \npropagate this exception."]},$nm:"suppressed"},cause:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Throwable"}]},$mt:"a",$an:{shared:[],doc:["The underlying cause of this exception."]},$nm:"cause"},string:{$t:{$pk:".",$nm:"String"},$mt:"g",$an:{shared:[],default:[],actual:[]},$nm:"string"},description$arbt90:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"String"}]},$mt:"a",$an:{doc:["A description of the problem."]},$nm:"description"}},$nm:"Throwable"},emptySet:{super:{$pk:".",$nm:"Object"},$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Set"}],$mt:"o",$an:{shared:[],doc:["An immutable [[Set]] with no elements."]},$m:{intersection:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Set"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Other"}],$pk:".",$nm:"Set"},$mt:"prm",$nm:"set"}]],$mt:"m",$tp:[{$sts:[{$pk:".",$nm:"Object"}],$nm:"Other"}],$an:{shared:[],actual:[]},$nm:"intersection"},clone:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Set"},$mt:"m",$an:{shared:[],actual:[]},$nm:"clone"},iterator:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Iterator"},$mt:"m",$an:{shared:[],actual:[]},$nm:"iterator"},containsAny:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Object"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"elements"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"containsAny"},superset:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Object"}],$pk:".",$nm:"Set"},$mt:"prm",$nm:"set"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"superset"},count:{$t:{$pk:".",$nm:"Integer"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Nothing"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"selecting"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"count"},select:{$t:{$pk:".",$nm:"Empty"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Nothing"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"selecting"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"select"},by:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"step"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"by"},contains:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"element"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"contains"},skip:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"skipping"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"skip"},every:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Nothing"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"selecting"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"every"},fold:{$t:{$nm:"Result"},$ps:[[{$t:{$nm:"Result"},$mt:"prm",$nm:"initial"},{$t:{$nm:"Result"},$ps:[[{$t:{$nm:"Result"},$mt:"prm",$nm:"partial"},{$t:{$pk:".",$nm:"Nothing"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"accumulating"}]],$mt:"m",$tp:[{$nm:"Result"}],$an:{shared:[],actual:[]},$nm:"fold"},complement:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Set"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Other"}],$pk:".",$nm:"Set"},$mt:"prm",$nm:"set"}]],$mt:"m",$tp:[{$sts:[{$pk:".",$nm:"Object"}],$nm:"Other"}],$an:{shared:[],actual:[]},$nm:"complement"},subset:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Object"}],$pk:".",$nm:"Set"},$mt:"prm",$nm:"set"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"subset"},exclusiveUnion:{$t:{$tp:[{$mt:"tp",$nm:"Other"}],$pk:".",$nm:"Set"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Other"}],$pk:".",$nm:"Set"},$mt:"prm",$nm:"set"}]],$mt:"m",$tp:[{$sts:[{$pk:".",$nm:"Object"}],$nm:"Other"}],$an:{shared:[],actual:[]},$nm:"exclusiveUnion"},take:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"taking"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"take"},any:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Nothing"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"selecting"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"any"},union:{$t:{$tp:[{$mt:"tp",$nm:"Other"}],$pk:".",$nm:"Set"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Other"}],$pk:".",$nm:"Set"},$mt:"prm",$nm:"set"}]],$mt:"m",$tp:[{$sts:[{$pk:".",$nm:"Object"}],$nm:"Other"}],$an:{shared:[],actual:[]},$nm:"union"},map:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Set"},$ps:[[{$t:{$nm:"Result"},$ps:[[{$t:{$pk:".",$nm:"Nothing"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"collecting"}]],$mt:"m",$tp:[{$nm:"Result"}],$an:{shared:[],actual:[]},$nm:"map"},find:{$t:{$pk:".",$nm:"Null"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Nothing"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"selecting"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"find"},filter:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Set"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Nothing"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"selecting"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"filter"},collect:{$t:{$pk:".",$nm:"Empty"},$ps:[[{$t:{$nm:"Result"},$ps:[[{$t:{$pk:".",$nm:"Nothing"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"collecting"}]],$mt:"m",$tp:[{$nm:"Result"}],$an:{shared:[],actual:[]},$nm:"collect"},containsEvery:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Object"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"elements"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"containsEvery"}},$at:{empty:{$t:{$pk:".",$nm:"Boolean"},$mt:"g",$an:{shared:[],actual:[]},$nm:"empty"},size:{$t:{$pk:".",$nm:"Integer"},$mt:"g",$an:{shared:[],actual:[]},$nm:"size"}},$nm:"emptySet"},Null:{abstract:1,super:{$pk:".",$nm:"Anything"},of:[{$pk:".",$nm:"null"}],$mt:"c",$an:{abstract:[],shared:[],see:["null"],doc:["The type of the [[null]] value. Any union type of form \n`Null|T` is considered an _optional_ type, whose values\ninclude `null`. Any type of this form may be written as\n`T?` for convenience.\n\nThe `if (exists ... )` construct, or, alternatively,\n`assert (exists ...)`, may be used to narrow an optional \ntype to a _definite_ type, that is, a subtype of \n[[Object]]:\n\n    String? firstArg = process.arguments.first;\n    if (exists firstArg) {\n        print(\"hello \" + firstArg);\n    }\n\nThe `else` operator evaluates its second operand if and \nonly if its first operand is `null`:\n\n    String name = process.arguments.first else \"world\";\n\nThe `then` operator evaluates its second operand when\nits first operand evaluates to `true`, and to `null` \notherwise:\n\n    Float? diff = x>=y then x-y;"],by:["Gavin"]},$nm:"Null"},stringify:{$t:{$pk:".",$nm:"String"},$ps:[[{$t:{$pk:".",$nm:"Anything"},$mt:"prm",$nm:"val"}]],$mt:"m",$nm:"stringify"},sort:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"elements"}]],$mt:"m",$tp:[{$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Comparable"}],$nm:"Element"}],$an:{shared:[],see:["Comparable"],doc:["Sort the given elements, returning a new sequence."]},$nm:"sort"},equalTo:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"val"}],[{$t:{$nm:"Element"},$mt:"prm",$nm:"element"}]],$mt:"m",$tp:[{$sts:[{$pk:".",$nm:"Object"}],$nm:"Element"}],$an:{shared:[],doc:["Returns a partial function that will compare an element\nto any other element and returns true if they're equal.\nThis is useful in conjunction with methods that receive\na predicate function."]},$nm:"equalTo"},Ranged:{of:[{$nm:"Span"}],$sts:[{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"}],$mt:"i",$tp:[{variance:"in",$nm:"Index"},{variance:"out",$nm:"Element"},{$sts:[{$tp:[{$mt:"tp",$nm:"Index"},{$mt:"tp",$nm:"Element"},{$mt:"tp",$nm:"Span"}],$pk:".",$nm:"Ranged"}],variance:"out",$nm:"Span"}],$an:{shared:[],see:["List","Sequence","String"],doc:["Abstract supertype of _ranged objects_ mapping a range of \ndiscrete indices to elements, and supporting operations \nthat produce a subrange of indexed elements. The type \nparameter [[Span]] abstracts the type of the resulting \nsubrange. A subrange may be obtained from an instance of \n`Ranged` using the _span_ and _segment_ operators.\n\nOften, in a [[List]] or sorted map for example, an index\nand its element are distinct values. Sometimes, in a sorted \nset for example, the index and element are identical.\n\nThe _span_ operator accepts the first and last indices of \nthe subrange.\n\n    print(\"hello world\"[0..5]); \/\/prints \"hello\"\n    print(\"hello world\"[6..6]); \/\/prints \"w\"\n\nIf the last index is smaller than the first index, the\nsubrange is reversed.\n\n    print(\"hello world\"[5..0]); \/\/prints \"olleh\"\n\nIf the range of indices identified by the first and last\nindices is outside the range of indices of this object, an\nempty subrange is produced.\n\n    print(\"hello world\"[-5..-1]); \/\/prints \"\"\n    print(\"hello world\"[11..11]); \/\/prints \"\"\n\nThe first index may be ommitted, implying that the subrange\nextends forward from the smallest possible index (in this\ncase `runtime.minIntegerValue-1`) to the given index.\n\n    print(\"hello world\"[...5]) \/\/prints \"hello\"\n\nIf the first index is before the first index of this object, \nan empty subrange is produced. (A reversed subrange is \nnever produced.)\n\n    print(\"hello world\"[-5...]); \/\/prints \"\"\n\nThe last index may be ommitted, implying that the subrange \nextends forward from the given index to the largest \npossible index (in this case `runtime.maxIntegerValue+1`).\n\n    print(\"hello world\"[6...]) \/\/prints \"world\"\n\nIf the last index is after the last index of this object, \nan empty subrange is produced. (A reversed subrange is \nnever produced.)\n\n    print(\"hello world\"[11...]); \/\/prints \"\"\n\nThe _segment_ operator accepts the first index and maximum \nlength of the subrange.\n\n    print(\"hello world\"[6:5]) \/\/prints \"world\"\n    print(\"hello world\"[6:0]) \/\/prints \"\"\n\nIf the length is nonpositive, the subrange is empty. If the\nrange of indices identified by the first index and length\nis outside the range of indices of this object, an empty\nsubrange is produced. (A reversed subrange is never \nproduced.)\n\n    print(\"hello world\"[-3:3]) \/\/prints \"\"\n    print(\"hello world\"[11:3]) \/\/prints \"\"\n    print(\"hello world\"[6:-3]) \/\/prints \"\"\n\nThe span and segment operations must be consistent. That is, \nfor every pair of indices `x` and `y` in the ranged object \n`ranged` such that `y` does not occur before `x` and the \nspan `ranged[x..y]` has length `n`:\n\n- `ranged[x..y]==ranged[x:n]`."]},$m:{spanTo:{$t:{$nm:"Span"},$ps:[[{$t:{$nm:"Index"},$mt:"prm",$nm:"to"}]],$mt:"m",$an:{shared:[],formal:[],doc:["Obtain a span containing the elements between the first \nindex of this ranged object and given [[end index|to]].\n\nThe span should contain elements of this iterable \nobject, up to the element at the given \n[[ending index|to]], in the same order as they are \nproduced by the [[iterator]].\n\nWhen the given index does not belong to this ranged \nobject, the behavior is implementation dependent."]},$nm:"spanTo"},segment:{$t:{$nm:"Span"},$ps:[[{$t:{$nm:"Index"},$mt:"prm",$nm:"from"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"length"}]],$mt:"m",$an:{shared:[],formal:[],doc:["Obtain a segment containing the mapped values starting \nfrom the given [[starting index|from]], with the given \n[[length]]. If `length<=0`, the resulting segment is \nempty.\n\nThe segment should contain the given [[number|length]] \nof elements of this iterable object, starting from the\nelement at the given [[starting index|from]], in the \nsame order as they are produced by the [[iterator]]. In\nthe case where the iterator would be exhausted before\n[[length]] elements are produced, the resulting segment\ncontains only those elements which were produced before\nthe iterator was exhausted, and the length of the \nsegment is less then the given `length`.\n\nWhen the given index does not belong to this ranged \nobject, the behavior is implementation dependent."]},$nm:"segment"},spanFrom:{$t:{$nm:"Span"},$ps:[[{$t:{$nm:"Index"},$mt:"prm",$nm:"from"}]],$mt:"m",$an:{shared:[],formal:[],doc:["Obtain a span containing the elements between the given\n[[starting index|from]] and the last index of this \nranged object.\n\nThe span should contain elements of this iterable \nobject, starting from the element at the given \n[[starting index|from]], in the same order as they are \nproduced by the [[iterator]].\n\nWhen the given index does not belong to this ranged \nobject, the behavior is implementation dependent."]},$nm:"spanFrom"},span:{$t:{$nm:"Span"},$ps:[[{$t:{$nm:"Index"},$mt:"prm",$nm:"from"},{$t:{$nm:"Index"},$mt:"prm",$nm:"to"}]],$mt:"m",$an:{shared:[],formal:[],doc:["Obtain a span containing the elements between the two \ngiven indices. \n\nThe span should contain elements of this iterable \nobject, starting from the element at the given \n[[starting index|from]], and ending with the element at \nthe given [[ending index|to]], in the same order as \nthey are produced by the [[iterator]], except when the \nending index occurs earlier than the starting index, in \nwhich case they occur in the opposite order.\n\nWhen one or both of the given indices does not belong \nto this ranged object, the behavior is implementation \ndependent."]},$nm:"span"}},$nm:"Ranged",$st:"Span"},arrayOfSize:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Array"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$an:{doc:["The size of the resulting array. If the size is \nnon-positive, an empty array will be created."]},$nm:"size"},{$t:{$nm:"Element"},$mt:"prm",$an:{doc:["The element value with which to populate the array.\nAll elements of the resulting array will have the \nsame value."]},$nm:"element"}]],$mt:"m",$tp:[{$nm:"Element"}],$an:{shared:[],native:[],throws:["AssertionError","if `size<0` or `size>runtime.maxArraySize`"],doc:["Create an array of the specified [[size]], populating every \nindex with the given [[element]]. The specified `size` must\nbe in the range `0..runtime.maxArraySize`."]},$nm:"arrayOfSize"},OptionalImportAnnotation:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"OptionalImportAnnotation"},{$mt:"tp",$pk:"ceylon.language.meta.declaration",$nm:"Import"}],$pk:".",$nm:"OptionalAnnotation"}],$mt:"c",$an:{annotation:[],shared:[],final:[],doc:["The annotation class for [[optional]]."]},$annot:1,$nm:"OptionalImportAnnotation"},times:{$t:{$nm:"Value"},$ps:[[{$t:{$nm:"Value"},$mt:"prm",$nm:"x"},{$t:{$nm:"Value"},$mt:"prm",$nm:"y"}]],$mt:"m",$tp:[{$sts:[{$tp:[{$mt:"tp",$nm:"Value"}],$pk:".",$nm:"Numeric"}],$nm:"Value"}],$an:{shared:[],see:["plus","product"],doc:["Multiply the given `Numeric` values."]},$nm:"times"},entries:{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:".",$nm:"Integer"},{comp:"i",$mt:"tp",$ts:[{$nm:"Element"},{$pk:".",$nm:"Object"}]}],$pk:".",$nm:"Entry"},{comp:"u",$mt:"tp",$ts:[{comp:"i",$ts:[{$nm:"Element"},{$pk:".",$nm:"Null"}]},{$nm:"Absent"}]}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"elements"}]],$mt:"m",$tp:[{$nm:"Element"},{$sts:[{$pk:".",$nm:"Null"}],$nm:"Absent"}],$an:{shared:[],see:["Iterable.indexed"],doc:["Given a stream of items, produce a stream of entries. \nFor each non-null item produced by the given stream \nof items, the resulting stream contains an `Entry` \nof form `key->item` where `key` is the index at which\nthe item occurs in the stream of items."]},$nm:"entries"},license:{$t:{$pk:".",$nm:"LicenseAnnotation"},$ps:[[{$t:{$pk:".",$nm:"String"},$mt:"prm",$an:{doc:["The name, text, or URL of the license."]},$nm:"description"}]],$mt:"m",$an:{annotation:[],shared:[],doc:["Annotation to specify the URL of the license of a module or \npackage."]},$annot:1,$nm:"license"},FormalAnnotation:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"FormalAnnotation"},{comp:"u",$mt:"tp",$ts:[{$pk:"ceylon.language.meta.declaration",$nm:"FunctionOrValueDeclaration"},{$pk:"ceylon.language.meta.declaration",$nm:"ClassOrInterfaceDeclaration"}]}],$pk:".",$nm:"OptionalAnnotation"}],$mt:"c",$an:{annotation:[],shared:[],final:[],doc:["The annotation class for [[formal]]."]},$annot:1,$nm:"FormalAnnotation"},Object:{abstract:1,super:{$pk:".",$nm:"Anything"},$mt:"c",$an:{abstract:[],shared:[],see:["Basic","Null"],doc:["The abstract supertype of all types representing definite \nvalues. Any two `Object`s may be compared for value \nequality using the `==` and `!=` operators:\n\n    true==false\n    1==\"hello world\"\n    \"hello\"+\" \"+\"world\"==\"hello world\"\n    Singleton(\"hello world\")=={ \"hello world\" }\n\nHowever, since `Null` is not a subtype of `Object`, the\nvalue `null` cannot be compared to any other value using \nthe `==` operator. Thus, value equality is not defined \nfor optional types. This neatly voids the problem of\ndeciding the value of the expression `null==null`, which \nis simply illegal."],by:["Gavin"]},$m:{equals:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"that"}]],$mt:"m",$an:{shared:[],formal:[],doc:["Determine if two values are equal. Implementations\nshould respect the constraints that:\n\n- if `x===y` then `x==y` (reflexivity), \n- if `x==y` then `y==x` (symmetry), \n- if `x==y` and `y==z` then `x==z` (transitivity).\n\nFurthermore it is recommended that implementations\nensure that if `x==y` then `x` and `y` have the same \nconcrete class."]},$nm:"equals"}},$at:{hash:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],formal:[],doc:["The hash value of the value, which allows the value to \nbe an element of a hash-based set or key of a\nhash-based map. Implementations must respect the\nconstraint that if `x==y` then `x.hash==y.hash`."]},$nm:"hash"},string:{$t:{$pk:".",$nm:"String"},$mt:"g",$an:{shared:[],default:[],doc:["A developer-friendly string representing the instance. \nConcatenates the name of the concrete class of the \ninstance with the `hash` of the instance. Subclasses \nare encouraged to refine this implementation to produce \na more meaningful representation."]},$nm:"string"}},$nm:"Object"},null:{super:{$pk:".",$nm:"Null"},$mt:"o",$an:{shared:[],doc:["The null value."],by:["Gavin"]},$nm:"null"},LicenseAnnotation:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"LicenseAnnotation"},{$mt:"tp",$pk:"ceylon.language.meta.declaration",$nm:"Module"}],$pk:".",$nm:"OptionalAnnotation"}],$ps:[{$t:{$pk:".",$nm:"String"},$mt:"prm",$an:{shared:[],doc:["The name, text, or URL of the license."]},$nm:"description"}],$mt:"c",$an:{annotation:[],shared:[],final:[],doc:["The annotation class for [[license]]."]},$annot:1,$at:{description:{$t:{$pk:".",$nm:"String"},$mt:"a",$an:{shared:[],doc:["The name, text, or URL of the license."]},$nm:"description"}},$nm:"LicenseAnnotation"},min:{$t:{comp:"u",$ts:[{$nm:"Absent"},{$nm:"Value"}]},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Value"},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"values"}]],$mt:"m",$tp:[{$sts:[{$tp:[{$mt:"tp",$nm:"Value"}],$pk:".",$nm:"Comparable"}],$nm:"Value"},{$sts:[{$pk:".",$nm:"Null"}],$nm:"Absent"}],$an:{shared:[],see:["Comparable","max","smallest"],doc:["Given a stream of [[Comparable]] values, return the \nsmallest value in the stream, or `null` if the stream is\nempty."]},$nm:"min"},Float:{super:{$pk:".",$nm:"Object"},$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"Float"}],$pk:".",$nm:"Number"},{$tp:[{$mt:"tp",$pk:".",$nm:"Float"},{$mt:"tp",$pk:".",$nm:"Float"}],$pk:".",$nm:"Exponentiable"}],$ps:[{$t:{$pk:".",$nm:"Float"},$mt:"prm",$nm:"float"}],$mt:"c",$an:{shared:[],final:[],native:[],doc:["An IEEE 754 64-bit [floating point number][]. A `Float` is \ncapable of approximately representing numeric values \nbetween:\n\n- 2<sup>-1022<\/sup>, approximately \n  1.79769×10<sup>308<\/sup>, and \n- (2-2<sup>-52<\/sup>)×2<sup>1023<\/sup>, \n  approximately 5×10<sup>-324<\/sup>.\n\nZero is represented by distinct instances `+0.0`, `-0.0`, \nbut these instances are equal.\n\nIn addition, the following special values exist:\n\n- [[infinity]] and `-infinity`, and\n- undefined values.\n\nAs required by the IEEE standard, an undefined value, often\ndenoted [NaN][], is not equal to any other value, nor even\nto itself. Thus, the definition of [[equals]] for `Float`\nviolates the general contract defined by [[Object.equals]].\n\nA floating point value with a zero [[fractionalPart]] is\nconsidered equal to its [[integer]] part.\n\nLiteral floating point values are written with a decimal\npoint and, optionally, a magnitude or exponent:\n\n    1.0\n    1.0E6\n    1.0M\n    1.0E-6\n    1.0u\n\nIn the case of a fractional magnitude, the decimal point is\noptional. Underscores may be used to group digits into \ngroups of three.\n\n[floating point number]: http:\/\/www.validlab.com\/goldberg\/paper.pdf\n[NaN]: http:\/\/en.wikipedia.org\/wiki\/NaN"]},$m:{notLargerThan:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Float"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"notLargerThan"},plus:{$t:{$pk:".",$nm:"Float"},$ps:[[{$t:{$pk:".",$nm:"Float"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"plus"},largerThan:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Float"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"largerThan"},minus:{$t:{$pk:".",$nm:"Float"},$ps:[[{$t:{$pk:".",$nm:"Float"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"minus"},equals:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"that"}]],$mt:"m",$an:{shared:[],native:[],doc:["Determines if the given object is equal to this `Float`,\nthat is, if:\n\n- the given object is also a `Float`,\n- neither this value nor the given value is \n  [[undefined]], and either\n- both values are [[infinite]] and have the same \n  [[sign]], or both represent the same finite floating \n  point value as defined by the IEEE specification.\n\nOr if:\n\n- the given object is an [[Integer]],\n- this value is neither [[undefined]], nor [[infinite]],\n- the [[fractionalPart]] of this value equals `0.0`, \n  and\n- the [[integer]] part of this value equals the given \n  integer."],actual:[]},$nm:"equals"},compare:{$t:{$pk:".",$nm:"Comparison"},$ps:[[{$t:{$pk:".",$nm:"Float"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"compare"},smallerThan:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Float"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"smallerThan"},plusInteger:{$t:{$pk:".",$nm:"Float"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"integer"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"plusInteger"},notSmallerThan:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Float"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"notSmallerThan"},times:{$t:{$pk:".",$nm:"Float"},$ps:[[{$t:{$pk:".",$nm:"Float"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"times"},powerOfInteger:{$t:{$pk:".",$nm:"Float"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"integer"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"powerOfInteger"},timesInteger:{$t:{$pk:".",$nm:"Float"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"integer"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"timesInteger"},power:{$t:{$pk:".",$nm:"Float"},$ps:[[{$t:{$pk:".",$nm:"Float"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"power"},divided:{$t:{$pk:".",$nm:"Float"},$ps:[[{$t:{$pk:".",$nm:"Float"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"divided"}},$at:{integer:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],native:[],throws:["OverflowException","if the the [[wholePart]] of this value is too large \nor too small to be represented as an `Integer`"],doc:["This value, represented as an [[Integer]], after \ntruncation of its fractional part, if such a \nrepresentation is possible."]},$nm:"integer"},hash:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],native:[],actual:[]},$nm:"hash"},magnitude:{$t:{$pk:".",$nm:"Float"},$mt:"a",$an:{shared:[],native:[],actual:[]},$nm:"magnitude"},strictlyPositive:{$t:{$pk:".",$nm:"Boolean"},$mt:"a",$an:{shared:[],native:[],doc:["Determines if this value is a positive number, `+0.0`, \nor `infinity`. Produces `false` for a negative number, \n`-0.0`, or undefined."]},$nm:"strictlyPositive"},fractionalPart:{$t:{$pk:".",$nm:"Float"},$mt:"a",$an:{shared:[],native:[],actual:[]},$nm:"fractionalPart"},finite:{$t:{$pk:".",$nm:"Boolean"},$mt:"g",$an:{shared:[],see:["infinite","infinity"],doc:["Determines whether this value is finite. Produces\n`false` for `infinity`, `-infinity`, and undefined."]},$nm:"finite"},sign:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],native:[],doc:["The sign of this value. Produces `1` for a positive \nnumber or `infinity`. Produces `-1` for a negative\nnumber or `-infinity`. Produces `0.0` for `+0.0`, \n`-0.0`, or undefined."],actual:[]},$nm:"sign"},strictlyNegative:{$t:{$pk:".",$nm:"Boolean"},$mt:"a",$an:{shared:[],native:[],doc:["Determines if this value is a negative number, `-0.0`, \nor `-infinity`. Produces `false` for a positive number, \n`+0.0`, or undefined."]},$nm:"strictlyNegative"},infinite:{$t:{$pk:".",$nm:"Boolean"},$mt:"g",$an:{shared:[],see:["infinity","finite"],doc:["Determines whether this value is infinite in magnitude. \nProduces `true` for `infinity` and `-infinity`. \nProduces `false` for a finite number, `+0.0`, `-0.0`, \nor undefined."]},$nm:"infinite"},undefined:{$t:{$pk:".",$nm:"Boolean"},$mt:"g",$an:{shared:[],doc:["Determines whether this value is undefined (that is, \nNot a Number or NaN). The undefined value has the \nproperty that it is not equal (`==`) to itself, and as \na consequence the undefined value cannot sensibly be \nused in most collections."]},$nm:"undefined"},string:{$t:{$pk:".",$nm:"String"},$mt:"a",$an:{shared:[],native:[],actual:[]},$nm:"string"},float$oirx2o:{$t:{$pk:".",$nm:"Float"},$mt:"a",$nm:"float"},wholePart:{$t:{$pk:".",$nm:"Float"},$mt:"a",$an:{shared:[],native:[],actual:[]},$nm:"wholePart"},negative:{$t:{$pk:".",$nm:"Boolean"},$mt:"a",$an:{shared:[],native:[],doc:["Determines if this value is a negative number or\n`-infinity`. Produces `false` for a positive number, \n`+0.0`, `-0.0`, or undefined."],actual:[]},$nm:"negative"},positive:{$t:{$pk:".",$nm:"Boolean"},$mt:"a",$an:{shared:[],native:[],doc:["Determines if this value is a positive number or\n`infinity`. Produces `false` for a negative number, \n`+0.0`, `-0.0`, or undefined."],actual:[]},$nm:"positive"},negated:{$t:{$pk:".",$nm:"Float"},$mt:"a",$an:{shared:[],native:[],actual:[]},$nm:"negated"}},$nm:"Float"},deprecated:{$t:{$pk:".",$nm:"DeprecationAnnotation"},$ps:[[{$t:{$pk:".",$nm:"String"},$mt:"prm",$def:1,$an:{doc:["A description, in Markdown syntax, of why the element \nis deprecated, and what alternatives are available."]},$nm:"reason"}]],$mt:"m",$an:{annotation:[],shared:[],doc:["Annotation to mark program elements which should not be \nused anymore."]},$annot:1,$nm:"deprecated"},Collection:{$sts:[{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"}],$mt:"i",$tp:[{variance:"out",$nm:"Element"}],$an:{shared:[],see:["List","Map","Set"],doc:["Represents an iterable collection of elements of finite \nsize. `Collection` is the abstract supertype of [[List]],\n[[Map]], and [[Set]].\n\nA `Collection` forms a [[Category]] of its elements, and \nis [[Iterable]]. The elements of a collection are not\nnecessarily distinct when compared using [[Object.equals]].\n\nA `Collection` may be [[cloned|clone]]. If a collection is\nimmutable, it is acceptable that `clone()` produce a\nreference to the collection itself. If a collection is\nmutable, `clone()` should produce a collection containing \nreferences to the same elements, with the same structure as \nthe original collection&mdash;that is, it should produce a \nshallow copy of the collection."]},$m:{clone:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Collection"},$mt:"m",$an:{shared:[],formal:[],doc:["A shallow copy of this collection, that is, a \ncollection with identical elements which does not\nchange if this collection changes. If this collection\nis immutable, it is acceptable to return a reference to\nthis collection. If this collection is mutable, a newly\ninstantiated collection must be returned."]},$nm:"clone"},contains:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"element"}]],$mt:"m",$an:{shared:[],default:[],doc:["Return `true` if the given object is an element of\nthis collection. In this default implementation, and in \nmost refining implementations, return `false` \notherwise. An acceptable refining implementation may \nreturn `true` for objects which are not elements of the \ncollection, but this is not recommended. (For example, \nthe `contains()` method of `String` returns `true` for \nany substring of the string.)"],actual:[]},$nm:"contains"}},$at:{string:{$t:{$pk:".",$nm:"String"},$mt:"g",$an:{shared:[],default:[],doc:["A string of form `\"{ x, y, z }\"` where `x`, `y`, and \n`z` are the `string` representations of the elements of \nthis collection, as produced by the iterator of the \ncollection, or the string `\"{}\"` if this collection \nis empty. If the collection iterator produces the value \n`null`, the string representation contains the string \n`\"<null>\"`."],actual:[]},$nm:"string"},empty:{$t:{$pk:".",$nm:"Boolean"},$mt:"g",$an:{shared:[],default:[],doc:["Determine if the collection is empty, that is, if it \nhas no elements."],actual:[]},$nm:"empty"}},$nm:"Collection"},Range:{super:{$pk:".",$nm:"Object"},$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequence"}],$ps:[{$t:{$nm:"Element"},$hdn:1,$mt:"prm",$an:{shared:[],doc:["The start of the range."],actual:[]},$nm:"first"},{$t:{$nm:"Element"},$hdn:1,$mt:"prm",$an:{shared:[],doc:["The end of the range."],actual:[]},$nm:"last"}],$mt:"c",$tp:[{$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Ordinal"},{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Comparable"}],$nm:"Element"}],$an:{shared:[],final:[],see:["Ordinal"],doc:["A range of totally ordered, ordinal values generated by two \nendpoints which are both [[Ordinal]] and [[Comparable]]: \n[[first]] and [[last]].\n\n- If `first<last` the range is increasing,\n- if `first>last`, the range is decreasing, or\n- otherwise, if `first==last`, the range contains exactly\n  one value.\n\nA range is always nonempty, containing at least one value.\n\nA range is a [[Sequence]].\n\nThe _span_ operator `..` is an abbreviation for `Range`\ninstantiation.\n\n    for (i in min..max) { ... }\n    if (char in 'A'..'Z') { ... }\n\nSee the documentation for [[Ordinal]] for more\ninformation about the span and segment operators."],by:["Gavin"]},$m:{clone:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Range"},$mt:"m",$an:{shared:[],doc:["Returns the range itself, since ranges are \nimmutable."],actual:[]},$nm:"clone"},iterator:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"},$mt:"m",$an:{shared:[],doc:["An iterator for the elements of the range."],actual:[]},$nm:"iterator",$o:{iterator$3cbiv4:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"}],$mt:"o",$m:{next:{$t:{comp:"u",$ts:[{$nm:"Element"},{$pk:".",$nm:"Finished"}]},$mt:"m",$an:{shared:[],actual:[]},$nm:"next"}},$at:{current$t0h7c4:{$t:{comp:"u",$ts:[{$nm:"Element"},{$pk:".",$nm:"Finished"}]},var:1,$mt:"a",$an:{shared:[],actual:[],variable:[]},$nm:"current"},string:{$t:{$pk:".",$nm:"String"},$mt:"g",$an:{shared:[],actual:[]},$nm:"string"}},$nm:"iterator"}}},next$dmsvh4:{$t:{$nm:"Element"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"x"}]],$mt:"m",$nm:"next"},count:{$t:{$pk:".",$nm:"Integer"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"selecting"}]],$mt:"m",$an:{shared:[],actual:[]},$m:{selecting$2b2nmm:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"element"}]],$mt:"m",$nm:"selecting"}},$nm:"count"},equals:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"that"}]],$mt:"m",$an:{shared:[],doc:["Determines if two ranges are the same by comparing\ntheir endpoints."],actual:[]},$nm:"equals"},segment:{$t:{comp:"u",$ts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Range"},{$pk:".",$nm:"Empty"}]},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"length"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"segment"},includesRange:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Range"},$mt:"prm",$nm:"sublist"}]],$mt:"m",$an:{shared:[],doc:["Determines if this range includes the given range."]},$nm:"includesRange"},longerThan:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"length"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"longerThan"},by:{$t:{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"step"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"by"},contains:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"element"}]],$mt:"m",$an:{shared:[],doc:["Determines if this range includes the given object."],actual:[]},$nm:"contains"},skip:{$t:{comp:"u",$ts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Range"},{$pk:".",$nm:"Empty"}]},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"skipping"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"skip"},includes:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Anything"}],$pk:".",$nm:"List"},$mt:"prm",$nm:"sublist"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"includes"},getFromFirst:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$nm:"Element"}]},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],doc:["The element of the range that occurs [[index]] values \nafter the start of the range. Note that this operation \nmay be inefficient for large ranges."],actual:[]},$nm:"getFromFirst"},occurs:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Anything"},$mt:"prm",$nm:"element"}]],$mt:"m",$an:{shared:[],doc:["Determines if this range includes the given value."],actual:[]},$nm:"occurs"},shifted:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Range"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"shift"}]],$mt:"m",$an:{shared:[],doc:["Returns a range of the same length and type as this\nrange, with its endpoints shifted by the given number \nof elements, where:\n\n- a negative [[shift]] measures \n  [[decrements|Ordinal.predecessor]], and \n- a positive `shift` measures \n  [[increments|Ordinal.successor]]."]},$nm:"shifted"},spanTo:{$t:{comp:"u",$ts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Range"},{$pk:".",$nm:"Empty"}]},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"to"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"spanTo"},shorterThan:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"length"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"shorterThan"},sequence:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Range"},$mt:"m",$an:{shared:[],doc:["Returns this range."],actual:[]},$nm:"sequence"},take:{$t:{comp:"u",$ts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Range"},{$pk:".",$nm:"Empty"}]},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"taking"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"take"},containsElement:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"x"}]],$mt:"m",$an:{shared:[],doc:["Determines if the range includes the given value."]},$nm:"containsElement"},spanFrom:{$t:{comp:"u",$ts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Range"},{$pk:".",$nm:"Empty"}]},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"spanFrom"},span:{$t:{comp:"u",$ts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Range"},{$pk:".",$nm:"Empty"}]},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"to"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"span"}},$at:{lastIndex:{$t:{$pk:".",$nm:"Integer"},$mt:"g",$an:{shared:[],doc:["The index of the end of the range."],actual:[]},$nm:"lastIndex"},decreasing:{$t:{$pk:".",$nm:"Boolean"},$mt:"g",$an:{shared:[],doc:["Determines if the range is decreasing."]},$nm:"decreasing"},last:{$t:{$nm:"Element"},$mt:"a",$an:{shared:[],doc:["The end of the range."],actual:[]},$nm:"last"},string:{$t:{$pk:".",$nm:"String"},$mt:"g",$an:{shared:[],actual:[]},$nm:"string"},coalesced:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Range"},$mt:"g",$an:{shared:[],doc:["Returns the range itself, since a Range cannot\ncontain nulls."],actual:[]},$nm:"coalesced"},reversed:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Range"},$mt:"g",$an:{shared:[],doc:["This range in reverse, with [[first]] and [[last]]\ninterchanged.\n\nFor any two range endpoints, `x` and `y`: \n\n    `(x..y).reversed == y..x`."],actual:[]},$nm:"reversed"},rest:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"},$mt:"g",$an:{shared:[],doc:["The rest of the range, without the start of the range."],actual:[]},$nm:"rest"},first:{$t:{$nm:"Element"},$mt:"a",$an:{shared:[],doc:["The start of the range."],actual:[]},$nm:"first"},size:{$t:{$pk:".",$nm:"Integer"},$mt:"g",$an:{shared:[],doc:["The nonzero number of elements in the range."],actual:[]},$nm:"size"}},$nm:"Range"},max:{$t:{comp:"u",$ts:[{$nm:"Absent"},{$nm:"Value"}]},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Value"},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"values"}]],$mt:"m",$tp:[{$sts:[{$tp:[{$mt:"tp",$nm:"Value"}],$pk:".",$nm:"Comparable"}],$nm:"Value"},{$sts:[{$pk:".",$nm:"Null"}],$nm:"Absent"}],$an:{shared:[],see:["Comparable","min","largest"],doc:["Given a stream of [[Comparable]] values, return the largest \nvalue in the stream, or `null` if the stream is empty."]},$nm:"max"},Integral:{of:[{$nm:"Other"}],$sts:[{$tp:[{$mt:"tp",$nm:"Other"}],$pk:".",$nm:"Number"},{$tp:[{$mt:"tp",$nm:"Other"}],$pk:".",$nm:"Enumerable"}],$mt:"i",$tp:[{$sts:[{$tp:[{$mt:"tp",$nm:"Other"}],$pk:".",$nm:"Integral"}],$nm:"Other"}],$an:{shared:[],see:["Integer"],doc:["Abstraction of integral numeric types. That is, types \nwith no fractional part, including [[Integer]].\n\nThe division operation for integral numeric types results \nin a remainder. Therefore, integral numeric types have \n[[an operation|remainder]], denoted by the _remainder_\noperator `%`, to determine the remainder of any division \noperation.\n\n    if (n%2==0) {\n        print(\"Even!\");\n    }\n\nDivision and the remainder operation should satisfy: \n\n- `x == (x\/y)*y + x%y`\n\nfor any instance `y` other than `0`.\n\n`Integral` numeric types are also [[Ordinal]], so ranges \nof integral values may be produced using the \n[[segment and span operators|Ordinal]].\n    \n    \/\/ Iterate from 0 to 100 inclusive\n    for (i in 0..100) {\n        print(\"The square of ``i`` is ``i^2``\");\n    }\n    \n    \/\/ Iterate all indices of the array, \n    \/\/ from 0 to array.size-1\n    for (i in 0:array.size) {\n        print(array[i]);\n    }"],by:["Gavin"]},$m:{remainder:{$t:{$nm:"Other"},$ps:[[{$t:{$nm:"Other"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],formal:[],see:["Numeric.divided"],doc:["The remainder, after dividing this number by the given \nnumber."]},$nm:"remainder"},divides:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Other"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],doc:["Determine if this number is a factor of the given \nnumber."]},$nm:"divides"}},$at:{unit:{$t:{$pk:".",$nm:"Boolean"},$mt:"a",$an:{shared:[],formal:[],doc:["Determine if the number is the multiplicative identity."]},$nm:"unit"},zero:{$t:{$pk:".",$nm:"Boolean"},$mt:"a",$an:{shared:[],formal:[],doc:["Determine if the number is the additive identity."]},$nm:"zero"}},$nm:"Integral",$st:"Other"},smallest:{$t:{$nm:"Element"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"x"},{$t:{$nm:"Element"},$mt:"prm",$nm:"y"}]],$mt:"m",$tp:[{$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Comparable"}],$nm:"Element"}],$an:{shared:[],see:["Comparable","largest","min"],doc:["Given two [[Comparable]] values, return smallest of the two."]},$nm:"smallest"},NativeAnnotation:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"NativeAnnotation"},{$mt:"tp",$pk:".",$nm:"Annotated"}],$pk:".",$nm:"OptionalAnnotation"}],$mt:"c",$an:{annotation:[],shared:[],final:[],doc:["The annotation class for [[native]]."]},$annot:1,$nm:"NativeAnnotation"},byIncreasing:{$t:{$pk:".",$nm:"Comparison"},$ps:[[{$t:{$nm:"Value"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"e"}]],$mt:"prm",$pt:"f",$nm:"comparable"}],[{$t:{$nm:"Element"},$mt:"prm",$nm:"x"},{$t:{$nm:"Element"},$mt:"prm",$nm:"y"}]],$mt:"m",$tp:[{$nm:"Element"},{$sts:[{$tp:[{$mt:"tp",$nm:"Value"}],$pk:".",$nm:"Comparable"}],$nm:"Value"}],$an:{shared:[],see:["byDecreasing"],doc:["A comparator which orders elements in increasing order \naccording to the `Comparable` value returned by the given \n[[comparable]] function.\n\n     \"Hello World!\".sort(byIncreasing(Character.lowercased))"]},$nm:"byIncreasing"},larger:{super:{$pk:".",$nm:"Comparison"},$mt:"o",$an:{shared:[],doc:["The value is larger than the given value."]},$nm:"larger"},true:{super:{$pk:".",$nm:"Boolean"},$mt:"o",$an:{shared:[],native:[],doc:["A value representing truth in Boolean logic."]},$at:{string:{$t:{$pk:".",$nm:"String"},$mt:"g",$an:{shared:[],actual:[]},$nm:"string"}},$nm:"true"},Exponentiable:{of:[{$nm:"This"}],$sts:[{$tp:[{$mt:"tp",$nm:"This"}],$pk:".",$nm:"Numeric"}],$mt:"i",$tp:[{$sts:[{$tp:[{$mt:"tp",$nm:"This"},{$mt:"tp",$nm:"Other"}],$pk:".",$nm:"Exponentiable"}],$nm:"This"},{$sts:[{$tp:[{$mt:"tp",$nm:"Other"}],$pk:".",$nm:"Numeric"}],$nm:"Other"}],$an:{shared:[],see:["Integer","Float"],doc:["Abstraction of [[numeric types|Numeric]] that may be raised \nto a power using the _exponentiation_ operator ^.\n\n    function exp(Float x) => e^x;\n\nThe exponentiation operation should obey the usual index\nlaws, including:\n\n- `x^0 = 1`,\n- `x^1 = x`,\n- `x^(-1) = 1\/x` \n- `x^(m+n) = x^m * x^n`\n- `x^(m-n) = x^m \/ x^n`\n- `x^(m*n) = (x^m)^n`\n- `(x*y)^n = x^n * y^n`\n\nwhere `0` is the additive identity, and `1` is the \nmultiplicative identity.\n\nNote that in general, the type of the exponent may be \ndifferent to the numeric type which is exponentiated. For\nexample, a `Rational` number class might be a subtype of\n`Exponentiable<Rational,Integer>`, thus accepting only\nwhole-number exponents."]},$m:{power:{$t:{$nm:"This"},$ps:[[{$t:{$nm:"Other"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],formal:[],doc:["The result of raising this number to the given power."]},$nm:"power"}},$nm:"Exponentiable",$st:"This"},Character:{super:{$pk:".",$nm:"Object"},$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"Character"}],$pk:".",$nm:"Comparable"},{$tp:[{$mt:"tp",$pk:".",$nm:"Character"}],$pk:".",$nm:"Enumerable"}],$ps:[{$t:{$pk:".",$nm:"Character"},$mt:"prm",$nm:"character"}],$mt:"c",$an:{shared:[],final:[],native:[],see:["String"],doc:["A 32-bit [Unicode][] character.\n\nLiteral characters may be written between single quotes:\n\n    ' '\n    '\\n'\n    '\\{#03C0}'\n    '\\{GREEK SMALL LETTER PI}'\n\nEvery `Character` has a unique [[Integer]]-valued Unicode \n_code point_.\n\n    Integer piCodePoint = '\\{GREEK SMALL LETTER PI}'.integer; \/\/ #03C0\n    Character pi = #03C0.character; \/\/ GREEK SMALL LETTER PI\n\nCharacters are [[Ordinal]], so character ranges may be\nproduced using the [[segment and span operators|Ordinal]].\n\n    value lowerLatinLetters = 'a'..'z';\n    value upperLatinLetters = 'A':26;\n\nCharacters have a [[natural order|Comparable]] determined\nby their Unicode code points. So, for example, `'a'<'b'`,\nsince `'a'.integer<'b'.integer`.\n\n[Unicode]: http:\/\/www.unicode.org\/"],by:["Gavin"]},$m:{notLargerThan:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Character"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"notLargerThan"},largerThan:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Character"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"largerThan"},notSmallerThan:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Character"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"notSmallerThan"},equals:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"that"}]],$mt:"m",$an:{shared:[],native:[],doc:["Determines if the given object is a character with the\nsame code point as this character."],actual:[]},$nm:"equals"},compare:{$t:{$pk:".",$nm:"Comparison"},$ps:[[{$t:{$pk:".",$nm:"Character"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],doc:["Compare this character with the given string character, \naccording to the Unicode code points of the characters."],actual:[]},$nm:"compare"},smallerThan:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Character"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"smallerThan"},neighbour:{$t:{$pk:".",$nm:"Character"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"offset"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"neighbour"}},$at:{control:{$t:{$pk:".",$nm:"Boolean"},$mt:"a",$an:{shared:[],native:[],doc:["Determine if this character is an ISO control \ncharacter."]},$nm:"control"},successor:{$t:{$pk:".",$nm:"Character"},$mt:"a",$an:{shared:[],native:[],doc:["The character with the unicode code point that is one\nless than this character."],actual:[]},$nm:"successor"},hash:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],native:[],doc:["The code point of the character."],actual:[]},$nm:"hash"},integer:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],native:[],doc:["The code point of the character."]},$nm:"integer"},lowercased:{$t:{$pk:".",$nm:"Character"},$mt:"a",$an:{shared:[],native:[],doc:["The lowercase representation of this character, in the\n[[system]] default locale."]},$nm:"lowercased"},letter:{$t:{$pk:".",$nm:"Boolean"},$mt:"a",$an:{shared:[],native:[],doc:["Determine if this character is a letter. That is, if \nits Unicode general category is *Lu*, *Ll*, *Lt*, *Lm*,\nor *Lo*."]},$nm:"letter"},uppercased:{$t:{$pk:".",$nm:"Character"},$mt:"a",$an:{shared:[],native:[],doc:["The uppercase representation of this character, in the\n[[system]] default locale."]},$nm:"uppercased"},whitespace:{$t:{$pk:".",$nm:"Boolean"},$mt:"a",$an:{shared:[],native:[],doc:["Determine if this character is a whitespace character. \nThe following characters are whitespace characters:\n\n- *LINE FEED*, `\\n` or `\\{#000A}`,\n- *FORM FEED*, `\\f` or `\\{#000C}`,\n- *CARRIAGE RETURN*, `\\r` or `\\{#000D}`,\n- *HORIZONTAL TABULATION*, `\\t` or `\\{#0009}`,\n- *VERTICAL TABULATION*, `\\{#000B}`,\n- *FILE SEPARATOR*, `\\{#001C}`,\n- *GROUP SEPARATOR*, `\\{#001D}`,\n- *RECORD SEPARATOR*, `\\{#001E}`,\n- *UNIT SEPARATOR*, `\\{#001F}`, and\n- any Unicode character in the general category *Zs*, \n  *Zl*, or *Zp* that is not a non-breaking space."]},$nm:"whitespace"},titlecased:{$t:{$pk:".",$nm:"Character"},$mt:"a",$an:{shared:[],native:[],doc:["The title case representation of this character."]},$nm:"titlecased"},character$f3csq2:{$t:{$pk:".",$nm:"Character"},$mt:"a",$nm:"character"},predecessor:{$t:{$pk:".",$nm:"Character"},$mt:"a",$an:{shared:[],native:[],doc:["The character with the unicode code point that is one\ngreater than this character."],actual:[]},$nm:"predecessor"},uppercase:{$t:{$pk:".",$nm:"Boolean"},$mt:"a",$an:{shared:[],native:[],doc:["Determine if this is an uppercase representation of the\ncharacter. That is, if its Unicode general category is \n*Lu*."]},$nm:"uppercase"},digit:{$t:{$pk:".",$nm:"Boolean"},$mt:"a",$an:{shared:[],native:[],doc:["Determine if this character is a numeric digit. That \nis, if its Unicode general category is *Nd*."]},$nm:"digit"},lowercase:{$t:{$pk:".",$nm:"Boolean"},$mt:"a",$an:{shared:[],native:[],doc:["Determine if this is a lowercase representation of the\ncharacter. That is, if its Unicode general category is \n*Ll*."]},$nm:"lowercase"},string:{$t:{$pk:".",$nm:"String"},$mt:"a",$an:{shared:[],native:[],doc:["A string containing just this character."],actual:[]},$nm:"string"},integerValue:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],native:[],doc:["The code point of the character."],actual:[]},$nm:"integerValue"},titlecase:{$t:{$pk:".",$nm:"Boolean"},$mt:"a",$an:{shared:[],native:[],doc:["Determine if this is a title case representation of the\ncharacter. That is, if its Unicode general category is \n*Lt*."]},$nm:"titlecase"}},$nm:"Character"},curry:{$t:{$tp:[{$mt:"tp",$nm:"Return"},{$mt:"tp",$nm:"Rest"}],$pk:".",$nm:"Callable"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Return"},{$mt:"tp",$tp:[{$mt:"tp",$nm:"Argument"},{$mt:"tp",$nm:"First"},{$mt:"tp",$nm:"Rest"}],$pk:".",$nm:"Tuple"}],$pk:".",$nm:"Callable"},$mt:"prm",$nm:"f"}],[{$t:{$nm:"First"},$mt:"prm",$nm:"first"}]],$mt:"m",$tp:[{$nm:"Return"},{$nm:"Argument"},{$sts:[{$nm:"Argument"}],$nm:"First"},{$sts:[{$tp:[{$mt:"tp",$nm:"Argument"}],$pk:".",$nm:"Sequential"}],$nm:"Rest"}],$an:{shared:[],see:["uncurry","compose"],doc:["Curries a function, returning a function with two \nparameter lists, given a function with at least\none parameter. The first parameter list of the \nreturned function has just the first parameter\nof the original function, and the second parameter\nlist has the remaining parameters.\n\nThat is, if `fun` has type `W(X,Y,Z)` then \n`curry(fun)` has type `W(Y,Z)(X)`."]},$nm:"curry"},forKey:{$t:{$nm:"Result"},$ps:[[{$t:{$nm:"Result"},$ps:[[{$t:{$nm:"Key"},$mt:"prm",$nm:"key"}]],$mt:"prm",$pt:"f",$nm:"resulting"}],[{$t:{$tp:[{$mt:"tp",$nm:"Key"},{$mt:"tp",$pk:".",$nm:"Object"}],$pk:".",$nm:"Entry"},$mt:"prm",$nm:"entry"}]],$mt:"m",$tp:[{$sts:[{$pk:".",$nm:"Object"}],$nm:"Key"},{$nm:"Result"}],$an:{shared:[],see:["forItem"],doc:["A function that returns the result of the given `resulting()` function \non the key of a given `Entry`."]},$nm:"forKey"},product:{$t:{$nm:"Value"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Value"},{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"values"}]],$mt:"m",$tp:[{$sts:[{$tp:[{$mt:"tp",$nm:"Value"}],$pk:".",$nm:"Numeric"}],$nm:"Value"}],$an:{shared:[],see:["sum"],doc:["Given a nonempty stream of [[Numeric]] values, return the \nproduct of the values."]},$nm:"product"},process:{super:{$pk:".",$nm:"Basic"},$mt:"o",$an:{shared:[],native:[],doc:["Represents the current process (instance of the virtual\nmachine)."],by:["Gavin","Tako"]},$m:{flushError:{$t:{$pk:".",$nm:"Anything"},$mt:"m",$an:{shared:[],native:[],doc:["Flush the standard error of the \nvirtual machine process."]},$nm:"flushError"},flush:{$t:{$pk:".",$nm:"Anything"},$mt:"m",$an:{shared:[],native:[],doc:["Flush the standard output of the \nvirtual machine process."]},$nm:"flush"},readLine:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"String"}]},$mt:"m",$an:{shared:[],native:[],doc:["Read a line of input text from the standard input \nof the virtual machine process. Returns a line of\ntext after removal of line-termination characters,\nor `null` to indicate the standard input has been closed."]},$nm:"readLine"},writeErrorLine:{$t:{$pk:".",$nm:"Anything"},$ps:[[{$t:{$pk:".",$nm:"String"},$mt:"prm",$def:1,$nm:"line"}]],$mt:"m",$an:{shared:[],doc:["Print a line to the standard error of the \nvirtual machine process."]},$nm:"writeErrorLine"},writeError:{$t:{$pk:".",$nm:"Anything"},$ps:[[{$t:{$pk:".",$nm:"String"},$mt:"prm",$nm:"string"}]],$mt:"m",$an:{shared:[],native:[],doc:["Print a string to the standard error of the \nvirtual machine process."]},$nm:"writeError"},propertyValue:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"String"}]},$ps:[[{$t:{$pk:".",$nm:"String"},$mt:"prm",$nm:"name"}]],$mt:"m",$an:{shared:[],native:[],doc:["The value of the given system property of the virtual\nmachine, if any."]},$nm:"propertyValue"},namedArgumentValue:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"String"}]},$ps:[[{$t:{$pk:".",$nm:"String"},$mt:"prm",$nm:"name"}]],$mt:"m",$an:{shared:[],native:[],doc:["The value of the first argument of form `-name=value`, \n`--name=value`, or `-name value` specified among the \ncommand line arguments to the virtual machine, if\nany."]},$nm:"namedArgumentValue"},write:{$t:{$pk:".",$nm:"Anything"},$ps:[[{$t:{$pk:".",$nm:"String"},$mt:"prm",$nm:"string"}]],$mt:"m",$an:{shared:[],native:[],doc:["Print a string to the standard output of the \nvirtual machine process."]},$nm:"write"},namedArgumentPresent:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"String"},$mt:"prm",$nm:"name"}]],$mt:"m",$an:{shared:[],native:[],doc:["Determine if an argument of form `-name` or `--name` \nwas specified among the command line arguments to \nthe virtual machine."]},$nm:"namedArgumentPresent"},writeLine:{$t:{$pk:".",$nm:"Anything"},$ps:[[{$t:{$pk:".",$nm:"String"},$mt:"prm",$def:1,$nm:"line"}]],$mt:"m",$an:{shared:[],see:["print"],doc:["Print a line to the standard output of the \nvirtual machine process."]},$nm:"writeLine"},exit:{$t:{$pk:".",$nm:"Anything"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"code"}]],$mt:"m",$an:{shared:[],native:[],doc:["Force the virtual machine to terminate with \nthe given exit code."]},$nm:"exit"}},$at:{arguments:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"String"}],$pk:".",$nm:"Sequential"},$mt:"a",$an:{shared:[],native:[],doc:["The command line arguments to the virtual machine."]},$nm:"arguments"},string:{$t:{$pk:".",$nm:"String"},$mt:"g",$an:{shared:[],actual:[]},$nm:"string"}},$nm:"process"},forItem:{$t:{$nm:"Result"},$ps:[[{$t:{$nm:"Result"},$ps:[[{$t:{$nm:"Item"},$mt:"prm",$nm:"item"}]],$mt:"prm",$pt:"f",$nm:"resulting"}],[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Object"},{$mt:"tp",$nm:"Item"}],$pk:".",$nm:"Entry"},$mt:"prm",$nm:"entry"}]],$mt:"m",$tp:[{$sts:[{$pk:".",$nm:"Object"}],$nm:"Item"},{$nm:"Result"}],$an:{shared:[],see:["forKey"],doc:["A function that returns the result of the given `resulting()` function \non the item of a given `Entry`."]},$nm:"forItem"},shuffle:{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$nm:"Result"},{$mt:"tp",$nm:"FirstArgs"}],$pk:".",$nm:"Callable"},{$mt:"tp",$nm:"SecondArgs"}],$pk:".",$nm:"Callable"},$ps:[[{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$nm:"Result"},{$mt:"tp",$nm:"SecondArgs"}],$pk:".",$nm:"Callable"},{$mt:"tp",$nm:"FirstArgs"}],$pk:".",$nm:"Callable"},$mt:"prm",$nm:"f"}]],$mt:"m",$tp:[{$nm:"Result"},{$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"Anything"}],$pk:".",$nm:"Sequential"}],$nm:"FirstArgs"},{$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"Anything"}],$pk:".",$nm:"Sequential"}],$nm:"SecondArgs"}],$an:{shared:[],see:["curry"],doc:["Given a function with two parameter lists, return\na function with the order of the argument lists \nreversed. The parameter lists may have any number\nof parameters.\n\nThat is, if `fun` has type `W(A,B)(X,Y,Z)` then \n`shuffle(fun)` has type `W(X,Y,Z)(A,B)`.\n\nThis function is often used in conjunction with\n`curry()`."]},$nm:"shuffle"},sequence:{$t:{comp:"u",$ts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequence"},{$nm:"Absent"}]},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"elements"}]],$mt:"m",$tp:[{$nm:"Element"},{$sts:[{$pk:".",$nm:"Null"}],$nm:"Absent"}],$an:{shared:[],doc:["A [[Sequence]] of the given elements, or `Absent` if the iterable is empty.\nA [[Sequential]] can be obtained using the `else` operator:\n\n    sequence(elements) else []\n"],by:["Gavin"]},$nm:"sequence"},Annotation:{of:[{$tp:[{$mt:"tp",$pk:".",$nm:"Annotation"},{$mt:"tp",$pk:".",$nm:"Anything"},{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"ConstrainedAnnotation"}],$mt:"i",$an:{shared:[],see:["OptionalAnnotation","SequencedAnnotation","annotations","optionalAnnotation","sequencedAnnotations"],doc:["The supertype of all *annotation classes*. \n\n### Annotation classes\n\nAn *annotation class* must satisfy `Annotation`,\n[[OptionalAnnotation]],  or [[SequencedAnnotation]] and must be \nannotated `final annotation`. For example:\n\n    \"An annotation class.\"\n    final annotation class Example(shared String description) \n          satisfies Annotation {}\n\nAnnotation classes which satisfy `Annotation` directly may be applied \nto any program element that supports annotations (see [[Annotated]]). \nIn practice, annotation classes often satisfy [[OptionalAnnotation]] \nor [[SequencedAnnotation]] in order to prevent annotations being \napplied to inappropriate program elements.\n\nEach initializer parameter of an annotation class must have one of the \nfollowing types:\n\n* `Integer`, `Float`, `Character`, or `String`,\n* an enumerated type whose cases are all anonymous classes, \n  such as `Boolean`,\n* a subtype of [[ceylon.language.meta.declaration::Declaration]]\n* an annotation class,\n* `{T*}` or `[T*]` where `T` is a legal annotation parameter type, or\n* any tuple type whose element types are legal annotation parameter types.\n\nAn initializer parameter of an annotation class may be variadic \nor defaulted.\n\n### Annotation constructors\n\nAn *annotation constructor* is simply a top level function, annotated with \n`annotation` whose return type is an annotation class type. For example:\n\n    \"An annotation constructor.\"\n    annotation Example example(String description=\"\") \n        => Example(description);\n\nEach parameter of an annotation constructor must have one of the \nfollowing types:\n\n* `Integer`, `Float`, `Character`, or `String`,\n* an enumerated type whose cases are all anonymous classes, \n  such as `Boolean`,\n* a subtype of [[ceylon.language.meta.declaration::Declaration]],\n* an annotation type,\n* `{T*}` or `[T*]` where `T` is a legal annotation constructor parameter \n  type, or\n* any tuple type whose element types are legal annotation constructor \n  parameter types.\n\nA parameter of an annotation constructor may be variadic or defaulted.\n\nThe constructor must simply instantiate and return the annotation class, \nand there are strict rules about the arguments to the instantiation.\n\nAn annotation class can have multiple annotation constructors.\n"]},$nm:"Annotation"},ConstrainedAnnotation:{of:[{$nm:"Value"}],$sts:[{$pk:".",$nm:"Annotation"}],$mt:"i",$tp:[{$sts:[{$pk:".",$nm:"Annotation"}],$def:{$pk:".",$nm:"Annotation"},variance:"out",$nm:"Value"},{$def:{$pk:".",$nm:"Anything"},variance:"out",$nm:"Values"},{$sts:[{$pk:".",$nm:"Annotated"}],$def:{$pk:".",$nm:"Nothing"},variance:"in",$nm:"ProgramElement"}],$an:{shared:[],see:["Annotation"],doc:["An annotation constrained to appear only on certain \nprogram elements, and only with certain values. \n\nThis interface should not be satisfied directly. \nInstead either [[OptionalAnnotation]] or [[SequencedAnnotation]] \nshould be satisfied."]},$m:{occurs:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Annotated"},$mt:"prm",$nm:"programElement"}]],$mt:"m",$an:{shared:[],doc:["Can this annotation occur on the given program \nelement?"]},$nm:"occurs"}},$nm:"ConstrainedAnnotation",$st:"Value"},nothing:{$t:{$pk:".",$nm:"Nothing"},$mt:"g",$an:{shared:[],throws:["AssertionError","when evaluated"],doc:["A value getter of type `Nothing`. The expression `nothing`\nis formally assignable to any type, but produces an \nexception when evaluated.\n\n(This is most useful for tool-generated implementations of\n`formal` members.)"]},$nm:"nothing"},doc:{$t:{$pk:".",$nm:"DocAnnotation"},$ps:[[{$t:{$pk:".",$nm:"String"},$mt:"prm",$an:{doc:["Documentation, in Markdown syntax, about the annotated element"]},$nm:"description"}]],$mt:"m",$an:{annotation:[],shared:[],doc:["Annotation to specify API documentation of a program\nelement."]},$annot:1,$nm:"doc"},emptyMap:{super:{$pk:".",$nm:"Object"},$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"},{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Map"}],$mt:"o",$an:{shared:[],doc:["An immutable [[Map]] with no entries."]},$m:{clone:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"},{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Map"},$mt:"m",$an:{shared:[],actual:[]},$nm:"clone"},iterator:{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"},{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Entry"}],$pk:".",$nm:"Iterator"},$mt:"m",$an:{shared:[],actual:[]},$nm:"iterator"},containsAny:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Object"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"elements"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"containsAny"},get:{$t:{$pk:".",$nm:"Null"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"key"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"get"},count:{$t:{$pk:".",$nm:"Integer"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"},{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Entry"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"selecting"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"count"},select:{$t:{$pk:".",$nm:"Empty"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"},{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Entry"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"selecting"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"select"},by:{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"},{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Entry"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"step"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"by"},contains:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"element"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"contains"},skip:{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"},{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Entry"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"skipping"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"skip"},every:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"},{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Entry"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"selecting"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"every"},mapItems:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"},{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Map"},$ps:[[{$t:{$nm:"Result"},$ps:[[{$t:{$pk:".",$nm:"Nothing"},$mt:"prm",$nm:"key"},{$t:{$pk:".",$nm:"Nothing"},$mt:"prm",$nm:"item"}]],$mt:"prm",$pt:"f",$nm:"mapping"}]],$mt:"m",$tp:[{$sts:[{$pk:".",$nm:"Object"}],$nm:"Result"}],$an:{shared:[],actual:[]},$nm:"mapItems"},fold:{$t:{$nm:"Result"},$ps:[[{$t:{$nm:"Result"},$mt:"prm",$nm:"initial"},{$t:{$nm:"Result"},$ps:[[{$t:{$nm:"Result"},$mt:"prm",$nm:"partial"},{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"},{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Entry"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"accumulating"}]],$mt:"m",$tp:[{$nm:"Result"}],$an:{shared:[],actual:[]},$nm:"fold"},defines:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"defines"},take:{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"},{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Entry"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"taking"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"take"},any:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"},{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Entry"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"selecting"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"any"},map:{$t:{$pk:".",$nm:"Empty"},$ps:[[{$t:{$nm:"Result"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"},{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Entry"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"collecting"}]],$mt:"m",$tp:[{$nm:"Result"}],$an:{shared:[],actual:[]},$nm:"map"},find:{$t:{$pk:".",$nm:"Null"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"},{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Entry"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"selecting"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"find"},filter:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"},{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Map"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"},{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Entry"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"selecting"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"filter"},collect:{$t:{$pk:".",$nm:"Empty"},$ps:[[{$t:{$nm:"Result"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"},{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Entry"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$nm:"collecting"}]],$mt:"m",$tp:[{$nm:"Result"}],$an:{shared:[],actual:[]},$nm:"collect"},containsEvery:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Object"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"elements"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"containsEvery"}},$at:{values:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Collection"},$mt:"g",$an:{shared:[],actual:[]},$nm:"values"},keys:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Collection"},$mt:"g",$an:{shared:[],actual:[]},$nm:"keys"},empty:{$t:{$pk:".",$nm:"Boolean"},$mt:"g",$an:{shared:[],actual:[]},$nm:"empty"},size:{$t:{$pk:".",$nm:"Integer"},$mt:"g",$an:{shared:[],actual:[]},$nm:"size"}},$nm:"emptyMap"},AuthorsAnnotation:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"AuthorsAnnotation"},{$mt:"tp",$pk:".",$nm:"Annotated"}],$pk:".",$nm:"OptionalAnnotation"}],$ps:[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"String"}],$pk:".",$nm:"Sequential"},$mt:"prm",seq:1,$an:{shared:[],doc:["The authors, in Markdown syntax, of the annotated element"]},$nm:"authors"}],$mt:"c",$an:{annotation:[],shared:[],final:[],doc:["The annotation class for [[by]]."]},$annot:1,$at:{authors:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"String"}],$pk:".",$nm:"Sequential"},$mt:"a",$an:{shared:[],doc:["The authors, in Markdown syntax, of the annotated element"]},$nm:"authors"}},$nm:"AuthorsAnnotation"},printAll:{$t:{$pk:".",$nm:"Anything"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Anything"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"values"},{$t:{$pk:".",$nm:"String"},$mt:"prm",$def:1,$an:{doc:["A character sequence to use to separate the values"]},$nm:"separator"}]],$mt:"m",$an:{shared:[],see:["write"],doc:["Print multiple values to the standard output of the virtual \nmachine process as a single line of text, separated by a\ngiven character sequence."],by:["Gavin"]},$nm:"printAll"},ifExists:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"val"}]],$mt:"prm",$pt:"f",$nm:"predicate"}],[{$t:{$pk:".",$nm:"Anything"},$mt:"prm",$nm:"val"}]],$mt:"m",$m:{predicate$thdtgl:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"val"}]],$mt:"m",$nm:"predicate"}},$nm:"ifExists"},tagged:{$t:{$pk:".",$nm:"TagsAnnotation"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"String"}],$pk:".",$nm:"Sequential"},$mt:"prm",seq:1,$an:{doc:["The tags, in plain text."]},$nm:"tags"}]],$mt:"m",$an:{annotation:[],shared:[],doc:["Annotation to categorize the API by tag."]},$annot:1,$nm:"tagged"},variable:{$t:{$pk:".",$nm:"VariableAnnotation"},$mt:"m",$an:{annotation:[],shared:[],doc:["Annotation to mark an value as variable. A `variable` value \nmay be assigned multiple times."]},$annot:1,$nm:"variable"},Correspondence:{$mt:"i",$tp:[{$sts:[{$pk:".",$nm:"Object"}],variance:"in",$nm:"Key"},{variance:"out",$nm:"Item"}],$an:{shared:[],see:["Map","List","Category"],doc:["Abstract supertype of objects which associate values with \nkeys.\n\n`Correspondence` does not satisfy [[Category]], since in \nsome cases&mdash;`List`, for example&mdash;it is convenient \nto consider the subtype a `Category` of its values, and in \nother cases&mdash;`Map`, for example&mdash;it is convenient \nto treat the subtype as a `Category` of its \n[[entries|Entry]].\n\nThe item corresponding to a given key may be obtained from \na `Correspondence` using the item operator:\n\n    value bg = settings[\"backgroundColor\"] else white;\n\nThe `get()` operation and item operator result in an\noptional type, to reflect the possibility that there may be\nno item for the given key."],by:["Gavin"]},$m:{definesAny:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Key"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"keys"}]],$mt:"m",$an:{shared:[],default:[],see:["Correspondence.defines"],doc:["Determines if this `Correspondence` defines a value for\nany one of the given keys."]},$nm:"definesAny"},defines:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Key"},$mt:"prm",$nm:"key"}]],$mt:"m",$an:{shared:[],default:[],see:["Correspondence.definesAny","Correspondence.definesEvery","Correspondence.keys"],doc:["Determines if there is a value defined for the \ngiven key."]},$nm:"defines"},get:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$nm:"Item"}]},$ps:[[{$t:{$nm:"Key"},$mt:"prm",$nm:"key"}]],$mt:"m",$an:{shared:[],formal:[],see:["Correspondence.items"],doc:["Returns the value defined for the given key, or `null` \nif there is no value defined for the given key."]},$nm:"get"},items:{$t:{$tp:[{comp:"u",$mt:"tp",$ts:[{$pk:".",$nm:"Null"},{$nm:"Item"}]}],$pk:".",$nm:"Sequential"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Key"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"keys"}]],$mt:"m",$an:{shared:[],default:[],see:["Correspondence.get"],doc:["Returns the items defined for the given keys, in the \nsame order as the corresponding keys. For any key which \ndoes not have an item defined, the resulting sequence \ncontains the value `null`."]},$nm:"items"},definesEvery:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Key"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"keys"}]],$mt:"m",$an:{shared:[],default:[],see:["Correspondence.defines"],doc:["Determines if this `Correspondence` defines a value for\nevery one of the given keys."]},$nm:"definesEvery"}},$at:{keys:{$t:{$tp:[{$mt:"tp",$nm:"Key"}],$pk:".",$nm:"Category"},$mt:"g",$an:{shared:[],default:[],see:["Correspondence.defines"],doc:["The `Category` of all keys for which a value is defined\nby this `Correspondence`."]},$nm:"keys",$o:{keys$y1pibl:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$nm:"Key"}],$pk:".",$nm:"Category"}],$mt:"o",$m:{contains:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Key"},$mt:"prm",$nm:"key"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"contains"}},$nm:"keys"}}}},$nm:"Correspondence"},apply:{$t:{$nm:"Return"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Return"},{$mt:"tp",$nm:"Args"}],$pk:".",$nm:"Callable"},$mt:"prm",$nm:"f"},{$t:{$nm:"Args"},$mt:"prm",$nm:"args"}]],$mt:"m",$tp:[{$nm:"Return"},{$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"Anything"}],$pk:".",$nm:"Sequential"}],$nm:"Args"}],$an:{shared:[],see:["unflatten"],doc:["Applies an arbitrary `Callable` to the specified arguments. The arguments\nare taken packaged in a tuple whose type is compatible with the `Callable`\narguments tuple.\n\nIn practice, this behaves as if the `Callable` were called with the elements\nof the tuple used as its arguments."]},$nm:"apply"},count:{$t:{$pk:".",$nm:"Integer"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Boolean"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"values"}]],$mt:"m",$an:{shared:[],doc:["A count of the number of `true` items in the given values."]},$nm:"count"},byItem:{$t:{$pk:".",$nm:"Comparison"},$ps:[[{$t:{$pk:".",$nm:"Comparison"},$ps:[[{$t:{$nm:"Item"},$mt:"prm",$nm:"x"},{$t:{$nm:"Item"},$mt:"prm",$nm:"y"}]],$mt:"prm",$pt:"f",$nm:"comparing"}],[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Object"},{$mt:"tp",$nm:"Item"}],$pk:".",$nm:"Entry"},$mt:"prm",$nm:"x"},{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Object"},{$mt:"tp",$nm:"Item"}],$pk:".",$nm:"Entry"},$mt:"prm",$nm:"y"}]],$mt:"m",$tp:[{$sts:[{$pk:".",$nm:"Object"}],$nm:"Item"}],$an:{shared:[],see:["byKey"],doc:["A comparator for [[Entry]]s which compares their items \naccording to the given [[comparing]] function.\n\n    value sortedEntries = map.sort(byItem(byIncreasing(String.lowercased)));"]},$nm:"byItem"},FinalAnnotation:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"FinalAnnotation"},{$mt:"tp",$pk:"ceylon.language.meta.declaration",$nm:"ClassDeclaration"}],$pk:".",$nm:"OptionalAnnotation"}],$mt:"c",$an:{annotation:[],shared:[],final:[],doc:["The annotation class for [[final]]."]},$annot:1,$nm:"FinalAnnotation"},by:{$t:{$pk:".",$nm:"AuthorsAnnotation"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"String"}],$pk:".",$nm:"Sequential"},$mt:"prm",seq:1,$an:{doc:["The authors, in Markdown syntax, of the annotated element"]},$nm:"authors"}]],$mt:"m",$an:{annotation:[],shared:[],doc:["Annotation to specify API authors."]},$annot:1,$nm:"by"},every:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Boolean"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"values"}]],$mt:"m",$an:{shared:[],see:["any"],doc:["Determines if every one of the given boolean values \n(usually a comprehension) is `true`."]},$nm:"every"},concatenate:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"},$ps:[[{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"}],$pk:".",$nm:"Sequential"},$mt:"prm",seq:1,$an:{doc:["The iterable objects to concatenate."]},$nm:"iterables"}]],$mt:"m",$tp:[{$nm:"Element"}],$an:{shared:[],see:["expand"],doc:["Given a list of iterable objects, return a new sequence \nof all elements of the all given objects. If there are\nno arguments, or if none of the arguments contains any\nelements, return the empty sequence."]},$nm:"concatenate"},"$pkg-shared":1,Tuple:{super:{$pk:".",$nm:"Object"},$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequence"}],$ps:[{$t:{$nm:"First"},$hdn:1,$mt:"prm",$an:{shared:[],native:[],doc:["The first element of this tuple. (The head of the \nlinked list.)"],actual:[]},$nm:"first"},{$t:{$nm:"Rest"},$hdn:1,$mt:"prm",$an:{shared:[],native:[],doc:["A tuple with the elements of this tuple, except for the\nfirst element. (The tail of the linked list.)"],actual:[]},$nm:"rest"}],$mt:"c",$tp:[{variance:"out",$nm:"Element"},{$sts:[{$nm:"Element"}],variance:"out",$nm:"First"},{$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"}],$def:{$pk:".",$nm:"Empty"},variance:"out",$nm:"Rest"}],$an:{shared:[],final:[],native:[],doc:["A _tuple_ is a typed linked list. Each instance of \n`Tuple` represents the value and type of a single link.\nThe attributes `first` and `rest` allow us to retrieve a \nvalue from the list without losing its static type \ninformation.\n\n    value point = Tuple(0.0, Tuple(0.0, Tuple(\"origin\")));\n    Float x = point.first;\n    Float y = point.rest.first;\n    String label = point.rest.rest.first;\n\nUsually, we abbreviate code involving tuples.\n\n    [Float,Float,String] point = [0.0, 0.0, \"origin\"];\n    Float x = point[0];\n    Float y = point[1];\n    String label = point[2];\n\nA list of types enclosed in brackets is an abbreviated \ntuple type. An instance of `Tuple` may be constructed by \nsurrounding a value list in brackets:\n\n    [String,String] words = [\"hello\", \"world\"];\n\nThe index operator with a literal integer argument is a \nshortcut for a chain of evaluations of `rest` and \n`first`. For example, `point[1]` means `point.rest.first`.\n\nA _terminated_ tuple type is a tuple where the type of\nthe last link in the chain is `Empty`. An _unterminated_ \ntuple type is a tuple where the type of the last link\nin the chain is `Sequence` or `Sequential`. Thus, a \nterminated tuple type has a length that is known\nstatically. For an unterminated tuple type only a lower\nbound on its length is known statically.\n\nHere, `point` is an unterminated tuple:\n\n    String[] labels = ... ;\n    [Float,Float,String*] point = [0.0, 0.0, *labels];\n    Float x = point[0];\n    Float y = point[1];\n    String? firstLabel = point[2];\n    String[] allLabels = point[2...];"],by:["Gavin"]},$m:{clone:{$t:{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$nm:"First"},{$mt:"tp",$nm:"Rest"}],$pk:".",$nm:"Tuple"},$mt:"m",$an:{shared:[],native:[],doc:["This tuple."],actual:[]},$nm:"clone"},iterator:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"},$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"iterator",$o:{iterator$qzn7eb:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"}],$mt:"o",$m:{next:{$t:{comp:"u",$ts:[{$nm:"Element"},{$pk:".",$nm:"Finished"}]},$mt:"m",$an:{shared:[],actual:[]},$nm:"next"}},$at:{current$4fo7z:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"},var:1,$mt:"a",$an:{shared:[],actual:[],variable:[]},$nm:"current"}},$nm:"iterator"}}},spanTo:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"to"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"spanTo"},segment:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"length"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"segment"},contains:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"element"}]],$mt:"m",$an:{shared:[],native:[],doc:["Determine if the given value is an element of this\ntuple."],actual:[]},$nm:"contains"},withLeading:{$t:{$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Element"},{$nm:"Other"}]},{$mt:"tp",$nm:"Other"},{$mt:"tp",$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$nm:"First"},{$mt:"tp",$nm:"Rest"}],$pk:".",$nm:"Tuple"}],$pk:".",$nm:"Tuple"},$ps:[[{$t:{$nm:"Other"},$mt:"prm",$an:{doc:["The first element of the resulting tuple."]},$nm:"element"}]],$mt:"m",$tp:[{$nm:"Other"}],$an:{shared:[],native:[],doc:["Returns a new tuple that starts with the specified\nelement, followed by the elements of this tuple."],actual:[]},$nm:"withLeading"},spanFrom:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"spanFrom"},getFromFirst:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$nm:"Element"}]},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"getFromFirst"},span:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"end"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"span"}},$at:{lastIndex:{$t:{$pk:".",$nm:"Integer"},$mt:"g",$an:{shared:[],native:[],actual:[]},$nm:"lastIndex"},last:{$t:{$nm:"Element"},$mt:"g",$an:{shared:[],native:[],doc:["The last element of this tuple."],actual:[]},$nm:"last"},reversed:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequence"},$mt:"g",$an:{shared:[],actual:[]},$nm:"reversed"},rest:{$t:{$nm:"Rest"},$mt:"a",$an:{shared:[],native:[],doc:["A tuple with the elements of this tuple, except for the\nfirst element. (The tail of the linked list.)"],actual:[]},$nm:"rest"},first:{$t:{$nm:"First"},$mt:"a",$an:{shared:[],native:[],doc:["The first element of this tuple. (The head of the \nlinked list.)"],actual:[]},$nm:"first"},size:{$t:{$pk:".",$nm:"Integer"},$mt:"g",$an:{shared:[],actual:[]},$nm:"size"}},$nm:"Tuple"},lessThan:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"val"}],[{$t:{$nm:"Element"},$mt:"prm",$nm:"element"}]],$mt:"m",$tp:[{$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Comparable"}],$nm:"Element"}],$an:{shared:[],deprecated:["use [[Comparable.largerThan]]"],doc:["Returns a partial function that will compare an element\nto any other element and returns true if the compared\nelement is less than its element.\nThis is useful in conjunction with methods that receive\na predicate function."]},$nm:"lessThan"},maxRadix:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$nm:"maxRadix"},identityHash:{$t:{$pk:".",$nm:"Integer"},$ps:[[{$t:{$pk:".",$nm:"Identifiable"},$mt:"prm",$nm:"x"}]],$mt:"m",$an:{shared:[],native:[],see:["identical"],doc:["Return the system-defined identity hash value of the \ngiven value. This hash value is consistent with \nidentity equality."]},$nm:"identityHash"},uncurry:{$t:{$tp:[{$mt:"tp",$nm:"Return"},{$mt:"tp",$tp:[{$mt:"tp",$nm:"Argument"},{$mt:"tp",$nm:"First"},{$mt:"tp",$nm:"Rest"}],$pk:".",$nm:"Tuple"}],$pk:".",$nm:"Callable"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Return"},{$mt:"tp",$nm:"Rest"}],$pk:".",$nm:"Callable"},$ps:[[{$t:{$nm:"First"},$mt:"prm",$nm:"first"}]],$mt:"prm",$pt:"f",$nm:"f"}]],$mt:"m",$tp:[{$nm:"Return"},{$nm:"Argument"},{$sts:[{$nm:"Argument"}],$nm:"First"},{$sts:[{$tp:[{$mt:"tp",$nm:"Argument"}],$pk:".",$nm:"Sequential"}],$nm:"Rest"}],$an:{shared:[],see:["curry","compose"],doc:["Uncurries a function, returning a function with \none parameter list, given a function with two\nparameter lists, where the first parameter list\nhas exactly one parameter. The parameter list\nof the returned function has the parameter of\nthe first parameter list of the original\nfunction, followed by all parameters of the\nsecond parameter list.\n\nThat is, if `fun` has type `W(Y,Z)(X)` then \n`uncurry(fun)` has type `W(X,Y,Z)`."]},$nm:"uncurry"},any:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Boolean"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"values"}]],$mt:"m",$an:{shared:[],see:["every"],doc:["Determines if any one of the given boolean values \n(usually a comprehension) is `true`."]},$nm:"any"},optional:{$t:{$pk:".",$nm:"OptionalImportAnnotation"},$mt:"m",$an:{annotation:[],shared:[],doc:["Annotation to specify that a module can be executed even if \nthe annotated dependency is not available."]},$annot:1,$nm:"optional"},Summable:{of:[{$nm:"Other"}],$mt:"i",$tp:[{$sts:[{$tp:[{$mt:"tp",$nm:"Other"}],$pk:".",$nm:"Summable"}],$nm:"Other"}],$an:{shared:[],see:["String","Numeric"],doc:["Abstraction of types which support a binary addition\noperator `x + y`. For [[numeric types|Numeric]], this is\njust familiar numeric addition. For [[String]], it is\nstring concatenation.\n\n    Integer next = current + 1;\n    String helloWorld = \"hello\" + \" \" + \"world\";\n\nA concrete class that implements this interface should be \na mathematical _semigroup_. That is, the addition \noperation should be associative, satisfying:\n\n- `(x+y)+z == x+(y+z)`\n\nA `Summable` type might be a _monoid_, that is, a \nsemigroup with an additive identity element, usually \ndenoted `0`, but this is not required. For example:\n\n- `String` is a monoid with identity element `\"\"`, \n- `Float` is a monoid with identity element `0.0`, and \n- `Integer` is a monoid with identity element `0`.\n\nFor any monoid, the addition operation must satisfy:\n\n- `x + 0 == x`"],by:["Gavin"]},$m:{plus:{$t:{$nm:"Other"},$ps:[[{$t:{$nm:"Other"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],formal:[],doc:["The result of adding the given value to this value. \nThis operation should never perform any kind of \nmutation upon either the receiving value or the \nargument value."]},$nm:"plus"}},$nm:"Summable",$st:"Other"},expand:{$t:{$tp:[{$mt:"tp",$nm:"Element"},{comp:"u",$mt:"tp",$ts:[{$nm:"OuterAbsent"},{$nm:"InnerAbsent"}]}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$nm:"InnerAbsent"}],$pk:".",$nm:"Iterable"},{$mt:"tp",$nm:"OuterAbsent"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"iterables"}]],$mt:"m",$tp:[{$nm:"Element"},{$sts:[{$pk:".",$nm:"Null"}],$nm:"OuterAbsent"},{$sts:[{$pk:".",$nm:"Null"}],$nm:"InnerAbsent"}],$an:{shared:[],see:["concatenate"],doc:["Given an iterable object whose elements are also iterable,\nreturn a new stream with all the elements of the nested\niterables. If there are no arguments, or if none of the \narguments contains any elements, return an empty iterable."]},$nm:"expand"},Set:{$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Collection"}],$mt:"i",$tp:[{$sts:[{$pk:".",$nm:"Object"}],variance:"out",$nm:"Element"}],$an:{shared:[],doc:["A collection of unique elements.\n\nA `Set` is a [[Collection]] of its elements.\n\nSets may be the subject of the binary union, intersection, \nand complement operators `|`, `&`, and `~`.\n\n    value kids = girls|boys; \n\nElements are compared for equality using [[Object.equals]] \nor [[Comparable.compare]]. An element may occur at most \nonce in a set."]},$m:{complement:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Set"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Other"}],$pk:".",$nm:"Set"},$mt:"prm",$nm:"set"}]],$mt:"m",$tp:[{$sts:[{$pk:".",$nm:"Object"}],$nm:"Other"}],$an:{shared:[],formal:[],doc:["Returns a new `Set` containing all the elements in this \nset that are not contained in the given `Set`."]},$nm:"complement"},subset:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Object"}],$pk:".",$nm:"Set"},$mt:"prm",$nm:"set"}]],$mt:"m",$an:{shared:[],default:[],doc:["Determines if this set is a subset of the given `Set`, \nthat is, if the given set contains all of the elements \nin this set."]},$nm:"subset"},clone:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Set"},$mt:"m",$an:{shared:[],formal:[],actual:[]},$nm:"clone"},intersection:{$t:{$tp:[{comp:"i",$mt:"tp",$ts:[{$nm:"Element"},{$nm:"Other"}]}],$pk:".",$nm:"Set"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Other"}],$pk:".",$nm:"Set"},$mt:"prm",$nm:"set"}]],$mt:"m",$tp:[{$sts:[{$pk:".",$nm:"Object"}],$nm:"Other"}],$an:{shared:[],formal:[],doc:["Returns a new `Set` containing only the elements that \nare present in both this set and the given `Set`."]},$nm:"intersection"},exclusiveUnion:{$t:{$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Element"},{$nm:"Other"}]}],$pk:".",$nm:"Set"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Other"}],$pk:".",$nm:"Set"},$mt:"prm",$nm:"set"}]],$mt:"m",$tp:[{$sts:[{$pk:".",$nm:"Object"}],$nm:"Other"}],$an:{shared:[],formal:[],doc:["Returns a new `Set` containing only the elements \ncontained in either this set or the given `Set`, but no \nelement contained in both sets."]},$nm:"exclusiveUnion"},superset:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Object"}],$pk:".",$nm:"Set"},$mt:"prm",$nm:"set"}]],$mt:"m",$an:{shared:[],default:[],doc:["Determines if this set is a superset of the given \n`Set`, that is, if this set contains all of the \nelements in the given set."]},$nm:"superset"},equals:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"that"}]],$mt:"m",$an:{shared:[],default:[],doc:["Two `Set`s are considered equal if they have the same \nsize and if every element of the first set is also an \nelement of the second set, as determined by \n[[contains]]. Equivalently, a set is equal to a second \nset if it is both a subset and a superset of the second\nset."],actual:[]},$nm:"equals"},union:{$t:{$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Element"},{$nm:"Other"}]}],$pk:".",$nm:"Set"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Other"}],$pk:".",$nm:"Set"},$mt:"prm",$nm:"set"}]],$mt:"m",$tp:[{$sts:[{$pk:".",$nm:"Object"}],$nm:"Other"}],$an:{shared:[],formal:[],doc:["Returns a new `Set` containing all the elements of this \nset and all the elements of the given `Set`."]},$nm:"union"},contains:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"element"}]],$mt:"m",$an:{shared:[],default:[],doc:["The fundamental operation for `Set`s. Determines if the\ngiven value belongs to this set."],actual:[]},$nm:"contains"}},$at:{hash:{$t:{$pk:".",$nm:"Integer"},$mt:"g",$an:{shared:[],default:[],actual:[]},$nm:"hash"}},$nm:"Set"},Sequence:{$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"},{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Iterable"}],$mt:"i",$tp:[{variance:"out",$nm:"Element"}],$an:{shared:[],see:["Empty"],doc:["A nonempty, immutable sequence of values. The type \n`Sequence<Element>` may be abbreviated `[Element+]`.\n\nGiven a possibly-empty sequence of type `[Element*]`, the \n`if (nonempty ...)` construct, or, alternatively, \n`assert (nonempty ...)`, may be used to narrow to a \nsequence type to a nonempty sequence type:\n\n    [Integer*] nums = ... ;\n    if (nonempty nums) {\n        Integer first = nums.first;\n        Integer max = max(nums);\n        [Integer+] squares = nums.collect((Integer i) => i**2));\n        [Integer+] sorted = nums.sort(byIncreasing((Integer i) => i));\n    }\n\nOperations like `first`, `max()`, `collect()`, and `sort()`, \nwhich polymorphically produce a nonempty or non-null output \nwhen given a nonempty input are called \n_emptiness-preserving_."],by:["Gavin"]},$m:{clone:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequence"},$mt:"m",$an:{shared:[],default:[],doc:["This nonempty sequence."],actual:[]},$nm:"clone"},following:{$t:{$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Other"},{comp:"u",$ts:[{$nm:"Element"},{$pk:".",$nm:"Nothing"}]}]},{$mt:"tp",$nm:"Other"},{$mt:"tp",$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequence"}],$pk:".",$nm:"Tuple"},$ps:[[{$t:{$nm:"Other"},$mt:"prm",$nm:"head"}]],$mt:"m",$tp:[{$nm:"Other"}],$an:{shared:[],default:[],actual:[]},$nm:"following"},sort:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequence"},$ps:[[{$t:{$pk:".",$nm:"Comparison"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"x"},{$t:{$nm:"Element"},$mt:"prm",$nm:"y"}]],$mt:"prm",$pt:"f",$an:{doc:["The function comparing pairs of elements."]},$nm:"comparing"}]],$mt:"m",$an:{shared:[],default:[],doc:["A nonempty sequence containing the elements of this\ncontainer, sorted according to a function imposing a \npartial order upon the elements."],actual:[]},$m:{comparing$ky9561:{$t:{$pk:".",$nm:"Comparison"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"x"},{$t:{$nm:"Element"},$mt:"prm",$nm:"y"}]],$mt:"m",$an:{doc:["The function comparing pairs of elements."]},$nm:"comparing"}},$nm:"sort"},shorterThan:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"length"}]],$mt:"m",$an:{shared:[],default:[],actual:[]},$nm:"shorterThan"},sequence:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequence"},$mt:"m",$an:{shared:[],default:[],doc:["This nonempty sequence."],actual:[]},$nm:"sequence"},longerThan:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"length"}]],$mt:"m",$an:{shared:[],default:[],actual:[]},$nm:"longerThan"},repeat:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"times"}]],$mt:"m",$an:{shared:[],default:[],actual:[]},$nm:"repeat"},findLast:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$nm:"Element"}]},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"elem"}]],$mt:"prm",$pt:"f",$nm:"selecting"}]],$mt:"m",$an:{shared:[],default:[],actual:[]},$nm:"findLast"},collect:{$t:{$tp:[{$mt:"tp",$nm:"Result"}],$pk:".",$nm:"Sequence"},$ps:[[{$t:{$nm:"Result"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$an:{doc:["The transformation applied to the elements."]},$nm:"collecting"}]],$mt:"m",$tp:[{$nm:"Result"}],$an:{shared:[],default:[],doc:["A nonempty sequence containing the results of applying \nthe given mapping to the elements of this sequence."],actual:[]},$m:{collecting$hcvnyd:{$t:{$nm:"Result"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"element"}]],$mt:"m",$an:{doc:["The transformation applied to the elements."]},$nm:"collecting"}},$nm:"collect"}},$at:{lastIndex:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],formal:[],see:["Sequence.size"],doc:["The index of the last element of the sequence."],actual:[]},$nm:"lastIndex"},last:{$t:{$nm:"Element"},$mt:"a",$an:{shared:[],formal:[],doc:["The last element of the sequence, that is, the element\nwith index `sequence.lastIndex`."],actual:[]},$nm:"last"},keys:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Integer"}],$pk:".",$nm:"Sequence"},$mt:"g",$an:{shared:[],default:[],doc:["A nonempty sequence containing all indexes of this \nsequence."],actual:[]},$nm:"keys"},string:{$t:{$pk:".",$nm:"String"},$mt:"g",$an:{shared:[],default:[],actual:[]},$nm:"string"},empty:{$t:{$pk:".",$nm:"Boolean"},$mt:"g",$an:{shared:[],doc:["Returns `false`, since every `Sequence` contains at\nleast one element."],actual:[]},$nm:"empty"},rest:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"},$mt:"a",$an:{shared:[],formal:[],doc:["The rest of the sequence, without the first element."],actual:[]},$nm:"rest"},reversed:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequence"},$mt:"a",$an:{shared:[],formal:[],doc:["Reverse this sequence, returning a new nonempty\nsequence."],actual:[]},$nm:"reversed"},first:{$t:{$nm:"Element"},$mt:"a",$an:{shared:[],formal:[],doc:["The first element of the sequence, that is, the element\nwith index `0`."],actual:[]},$nm:"first"}},$nm:"Sequence"},Scalable:{of:[{$nm:"Value"}],$mt:"i",$tp:[{$sts:[{$tp:[{$mt:"tp",$nm:"Scale"}],$pk:".",$nm:"Numeric"}],variance:"in",$nm:"Scale"},{$sts:[{$tp:[{$mt:"tp",$nm:"Scale"},{$mt:"tp",$nm:"Value"}],$pk:".",$nm:"Scalable"}],variance:"out",$nm:"Value"}],$an:{shared:[],doc:["Abstract supertype of types that support scaling by a \nnumeric factor. Examples of such types include vectors and \nmatrices. The _scale_ operator `**` accepts a scale factor\nas its first operand, and an instance of `Scalable` as its\nsecond operand.\n\n    Vector scaled = 2.0 ** Vector(x,y,z);\n\nConcrete classes which implement this interface should\nsatisfy:\n\n- `x == 1**x`\n- `a ** (b ** x) == a*b ** x`\n\nwhere `1` denotes the multiplicative identity of the \nnumeric scaling type.\n\nConcrete classes which implement this interface are\nencouraged to also satisfy [[Invertable]], in which case, \nthe following identity should be satisfied:\n\n- `-x == -1**x`\n\nConcrete classes which implement this interface and which\nalso satisfy [[Summable]] should satisfy:\n\n- `x+x == 2**x`\n- `a ** (x+y) == a**x + a**y`\n\nThe [[scaling type|Scale]] must be a [[numeric|Numeric]]\ntype, but is not required to be [[Number]], since a complex\nnumber scaling type should be allowed."],by:["Gavin"]},$m:{scale:{$t:{$nm:"Value"},$ps:[[{$t:{$nm:"Scale"},$mt:"prm",$nm:"scalar"}]],$mt:"m",$an:{shared:[],formal:[],doc:["Scale this value by the given scale factor."]},$nm:"scale"}},$nm:"Scalable",$st:"Value"},Annotated:{$mt:"i",$an:{shared:[],see:["Annotation"],doc:["A program element that can\nbe annotated."]},$nm:"Annotated"},StringBuilder:{super:{$pk:".",$nm:"Basic"},$mt:"c",$an:{shared:[],doc:["Builder utility for constructing [[strings|String]] by \nincrementally appending strings or characters"]},$m:{append:{$t:{$pk:".",$nm:"StringBuilder"},$ps:[[{$t:{$pk:".",$nm:"String"},$mt:"prm",$nm:"string"}]],$mt:"m",$an:{shared:[],doc:["Append the characters in the given [[string]]."]},$nm:"append"},appendSpace:{$t:{$pk:".",$nm:"StringBuilder"},$mt:"m",$an:{shared:[],doc:["Append a space character."]},$nm:"appendSpace"},deleteInitial:{$t:{$pk:".",$nm:"StringBuilder"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"length"}]],$mt:"m",$an:{shared:[],doc:["Deletes the specified [[number of characters|length]] \nfrom the start of the string. If `length` is \nnonpositive, nothing is deleted."]},$nm:"deleteInitial"},delete:{$t:{$pk:".",$nm:"StringBuilder"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$an:{variable:[]},$nm:"index"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$def:1,$nm:"length"}]],$mt:"m",$an:{shared:[],doc:["Deletes the specified [[number of characters|length]] \nfrom the current content, starting at the specified \n[[index]]. If the `index` is beyond the end of the \ncurrent content, nothing is deleted. If the number of \ncharacters to delete is greater than the available \ncharacters from the given `index`, the content is \ntruncated at the given `index`. If `length` is \nnonpositive, nothing is deleted."]},$nm:"delete"},reset:{$t:{$pk:".",$nm:"StringBuilder"},$mt:"m",$an:{shared:[],doc:["Remove all content and return to initial state."]},$nm:"reset"},insertCharacter:{$t:{$pk:".",$nm:"StringBuilder"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"},{$t:{$pk:".",$nm:"Character"},$mt:"prm",$nm:"character"}]],$mt:"m",$an:{shared:[],doc:["Insert a [[character]] at the specified [[index]]. If \nthe `index` is beyond the end of the current string, \nthe new content is simply appended to the current \ncontent. If the `index` is a negative number, the new \ncontent is inserted at index 0."]},$nm:"insertCharacter"},getStorage$qrnjf3:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Character"}],$pk:".",$nm:"Array"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"extra"}]],$mt:"m",$an:{doc:["Returns the storage array ready for storing [[extra]] more elements.\nReallocates and copies existing entries if needed."]},$nm:"getStorage"},appendAll:{$t:{$pk:".",$nm:"StringBuilder"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"String"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"strings"}]],$mt:"m",$an:{shared:[],doc:["Append the characters in the given [[strings]]."]},$nm:"appendAll"},insert:{$t:{$pk:".",$nm:"StringBuilder"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"},{$t:{$pk:".",$nm:"String"},$mt:"prm",$nm:"string"}]],$mt:"m",$an:{shared:[],doc:["Insert a [[string]] at the specified [[index]]. If the \n`index` is beyond the end of the current string, the \nnew content is simply appended to the current content. \nIf the `index` is a negative number, the new content is\ninserted at index 0."]},$nm:"insert"},appendNewline:{$t:{$pk:".",$nm:"StringBuilder"},$mt:"m",$an:{shared:[],doc:["Append a newline character."]},$nm:"appendNewline"},newSize$qgycph:{$t:{$pk:".",$nm:"Integer"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"existingSize"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"extra"}]],$mt:"m",$an:{doc:["Resize policy"]},$nm:"newSize"},deleteTerminal:{$t:{$pk:".",$nm:"StringBuilder"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"length"}]],$mt:"m",$an:{shared:[],doc:["Deletes the specified [[number of characters|length]] \nfrom the end of the string. If `length` is nonpositive, \nnothing is deleted."]},$nm:"deleteTerminal"},appendCharacter:{$t:{$pk:".",$nm:"StringBuilder"},$ps:[[{$t:{$pk:".",$nm:"Character"},$mt:"prm",$nm:"character"}]],$mt:"m",$an:{shared:[],doc:["Append the given [[character]]."]},$nm:"appendCharacter"}},$at:{length$bireuw:{$t:{$pk:".",$nm:"Integer"},var:1,$mt:"a",$an:{shared:[],doc:["The number of items in [[array]] which have actually been appended."],actual:[],variable:[]},$nm:"length"},string:{$t:{$pk:".",$nm:"String"},$mt:"g",$an:{shared:[],doc:["The resulting string. If no characters have been\nappended, the empty string."],actual:[]},$nm:"string"},array$b7xzb7:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Character"}],$pk:".",$nm:"Array"},var:1,$mt:"a",$an:{shared:[],doc:["The storage"],actual:[],variable:[]},$nm:"array"},size:{$t:{$pk:".",$nm:"Integer"},$mt:"g",$an:{shared:[],doc:["Returns the length of the current content, that is,\nthe [[size|String.size]] of the produced [[string]]."]},$nm:"size"}},$nm:"StringBuilder"},emptyOrSingleton:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Empty"},{$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Element"},{$pk:".",$nm:"Nothing"}]},{$mt:"tp",$nm:"Element"},{$mt:"tp",$pk:".",$nm:"Empty"}],$pk:".",$nm:"Tuple"}]},$ps:[[{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$nm:"Element"}]},$mt:"prm",$nm:"element"}]],$mt:"m",$tp:[{$sts:[{$pk:".",$nm:"Object"}],$nm:"Element"}],$an:{shared:[],see:["Tuple","Empty"],doc:["A singleton `Tuple` with the given element if the \ngiven element is non-null, or `Empty` otherwise ."]},$nm:"emptyOrSingleton"},shared:{$t:{$pk:".",$nm:"SharedAnnotation"},$mt:"m",$an:{annotation:[],shared:[],doc:["Annotation to mark a type or member as shared. A `shared` \nmember is visible outside the block of code in which it is \ndeclared."]},$annot:1,$nm:"shared"},TagsAnnotation:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"TagsAnnotation"},{$mt:"tp",$pk:".",$nm:"Annotated"}],$pk:".",$nm:"OptionalAnnotation"}],$ps:[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"String"}],$pk:".",$nm:"Sequential"},$mt:"prm",seq:1,$an:{shared:[],doc:["The tags, in plain text."]},$nm:"tags"}],$mt:"c",$an:{annotation:[],shared:[],final:[],doc:["The annotation class for [[tagged]]."]},$annot:1,$at:{tags:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"String"}],$pk:".",$nm:"Sequential"},$mt:"a",$an:{shared:[],doc:["The tags, in plain text."]},$nm:"tags"}},$nm:"TagsAnnotation"},Binary:{of:[{$nm:"Other"}],$mt:"i",$tp:[{$sts:[{$tp:[{$mt:"tp",$nm:"Other"}],$pk:".",$nm:"Binary"}],$nm:"Other"}],$an:{shared:[],see:["Integer"],doc:["Abstraction of types that are conceptually a sequence of \nbits, and may be the subject of bitwise operations. A bit \nis a [[Boolean]] value. Bits are indexed from right to \nleft."],by:["Stef"]},$m:{clear:{$t:{$nm:"Other"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],default:[],doc:["Returns an instance with the given bit set to 0 if \n`0 <= index < size`, otherwise returns a value with the \nsame bits as this value."]},$nm:"clear"},xor:{$t:{$nm:"Other"},$ps:[[{$t:{$nm:"Other"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],formal:[],doc:["Performs a logical exclusive OR operation."]},$nm:"xor"},get:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],formal:[],doc:["Retrieves a given bit from this bit sequence if \n`0 <= index < size`, otherwise returns false."]},$nm:"get"},leftLogicalShift:{$t:{$nm:"Other"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"shift"}]],$mt:"m",$an:{shared:[],formal:[],doc:["Performs a left logical shift. Sign is not preserved. \nPadded with zeros."]},$nm:"leftLogicalShift"},set:{$t:{$nm:"Other"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"},{$t:{$pk:".",$nm:"Boolean"},$mt:"prm",$def:1,$nm:"bit"}]],$mt:"m",$an:{shared:[],formal:[],doc:["Returns an instance with the given bit set to the given \nvalue if `0 <= index < size`, otherwise returns a value \nwith the same bits as this value."]},$nm:"set"},or:{$t:{$nm:"Other"},$ps:[[{$t:{$nm:"Other"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],formal:[],doc:["Performs a logical inclusive OR operation."]},$nm:"or"},rightArithmeticShift:{$t:{$nm:"Other"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"shift"}]],$mt:"m",$an:{shared:[],formal:[],doc:["Performs a right arithmetic shift. Sign is preserved. \nPadded with zeros."]},$nm:"rightArithmeticShift"},rightLogicalShift:{$t:{$nm:"Other"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"shift"}]],$mt:"m",$an:{shared:[],formal:[],doc:["Performs a right logical shift. Sign is not preserved. \nPadded with zeros."]},$nm:"rightLogicalShift"},flip:{$t:{$nm:"Other"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],formal:[],doc:["Returns an instance with the given bit flipped to its \nopposite value if `0 <= index < size`, otherwise \nreturns a value with the same bits as this value."]},$nm:"flip"},and:{$t:{$nm:"Other"},$ps:[[{$t:{$nm:"Other"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],formal:[],doc:["Performs a logical AND operation."]},$nm:"and"}},$at:{not:{$t:{$nm:"Other"},$mt:"a",$an:{shared:[],formal:[],doc:["The binary complement of this sequence of bits."]},$nm:"not"}},$nm:"Binary",$st:"Other"},commaList:{$t:{$pk:".",$nm:"String"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Anything"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"elements"}]],$mt:"m",$nm:"commaList"},Number:{of:[{$nm:"Other"}],$sts:[{$tp:[{$mt:"tp",$nm:"Other"}],$pk:".",$nm:"Numeric"},{$tp:[{$mt:"tp",$nm:"Other"}],$pk:".",$nm:"Comparable"}],$mt:"i",$tp:[{$sts:[{$tp:[{$mt:"tp",$nm:"Other"}],$pk:".",$nm:"Number"}],$nm:"Other"}],$an:{shared:[],see:["Integer","Float"],doc:["Abstraction of [[numeric|Numeric]] types with a natural \n[[total order|Comparable]], including the built-in numeric \ntypes [[Integer]] and [[Float]].\n\nA `Number` has a well-defined [[magnitude]] together with a \n[[sign]] of type [[Integer]], defined for any instance `x`\nas follows:\n\n- if `x==0` then `x.sign==0` and `x.magnitude==0`,\n- if `x>0` then `x.sign==1` and `x.magnitude==x`, or\n- if `x<0` then `x.sign==-1` and `x.magnitude==-x`,\n\nwhere `0` is the additive identity of the numeric type.\n\nNot every value commonly considered to be a \"number\" is\na `Number`. For example, complex numbers aren't `Number`s\nsince they don't have a total order."],by:["Gavin"]},$m:{plusInteger:{$t:{$nm:"Other"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"integer"}]],$mt:"m",$an:{shared:[],formal:[],doc:["The result of adding this number to the given \n[[Integer]]."]},$nm:"plusInteger"},powerOfInteger:{$t:{$nm:"Other"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"integer"}]],$mt:"m",$an:{shared:[],formal:[],throws:["AssertionError","if the exponent is a negative power and this is \nan integral numeric type"],doc:["The result of raising this number to the given \nnon-negative [[Integer]] power. For a negative power,\nthe behavior is implementation-dependent."]},$nm:"powerOfInteger"},timesInteger:{$t:{$nm:"Other"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"integer"}]],$mt:"m",$an:{shared:[],formal:[],doc:["The result of multiplying this number by the given \n[[Integer]]."]},$nm:"timesInteger"}},$at:{sign:{$t:{$pk:".",$nm:"Integer"},$mt:"g",$an:{shared:[],default:[],doc:["The sign of this number: \n\n- `1` if the number is [[positive]], \n- `-1` if it is [[negative]], or \n- `0` if it is the additive identity.\n\nMust satisfy:\n\n    x.magnitude.timesInteger(x.sign) == x"]},$nm:"sign"},magnitude:{$t:{$nm:"Other"},$mt:"g",$an:{shared:[],default:[],doc:["The magnitude of this number, defined for any instance \n`x` as:\n\n- `-x` if `x<0`, or \n- `x` otherwise,\n\nwhere `0` is the additive identity. Hence:\n\n- `x.magnitude >= 0` for any `x`, and\n- `x.magnitude == 0` if and only if `x==0`."]},$nm:"magnitude"},wholePart:{$t:{$nm:"Other"},$mt:"a",$an:{shared:[],formal:[],doc:["The integral value of the number after truncation of \nthe fractional part. For [[Integral]] numeric types, \nthe integral value of a number is the number itself."]},$nm:"wholePart"},negative:{$t:{$pk:".",$nm:"Boolean"},$mt:"a",$an:{shared:[],formal:[],doc:["Determine if the number is strictly negative, that is, \nif `this<0`, where `0` is the additive identity."]},$nm:"negative"},positive:{$t:{$pk:".",$nm:"Boolean"},$mt:"a",$an:{shared:[],formal:[],doc:["Determine if the number is strictly positive, that is, \nif `this>0`, where `0` is the additive identity."]},$nm:"positive"},fractionalPart:{$t:{$nm:"Other"},$mt:"a",$an:{shared:[],formal:[],doc:["The fractional part of this number, after truncation of \nthe integral part. For [[Integral]] numeric types, the \nfractional part is always zero."]},$nm:"fractionalPart"}},$nm:"Number",$st:"Other"},Map:{$sts:[{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$nm:"Key"},{$mt:"tp",$nm:"Item"}],$pk:".",$nm:"Entry"}],$pk:".",$nm:"Collection"},{$tp:[{$mt:"tp",$pk:".",$nm:"Object"},{$mt:"tp",$nm:"Item"}],$pk:".",$nm:"Correspondence"}],$mt:"i",$tp:[{$sts:[{$pk:".",$nm:"Object"}],variance:"out",$nm:"Key"},{$sts:[{$pk:".",$nm:"Object"}],variance:"out",$nm:"Item"}],$an:{shared:[],see:["Entry","forKey","forItem","byItem","byKey"],doc:["Represents a collection which maps _keys_ to _items_,\nwhere a key can map to at most one item. Each such \nmapping may be represented by an [[Entry]].\n\nA `Map` is a [[Collection]] of its `Entry`s, and a \n[[Correspondence]] from keys to items.\n\nThe presence of an entry in a map may be tested using the \n`in` operator:\n\n    if (\"lang\"->\"en_AU\" in settings) { ... }\n\nThe entries of the map may be iterated using `for`:\n\n    for (key->item in settings) { ... }\n\nThe item for a key may be obtained using the item\noperator:\n\n    String lang = settings[\"lang\"] else \"en_US\";\n\nKeys are compared for equality using [[Object.equals]] or\n[[Comparable.compare]]. There may be at most one entry \nper key."]},$m:{clone:{$t:{$tp:[{$mt:"tp",$nm:"Key"},{$mt:"tp",$nm:"Item"}],$pk:".",$nm:"Map"},$mt:"m",$an:{shared:[],formal:[],actual:[]},$nm:"clone"},equals:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"that"}]],$mt:"m",$an:{shared:[],default:[],doc:["Two `Map`s are considered equal iff they have the same \n_entry sets_. The entry set of a `Map` is the set of \n`Entry`s belonging to the map. Therefore, the maps are \nequal iff they have same set of `keys`, and for every \nkey in the key set, the maps have equal items."],actual:[]},$nm:"equals"},contains:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"entry"}]],$mt:"m",$an:{shared:[],default:[],actual:[]},$nm:"contains"},mapItems:{$t:{$tp:[{$mt:"tp",$nm:"Key"},{$mt:"tp",$nm:"Result"}],$pk:".",$nm:"Map"},$ps:[[{$t:{$nm:"Result"},$ps:[[{$t:{$nm:"Key"},$mt:"prm",$nm:"key"},{$t:{$nm:"Item"},$mt:"prm",$nm:"item"}]],$mt:"prm",$pt:"f",$an:{doc:["The function that transforms a key\/item pair of\nthis map, producing the item of the resulting map."]},$nm:"mapping"}]],$mt:"m",$tp:[{$sts:[{$pk:".",$nm:"Object"}],$nm:"Result"}],$an:{shared:[],default:[],doc:["Produces a `Map` with the same keys as this map. For\nevery key, the item is the result of applying the given \ntransformation function to its associated item in this \nmap. This is a lazy operation, returning a view of this\nmap."]},$m:{mapping$g8tcs2:{$t:{$nm:"Result"},$ps:[[{$t:{$nm:"Key"},$mt:"prm",$nm:"key"},{$t:{$nm:"Item"},$mt:"prm",$nm:"item"}]],$mt:"m",$an:{doc:["The function that transforms a key\/item pair of\nthis map, producing the item of the resulting map."]},$nm:"mapping"}},$nm:"mapItems",$o:{map$bgn2xh:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$nm:"Key"},{$mt:"tp",$nm:"Result"}],$pk:".",$nm:"Map"}],$mt:"o",$m:{clone:{$t:{$tp:[{$mt:"tp",$nm:"Key"},{$mt:"tp",$nm:"Result"}],$pk:".",$nm:"Map"},$mt:"m",$an:{shared:[],actual:[]},$nm:"clone"},iterator:{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$nm:"Key"},{$mt:"tp",$nm:"Result"}],$pk:".",$nm:"Entry"}],$pk:".",$nm:"Iterator"},$mt:"m",$an:{shared:[],actual:[]},$nm:"iterator"},defines:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"key"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"defines"},get:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$nm:"Result"}]},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"key"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"get"},equals:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"that"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"equals"}},$at:{hash:{$t:{$pk:".",$nm:"Integer"},$mt:"g",$an:{shared:[],actual:[]},$nm:"hash"},size:{$t:{$pk:".",$nm:"Integer"},$mt:"g",$an:{shared:[],actual:[]},$nm:"size"}},$nm:"map"}}},filterKeys:{$t:{$tp:[{$mt:"tp",$nm:"Key"},{$mt:"tp",$nm:"Item"}],$pk:".",$nm:"Map"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Key"},$mt:"prm",$nm:"key"}]],$mt:"prm",$pt:"f",$nm:"filtering"}]],$mt:"m",$an:{shared:[],default:[],doc:["Produces a `Map` by applying a filtering function to \nthe keys of this map. This is a lazy operation, \nreturning a view of this map."]},$m:{filtering$c0mdle:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Key"},$mt:"prm",$nm:"key"}]],$mt:"m",$nm:"filtering"}},$nm:"filterKeys",$o:{map$9ho41f:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$nm:"Key"},{$mt:"tp",$nm:"Item"}],$pk:".",$nm:"Map"}],$mt:"o",$m:{clone:{$t:{$tp:[{$mt:"tp",$nm:"Key"},{$mt:"tp",$nm:"Item"}],$pk:".",$nm:"Map"},$mt:"m",$an:{shared:[],actual:[]},$nm:"clone"},iterator:{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$nm:"Key"},{$mt:"tp",$nm:"Item"}],$pk:".",$nm:"Entry"}],$pk:".",$nm:"Iterator"},$mt:"m",$an:{shared:[],actual:[]},$nm:"iterator"},defines:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"key"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"defines"},get:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$nm:"Item"}]},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"key"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"get"},equals:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"that"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"equals"}},$at:{hash:{$t:{$pk:".",$nm:"Integer"},$mt:"g",$an:{shared:[],actual:[]},$nm:"hash"}},$nm:"map"}}}},$at:{values:{$t:{$tp:[{$mt:"tp",$nm:"Item"}],$pk:".",$nm:"Collection"},$mt:"g",$an:{shared:[],default:[],doc:["A [[Collection]] containing the items stored in this \nmap. An element can be stored under more than one key \nin the map, and so it can occur more than once in the \nresulting collection."]},$nm:"values",$o:{values$fpbbw1:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$nm:"Item"}],$pk:".",$nm:"Collection"}],$mt:"o",$m:{clone:{$t:{$tp:[{$mt:"tp",$nm:"Item"}],$pk:".",$nm:"Collection"},$mt:"m",$an:{shared:[],actual:[]},$nm:"clone"},iterator:{$t:{$tp:[{$mt:"tp",$nm:"Item"}],$pk:".",$nm:"Iterator"},$mt:"m",$an:{shared:[],actual:[]},$nm:"iterator"},contains:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"item"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"contains"}},$at:{size:{$t:{$pk:".",$nm:"Integer"},$mt:"g",$an:{shared:[],actual:[]},$nm:"size"}},$nm:"values"}}},keys:{$t:{$tp:[{$mt:"tp",$nm:"Key"}],$pk:".",$nm:"Collection"},$mt:"g",$an:{shared:[],default:[],doc:["A [[Collection]] containing the keys of this map."],actual:[]},$nm:"keys",$o:{keys$8un6dp:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$nm:"Key"}],$pk:".",$nm:"Collection"}],$mt:"o",$m:{clone:{$t:{$tp:[{$mt:"tp",$nm:"Key"}],$pk:".",$nm:"Collection"},$mt:"m",$an:{shared:[],actual:[]},$nm:"clone"},iterator:{$t:{$tp:[{$mt:"tp",$nm:"Key"}],$pk:".",$nm:"Iterator"},$mt:"m",$an:{shared:[],actual:[]},$nm:"iterator"},contains:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"key"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"contains"}},$at:{size:{$t:{$pk:".",$nm:"Integer"},$mt:"g",$an:{shared:[],actual:[]},$nm:"size"}},$nm:"keys"}}},hash:{$t:{$pk:".",$nm:"Integer"},$mt:"g",$an:{shared:[],default:[],actual:[]},$nm:"hash"}},$nm:"Map"},Numeric:{of:[{$nm:"Other"}],$sts:[{$tp:[{$mt:"tp",$nm:"Other"}],$pk:".",$nm:"Invertable"}],$mt:"i",$tp:[{$sts:[{$tp:[{$mt:"tp",$nm:"Other"}],$pk:".",$nm:"Numeric"}],$nm:"Other"}],$an:{shared:[],see:["Number"],doc:["Abstraction of numeric types with the usual binary \noperations:\n\n- addition, `x + y`, \n- subtraction, `x - y`, \n- multiplication, `x * y`, and \n- division, `x \/ y`, along with \n- additive inverse `-x`.\n\nA concrete class which implements this interface should be\na mathematical _ring_. That is:\n\n- both addition, `+`, and multiplication, `*`, should be\n  associative and commutative,\n- there should be additive and multiplicative identities,\n  denoted `0` and `1` respectively, satisfying `x+0 == x`\n  and `x*1 == x`,\n- every instance `x` should have an additive inverse `-x`, \n  satisfying `x + -x == 0`, and\n- multiplication should distribute over addition, \n  satisfying `x*(y+z) == x*y + x*z`.\n\nIt is preferred, but not required, that the class be a\nmathematical _field_. That is, in addition to the above:\n\n- every instance `x` such that `x!=0` should have a \n  multiplicative inverse `1\/x`, satisfying `x * 1\/x == 1`. \n\nFor numeric types which are not fields, for example, \n[[Integer]], there is still a division operation, which is\nunderstood to produce a [[remainder|Integral.remainder]].\nThe division operation should satisfy:\n\n- `x*y \/ y == x`\n\nfor any instance `y` other than `0`.\n\nFor numeric types which _are_ fields, division never\nproduces a remainder, and division should additionally \nsatisfy:\n\n- `x\/y * y == x`\n\nfor any instance `y` other than `0`.\n\nSome numeric types, for example complex numbers, do not \nhave a [[total order|Comparable]]. Numeric types with a \ntotal order also satisfy [[Number]]."],by:["Gavin"]},$m:{times:{$t:{$nm:"Other"},$ps:[[{$t:{$nm:"Other"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],formal:[],doc:["The product of this number and the given number."]},$nm:"times"},divided:{$t:{$nm:"Other"},$ps:[[{$t:{$nm:"Other"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],formal:[],see:["Integral"],doc:["The quotient obtained by dividing this number by the \ngiven number. For integral numeric types, this \noperation results in a \n[[remainder|Integral.remainder]].\n\nWhen the given number is `0`, the additive identity,\nthe behavior depends on the numeric type:\n\n- For some numeric types, including [[Integer]], \n  division by `0` results in an exception.\n- For others, including [[Float]], it results in a \n  special value of the type, for example, [[infinity]]."]},$nm:"divided"}},$nm:"Numeric",$st:"Other"},throws:{$t:{$pk:".",$nm:"ThrownExceptionAnnotation"},$ps:[[{$t:{$pk:"ceylon.language.meta.declaration",$nm:"Declaration"},$mt:"prm",$an:{doc:["The [[Exception]] type that this thrown."]},$nm:"type"},{$t:{$pk:".",$nm:"String"},$mt:"prm",$def:1,$an:{doc:["A description, in Markdown syntax, of the circumstances \nthat cause this exception to be thrown."]},$nm:"when"}]],$mt:"m",$an:{annotation:[],shared:[],doc:["Annotation to mark a program element that throws an \nexception."]},$annot:1,$nm:"throws"},and:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Boolean"},{$mt:"tp",$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Value"},{$pk:".",$nm:"Nothing"}]},{$mt:"tp",$nm:"Value"},{$mt:"tp",$pk:".",$nm:"Empty"}],$pk:".",$nm:"Tuple"}],$pk:".",$nm:"Callable"},$mt:"prm",$an:{doc:["The first predicate function"]},$nm:"p"},{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Boolean"},{$mt:"tp",$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Value"},{$pk:".",$nm:"Nothing"}]},{$mt:"tp",$nm:"Value"},{$mt:"tp",$pk:".",$nm:"Empty"}],$pk:".",$nm:"Tuple"}],$pk:".",$nm:"Callable"},$mt:"prm",$an:{doc:["The second predicate function"]},$nm:"q"}],[{$t:{$nm:"Value"},$mt:"prm",$nm:"val"}]],$mt:"m",$tp:[{variance:"in",$nm:"Value"}],$an:{shared:[],doc:["Returns a function which is the logical conjunction of the \ngiven predicate functions."]},$nm:"and"},parseDigit:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Integer"}]},$ps:[[{$t:{$pk:".",$nm:"Character"},$mt:"prm",$nm:"digit"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"radix"}]],$mt:"m",$nm:"parseDigit"},formal:{$t:{$pk:".",$nm:"FormalAnnotation"},$mt:"m",$an:{annotation:[],shared:[],doc:["Annotation to mark a member whose implementation must be \nprovided by subtypes."]},$annot:1,$nm:"formal"},byDecreasing:{$t:{$pk:".",$nm:"Comparison"},$ps:[[{$t:{$nm:"Value"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"e"}]],$mt:"prm",$pt:"f",$nm:"comparable"}],[{$t:{$nm:"Element"},$mt:"prm",$nm:"x"},{$t:{$nm:"Element"},$mt:"prm",$nm:"y"}]],$mt:"m",$tp:[{$nm:"Element"},{$sts:[{$tp:[{$mt:"tp",$nm:"Value"}],$pk:".",$nm:"Comparable"}],$nm:"Value"}],$an:{shared:[],see:["byIncreasing"],doc:["A comparator which orders elements in decreasing order \naccording to the `Comparable` value returned by the given \n[[comparable]] function.\n\n     \"Hello World!\".sort(byDecreasing(Character.lowercased))"]},$nm:"byDecreasing"},unzipEntries:{$t:{$tp:[{comp:"u",$mt:"tp",$ts:[{$tp:[{$mt:"tp",$nm:"Key"},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"},{comp:"u",$ts:[{$tp:[{$mt:"tp",$nm:"Item"},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"},{$pk:".",$nm:"Nothing"}]}]},{$mt:"tp",$tp:[{$mt:"tp",$nm:"Key"},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"},{$mt:"tp",$tp:[{comp:"u",$mt:"tp",$ts:[{$tp:[{$mt:"tp",$nm:"Item"},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"},{$pk:".",$nm:"Nothing"}]},{$mt:"tp",$tp:[{$mt:"tp",$nm:"Item"},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"},{$mt:"tp",$pk:".",$nm:"Empty"}],$pk:".",$nm:"Tuple"}],$pk:".",$nm:"Tuple"},$ps:[[{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$nm:"Key"},{$mt:"tp",$nm:"Item"}],$pk:".",$nm:"Entry"},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"entries"}]],$mt:"m",$tp:[{$sts:[{$pk:".",$nm:"Object"}],$nm:"Key"},{$sts:[{$pk:".",$nm:"Object"}],$nm:"Item"},{$sts:[{$pk:".",$nm:"Null"}],$nm:"Absent"}],$an:{shared:[],doc:["Given a stream of entries, return two streams. The\nfirst stream produces the keys of the given entries, \nand the second stream produces the items of the given \nentries.\n\nThus:\n\n    entries[i]==unzipEntries(entries)[0][i]->unzipEntries(entries)[1][i]"]},$nm:"unzipEntries"},default:{$t:{$pk:".",$nm:"DefaultAnnotation"},$mt:"m",$an:{annotation:[],shared:[],doc:["Annotation to mark a member whose implementation may be \nrefined by subtypes. Non-`default` declarations may not be \nrefined."]},$annot:1,$nm:"default"},SequencedAnnotation:{of:[{$nm:"Value"}],$sts:[{$tp:[{$mt:"tp",$nm:"Value"},{$mt:"tp",$tp:[{$mt:"tp",$nm:"Value"}],$pk:".",$nm:"Sequential"},{$mt:"tp",$nm:"ProgramElement"}],$pk:".",$nm:"ConstrainedAnnotation"}],$mt:"i",$tp:[{$sts:[{$tp:[{$mt:"tp",$nm:"Value"},{$mt:"tp",$nm:"ProgramElement"}],$pk:".",$nm:"SequencedAnnotation"}],variance:"out",$nm:"Value"},{$sts:[{$pk:".",$nm:"Annotated"}],$def:{$pk:".",$nm:"Annotated"},variance:"in",$nm:"ProgramElement"}],$an:{shared:[],see:["Annotation"],doc:["An annotation that may occur multiple times at a single program element, \nand only on certain program elemenets.\n\nA sequenced annotation is declared simply by having the annotation class\nsatisfy SequencedAnnotation instead of [[Annotation]]. For example \nthe following would only be allowed on `class` declarations, \nfunctions or methods:\n\n    alias ExecutableDeclaration \n           => ClassOrInterfaceDeclaration|FunctionDeclaration\n    \"Documents a pattern that the annotated element is particpating in\"\n    final annotation class Pattern(String name) \n            satisfies SequencedAnnotation<Pattern, ExecutableDeclaration> {\n    }\n\nAt runtime a [[ceylon.language.meta.declaration::Declaration]] instance \ncan be queried for its `SequencedAnnotation`s of a certain type using \n[[ceylon.language.meta::annotations]] or [[ceylon.language.meta::sequencedAnnotations]].\n"]},$nm:"SequencedAnnotation",$st:"Value"},AnnotationAnnotation:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"AnnotationAnnotation"},{comp:"u",$mt:"tp",$ts:[{$pk:"ceylon.language.meta.declaration",$nm:"ClassDeclaration"},{$pk:"ceylon.language.meta.declaration",$nm:"FunctionDeclaration"}]}],$pk:".",$nm:"OptionalAnnotation"}],$mt:"c",$an:{annotation:[],shared:[],final:[],doc:["The annotation class for [[annotation]]."]},$annot:1,$nm:"AnnotationAnnotation"},minRadix:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$nm:"minRadix"},String:{super:{$pk:".",$nm:"Object"},$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"Character"}],$pk:".",$nm:"List"},{$tp:[{$mt:"tp",$pk:".",$nm:"String"}],$pk:".",$nm:"Comparable"},{$tp:[{$mt:"tp",$pk:".",$nm:"String"}],$pk:".",$nm:"Summable"},{$tp:[{$mt:"tp",$pk:".",$nm:"Integer"},{$mt:"tp",$pk:".",$nm:"Character"},{$mt:"tp",$pk:".",$nm:"String"}],$pk:".",$nm:"Ranged"}],$ps:[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Character"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$hdn:1,$mt:"prm",$an:{doc:["The characters that form this string."]},$nm:"characters"}],$mt:"c",$an:{shared:[],final:[],native:[],doc:["A string of characters. Each character in the string is a \n[[32-bit Unicode character|Character]]. The internal \nUTF-16 encoding is hidden from clients.\n\nLiteral strings may be written between double quotes:\n\n    \"hello world\"\n    \"\\r\\n\"\n    \"\\{#03C0} \\{#2248} 3.14159\"\n    \"\\{GREEK SMALL LETTER PI} \\{ALMOST EQUAL TO} 3.14159\"\n\nAlternatively, a _verbatim string_ may be written between\ntripled double quotes.\n\nThe _empty string_, `\"\"`, is a string with no characters.\n\nA string is a [[Category]] of its [[characters]], and of \nits substrings:\n\n    'w' in greeting \n    \"hello\" in greeting\n\nStrings are [[summable|Summable]]:\n\n    String greeting = \"hello\" + \" \" + \"world\";\n\nThey are efficiently [[iterable|Iterable]]:\n\n    for (char in \"hello world\") { ... }\n\nThey are [[lists|List]] of [[characters|Character]]:\n\n    value char = \"hello world\"[5];\n\nThey are [[ranged|Ranged]]:\n\n    String who = \"hello world\"[6...];\n\nNote that since `string[index]` evaluates to the optional \ntype `Character?`, it is often more convenient to write \n`string[index..index]`, which evaluates to a `String` \ncontaining a single character, or to the empty string \n`\"\"` if `index` refers to a position outside the string.\n\nIt is easy to use comprehensions to transform strings:\n\n    String { for (s in \"hello world\") if (s.letter) s.uppercased }\n\nSince a `String` has an underlying UTF-16 encoding, \ncertain operations are expensive, requiring iteration of \nthe characters of the string. In particular, [[size]]\nrequires iteration of the whole string, and `get()`,\n`span()`, and `segment()` require iteration from the \nbeginning of the string to the given index."],by:["Gavin"]},$m:{segment:{$t:{$pk:".",$nm:"String"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"length"}]],$mt:"m",$an:{shared:[],native:[],doc:["Select the characters of this string beginning at the \ngiven [[start index|from]], returning a string no \nlonger than the given [[length]]. If the portion of \nthis string starting at the given index is shorter than \nthe given length, return the portion of this string \nfrom the given index until the end of this string. \nOtherwise, return a string of the given length. If the \nstart index is larger than the last index of the \nstring, return the empty string."],actual:[]},$nm:"segment"},longerThan:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"length"}]],$mt:"m",$an:{shared:[],native:[],see:["size"],doc:["Determines if this string is longer than the given\n[[length]]. This is a more efficient operation than\n`string.size>length`."],actual:[]},$nm:"longerThan"},by:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Character"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"step"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"by"},trimLeading:{$t:{$pk:".",$nm:"String"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Character"},$mt:"prm",$nm:"elem"}]],$mt:"prm",$pt:"f",$an:{doc:["The predicate function that determines whether\na character should be trimmed"]},$nm:"trimming"}]],$mt:"m",$an:{shared:[],native:[],doc:["This string, after discarding the characters matching\nthe given [[predicate function|trimming]] from the \nbeginning of the string."],actual:[]},$nm:"trimLeading"},contains:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"element"}]],$mt:"m",$an:{shared:[],native:[],doc:["Determines if the given object is a `String` and, if \nso, if it occurs as a substring of this string, or if \nthe object is a `Character` that occurs in this string. \nThat is to say, a string is considered a [[Category]] \nof its substrings and of its characters."],actual:[]},$nm:"contains"},repeat:{$t:{$pk:".",$nm:"String"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"times"}]],$mt:"m",$an:{shared:[],native:[],doc:["Returns a string formed by repeating this string the \ngiven number of [[times]], or the empty string if\n`times<=0`."],actual:[]},$nm:"repeat"},skip:{$t:{$pk:".",$nm:"String"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"skipping"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"skip"},getFromLast:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Character"}]},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],native:[],doc:["Get the character at the specified index, where the \nstring is indexed from the _end_ of the string, or \n`null` if the index falls outside the bounds of this \nstring."],actual:[]},$nm:"getFromLast"},firstOccurrence:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Integer"}]},$ps:[[{$t:{$pk:".",$nm:"Anything"},$mt:"prm",$nm:"element"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"firstOccurrence"},terminal:{$t:{$pk:".",$nm:"String"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"length"}]],$mt:"m",$an:{shared:[],native:[],doc:["Select the last characters of the string, returning a \nstring no longer than the given [[length]]. If this \nstring is shorter than the given length, return this \nstring. Otherwise, return a string of the given length."],actual:[]},$nm:"terminal"},spanTo:{$t:{$pk:".",$nm:"String"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"to"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"spanTo"},initial:{$t:{$pk:".",$nm:"String"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"length"}]],$mt:"m",$an:{shared:[],native:[],doc:["Select the first characters of this string, returning a \nstring no longer than the given [[length]]. If this \nstring is shorter than the given length, return this \nstring. Otherwise, return a string of the given length."],actual:[]},$nm:"initial"},replaceFirst:{$t:{$pk:".",$nm:"String"},$ps:[[{$t:{$pk:".",$nm:"String"},$mt:"prm",$nm:"substring"},{$t:{$pk:".",$nm:"String"},$mt:"prm",$nm:"replacement"}]],$mt:"m",$an:{shared:[],native:[],doc:["Returns a string formed by replacing the first \noccurrence in this string of the given [[substring]], \nif any, with the given [[replacement]] string."]},$nm:"replaceFirst"},trim:{$t:{$pk:".",$nm:"String"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Character"},$mt:"prm",$nm:"elem"}]],$mt:"prm",$pt:"f",$an:{doc:["The predicate function that determines whether\na character should be trimmed"]},$nm:"trimming"}]],$mt:"m",$an:{shared:[],native:[],doc:["This string, after discarding the characters matching\nthe given [[predicate function|trimming]] from the \nbeginning and end of the string.\n\n    value trimmed = name.trim('_'.equals);"],actual:[]},$nm:"trim"},spanFrom:{$t:{$pk:".",$nm:"String"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"spanFrom"},notLargerThan:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"String"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"notLargerThan"},clone:{$t:{$pk:".",$nm:"String"},$mt:"m",$an:{shared:[],doc:["This string."],actual:[]},$nm:"clone"},plus:{$t:{$pk:".",$nm:"String"},$ps:[[{$t:{$pk:".",$nm:"String"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],doc:["Returns the concatenation of this string with the\ngiven string."],actual:[]},$nm:"plus"},largerThan:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"String"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"largerThan"},iterator:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Character"}],$pk:".",$nm:"Iterator"},$mt:"m",$an:{shared:[],native:[],doc:["An iterator for the characters of the string."],actual:[]},$nm:"iterator"},startsWith:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Anything"}],$pk:".",$nm:"List"},$mt:"prm",$nm:"substring"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"startsWith"},get:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Character"}]},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],native:[],doc:["Get the character at the specified index, or `null` if\nthe index falls outside the bounds of this string."],actual:[]},$nm:"get"},equals:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"that"}]],$mt:"m",$an:{shared:[],native:[],doc:["Determines if the given object is a `String`, and if \nso, if this string has the same [[length|size]], and \nthe same [[characters]], in the same order, as the \ngiven [[string|that]]."],actual:[]},$nm:"equals"},compare:{$t:{$pk:".",$nm:"Comparison"},$ps:[[{$t:{$pk:".",$nm:"String"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],doc:["Compare this string with the given string \nlexicographically, according to the Unicode code points\nof the characters."],actual:[]},$nm:"compare"},join:{$t:{$pk:".",$nm:"String"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Object"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"objects"}]],$mt:"m",$an:{shared:[],native:[],doc:["Join the [[string representations|Object.string]] of \nthe given [[objects]], using this string as a separator."]},$nm:"join"},smallerThan:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"String"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"smallerThan"},getFromFirst:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Character"}]},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],native:[],doc:["Returns the character at the given [[index]] in the \nstring, or `null` if the index is before the start of \nthe string or past the end of string. The first \ncharacter in the string occurs at index zero. The last \ncharacter in the string occurs at index \n`string.size-1`."],actual:[]},$nm:"getFromFirst"},replace:{$t:{$pk:".",$nm:"String"},$ps:[[{$t:{$pk:".",$nm:"String"},$mt:"prm",$nm:"substring"},{$t:{$pk:".",$nm:"String"},$mt:"prm",$nm:"replacement"}]],$mt:"m",$an:{shared:[],native:[],doc:["Returns a string formed by replacing every occurrence \nin this string of the given [[substring]] with the \ngiven [[replacement]] string, working from the start of\nthis string to the end."]},$nm:"replace"},notSmallerThan:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"String"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"notSmallerThan"},defines:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"defines"},shorterThan:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"length"}]],$mt:"m",$an:{shared:[],native:[],see:["size"],doc:["Determines if this string is shorter than the given\n[[length]]. This is a more efficient operation than\n`string.size>length`."],actual:[]},$nm:"shorterThan"},take:{$t:{$pk:".",$nm:"String"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"taking"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"take"},trimTrailing:{$t:{$pk:".",$nm:"String"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Character"},$mt:"prm",$nm:"elem"}]],$mt:"prm",$pt:"f",$an:{doc:["The predicate function that determines whether\na character should be trimmed"]},$nm:"trimming"}]],$mt:"m",$an:{shared:[],native:[],doc:["This string, after discarding the characters matching\nthe given [[predicate function|trimming]] from the end \nof the string."],actual:[]},$nm:"trimTrailing"},lastOccurrence:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Integer"}]},$ps:[[{$t:{$pk:".",$nm:"Anything"},$mt:"prm",$nm:"element"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"lastOccurrence"},split:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"String"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Character"},$mt:"prm",$nm:"ch"}]],$mt:"prm",$pt:"f",$def:1,$an:{doc:["A predicate that determines if a character is a\nseparator characters at which to split. Default \nto split at any \n[[whitespace|Character.whitespace]] character."]},$nm:"splitting"},{$t:{$pk:".",$nm:"Boolean"},$mt:"prm",$def:1,$an:{doc:["Specifies that the separator characters\noccurring in the string should be discarded. If \n`false`, they will be included in the resulting \niterator."]},$nm:"discardSeparators"},{$t:{$pk:".",$nm:"Boolean"},$mt:"prm",$def:1,$an:{doc:["Specifies that the separator tokens should be \ngrouped eagerly and not be treated as \nsingle-character tokens. If `false` each \nseparator token will be of size `1`."]},$nm:"groupSeparators"}]],$mt:"m",$an:{shared:[],native:[],doc:["Split the string into tokens, using the given \n[[predicate function|splitting]] to determine which \ncharacters are separator characters.\n\n    value pathElements = path.split('\/'.equals);\n\nThe flags [[discardSeparators]] and [[groupSeparators]]\ndetermine how separator characters should occur in the\nresulting stream."]},$nm:"split"},slice:{$t:{$tp:[{comp:"u",$mt:"tp",$ts:[{$pk:".",$nm:"String"},{comp:"u",$ts:[{$pk:".",$nm:"String"},{$pk:".",$nm:"Nothing"}]}]},{$mt:"tp",$pk:".",$nm:"String"},{$mt:"tp",$tp:[{comp:"u",$mt:"tp",$ts:[{$pk:".",$nm:"String"},{$pk:".",$nm:"Nothing"}]},{$mt:"tp",$pk:".",$nm:"String"},{$mt:"tp",$pk:".",$nm:"Empty"}],$pk:".",$nm:"Tuple"}],$pk:".",$nm:"Tuple"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],native:[],doc:["Return two strings, the first containing the characters\nthat occur before the given [[index]], the second with\nthe characters that occur after the given `index`. If \nthe given `index` is outside the range of indices of \nthis string, one of the returned strings will be empty."]},$nm:"slice"},endsWith:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Anything"}],$pk:".",$nm:"List"},$mt:"prm",$nm:"substring"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"endsWith"},span:{$t:{$pk:".",$nm:"String"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"to"}]],$mt:"m",$an:{shared:[],native:[],doc:["Select the characters between the given indexes. If the \n[[start index|from]] is the same as the \n[[end index|to]], return a string with a single \ncharacter. If the start index is larger than the end \nindex, return the characters in the \nreverse order from the order in which they appear in \nthis string. If both the start index and the end index \nare larger than the last index in the string, or if \nboth the start index and the end index are smaller than\nthe first index in the string, return the empty string. \nOtherwise, if the last index is larger than the last \nindex in the string, return all characters from the \nstart index to last character of the string."],actual:[]},$nm:"span"}},$at:{normalized:{$t:{$pk:".",$nm:"String"},$mt:"a",$an:{shared:[],native:[],doc:["This string, after collapsing strings of \n[[whitespace|Character.whitespace]] into single space \ncharacters and discarding whitespace from the beginning \nand end of the string."]},$nm:"normalized"},lowercased:{$t:{$pk:".",$nm:"String"},$mt:"a",$an:{shared:[],native:[],doc:["This string, with all characters in lowercase."]},$nm:"lowercased"},keys:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Integer"}],$pk:".",$nm:"Sequential"},$mt:"g",$an:{shared:[],native:[],doc:["A sequence containing all indexes of this string."],actual:[]},$nm:"keys"},hash:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],native:[],actual:[]},$nm:"hash"},uppercased:{$t:{$pk:".",$nm:"String"},$mt:"a",$an:{shared:[],native:[],doc:["This string, with all characters in uppercase."]},$nm:"uppercased"},coalesced:{$t:{$pk:".",$nm:"String"},$mt:"g",$an:{shared:[],doc:["This string."],actual:[]},$nm:"coalesced"},characters$s4g2uj:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Character"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$mt:"a",$an:{doc:["The characters that form this string."]},$nm:"characters"},size:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],native:[],see:["longerThan","shorterThan"],doc:["The length of the string (the number of characters it \ncontains). In the case of the empty string, the string \nhas length zero. Note that this operation is \npotentially costly for long strings, since the\nunderlying representation of the characters uses a\nUTF-16 encoding. Use of [[longerThan]] or \n[[shorterThan]] is highly recommended."],actual:[]},$nm:"size"},lastIndex:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Integer"}]},$mt:"g",$an:{shared:[],doc:["The index of the last character in the string, or \n`null` if the string has no characters. Note that this \noperation is potentially costly for long strings, since \nthe underlying representation of the characters uses a \nUTF-16 encoding. For any nonempty string:\n\n    string.lastIndex == string.size-1"],actual:[]},$nm:"lastIndex"},string:{$t:{$pk:".",$nm:"String"},$mt:"g",$an:{shared:[],doc:["This string."],actual:[]},$nm:"string"},empty:{$t:{$pk:".",$nm:"Boolean"},$mt:"a",$an:{shared:[],native:[],see:["size"],doc:["Determines if this string has no characters, that is, \nif it has zero [[size]]. This is a _much_ more \nefficient operation than `string.size==0`."],actual:[]},$nm:"empty"},lines:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"String"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$mt:"g",$an:{shared:[],native:[],doc:["Split the string into lines of text."]},$nm:"lines"},rest:{$t:{$pk:".",$nm:"String"},$mt:"a",$an:{shared:[],native:[],doc:["The rest of the string, without the first element."],actual:[]},$nm:"rest"},trimmed:{$t:{$pk:".",$nm:"String"},$mt:"g",$an:{shared:[],native:[],doc:["This string, after discarding \n[[whitespace|Character.whitespace]] from the beginning \nand end of the string."]},$nm:"trimmed"},reversed:{$t:{$pk:".",$nm:"String"},$mt:"a",$an:{shared:[],native:[],doc:["This string, with the characters in reverse order."],actual:[]},$nm:"reversed"}},$nm:"String"},aIntLower:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$nm:"aIntLower"},Obtainable:{$mt:"i",$an:{shared:[],see:["Destroyable"],doc:["Abstract supertype of resources which may be obtained at\nthe beginning of a `try` statement and then released when \nthe statement completes. Unlike a [[Destroyable]] resource, \na single instance of `Obtainable` may be reused between \nmultiple `try` statements or multiple executions of the \nsame `try` statement.\n\n    Lock lock = ... ;\n    try (lock) {\n        ...\n    }\n\n- [[obtain]] is called before the body of the `try` \n  statement is executed, and\n- [[release]] is called when execution of the body of the \n  `try` statement ends, even if an exception propagates out \n  of the body of the `try`.\n\nA class which satisfies `Obtainable` may impose constraints \non the ordering and nesting of invocations of `obtain()` \nand `release()`. For example, it may be not be possible to\nobtain a resource that has already been obtained. Those \nmethods should produce an [[AssertionError]] when any such \nconstraint is violated."]},$m:{obtain:{$t:{$pk:".",$nm:"Anything"},$mt:"m",$an:{shared:[],formal:[],throws:["AssertionError","if an illegal state is detected"],doc:["Obtain this resource. Called before the body of a `try` \nstatement is executed.\n\nIf an exception is thown by `obtain()`, then `release()` \nwill not be called."]},$nm:"obtain"},release:{$t:{$pk:".",$nm:"Anything"},$ps:[[{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Throwable"}]},$mt:"prm",$an:{doc:["The exception propagating out of the body of the \n`try` statement, or `null` if no exception was\npropagated."]},$nm:"error"}]],$mt:"m",$an:{shared:[],formal:[],throws:["AssertionError","if an illegal state is detected"],doc:["Release this resource. Called when execution of the \nbody of a `try` statement ends, even if an exception \npropagates out of the body of the `try`."]},$nm:"release"}},$nm:"Obtainable"},parseBoolean:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Boolean"}]},$ps:[[{$t:{$pk:".",$nm:"String"},$mt:"prm",$nm:"string"}]],$mt:"m",$an:{shared:[],doc:["The `Boolean` value of the given string representation of a boolean value,\nor `null` if the string does not represent a boolean value.\n\nRecognized values are \"true\", \"false\"."]},$nm:"parseBoolean"},identical:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Identifiable"},$mt:"prm",$an:{doc:["An object with well-defined identity."]},$nm:"x"},{$t:{$pk:".",$nm:"Identifiable"},$mt:"prm",$an:{doc:["A second object with well-defined identity."]},$nm:"y"}]],$mt:"m",$an:{shared:[],see:["identityHash"],doc:["Determine if the arguments are identical. Equivalent to\n`x===y`. Only instances of `Identifiable` have \nwell-defined identity."]},$nm:"identical"},late:{$t:{$pk:".",$nm:"LateAnnotation"},$mt:"m",$an:{annotation:[],shared:[],doc:["Annotation to disable definite initialization analysis for \na reference."]},$annot:1,$nm:"late"},InitializationError:{super:{$pk:".",$nm:"AssertionError"},$ps:[{$t:{$pk:".",$nm:"String"},$mt:"prm",$nm:"description"}],$mt:"c",$an:{shared:[],see:["late"],doc:["[[Assertion failure|AssertionError]] that occurs when a \nvalue reference could not be initialized, including when:\n\n- a toplevel value could not be initialized due to \n  recursive dependencies upon other toplevel values, \n- an uninitialized [[late]] value is evaluated, \n- an initialized `late` but non-`variable` value is\n  reassigned."]},$at:{description$lsghss:{$t:{$pk:".",$nm:"String"},$mt:"a",$nm:"description"}},$nm:"InitializationError"},emptyIterator:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Iterator"}],$mt:"o",$an:{shared:[],doc:["An iterator that returns no elements."]},$m:{next:{$t:{$pk:".",$nm:"Finished"},$mt:"m",$an:{shared:[],actual:[]},$nm:"next"}},$nm:"emptyIterator"},printStackTrace:{$t:{$pk:".",$nm:"Anything"},$ps:[[{$t:{$pk:".",$nm:"Throwable"},$mt:"prm",$nm:"exception"},{$t:{$pk:".",$nm:"Anything"},$ps:[[{$t:{$pk:".",$nm:"String"},$mt:"prm",$nm:"string"}]],$mt:"prm",$pt:"f",$def:1,$an:{doc:["A function that prints the given string.\nDefaults to [[process.writeError]]."]},$nm:"write"}]],$mt:"m",$an:{shared:[],native:[],doc:["Print the stack trace of the given [[Exception]] using the \ngiven [[function|write]], or to \n[[standard error|process.writeError]] if no function is \nspecified."]},$nm:"printStackTrace"},parseFloat:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Float"}]},$ps:[[{$t:{$pk:".",$nm:"String"},$mt:"prm",$nm:"string"}]],$mt:"m",$an:{shared:[],see:["parseInteger"],doc:["The [[Float]] value of the given \n[[string representation|string]] of a decimal floating \npoint number, or `null` if the string does not represent a \ndecimal floating point number.\n\nThe syntax accepted by this method is the same as the \nsyntax for a `Float` literal in the Ceylon language \nexcept that it may optionally begin with a sign \ncharacter (`+` or `-`)."]},$nm:"parseFloat"},Anything:{abstract:1,of:[{$pk:".",$nm:"Object"},{$pk:".",$nm:"Null"}],$mt:"c",$an:{abstract:[],shared:[],doc:["The abstract supertype of all types. A value of type \n`Anything` may be a definite value of type `Object`, or it \nmay be the [[null]] value. A method declared `void` is \nconsidered to have the return type `Anything`.\n\nNote that the type `Nothing`, representing the intersection \nof all types, is a subtype of all types."],by:["Gavin"]},$nm:"Anything"},VariableAnnotation:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"VariableAnnotation"},{$mt:"tp",$pk:"ceylon.language.meta.declaration",$nm:"ValueDeclaration"}],$pk:".",$nm:"OptionalAnnotation"}],$mt:"c",$an:{annotation:[],shared:[],final:[],doc:["The annotation class for [[variable]]."]},$annot:1,$nm:"VariableAnnotation"},Exception:{super:{$pk:".",$nm:"Throwable"},$ps:[{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"String"}]},$mt:"prm",$def:1,$nm:"description"},{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Throwable"}]},$mt:"prm",$def:1,$nm:"cause"}],$mt:"c",$an:{shared:[],native:[],doc:["The supertype of all unexpected transient failures. \n\nA subclass of `Exception`\nrepresents a more specific kind of problem, and may define \nadditional attributes which propagate information about \nproblems of that kind. Exceptions are usually \nusually unrecoverable from the point of view of the \nimmediate caller of an operation. (For example, \ntransaction rollback, or loss of connectivity.)"],by:["Gavin","Tom"]},$at:{description$etadt1:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"String"}]},$mt:"a",$nm:"description"},cause$tn7i4g:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Throwable"}]},$mt:"a",$nm:"cause"}},$nm:"Exception"},operatingSystem:{super:{$pk:".",$nm:"Basic"},$mt:"o",$an:{shared:[],native:[],doc:["Operating System on which the current process is running."]},$at:{newline:{$t:{$pk:".",$nm:"String"},$mt:"a",$an:{shared:[],native:[],doc:["The line ending character sequence on this platform."]},$nm:"newline"},fileSeparator:{$t:{$pk:".",$nm:"String"},$mt:"a",$an:{shared:[],native:[],doc:["The character used on this platform to separate the folder\/file elements of a path."]},$nm:"fileSeparator"},string:{$t:{$pk:".",$nm:"String"},$mt:"g",$an:{shared:[],actual:[]},$nm:"string"},name:{$t:{$pk:".",$nm:"String"},$mt:"a",$an:{shared:[],native:[],doc:["Returns the name of the operating system this process is running on."]},$nm:"name"},pathSeparator:{$t:{$pk:".",$nm:"String"},$mt:"a",$an:{shared:[],native:[],doc:["The character used on this platform to use as a separator between several paths in a list of paths."]},$nm:"pathSeparator"},version:{$t:{$pk:".",$nm:"String"},$mt:"a",$an:{shared:[],native:[],doc:["Returns the version of the operating system this process is running on."]},$nm:"version"}},$nm:"operatingSystem"},internalSort:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"},$ps:[[{$t:{$pk:".",$nm:"Comparison"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"x"},{$t:{$nm:"Element"},$mt:"prm",$nm:"y"}]],$mt:"prm",$pt:"f",$nm:"comparing"},{$t:{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"elements"}]],$mt:"m",$tp:[{$nm:"Element"}],$m:{comparing$gblbii:{$t:{$pk:".",$nm:"Comparison"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"x"},{$t:{$nm:"Element"},$mt:"prm",$nm:"y"}]],$mt:"m",$nm:"comparing"}},$nm:"internalSort"},OverflowException:{super:{$pk:".",$nm:"Exception"},$mt:"c",$an:{shared:[],doc:["Thrown when a mathematical operation caused a number to \noverflow from its bounds, or when a numeric narrowing\nconversion fails because the number cannot be represented\nwithin the bounds of the narrower type.\n\nNote that:\n\n- arithmetic operations on [[Integer]]s result in _silent_ \n  overflow (JVM) or loss of precision (JavaScript), and \n  thus never result in an `OverflowException`, and, \n- likewise, arithmetic operations on [[Float]] produce the \n  value [[infinity]] instead of overflowing."]},$nm:"OverflowException"},unzip:{$t:{$tp:[{comp:"u",$mt:"tp",$ts:[{$tp:[{$mt:"tp",$nm:"Head"},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"},{comp:"u",$ts:[{$tp:[{$mt:"tp",$nm:"Tail"},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"},{$pk:".",$nm:"Nothing"}]}]},{$mt:"tp",$tp:[{$mt:"tp",$nm:"Head"},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"},{$mt:"tp",$tp:[{comp:"u",$mt:"tp",$ts:[{$tp:[{$mt:"tp",$nm:"Tail"},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"},{$pk:".",$nm:"Nothing"}]},{$mt:"tp",$tp:[{$mt:"tp",$nm:"Tail"},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"},{$mt:"tp",$pk:".",$nm:"Empty"}],$pk:".",$nm:"Tuple"}],$pk:".",$nm:"Tuple"},$ps:[[{$t:{$tp:[{$mt:"tp",$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Element"},{$nm:"Head"}]},{$mt:"tp",$nm:"Head"},{$mt:"tp",$nm:"Tail"}],$pk:".",$nm:"Tuple"},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"tuples"}]],$mt:"m",$tp:[{$nm:"Element"},{$nm:"Head"},{$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"}],$nm:"Tail"},{$sts:[{$pk:".",$nm:"Null"}],$nm:"Absent"}],$an:{shared:[],doc:["Given a stream of tuples, return two streams. The\nfirst stream produces the first elements of the\ngiven tuples, and the second stream produces the\nremaining elements of the given tuples.\n\nThus:\n\n    tuples[i]==[unzip(tuples)[0][i],*unzip(tuples)[1][i]]"]},$nm:"unzip"},parseInteger:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Integer"}]},$ps:[[{$t:{$pk:".",$nm:"String"},$mt:"prm",$an:{doc:["The string representation to parse."]},$nm:"string"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$def:1,$an:{doc:["The base, between [[minRadix]] and [[maxRadix]] \ninclusive."]},$nm:"radix"}]],$mt:"m",$an:{shared:[],see:["formatInteger","parseFloat"],throws:["AssertionError","if [[radix]] is not between [[minRadix]] and \n[[maxRadix]]"],doc:["The [[Integer]] value of the given \n[[string representation|string]] of an integer value in the \nbase given by [[radix]], or `null` if the string does not \nrepresent an integer in that base, or if the mathematical \ninteger it represents is too large in magnitude to be \nrepresented by an instance of the class `Integer`.\n\nThe syntax accepted by this function is the same as the \nsyntax for an `Integer` literal in the Ceylon language \nexcept that it may optionally begin with a sign \ncharacter (`+` or `-`).\n\nThe given `radix` specifies the base of the string \nrepresentation. The list of available digits starts from \n`0` to `9`, followed by `a` to `z`. When parsing in a \nspecific base, the first `radix` digits from the available \ndigits list is used. This function is not case sensitive; \n`a` and `A` both correspond to the digit `a` whose decimal \nvalue is `10`.\n\nThe `_` character may be used to separate groups of digits\nfor bases 2, 10, and 16, as for `Integer` literals in the\nCeylon language. For any other base, no grouping is\nsupported."]},$nm:"parseInteger"},sum:{$t:{$nm:"Value"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Value"},{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"values"}]],$mt:"m",$tp:[{$sts:[{$tp:[{$mt:"tp",$nm:"Value"}],$pk:".",$nm:"Summable"}],$nm:"Value"}],$an:{shared:[],see:["product"],doc:["Given a nonempty stream of [[Summable]] values, return the \nsum of the values."]},$nm:"sum"},runtime:{super:{$pk:".",$nm:"Basic"},$mt:"o",$an:{shared:[],native:[],doc:["Machine (Virtual or not) on which the current process is running.\n\nHolds information about runtime name, version and about inherent limitations\nlike minimum\/maximum values that can be represented by the runtime."]},$at:{maxArraySize:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],native:[],see:["Array"],doc:["The maximum size of an [[Array]] that is possible for this runtime.\nNote that this is a theoretical limit only. In practice it is usually\nimpossible to allocate an array of this size, due to memory constraints."]},$nm:"maxArraySize"},string:{$t:{$pk:".",$nm:"String"},$mt:"g",$an:{shared:[],actual:[]},$nm:"string"},name:{$t:{$pk:".",$nm:"String"},$mt:"a",$an:{shared:[],native:[],doc:["The name of the runtime \/ virtual machine this process is running on."]},$nm:"name"},integerSize:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],native:[],see:["Integer"],doc:["The number of bits used to represent the value of an [[Integer]]."]},$nm:"integerSize"},maxIntegerValue:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],native:[],see:["Integer"],doc:["The maximum [[Integer]] value that can be represented by the runtime.\n\nIt is the maximum `Integer` that can be distinguished from its predecessor\nusing below formula:\n\n`Integer(n+1) = Integer(n) + 1` with `Integer(0) = 0`"]},$nm:"maxIntegerValue"},integerAddressableSize:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],native:[],doc:["The number of bits of [[Integer]] instances \nwhich may be manipulated via the methods inherited from [[Binary]]."]},$nm:"integerAddressableSize"},minIntegerValue:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],native:[],see:["Integer"],doc:["The minimum [[Integer]] value that can be represented by the runtime.\n\nIt is the minimum `Integer` that can be distinguished from its successor\nusing below formula:\n\n`Integer(n-1) = Integer(n) - 1` with `Integer(0) = 0`"]},$nm:"minIntegerValue"},version:{$t:{$pk:".",$nm:"String"},$mt:"a",$an:{shared:[],native:[],doc:["The version of the runtime \/ virtual machine this process is running on."]},$nm:"version"}},$nm:"runtime"},infinity:{$t:{$pk:".",$nm:"Float"},$mt:"a",$an:{shared:[],doc:["An instance of [[Float]] representing positive infinity, \n∞, the result of dividing a positive number by zero. \nNegative infinity, -∞, the result of dividing a\nnegative number by zero, is the additive inverse `-infinity`.\n\nNote that any floating-point computation that results in a\npositive value too large to be represented as a `Float` is \n\"rounded up\" to `infinity`. Likewise, any floating-point \ncomputation that yields a negative value whose magnitude is\ntoo large to be represented as a `Float` is \"rounded down\" \nto `-infinity`."]},$nm:"infinity"},smaller:{super:{$pk:".",$nm:"Comparison"},$mt:"o",$an:{shared:[],doc:["The value is smaller than the given value."]},$nm:"smaller"},computeDigitGroupingSize:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Integer"}]},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"radix"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"digitIndex"},{$t:{$pk:".",$nm:"String"},$mt:"prm",$nm:"string"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"ii"}]],$mt:"m",$nm:"computeDigitGroupingSize"},DefaultAnnotation:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"DefaultAnnotation"},{comp:"u",$mt:"tp",$ts:[{$pk:"ceylon.language.meta.declaration",$nm:"FunctionOrValueDeclaration"},{$pk:"ceylon.language.meta.declaration",$nm:"ClassOrInterfaceDeclaration"}]}],$pk:".",$nm:"OptionalAnnotation"}],$mt:"c",$an:{annotation:[],shared:[],final:[],doc:["The annotation class for [[default]]."]},$annot:1,$nm:"DefaultAnnotation"},Iterable:{$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"Object"}],$pk:".",$nm:"Category"}],$mt:"i",$tp:[{variance:"out",$nm:"Element"},{$sts:[{$pk:".",$nm:"Null"}],$def:{$pk:".",$nm:"Null"},variance:"out",$nm:"Absent"}],$an:{shared:[],see:["Collection"],doc:["Abstract supertype of [[categories|Category]] whose \nelements may be iterated. Iterable categories are often \ncalled _streams_. A stream need not be finite, but its \nelements must be countable. That is, for any given \nelement of the stream, every iterator of the stream must \neventually return the element, even if the iterator \nitself is not exhaustable. \n\nA given stream might not have a well-defined order, and \nso the order in which elements are produced by the \nstream's iterator may not be _stable_. That is, the order \nmay be different for two different iterators of the \nstream. However, a stream has a well-defined set of \nelements, and any two iterators for an immutable finite \nstream should eventually return the same elements. \nFurthermore, any two iterators for an immutable finite\nstream should eventually return exactly the same number \nof elements, which must be the [[size]] of the stream.\n\nThe type `Iterable<Element,Null>`, usually abbreviated\n`{Element*}` represents a possibly-empty iterable \ncontainer. The type `Iterable<Element,Nothing>`, usually \nabbreviated `{Element+}` represents a nonempty iterable \ncontainer.\n\nA value list in braces produces a new instance of \n`Iterable`:\n\n    {String+} words = { \"hello\", \"world\" };\n\nAn instance of `Iterable` may be iterated using a `for`\nloop:\n\n    for (c in \"hello world\") { ... }\n\nComprehensions provide a convenient syntax for \ntransforming streams:\n\n    {Integer+} lengths = { for (w in words) w.size };\n\n`Iterable` and its subtypes define various operations\nthat return other iterable objects. Such operations come \nin two flavors:\n\n- _Lazy_ operations return a *view* of the receiving\n  iterable object. If the underlying iterable object is\n  mutable, then changes to the underlying object will be \n  reflected in the resulting view. Lazy operations are \n  usually efficient, avoiding memory allocation or\n  iteration of the receiving iterable object.\n- _Eager_ operations return an immutable object. If the\n  receiving iterable object is mutable, changes to this\n  object will not be reflected in the resulting immutable\n  object. Eager operations are often expensive, involving\n  memory allocation and iteration of the receiving \n  iterable object.\n\nLazy operations are preferred, because they can be \nefficiently chained. For example:\n\n    string.filter((Character c) => c.letter)\n          .map((Character c) => c.uppercased)\n\nis much less expensive than:\n\n    string.select((Character c) => c.letter)\n          .collect((Character c) => c.uppercased)\n\nFurthermore, it is always easy to produce a new \nimmutable iterable object given the view produced by a\nlazy operation. For example:\n\n    [ *string.filter((Character c) => c.letter)\n          .map((Character c) => c.uppercased) ]\n\nLazy operations normally return an instance of `Iterable`, \nor even a [[List]], [[Map]], or [[Set]].\n\nHowever, there are certain scenarios where an eager \noperation is more useful, more convenient, or no more \nexpensive than a lazy operation, including:\n\n- sorting operations, which are eager by nature,\n- operations which preserve emptiness\/nonemptiness of\n  the receiving iterable object.\n\nEager operations normally return a \n[[sequence|Sequential]]."],by:["Gavin"]},$m:{cycle:{$t:{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"times"}]],$mt:"m",$an:{shared:[],default:[],see:["cycled","repeat"],doc:["Produces a stream formed by repeating the elements of \nthis stream the [[given number of times|times]], or an \nempty stream if `times<=0`."]},$nm:"cycle",$o:{iterable$i44j55:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"}],$mt:"o",$m:{iterator:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"},$mt:"m",$an:{shared:[],actual:[]},$nm:"iterator",$o:{iterator$rc2auh:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"}],$mt:"o",$m:{next:{$t:{comp:"u",$ts:[{$nm:"Element"},{$pk:".",$nm:"Finished"}]},$mt:"m",$an:{shared:[],actual:[]},$nm:"next"}},$at:{iter$sordmy:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"},var:1,$mt:"a",$an:{shared:[],actual:[],variable:[]},$nm:"iter"},count$s5h45z:{$t:{$pk:".",$nm:"Integer"},var:1,$mt:"a",$an:{variable:[]},$nm:"count"}},$nm:"iterator"}}}},$at:{orig$1l40qr:{$t:{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"},$mt:"g",$nm:"orig"}},$nm:"iterable"}}},iterator:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"},$mt:"m",$an:{shared:[],formal:[],doc:["An iterator for the elements belonging to this stream."]},$nm:"iterator"},sort:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"},$ps:[[{$t:{$pk:".",$nm:"Comparison"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"x"},{$t:{$nm:"Element"},$mt:"prm",$nm:"y"}]],$mt:"prm",$pt:"f",$an:{doc:["The function comparing pairs of elements."]},$nm:"comparing"}]],$mt:"m",$an:{shared:[],default:[],see:["byIncreasing","byDecreasing"],doc:["A sequence containing the elements of this stream, \nsorted according to a [[comparator function|comparing]] \nimposing a partial order upon the elements.\n\nFor convenience, the functions [[byIncreasing]] and \n[[byDecreasing]] produce suitable comparator functions:\n\n    \"Hello World!\".sort(byIncreasing(Character.lowercased))\n\nThis operation is eager by nature."]},$nm:"sort"},count:{$t:{$pk:".",$nm:"Integer"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$an:{doc:["The predicate satisfied by the elements to\nbe counted."]},$nm:"selecting"}]],$mt:"m",$an:{shared:[],default:[],doc:["Produces the number of elements in this stream that \nsatisfy the [[given predicate function|selecting]].\nFor an infinite stream, this operation never \nterminates."]},$m:{selecting$wbms4v:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"element"}]],$mt:"m",$an:{doc:["The predicate satisfied by the elements to\nbe counted."]},$nm:"selecting"}},$nm:"count"},skipWhile:{$t:{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"elem"}]],$mt:"prm",$pt:"f",$nm:"skipping"}]],$mt:"m",$an:{shared:[],default:[],doc:["Produces a stream containing the elements of this \nstream, after skipping the leading elements until the \n[[given predicate function|skipping]] returns `false`."]},$m:{skipping$ms4poj:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"elem"}]],$mt:"m",$nm:"skipping"}},$nm:"skipWhile",$o:{iterable$yia8gl:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"}],$mt:"o",$m:{iterator:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"},$mt:"m",$an:{shared:[],actual:[]},$nm:"iterator",$o:{iterator$gjv393:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"}],$mt:"o",$m:{next:{$t:{comp:"u",$ts:[{$nm:"Element"},{$pk:".",$nm:"Finished"}]},$mt:"m",$an:{shared:[],actual:[]},$nm:"next"}},$at:{first$brr4ua:{$t:{$pk:".",$nm:"Boolean"},var:1,$mt:"a",$an:{shared:[],actual:[],variable:[]},$nm:"first"}},$nm:"iterator"}}}},$nm:"iterable"}}},select:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$an:{doc:["The predicate the elements must satisfy."]},$nm:"selecting"}]],$mt:"m",$an:{shared:[],default:[],see:["filter"],doc:["Produces a sequence containing all elements of this \nstream that satisfy the [[given predicate|selecting]].\nAn eager counterpart to [[filter]]."]},$nm:"select"},longerThan:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"length"}]],$mt:"m",$an:{shared:[],default:[],see:["size"],doc:["Determines if this stream has more elements than the \ngiven [[length]]. This is an efficient operation for\nstreams with many elements."]},$nm:"longerThan"},by:{$t:{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"step"}]],$mt:"m",$an:{shared:[],default:[],throws:["AssertionError","if the given step size is nonpositive, \ni.e. `step<1`"],doc:["Produces a stream containing every [[step]]th element \nof this stream. If the step size is `1`, the resulting\nstream contains the same elements as this stream.\n\nFor example, the expression\n\n    (0..10).by(3)\n\nresults in the stream `{ 0, 3, 6, 9 }`.\n\nThe step size must be greater than zero."]},$nm:"by",$o:{iterable$uz32cr:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"}],$mt:"o",$m:{iterator:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"},$mt:"m",$an:{shared:[],actual:[]},$nm:"iterator",$o:{iterator$xxobct:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"}],$mt:"o",$m:{next:{$t:{comp:"u",$ts:[{$nm:"Element"},{$pk:".",$nm:"Finished"}]},$mt:"m",$an:{shared:[],actual:[]},$nm:"next"}},$nm:"iterator"}}}},$nm:"iterable"}}},contains:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"element"}]],$mt:"m",$an:{shared:[],default:[],actual:[]},$nm:"contains"},repeat:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"times"}]],$mt:"m",$an:{shared:[],default:[],see:["cycle"],doc:["Produces a list formed by repeating the elements of \nthis stream the [[given number of times|times]], or an \nempty list if `times<=0`. An eager counterpart to \n[[cycle]]."]},$nm:"repeat"},skip:{$t:{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"skipping"}]],$mt:"m",$an:{shared:[],default:[],doc:["Produces a stream containing the elements of this \nstream, after skipping the first [[skipping]] elements\nproduced by its iterator.\n\nIf this stream does not contain more elements than the \nspecified number of elements to skip, the resulting \nstream has no elements. If the specified number of \nelements to skip is zero or fewer, the resulting stream \ncontains the same elements as this stream."]},$nm:"skip",$o:{iterable$4vxoa3:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"}],$mt:"o",$m:{iterator:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"},$mt:"m",$an:{shared:[],actual:[]},$nm:"iterator"}},$nm:"iterable"}}},every:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"e"}]],$mt:"prm",$pt:"f",$an:{doc:["The predicate that all elements must \nsatisfy."]},$nm:"selecting"}]],$mt:"m",$an:{shared:[],default:[],doc:["Determines if all elements of this stream satisfy the \n[[given predicate function|selecting]].\nThis method returns `true` for empty Iterables."]},$m:{selecting$v14qxn:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"e"}]],$mt:"m",$an:{doc:["The predicate that all elements must \nsatisfy."]},$nm:"selecting"}},$nm:"every"},fold:{$t:{$nm:"Result"},$ps:[[{$t:{$nm:"Result"},$mt:"prm",$nm:"initial"},{$t:{$nm:"Result"},$ps:[[{$t:{$nm:"Result"},$mt:"prm",$nm:"partial"},{$t:{$nm:"Element"},$mt:"prm",$nm:"elem"}]],$mt:"prm",$pt:"f",$an:{doc:["The accumulating function that accepts an\nintermediate result, and the next element."]},$nm:"accumulating"}]],$mt:"m",$tp:[{$nm:"Result"}],$an:{shared:[],default:[],doc:["The result of applying the [[given accumulating \nfunction|accumulating]] to each element of this stream \nin turn.\n\nFor example, the expression\n\n    (1..100).fold(0, plus<Integer>)\n\nresults in the integer `5050`."]},$m:{accumulating$s9k7gi:{$t:{$nm:"Result"},$ps:[[{$t:{$nm:"Result"},$mt:"prm",$nm:"partial"},{$t:{$nm:"Element"},$mt:"prm",$nm:"elem"}]],$mt:"m",$an:{doc:["The accumulating function that accepts an\nintermediate result, and the next element."]},$nm:"accumulating"}},$nm:"fold"},defaultNullElements:{$t:{$tp:[{comp:"u",$mt:"tp",$ts:[{comp:"i",$ts:[{$nm:"Element"},{$pk:".",$nm:"Object"}]},{$nm:"Default"}]},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$nm:"Default"},$mt:"prm",$an:{doc:["A default value that replaces `null` elements."]},$nm:"defaultValue"}]],$mt:"m",$tp:[{$nm:"Default"}],$an:{shared:[],default:[],doc:["Produces a stream containing the elements of this \nstream, replacing every `null` element with the [[given \ndefault value|defaultValue]]. The resulting stream does \nnot have the value `null`."]},$nm:"defaultNullElements"},reduce:{$t:{comp:"u",$ts:[{$nm:"Result"},{$nm:"Element"},{$nm:"Absent"}]},$ps:[[{$t:{$nm:"Result"},$ps:[[{$t:{comp:"u",$ts:[{$nm:"Result"},{$nm:"Element"}]},$mt:"prm",$nm:"partial"},{$t:{$nm:"Element"},$mt:"prm",$nm:"elem"}]],$mt:"prm",$pt:"f",$an:{doc:["The accumulating function that accepts an\nintermediate result, and the next element."]},$nm:"accumulating"}]],$mt:"m",$tp:[{$nm:"Result"}],$an:{shared:[],default:[],doc:["The result of applying the [[given accumulating \nfunction|accumulating]] to each element of this stream \nin turn.\n\nFor example, the expression\n\n    (1..100).reduce(plus<Integer>)\n\nresults in the integer `5050`."]},$m:{accumulating$t8yt4h:{$t:{$nm:"Result"},$ps:[[{$t:{comp:"u",$ts:[{$nm:"Result"},{$nm:"Element"}]},$mt:"prm",$nm:"partial"},{$t:{$nm:"Element"},$mt:"prm",$nm:"elem"}]],$mt:"m",$an:{doc:["The accumulating function that accepts an\nintermediate result, and the next element."]},$nm:"accumulating"}},$nm:"reduce"},following:{$t:{$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Element"},{$nm:"Other"}]},{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$nm:"Other"},$mt:"prm",$nm:"head"}]],$mt:"m",$tp:[{$nm:"Other"}],$an:{shared:[],default:[],doc:["Produces a stream with a [[given initial element|head]], \nfollowed by the elements of this stream."]},$nm:"following",$o:{cons$cje1zn:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Element"},{$nm:"Other"}]},{$mt:"tp",$pk:".",$nm:"Nothing"}],$pk:".",$nm:"Iterable"}],$mt:"o",$m:{iterator:{$t:{$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Element"},{$nm:"Other"}]}],$pk:".",$nm:"Iterator"},$mt:"m",$an:{shared:[],actual:[]},$nm:"iterator",$o:{iterator$alxb7j:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Element"},{$nm:"Other"}]}],$pk:".",$nm:"Iterator"}],$mt:"o",$m:{next:{$t:{comp:"u",$ts:[{$nm:"Element"},{$nm:"Other"},{$pk:".",$nm:"Finished"}]},$mt:"m",$an:{shared:[],actual:[]},$nm:"next"}},$at:{first$nib52k:{$t:{$pk:".",$nm:"Boolean"},var:1,$mt:"a",$an:{shared:[],actual:[],variable:[]},$nm:"first"}},$nm:"iterator"}}}},$nm:"cons"}}},chain:{$t:{$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Element"},{$nm:"Other"}]},{comp:"i",$mt:"tp",$ts:[{$nm:"Absent"},{$nm:"OtherAbsent"}]}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Other"},{$mt:"tp",$nm:"OtherAbsent"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"other"}]],$mt:"m",$tp:[{$nm:"Other"},{$sts:[{$pk:".",$nm:"Null"}],$nm:"OtherAbsent"}],$an:{shared:[],default:[],doc:["The elements of this stream, in the order in which they \noccur in this stream, followed by the elements of the \n[[given stream|other]] in the order in which they occur \nin the given stream."]},$nm:"chain",$o:{chained$lrwq56:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Element"},{$nm:"Other"}]},{comp:"i",$mt:"tp",$ts:[{$nm:"Absent"},{$nm:"OtherAbsent"}]}],$pk:".",$nm:"Iterable"}],$mt:"o",$m:{iterator:{$t:{$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Element"},{$nm:"Other"}]}],$pk:".",$nm:"Iterator"},$mt:"m",$an:{shared:[],actual:[]},$nm:"iterator"}},$nm:"chained"}}},takeWhile:{$t:{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"elem"}]],$mt:"prm",$pt:"f",$nm:"taking"}]],$mt:"m",$an:{shared:[],default:[],doc:["Produces a stream containing the leading elements of \nthis stream until the [[given predicate function|taking]]\nreturns `false`."]},$m:{taking$2i75n4:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"elem"}]],$mt:"m",$nm:"taking"}},$nm:"takeWhile",$o:{iterable$dpvoxf:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"}],$mt:"o",$m:{iterator:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"},$mt:"m",$an:{shared:[],actual:[]},$nm:"iterator",$o:{iterator$z3gwcl:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"}],$mt:"o",$m:{next:{$t:{comp:"u",$ts:[{$nm:"Element"},{$pk:".",$nm:"Finished"}]},$mt:"m",$an:{shared:[],actual:[]},$nm:"next"}},$at:{alive$77gnol:{$t:{$pk:".",$nm:"Boolean"},var:1,$mt:"a",$an:{shared:[],actual:[],variable:[]},$nm:"alive"}},$nm:"iterator"}}}},$nm:"iterable"}}},shorterThan:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"length"}]],$mt:"m",$an:{shared:[],default:[],see:["size"],doc:["Determines if this stream has fewer elements than the \ngiven [[length]]. This is an efficient operation for \nstreams with many elements."]},$nm:"shorterThan"},take:{$t:{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"taking"}]],$mt:"m",$an:{shared:[],default:[],doc:["Produces a stream containing the first [[taking]]\nelements of this stream.\n\nIf the specified number of elements to take is larger \nthan the number of elements of this stream, the \nresulting stream contains the same elements as this \nstream. If the specified number of elements to take is\nfewer than one, the resulting stream has no elements."]},$nm:"take",$o:{iterable$a55cm5:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"}],$mt:"o",$m:{iterator:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"},$mt:"m",$an:{shared:[],actual:[]},$nm:"iterator",$o:{iterator$yoafu7:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"}],$mt:"o",$m:{next:{$t:{comp:"u",$ts:[{$nm:"Element"},{$pk:".",$nm:"Finished"}]},$mt:"m",$an:{shared:[],actual:[]},$nm:"next"}},$at:{i$t88zcj:{$t:{$pk:".",$nm:"Integer"},var:1,$mt:"a",$an:{variable:[]},$nm:"i"}},$nm:"iterator"}}}},$at:{first:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$nm:"Element"}]},$mt:"g",$an:{shared:[],actual:[]},$nm:"first"}},$nm:"iterable"}}},sequence:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"},$mt:"m",$an:{shared:[],default:[],doc:["A [[sequence|Sequential]] containing all the elements \nof this stream, in the same order they occur in this\nstream."]},$nm:"sequence"},any:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"e"}]],$mt:"prm",$pt:"f",$an:{doc:["The predicate that at least one element \nmust satisfy."]},$nm:"selecting"}]],$mt:"m",$an:{shared:[],default:[],doc:["Determines if there is at least one element of this \nstream that satisfies the [[given predicate \nfunction|selecting]].\nThis method returns `false` for empty Iterables."]},$m:{selecting$2vift8:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"e"}]],$mt:"m",$an:{doc:["The predicate that at least one element \nmust satisfy."]},$nm:"selecting"}},$nm:"any"},map:{$t:{$tp:[{$mt:"tp",$nm:"Result"},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$nm:"Result"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"elem"}]],$mt:"prm",$pt:"f",$an:{doc:["The mapping to apply to the elements."]},$nm:"collecting"}]],$mt:"m",$tp:[{$nm:"Result"}],$an:{shared:[],default:[],see:["collect"],doc:["Produces a stream containing the results of applying \nthe [[given mapping|collecting]] to the elements of to \nthis stream.\n\nFor example, the expression\n\n    (0..4).map(10.power)\n\nresults in the stream `{ 1, 10, 100, 1000, 10000 }`."]},$nm:"map"},findLast:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$nm:"Element"}]},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"elem"}]],$mt:"prm",$pt:"f",$an:{doc:["The predicate the element must satisfy."]},$nm:"selecting"}]],$mt:"m",$an:{shared:[],default:[],doc:["The last element of this stream which satisfies the \n[[given predicate function|selecting]], if any, or \n`null` otherwise."]},$m:{selecting$fd7jrj:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"elem"}]],$mt:"m",$an:{doc:["The predicate the element must satisfy."]},$nm:"selecting"}},$nm:"findLast"},filter:{$t:{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"elem"}]],$mt:"prm",$pt:"f",$an:{doc:["The predicate the elements must satisfy."]},$nm:"selecting"}]],$mt:"m",$an:{shared:[],default:[],see:["select"],doc:["Produces a stream containing the elements of this \nstream that satisfy the [[given predicate \nfunction|selecting]].\n\nFor example, the expression\n\n    (1..100).filter(13.divides)\n\nresults in the stream `{ 13, 26, 39, 52, 65, 78, 91 }`."]},$nm:"filter"},find:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$nm:"Element"}]},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"elem"}]],$mt:"prm",$pt:"f",$an:{doc:["The predicate the element must satisfy."]},$nm:"selecting"}]],$mt:"m",$an:{shared:[],default:[],doc:["The first element of this stream which satisfies the \n[[given predicate function|selecting]], if any, or \n`null` otherwise."]},$m:{selecting$7k52ll:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"elem"}]],$mt:"m",$an:{doc:["The predicate the element must satisfy."]},$nm:"selecting"}},$nm:"find"},collect:{$t:{$tp:[{$mt:"tp",$nm:"Result"}],$pk:".",$nm:"Sequential"},$ps:[[{$t:{$nm:"Result"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$an:{doc:["The transformation applied to the elements."]},$nm:"collecting"}]],$mt:"m",$tp:[{$nm:"Result"}],$an:{shared:[],default:[],see:["map"],doc:["Produces a sequence containing the results of applying \nthe [[given mapping|collecting]] to the elements of \nthis stream. An eager counterpart to [[map]]."]},$nm:"collect"}},$at:{cycled:{$t:{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"},$mt:"g",$an:{shared:[],default:[],see:["cycle"],doc:["An infinite stream that produces the elements of this \nstream, repeatedly.\n\nFor example, the expression\n\n    {6, 9}.cycled.taking(5)\n\nevaluates to the stream `{ 6, 9, 6, 9, 6 }`."]},$nm:"cycled",$o:{iterable$qixtkx:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"}],$mt:"o",$m:{iterator:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"},$mt:"m",$an:{shared:[],actual:[]},$nm:"iterator",$o:{iterator$tlvaun:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"}],$mt:"o",$m:{next:{$t:{comp:"u",$ts:[{$nm:"Element"},{$pk:".",$nm:"Finished"}]},$mt:"m",$an:{shared:[],actual:[]},$nm:"next"}},$at:{iter$ep431e:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"},var:1,$mt:"a",$an:{shared:[],actual:[],variable:[]},$nm:"iter"}},$nm:"iterator"}}}},$at:{orig$q0k0r9:{$t:{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"},$mt:"g",$nm:"orig"}},$nm:"iterable"}}},last:{$t:{comp:"u",$ts:[{$nm:"Absent"},{$nm:"Element"}]},$mt:"g",$an:{shared:[],default:[],doc:["The last element returned by the iterator, if any, or \n`null` if this stream is empty. In the case of an \ninfinite stream, this operation never terminates;\nfurthermore, this default implementation iterates all \nelements, which might be very expensive."]},$nm:"last"},indexed:{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:".",$nm:"Integer"},{comp:"i",$mt:"tp",$ts:[{$nm:"Element"},{$pk:".",$nm:"Object"}]}],$pk:".",$nm:"Entry"},{comp:"u",$mt:"tp",$ts:[{comp:"i",$ts:[{$nm:"Element"},{$pk:".",$nm:"Null"}]},{$nm:"Absent"}]}],$pk:".",$nm:"Iterable"},$mt:"g",$an:{shared:[],default:[],doc:["All entries of form `index->element` where `index` is \nthe position at which `element` occurs, for every\nnon-null element of this stream, ordered by increasing \n`index`. For a null element at a given position in this \nstream, there is no entry with the corresponding index \nin the resulting stream.\n\nFor example, the expression \n\n    { \"hello\", null, \"world\" }.indexed\n\nresults in the stream `{ 0->\"hello\", 2->\"world\" }`."]},$nm:"indexed",$o:{indexes$ox5eju:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:".",$nm:"Integer"},{comp:"i",$mt:"tp",$ts:[{$nm:"Element"},{$pk:".",$nm:"Object"}]}],$pk:".",$nm:"Entry"},{comp:"u",$mt:"tp",$ts:[{comp:"i",$ts:[{$nm:"Element"},{$pk:".",$nm:"Null"}]},{$nm:"Absent"}]}],$pk:".",$nm:"Iterable"}],$mt:"o",$m:{iterator:{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:".",$nm:"Integer"},{comp:"i",$mt:"tp",$ts:[{$nm:"Element"},{$pk:".",$nm:"Object"}]}],$pk:".",$nm:"Entry"}],$pk:".",$nm:"Iterator"},$mt:"m",$an:{shared:[],actual:[]},$nm:"iterator",$o:{iterator$l8585k:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$pk:".",$nm:"Integer"},{comp:"i",$mt:"tp",$ts:[{$nm:"Element"},{$pk:".",$nm:"Object"}]}],$pk:".",$nm:"Entry"}],$pk:".",$nm:"Iterator"}],$mt:"o",$m:{next:{$t:{comp:"u",$ts:[{$tp:[{$mt:"tp",$pk:".",$nm:"Integer"},{comp:"i",$mt:"tp",$ts:[{$nm:"Element"},{$pk:".",$nm:"Object"}]}],$pk:".",$nm:"Entry"},{$pk:".",$nm:"Finished"}]},$mt:"m",$an:{shared:[],actual:[]},$nm:"next"}},$at:{i$rm0wck:{$t:{$pk:".",$nm:"Integer"},var:1,$mt:"a",$an:{variable:[]},$nm:"i"}},$nm:"iterator"}}}},$nm:"indexes"}}},string:{$t:{$pk:".",$nm:"String"},$mt:"g",$an:{shared:[],default:[],doc:["A string of form `\"{ x, y, z }\"` where `x`, `y`, and \n`z` are the `string` representations of the elements of \nthis collection, as produced by the iterator of the \nstream, or the string `\"{}\"` if this stream is empty. \nIf the stream is very long, the list of elements might \nbe truncated, as indicated by an ellipse."],actual:[]},$nm:"string"},coalesced:{$t:{$tp:[{comp:"i",$mt:"tp",$ts:[{$nm:"Element"},{$pk:".",$nm:"Object"}]},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$mt:"g",$an:{shared:[],default:[],doc:["The non-null elements of this stream, in the order in\nwhich they occur in this stream. For null elements of \nthe original stream, there is no entry in the resulting \nstream."]},$nm:"coalesced"},empty:{$t:{$pk:".",$nm:"Boolean"},$mt:"g",$an:{shared:[],default:[],doc:["Determines if the stream is empty, that is to say, if \nthe iterator returns no elements."]},$nm:"empty"},rest:{$t:{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$mt:"g",$an:{shared:[],default:[],see:["first"],doc:["A stream containing all but the first element of this \nstream. For a stream with an unstable iteration order, \na different value might be produced each time `rest` is\nevaluated.\n\nTherefore, if the stream `i` has an unstable iteration\norder, the stream `{ i.first, *i.rest }` might not have\nthe same elements as `i`."]},$nm:"rest"},first:{$t:{comp:"u",$ts:[{$nm:"Absent"},{$nm:"Element"}]},$mt:"g",$an:{shared:[],default:[],doc:["The first element returned by the iterator, if any, or \n`null` if this stream is empty. For a stream with an\nunstable iteration order, a different value might be\nproduced each time `first` is evaluated."]},$nm:"first"},size:{$t:{$pk:".",$nm:"Integer"},$mt:"g",$an:{shared:[],default:[],doc:["The number of elements returned by the iterator of this \nstream, if the iterator terminates. In the case of an \ninfinite stream, this operation never terminates."]},$nm:"size"}},$nm:"Iterable"},flatten:{$t:{$tp:[{$mt:"tp",$nm:"Return"},{$mt:"tp",$nm:"Args"}],$pk:".",$nm:"Callable"},$ps:[[{$t:{$nm:"Return"},$ps:[[{$t:{$nm:"Args"},$mt:"prm",$nm:"tuple"}]],$mt:"prm",$pt:"f",$nm:"tupleFunction"}]],$mt:"m",$tp:[{$nm:"Return"},{$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"Anything"}],$pk:".",$nm:"Sequential"}],$nm:"Args"}],$an:{shared:[],native:[],see:["unflatten"],doc:["Given a function with a single parameter of tuple type \n`[P1, P2, ..., Pn]`, return a function with multiple \nparameters of type `P1`, `P2`, ..., `Pn`.\n\nThat is, if `fun` has type `W([X,Y,Z])` then `flatten(fun)` \nhas type `W(X,Y,Z)`."]},$nm:"flatten"},mapPairs:{$t:{$tp:[{$mt:"tp",$nm:"Result"},{comp:"u",$mt:"tp",$ts:[{$nm:"FirstAbsent"},{$nm:"SecondAbsent"}]}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$nm:"Result"},$ps:[[{$t:{$nm:"FirstArgument"},$mt:"prm",$nm:"firstArg"},{$t:{$nm:"SecondArgument"},$mt:"prm",$nm:"secondArg"}]],$mt:"prm",$pt:"f",$nm:"collecting"},{$t:{$tp:[{$mt:"tp",$nm:"FirstArgument"},{$mt:"tp",$nm:"FirstAbsent"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"firstArguments"},{$t:{$tp:[{$mt:"tp",$nm:"SecondArgument"},{$mt:"tp",$nm:"SecondAbsent"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"secondArguments"}]],$mt:"m",$tp:[{$nm:"Result"},{$nm:"FirstArgument"},{$nm:"SecondArgument"},{$sts:[{$pk:".",$nm:"Null"}],$nm:"FirstAbsent"},{$sts:[{$pk:".",$nm:"Null"}],$nm:"SecondAbsent"}],$an:{shared:[],doc:["Given two streams, form a new stream by applying a \nfunction to the arguments in the given streams. The \nlength of the resulting stream is the length of \nthe shorter of the two given streams.\n\nThus:\n\n    mapPairs(fun,xs,ys)[i]==fun(xs[i],ys[i])\n\nfor every `0<=i<min({xs.size,ys.size})`."]},$m:{collecting$tx9avy:{$t:{$nm:"Result"},$ps:[[{$t:{$nm:"FirstArgument"},$mt:"prm",$nm:"firstArg"},{$t:{$nm:"SecondArgument"},$mt:"prm",$nm:"secondArg"}]],$mt:"m",$nm:"collecting"}},$nm:"mapPairs",$o:{iterable$x16jqt:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$nm:"Result"},{comp:"u",$mt:"tp",$ts:[{$nm:"FirstAbsent"},{$nm:"SecondAbsent"}]}],$pk:".",$nm:"Iterable"}],$mt:"o",$m:{iterator:{$t:{$tp:[{$mt:"tp",$nm:"Result"}],$pk:".",$nm:"Iterator"},$mt:"m",$an:{shared:[],actual:[]},$nm:"iterator",$o:{iterator$5i9ypz:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$nm:"Result"}],$pk:".",$nm:"Iterator"}],$mt:"o",$m:{next:{$t:{comp:"u",$ts:[{$nm:"Result"},{$pk:".",$nm:"Finished"}]},$mt:"m",$an:{shared:[],actual:[]},$nm:"next"}},$nm:"iterator"}}}},$nm:"iterable"}}},OptionalAnnotation:{of:[{$nm:"Value"}],$sts:[{$tp:[{$mt:"tp",$nm:"Value"},{comp:"u",$mt:"tp",$ts:[{$pk:".",$nm:"Null"},{$nm:"Value"}]},{$mt:"tp",$nm:"ProgramElement"}],$pk:".",$nm:"ConstrainedAnnotation"}],$mt:"i",$tp:[{$sts:[{$tp:[{$mt:"tp",$nm:"Value"},{$mt:"tp",$nm:"ProgramElement"}],$pk:".",$nm:"OptionalAnnotation"}],variance:"out",$nm:"Value"},{$sts:[{$pk:".",$nm:"Annotated"}],$def:{$pk:".",$nm:"Annotated"},variance:"in",$nm:"ProgramElement"}],$an:{shared:[],see:["Annotation"],doc:["An annotation that may occur at most once at a single program element and \nonly on certain program elements.\n\nAn optional annotation is declared simply by having the annotation class\nsatisfy OptionalAnnotation instead of [[Annotation]]. For example \nthe following would only be allowed on `class` declarations:\n\n    final annotation class ExampleClass() \n            satisfies OptionalAnnotation<Example, ClassDeclaration> {}\n\nAt runtime a [[ceylon.language.meta.declaration::Declaration]] instance \ncan be queried for its `OptionalAnnotation`s of a certain type using \n[[ceylon.language.meta::annotations]] or [[ceylon.language.meta::optionalAnnotation]].\n"]},$nm:"OptionalAnnotation",$st:"Value"},className:{$t:{$pk:".",$nm:"String"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"obj"}]],$mt:"m",$an:{shared:[],native:[],doc:["Return the name of the concrete class of the given \nobject, in a format native to the virtual machine."]},$nm:"className"},List:{$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Collection"},{$tp:[{$mt:"tp",$pk:".",$nm:"Integer"},{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Correspondence"},{$tp:[{$mt:"tp",$pk:".",$nm:"Integer"},{$mt:"tp",$nm:"Element"},{$mt:"tp",$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"}],$pk:".",$nm:"Ranged"}],$mt:"i",$tp:[{variance:"out",$nm:"Element"}],$an:{shared:[],see:["Sequence","Empty","Array"],doc:["Represents a collection in which every element has a \nunique non-negative integer index. The elements of a\nnonempty list are indexed starting with `0` at the \n[[first]] element of the list, and ending with the index\n[[lastIndex]] at the [[last]] element of the list.\n\n- For any nonempty list, `lastIndex==size-1`. \n- For an empty list, `size==0` and the `lastIndex` is \n  `null`.\n\nThus, the range of indexes of the list is formed by the \nexpression `0:list.size`.\n\nA `List` is a [[Collection]] of its elements, and a \n[[Correspondence]] from indices to elements.\n\nDirect access to a list element by index produces a value \nof optional type. The following idiom may be used instead \nof upfront bounds-checking, as long as the list element \ntype is a non-`null` type:\n\n    if (exists char = \"hello world\"[index]) { \n        \/\/do something with char\n    }\n    else {\n        \/\/out of bounds\n    }\n\nWhen an algorithm guarantees that a list contains a given \nindex, the following idiom may be used:\n\n    assert (exists char = \"hello world\"[index]);\n    \/\/do something with char\n\nTo iterate the indices of a `List`, use the following\nidiom:\n\n    for (i->char in \"hello world\".indexed) { ... }\n\n[[Strings|String]], [[sequences|Sequential]], \n[[tuples|Tuple]], and [[arrays|Array]] are all `List`s,\nand are all of fixed length. Variable-length mutable\n`List`s are also possible."]},$m:{segment:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"length"}]],$mt:"m",$an:{shared:[],default:[],actual:[]},$nm:"segment"},longerThan:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"length"}]],$mt:"m",$an:{shared:[],default:[],actual:[]},$nm:"longerThan"},trimLeading:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"elem"}]],$mt:"prm",$pt:"f",$nm:"trimming"}]],$mt:"m",$an:{shared:[],default:[],doc:["Trim the elements satisfying the given [[predicate \nfunction|trimming]] from the start of this list, \nreturning a list no longer than this list."]},$m:{trimming$yu9473:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"elem"}]],$mt:"m",$nm:"trimming"}},$nm:"trimLeading"},contains:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"element"}]],$mt:"m",$an:{shared:[],default:[],see:["occurs"],doc:["Determines if this list contains the given value.\nReturns `true` for every element of this list."],actual:[]},$nm:"contains"},includes:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Anything"}],$pk:".",$nm:"List"},$mt:"prm",$nm:"sublist"}]],$mt:"m",$an:{shared:[],default:[],doc:["Determine if the given list occurs at some index in \nthis list."]},$nm:"includes"},firstInclusion:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Integer"}]},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Anything"}],$pk:".",$nm:"List"},$mt:"prm",$nm:"sublist"}]],$mt:"m",$an:{shared:[],default:[],doc:["The first index in this list at which the given list \noccurs."]},$nm:"firstInclusion"},getFromLast:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$nm:"Element"}]},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],default:[],doc:["Returns the element of this list with the given \n[[index]], where the list is indexed from the _end_ of \nthe list instead of from the start, if the index refers\nto an element of this list, or `null` otherwise. The\nlast element of the list has index `0`, and the first\nelement has index [[lastIndex]]."]},$nm:"getFromLast"},occurs:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Anything"},$mt:"prm",$nm:"element"}]],$mt:"m",$an:{shared:[],default:[],doc:["Determines if the given value occurs as an element of \nthis list."]},$nm:"occurs"},firstOccurrence:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Integer"}]},$ps:[[{$t:{$pk:".",$nm:"Anything"},$mt:"prm",$nm:"element"}]],$mt:"m",$an:{shared:[],default:[],doc:["The first index in this list at which the given element \noccurs."]},$nm:"firstOccurrence"},withTrailing:{$t:{$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Element"},{$nm:"Other"}]}],$pk:".",$nm:"Sequence"},$ps:[[{$t:{$nm:"Other"},$mt:"prm",$an:{doc:["The last element of the resulting sequence."]},$nm:"element"}]],$mt:"m",$tp:[{$nm:"Other"}],$an:{shared:[],default:[],doc:["Returns a new `List` that contains the specified\nelement appended to the end of the elements of this \nlist."]},$nm:"withTrailing"},terminal:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"length"}]],$mt:"m",$an:{shared:[],default:[],see:["List.initial"],doc:["Select the last elements of the list, returning a list \nno longer than the given length. If this list is \nshorter than the given length, return this list. \nOtherwise return a list of the given length."]},$nm:"terminal"},spanTo:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"to"}]],$mt:"m",$an:{shared:[],default:[],actual:[]},$nm:"spanTo"},initial:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"length"}]],$mt:"m",$an:{shared:[],default:[],see:["List.terminal"],doc:["Select the first elements of this list, returning a \nlist no longer than the given length. If this list is \nshorter than the given length, return this list. \nOtherwise return a list of the given length."]},$nm:"initial"},occurrences:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Integer"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$pk:".",$nm:"Anything"},$mt:"prm",$nm:"element"}]],$mt:"m",$an:{shared:[],default:[],doc:["The indexes in this list at which the given element \noccurs."]},$nm:"occurrences"},inclusions:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Integer"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Anything"}],$pk:".",$nm:"List"},$mt:"prm",$nm:"sublist"}]],$mt:"m",$an:{shared:[],default:[],doc:["The indexes in this list at which the given list \noccurs."]},$nm:"inclusions"},trim:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"elem"}]],$mt:"prm",$pt:"f",$nm:"trimming"}]],$mt:"m",$an:{shared:[],default:[],doc:["Trim the elements satisfying the given [[predicate \nfunction|trimming]] from the start and end of this list, \nreturning a list no longer than this list."]},$m:{trimming$69v8un:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"elem"}]],$mt:"m",$nm:"trimming"}},$nm:"trim"},spanFrom:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"}]],$mt:"m",$an:{shared:[],default:[],actual:[]},$nm:"spanFrom"},sublistFrom:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"}]],$mt:"m",$an:{shared:[],default:[],doc:["A sublist of this list, starting at the element with\nthe given [[index|from]]. This is a lazy operation, \nreturning a view of this list."]},$nm:"sublistFrom"},clone:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},$mt:"m",$an:{shared:[],formal:[],actual:[]},$nm:"clone"},indexesWhere:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Integer"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$an:{doc:["The predicate the indexed elements must \nsatisfy"]},$nm:"selecting"}]],$mt:"m",$an:{shared:[],default:[],doc:["The indexes in this list for which the element \nsatisfies the given [[predicate function|selecting]]."]},$nm:"indexesWhere"},iterator:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"},$mt:"m",$an:{shared:[],default:[],actual:[]},$nm:"iterator",$o:{listIterator$182yav:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"}],$mt:"o",$m:{next:{$t:{comp:"u",$ts:[{$nm:"Element"},{$pk:".",$nm:"Finished"}]},$mt:"m",$an:{shared:[],actual:[]},$nm:"next"}},$at:{index$7sxwcc:{$t:{$pk:".",$nm:"Integer"},var:1,$mt:"a",$an:{variable:[]},$nm:"index"}},$nm:"listIterator"}}},startsWith:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Anything"}],$pk:".",$nm:"List"},$mt:"prm",$nm:"sublist"}]],$mt:"m",$an:{shared:[],default:[],doc:["Determine if the given list occurs at the start of this \nlist."]},$nm:"startsWith"},get:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$nm:"Element"}]},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],default:[],doc:["Returns the element of this list with the given \n[[index]] if the index refers to an element of this\nlist, that is, if `0<=index<=list.lastIndex`, or `null` \notherwise. The first element of the list has index `0`,\nand the last element has index [[lastIndex]]."],actual:[]},$nm:"get"},equals:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"that"}]],$mt:"m",$an:{shared:[],default:[],doc:["Two `List`s are considered equal iff they have the \nsame `size` and _entry sets_. The entry set of a list \n`list` is the set of elements of `list.indexed`. This \ndefinition is equivalent to the more intuitive notion \nthat two lists are equal iff they have the same `size` \nand for every index either:\n\n- the lists both have the element `null`, or\n- the lists both have a non-null element, and the\n  two elements are equal.\n\nAs a special exception, a [[String]] is not equal to \nany list which is not also a [[String]]."],actual:[]},$nm:"equals"},firstIndexWhere:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Integer"}]},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$an:{doc:["The predicate the indexed elements must \nsatisfy"]},$nm:"selecting"}]],$mt:"m",$an:{shared:[],default:[],doc:["The first index in this list for which the element \nsatisfies the given [[predicate function|selecting]]."]},$m:{selecting$xkdee7:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"element"}]],$mt:"m",$an:{doc:["The predicate the indexed elements must \nsatisfy"]},$nm:"selecting"}},$nm:"firstIndexWhere"},occursAt:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$an:{doc:["The index at which the value might occur."]},$nm:"index"},{$t:{$pk:".",$nm:"Anything"},$mt:"prm",$nm:"element"}]],$mt:"m",$an:{shared:[],default:[],doc:["Determines if the given value occurs at the given index \nin this list."]},$nm:"occursAt"},sublist:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"to"}]],$mt:"m",$an:{shared:[],default:[],doc:["A sublist of this list, starting at the element with\nindex [[from]], ending at the element with the index \n[[to]]. This is a lazy operation, returning a view of \nthis list."]},$nm:"sublist"},getFromFirst:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$nm:"Element"}]},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],formal:[],see:["getFromLast"],doc:["Returns the element of this list with the given \n[[index]] if the index refers to an element of this\nlist, that is, if `0<=index<=list.lastIndex`, or \n`null` otherwise. The first element of the list has \nindex `0`, and the last element has index [[lastIndex]]."]},$nm:"getFromFirst"},defines:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],default:[],doc:["Determines if the given index refers to an element of \nthis list, that is, if `0<=index<=list.lastIndex`."],actual:[]},$nm:"defines"},sublistTo:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"to"}]],$mt:"m",$an:{shared:[],default:[],doc:["A sublist of this list, ending at the element with the \ngiven [[index|to]]. This is a lazy operation, returning \na view of this list."]},$nm:"sublistTo"},shorterThan:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"length"}]],$mt:"m",$an:{shared:[],default:[],actual:[]},$nm:"shorterThan"},lastInclusion:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Integer"}]},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Anything"}],$pk:".",$nm:"List"},$mt:"prm",$nm:"sublist"}]],$mt:"m",$an:{shared:[],default:[],doc:["The last index in this list at which the given list \noccurs."]},$nm:"lastInclusion"},trimTrailing:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"elem"}]],$mt:"prm",$pt:"f",$nm:"trimming"}]],$mt:"m",$an:{shared:[],default:[],doc:["Trim the elements satisfying the given [[predicate \nfunction|trimming]] from the end of this list, \nreturning a list no longer than this list."]},$m:{trimming$u8vln9:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"elem"}]],$mt:"m",$nm:"trimming"}},$nm:"trimTrailing"},lastIndexWhere:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Integer"}]},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"element"}]],$mt:"prm",$pt:"f",$an:{doc:["The predicate the indexed elements must \nsatisfy"]},$nm:"selecting"}]],$mt:"m",$an:{shared:[],default:[],doc:["The last index in this list for which the element \nsatisfies the given [[predicate function|selecting]]."]},$m:{selecting$j2gqvd:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"element"}]],$mt:"m",$an:{doc:["The predicate the indexed elements must \nsatisfy"]},$nm:"selecting"}},$nm:"lastIndexWhere"},includesAt:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$an:{doc:["The index at which the [[sublist]] might occur."]},$nm:"index"},{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Anything"}],$pk:".",$nm:"List"},$mt:"prm",$nm:"sublist"}]],$mt:"m",$an:{shared:[],default:[],doc:["Determine if the given list occurs at the given index \nof this list."]},$nm:"includesAt"},lastOccurrence:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Integer"}]},$ps:[[{$t:{$pk:".",$nm:"Anything"},$mt:"prm",$nm:"element"}]],$mt:"m",$an:{shared:[],default:[],doc:["The last index in this list at which the given element \noccurs."]},$nm:"lastOccurrence"},findLast:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$nm:"Element"}]},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"elem"}]],$mt:"prm",$pt:"f",$nm:"selecting"}]],$mt:"m",$an:{shared:[],default:[],actual:[]},$m:{selecting$h3aqaj:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"elem"}]],$mt:"m",$nm:"selecting"}},$nm:"findLast"},endsWith:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Anything"}],$pk:".",$nm:"List"},$mt:"prm",$nm:"sublist"}]],$mt:"m",$an:{shared:[],default:[],doc:["Determine if the given list occurs at the end of this \nlist."]},$nm:"endsWith"},withLeading:{$t:{$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Other"},{$nm:"Element"}]}],$pk:".",$nm:"Sequence"},$ps:[[{$t:{$nm:"Other"},$mt:"prm",$an:{doc:["The first element of the resulting sequence."]},$nm:"element"}]],$mt:"m",$tp:[{$nm:"Other"}],$an:{shared:[],default:[],see:["following"],doc:["Returns a new `List` that starts with the specified\nelement, followed by the elements of this list."]},$nm:"withLeading"},span:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"to"}]],$mt:"m",$an:{shared:[],default:[],actual:[]},$nm:"span"}},$c:{Sublist$elvxw4:{super:{$pk:".",$nm:"Object"},$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"}],$ps:[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"to"}],$mt:"c",$m:{clone:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},$mt:"m",$an:{shared:[],actual:[]},$nm:"clone"},iterator:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"},$mt:"m",$an:{shared:[],actual:[]},$nm:"iterator",$o:{iterator$j4f49q:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"}],$mt:"o",$m:{next:{$t:{comp:"u",$ts:[{$nm:"Element"},{$pk:".",$nm:"Finished"}]},$mt:"m",$an:{shared:[],actual:[]},$nm:"next"}},$nm:"iterator"}}},spanTo:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"to"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"spanTo"},segment:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"length"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"segment"},spanFrom:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"spanFrom"},getFromFirst:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$nm:"Element"}]},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"getFromFirst"},span:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"to"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"span"}},$at:{lastIndex:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Integer"}]},$mt:"g",$an:{shared:[],actual:[]},$nm:"lastIndex"},to$1d4wke:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$nm:"to"}},$nm:"Sublist$elvxw4"},Reversed$ijs9g8:{super:{$pk:".",$nm:"Object"},$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"}],$mt:"c",$m:{clone:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},$mt:"m",$an:{shared:[],actual:[]},$nm:"clone"},iterator:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"},$mt:"m",$an:{shared:[],actual:[]},$nm:"iterator",$o:{iterator$49yo9m:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"}],$mt:"o",$m:{next:{$t:{comp:"u",$ts:[{$nm:"Element"},{$pk:".",$nm:"Finished"}]},$mt:"m",$an:{shared:[],actual:[]},$nm:"next"}},$at:{i$x8c4cy:{$t:{$pk:".",$nm:"Integer"},var:1,$mt:"a",$an:{variable:[]},$nm:"i"}},$nm:"iterator"}}},spanTo:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"to"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"spanTo"},segment:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"length"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"segment"},spanFrom:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"spanFrom"},getFromFirst:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$nm:"Element"}]},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"getFromFirst"},span:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"to"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"span"}},$at:{lastIndex:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Integer"}]},$mt:"g",$an:{shared:[],actual:[]},$nm:"lastIndex"}},$nm:"Reversed$ijs9g8"},Rest$fyp886:{super:{$pk:".",$nm:"Object"},$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"}],$ps:[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"}],$mt:"c",$m:{clone:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},$mt:"m",$an:{shared:[],actual:[]},$nm:"clone"},iterator:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"},$mt:"m",$an:{shared:[],actual:[]},$nm:"iterator",$o:{iterator$z81ye0:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Iterator"}],$mt:"o",$m:{next:{$t:{comp:"u",$ts:[{$nm:"Element"},{$pk:".",$nm:"Finished"}]},$mt:"m",$an:{shared:[],actual:[]},$nm:"next"}},$nm:"iterator"}}},spanTo:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"to"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"spanTo"},segment:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"length"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"segment"},spanFrom:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"spanFrom"},getFromFirst:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$nm:"Element"}]},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"getFromFirst"},span:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"to"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"span"}},$at:{lastIndex:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Integer"}]},$mt:"g",$an:{shared:[],actual:[]},$nm:"lastIndex"},from$8r4afz:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$nm:"from"}},$nm:"Rest$fyp886"},Indexes$1g59zu:{super:{$pk:".",$nm:"Object"},$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"Integer"}],$pk:".",$nm:"List"}],$mt:"c",$m:{clone:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Integer"}],$pk:".",$nm:"List"},$mt:"m",$an:{shared:[],actual:[]},$nm:"clone"},iterator:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Integer"}],$pk:".",$nm:"Iterator"},$mt:"m",$an:{shared:[],actual:[]},$nm:"iterator",$o:{iterator$fgqud0:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"Integer"}],$pk:".",$nm:"Iterator"}],$mt:"o",$m:{next:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Integer"},{$pk:".",$nm:"Finished"}]},$mt:"m",$an:{shared:[],actual:[]},$nm:"next"}},$at:{i$izpgzk:{$t:{$pk:".",$nm:"Integer"},var:1,$mt:"a",$an:{variable:[]},$nm:"i"}},$nm:"iterator"}}},spanTo:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Integer"}],$pk:".",$nm:"List"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"to"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"spanTo"},segment:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Integer"}],$pk:".",$nm:"List"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"length"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"segment"},spanFrom:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Integer"}],$pk:".",$nm:"List"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"spanFrom"},getFromFirst:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Integer"}]},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"getFromFirst"},span:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Integer"}],$pk:".",$nm:"List"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"from"},{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"to"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"span"}},$at:{lastIndex:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Integer"}]},$mt:"g",$an:{shared:[],actual:[]},$nm:"lastIndex"},string:{$t:{$pk:".",$nm:"String"},$mt:"g",$an:{shared:[],actual:[]},$nm:"string"}},$nm:"Indexes$1g59zu"}},$at:{lastIndex:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Integer"}]},$mt:"a",$an:{shared:[],formal:[],see:["List.size"],doc:["The index of the last element of the list, or `null` if \nthe list is empty."]},$nm:"lastIndex"},last:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$nm:"Element"}]},$mt:"g",$an:{shared:[],default:[],doc:["Returns the last element of this `List`, if any."],actual:[]},$nm:"last"},keys:{$t:{$tp:[{$mt:"tp",$pk:".",$nm:"Integer"}],$pk:".",$nm:"List"},$mt:"g",$an:{shared:[],default:[],doc:["A list containing all indexes of this list.  This is a \nlazy operation."],actual:[]},$nm:"keys"},hash:{$t:{$pk:".",$nm:"Integer"},$mt:"g",$an:{shared:[],default:[],actual:[]},$nm:"hash"},reversed:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},$mt:"g",$an:{shared:[],default:[],doc:["A list containing the elements of this list in reverse \norder. This is a lazy operation."]},$nm:"reversed"},rest:{$t:{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"List"},$mt:"g",$an:{shared:[],default:[],doc:["The rest of the list, without the first element. This \nis a lazy operation."],actual:[]},$nm:"rest"},first:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$nm:"Element"}]},$mt:"g",$an:{shared:[],default:[],doc:["Returns the first element of this `List`, if any."],actual:[]},$nm:"first"},size:{$t:{$pk:".",$nm:"Integer"},$mt:"g",$an:{shared:[],default:[],see:["List.lastIndex"],doc:["The number of elements in this list, always\n`list.lastIndex+1`."],actual:[]},$nm:"size"}},$nm:"List"},abstract:{$t:{$pk:".",$nm:"AbstractAnnotation"},$mt:"m",$an:{annotation:[],shared:[],doc:["Annotation to mark a class as abstract. An `abstract` class \nmay not be directly instantiated. An `abstract` class may \nhave enumerated cases."]},$annot:1,$nm:"abstract"},zip:{$t:{$tp:[{$mt:"tp",$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Element"},{$nm:"Head"}]},{$mt:"tp",$nm:"Head"},{$mt:"tp",$nm:"Tail"}],$pk:".",$nm:"Tuple"},{comp:"u",$mt:"tp",$ts:[{$nm:"HeadAbsent"},{$nm:"TailAbsent"}]}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Head"},{$mt:"tp",$nm:"HeadAbsent"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"heads"},{$t:{$tp:[{$mt:"tp",$nm:"Tail"},{$mt:"tp",$nm:"TailAbsent"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"tails"}]],$mt:"m",$tp:[{$nm:"Element"},{$nm:"Head"},{$sts:[{$tp:[{$mt:"tp",$nm:"Element"}],$pk:".",$nm:"Sequential"}],$nm:"Tail"},{$sts:[{$pk:".",$nm:"Null"}],$nm:"HeadAbsent"},{$sts:[{$pk:".",$nm:"Null"}],$nm:"TailAbsent"}],$an:{shared:[],doc:["Given a stream of values, and a stream of tuples, produce\na new stream of tuples formed by prepending the values in\nthe first stream to the tuples in the second stream. The \nlength of the resulting stream is the length of the shorter \nof the two given streams.\n\nThus:\n\n    zip(heads, tails)[i]==[heads[i],*tails[i]]\n\nfor every `0<=i<min({heads.size,tails.size})`."]},$nm:"zip"},Resource:{$mt:"i",$an:{shared:[],doc:["An abstraction for resources inside a module.\nA resource is a file contained within a module,\nwhich is accessible at runtime."],by:["Enrique Zamudio"]},$m:{textContent:{$t:{$pk:".",$nm:"String"},$ps:[[{$t:{$pk:".",$nm:"String"},$mt:"prm",$def:1,$nm:"encoding"}]],$mt:"m",$an:{shared:[],formal:[],doc:["Retrieves the contents of the resource as a String,\nusing the specified encoding."]},$nm:"textContent"}},$at:{string:{$t:{$pk:".",$nm:"String"},$mt:"g",$an:{shared:[],actual:[]},$nm:"string"},name:{$t:{$pk:".",$nm:"String"},$mt:"g",$an:{shared:[],default:[],doc:["The name of the resource; usually the filename."]},$nm:"name"},uri:{$t:{$pk:".",$nm:"String"},$mt:"a",$an:{shared:[],formal:[],doc:["The full path to the resource."]},$nm:"uri"},size:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],formal:[],doc:["The size of the resource, in bytes."]},$nm:"size"}},$nm:"Resource"},AssertionError:{super:{$pk:".",$nm:"Error"},$ps:[{$t:{$pk:".",$nm:"String"},$mt:"prm",$nm:"message"}],$mt:"c",$an:{shared:[],doc:["An error that occurs due to an incorrectly writen program. \nAn instance is thrown when an assertion fails, that is, \nwhen a condition in an `assert` statement evaluates to \nfalse at runtime."]},$at:{message$9g6fel:{$t:{$pk:".",$nm:"String"},$mt:"a",$nm:"message"}},$nm:"AssertionError"},zipEntries:{$t:{$tp:[{$mt:"tp",$tp:[{$mt:"tp",$nm:"Key"},{$mt:"tp",$nm:"Item"}],$pk:".",$nm:"Entry"},{comp:"u",$mt:"tp",$ts:[{$nm:"KeyAbsent"},{$nm:"ItemAbsent"}]}],$pk:".",$nm:"Iterable"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Key"},{$mt:"tp",$nm:"KeyAbsent"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"keys"},{$t:{$tp:[{$mt:"tp",$nm:"Item"},{$mt:"tp",$nm:"ItemAbsent"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"items"}]],$mt:"m",$tp:[{$sts:[{$pk:".",$nm:"Object"}],$nm:"Key"},{$sts:[{$pk:".",$nm:"Object"}],$nm:"Item"},{$sts:[{$pk:".",$nm:"Null"}],$nm:"KeyAbsent"},{$sts:[{$pk:".",$nm:"Null"}],$nm:"ItemAbsent"}],$an:{shared:[],doc:["Given two streams, form a new stream consisting of\nall entries where, for any given index in the resulting\nstream, the key of the entry is the element occurring \nat the same index in the first stream, and the item is \nthe element occurring at the same index in the second \nstream. The length of the resulting stream is the \nlength of the shorter of the two given streams.\n\nThus:\n\n    zipEntries(keys,items)[i]==keys[i]->items[i]\n\nfor every `0<=i<min({keys.size,items.size})`."]},$nm:"zipEntries"},equal:{super:{$pk:".",$nm:"Comparison"},$mt:"o",$an:{shared:[],doc:["The value is exactly equal to the given value."]},$nm:"equal"},finished:{super:{$pk:".",$nm:"Finished"},$mt:"o",$an:{shared:[],see:["Iterator"],doc:["A value that indicates that an [[Iterator]] is exhausted \nand has no more values to return."]},$at:{string:{$t:{$pk:".",$nm:"String"},$mt:"g",$an:{shared:[],actual:[]},$nm:"string"}},$nm:"finished"},Boolean:{abstract:1,super:{$pk:".",$nm:"Basic"},of:[{$pk:".",$nm:"true"},{$pk:".",$nm:"false"}],$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"Boolean"}],$pk:".",$nm:"Binary"}],$mt:"c",$an:{abstract:[],shared:[],doc:["A type capable of representing the values [[true]] and \n[[false]] of Boolean logic."],by:["Gavin"]},$m:{clear:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"clear"},xor:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"xor"},get:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"get"},leftLogicalShift:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"shift"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"leftLogicalShift"},set:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"},{$t:{$pk:".",$nm:"Boolean"},$mt:"prm",$def:1,$nm:"bit"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"set"},or:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"or"},rightArithmeticShift:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"shift"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"rightArithmeticShift"},rightLogicalShift:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"shift"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"rightLogicalShift"},flip:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"flip"},and:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Boolean"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],actual:[]},$nm:"and"}},$at:{not:{$t:{$pk:".",$nm:"Boolean"},$mt:"g",$an:{shared:[],actual:[]},$nm:"not"}},$nm:"Boolean"},print:{$t:{$pk:".",$nm:"Anything"},$ps:[[{$t:{$pk:".",$nm:"Anything"},$mt:"prm",$nm:"val"}]],$mt:"m",$an:{shared:[],see:["writeLine"],doc:["Print a line to the standard output of the virtual machine \nprocess, printing the given value's `string`, or `<null>` \nif the value is `null`.\n\nThis method is a shortcut for:\n\n    process.writeLine(line?.string else \"<null>\")\n\nand is intended mainly for debugging purposes."],by:["Gavin"]},$nm:"print"},Error:{super:{$pk:".",$nm:"Throwable"},$ps:[{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"String"}]},$mt:"prm",$def:1,$nm:"description"},{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Throwable"}]},$mt:"prm",$def:1,$nm:"cause"}],$mt:"c",$an:{shared:[],native:[],doc:["The supertype of all errors, which represent unexpected non-transient problems. \nThis includes such things assertion failures and problems with \nthe virtual machine.\n\nErrors cannot usually be recovered from, and therefore are not usually caught."],by:["Gavin","Tom"]},$at:{cause$d2vvlt:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Throwable"}]},$mt:"a",$nm:"cause"},description$rwszx8:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"String"}]},$mt:"a",$nm:"description"}},$nm:"Error"},unzipPairs:{$t:{$tp:[{comp:"u",$mt:"tp",$ts:[{$tp:[{$mt:"tp",$nm:"First"},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"},{comp:"u",$ts:[{$tp:[{$mt:"tp",$nm:"Second"},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"},{$pk:".",$nm:"Nothing"}]}]},{$mt:"tp",$tp:[{$mt:"tp",$nm:"First"},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"},{$mt:"tp",$tp:[{comp:"u",$mt:"tp",$ts:[{$tp:[{$mt:"tp",$nm:"Second"},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"},{$pk:".",$nm:"Nothing"}]},{$mt:"tp",$tp:[{$mt:"tp",$nm:"Second"},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"},{$mt:"tp",$pk:".",$nm:"Empty"}],$pk:".",$nm:"Tuple"}],$pk:".",$nm:"Tuple"},$ps:[[{$t:{$tp:[{$mt:"tp",$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"First"},{comp:"u",$ts:[{$nm:"Second"},{$pk:".",$nm:"Nothing"}]}]},{$mt:"tp",$nm:"First"},{$mt:"tp",$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Second"},{$pk:".",$nm:"Nothing"}]},{$mt:"tp",$nm:"Second"},{$mt:"tp",$pk:".",$nm:"Empty"}],$pk:".",$nm:"Tuple"}],$pk:".",$nm:"Tuple"},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"pairs"}]],$mt:"m",$tp:[{$nm:"First"},{$nm:"Second"},{$sts:[{$pk:".",$nm:"Null"}],$nm:"Absent"}],$an:{shared:[],doc:["Given a stream of pairs, return two streams. The\nfirst stream produces the first elements of the\ngiven pairs, and the second stream produces the\nsecond elements of the given pairs.\n\nThus:\n\n    pairs[i]==[unzipPairs(pairs)[0][i],unzipPairs(pairs)[1][i]]"]},$nm:"unzipPairs"},ChainedIterator:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Element"},{$nm:"Other"}]}],$pk:".",$nm:"Iterator"}],$ps:[{$t:{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"first"},{$t:{$tp:[{$mt:"tp",$nm:"Other"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"second"}],$mt:"c",$tp:[{variance:"out",$nm:"Element"},{variance:"out",$nm:"Other"}],$an:{see:["Iterable.chain"],doc:["An [[Iterator]] that returns the elements of two\n[[Iterable]]s, as if they were chained together."],by:["Enrique Zamudio"]},$m:{next:{$t:{comp:"u",$ts:[{$nm:"Element"},{$nm:"Other"},{$pk:".",$nm:"Finished"}]},$mt:"m",$an:{shared:[],actual:[]},$nm:"next"}},$at:{more$5ang2r:{$t:{$pk:".",$nm:"Boolean"},var:1,$mt:"a",$an:{shared:[],actual:[],variable:[]},$nm:"more"},second$9dpb6y:{$t:{$tp:[{$mt:"tp",$nm:"Other"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$mt:"a",$nm:"second"},first$4h62ti:{$t:{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$mt:"a",$nm:"first"},iter$2p4fla:{$t:{$tp:[{comp:"u",$mt:"tp",$ts:[{$nm:"Element"},{$nm:"Other"}]}],$pk:".",$nm:"Iterator"},var:1,$mt:"a",$an:{shared:[],actual:[],variable:[]},$nm:"iter"}},$nm:"ChainedIterator"},Basic:{abstract:1,super:{$pk:".",$nm:"Object"},$sts:[{$pk:".",$nm:"Identifiable"}],$mt:"c",$an:{abstract:[],shared:[],doc:["The default superclass when no superclass is explicitly\nspecified using `extends`. For the sake of convenience, \nthis class inherits a default definition of value equality \nfrom [[Identifiable]]."],by:["Gavin"]},$nm:"Basic"},DocAnnotation:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"DocAnnotation"},{$mt:"tp",$pk:".",$nm:"Annotated"}],$pk:".",$nm:"OptionalAnnotation"}],$ps:[{$t:{$pk:".",$nm:"String"},$mt:"prm",$an:{shared:[],doc:["Documentation, in Markdown syntax, about the annotated element"]},$nm:"description"}],$mt:"c",$an:{annotation:[],shared:[],final:[],doc:["The annotation class for the [[doc]] annotation."]},$annot:1,$at:{description:{$t:{$pk:".",$nm:"String"},$mt:"a",$an:{shared:[],doc:["Documentation, in Markdown syntax, about the annotated element"]},$nm:"description"}},$nm:"DocAnnotation"},Category:{$mt:"i",$tp:[{$sts:[{$pk:".",$nm:"Object"}],$def:{$pk:".",$nm:"Object"},variance:"in",$nm:"Element"}],$an:{shared:[],doc:["Abstract supertype of objects that contain other values, \ncalled *elements*, where it is possible to efficiently \ndetermine if a given value is an element.\n\n`Category` models a mathematical set, but is distinct \nfrom the [[Set]] collection type.\n\nThe `in` operator may be used to determine if a value\nbelongs to a `Category`:\n\n    if (69 in 0..100) { ... }\n    assert (key->item in { for (n in 0..100) n.string->n**2 });\n\nAn object may be a `Category` of two different disjoint\nelement types. For example, [[String]] is a `Category`\nof its `Character`s and of its substrings.\n\n    if (\"hello\" in \"hello world\") { ... }\n    assert ('.' in string);\n\nOrdinarily, `x==y` implies that `x in cat == y in cat`.\nBut this contract is not required since it is possible to \nform a meaningful `Category` using a different \nequivalence relation. For example, an `IdentitySet` is a \nmeaningful `Category`.\n\nNote that even though `Category<Element>` is declared\ncontravariant in its [[element type|Element]], most types\nthat inherit `Category` are covariant in their element\ntype, and therefore satisfy `Category<Object>`, resulting\nin some loss of typesafety. For such types, [[contains]] \nshould return `false` for any value that is not an \ninstance of the element type. For example, `String` is a \n`Category<Object>`, not a `Category<Character|String>`,\nand `x in string` evaluates to `false` for every `x` that\nis not a `String` or `Character`."],by:["Gavin"]},$m:{containsAny:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"elements"}]],$mt:"m",$an:{shared:[],default:[],see:["contains"],doc:["Returns `true` if any one of the given values belongs \nto this `Category`, or `false` otherwise."]},$nm:"containsAny"},contains:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$nm:"Element"},$mt:"prm",$nm:"element"}]],$mt:"m",$an:{shared:[],formal:[],see:["containsEvery","containsAny"],doc:["Returns `true` if the given value belongs to this\n`Category`, that is, if it is an element of this\n`Category`, or `false` otherwise.\n\nFor most `Category`s the following relationship is \nsatisfied by every pair of elements `x` and `y`:\n\n- if `x==y`, then `x in category == y in category`\n\nHowever, it is possible to form a useful `Category` \nconsistent with some other equivalence relation, for \nexample `===`. Therefore implementations of `contains()` \nwhich do not satisfy this relationship are tolerated."]},$nm:"contains"},containsEvery:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Element"},{$mt:"tp",$pk:".",$nm:"Null"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"elements"}]],$mt:"m",$an:{shared:[],default:[],see:["contains"],doc:["Returns `true` if every one of the given values belongs \nto this `Category`, or `false` otherwise."]},$nm:"containsEvery"}},$nm:"Category"},see:{$t:{$pk:".",$nm:"SeeAnnotation"},$ps:[[{$t:{$tp:[{$mt:"tp",$pk:"ceylon.language.meta.declaration",$nm:"Declaration"}],$pk:".",$nm:"Sequential"},$mt:"prm",seq:1,$an:{doc:["The program elements being referred to."]},$nm:"programElements"}]],$mt:"m",$an:{annotation:[],shared:[],doc:["Annotation to specify API references to other related \nprogram elements."]},$annot:1,$nm:"see"},parseFloatExponent:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Integer"}]},$ps:[[{$t:{$pk:".",$nm:"String"},$mt:"prm",$nm:"string"}]],$mt:"m",$nm:"parseFloatExponent"},parseIntegerExponent:{$t:{comp:"u",$ts:[{$pk:".",$nm:"Null"},{$pk:".",$nm:"Integer"}]},$ps:[[{$t:{$pk:".",$nm:"Character"},$mt:"prm",$nm:"char"}]],$mt:"m",$nm:"parseIntegerExponent"},SharedAnnotation:{super:{$pk:".",$nm:"Basic"},$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"SharedAnnotation"},{comp:"u",$mt:"tp",$ts:[{$pk:"ceylon.language.meta.declaration",$nm:"FunctionOrValueDeclaration"},{$pk:"ceylon.language.meta.declaration",$nm:"ClassOrInterfaceDeclaration"},{$pk:"ceylon.language.meta.declaration",$nm:"Package"},{$pk:"ceylon.language.meta.declaration",$nm:"Import"}]}],$pk:".",$nm:"OptionalAnnotation"}],$mt:"c",$an:{annotation:[],shared:[],final:[],doc:["The annotation class for [[shared]]."]},$annot:1,$nm:"SharedAnnotation"},actual:{$t:{$pk:".",$nm:"ActualAnnotation"},$mt:"m",$an:{annotation:[],shared:[],doc:["Annotation to mark a member of a type as refining a member \nof a supertype."]},$annot:1,$nm:"actual"},Integer:{super:{$pk:".",$nm:"Object"},$sts:[{$tp:[{$mt:"tp",$pk:".",$nm:"Integer"}],$pk:".",$nm:"Integral"},{$tp:[{$mt:"tp",$pk:".",$nm:"Integer"}],$pk:".",$nm:"Binary"},{$tp:[{$mt:"tp",$pk:".",$nm:"Integer"},{$mt:"tp",$pk:".",$nm:"Integer"}],$pk:".",$nm:"Exponentiable"}],$ps:[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"integer"}],$mt:"c",$an:{shared:[],final:[],native:[],see:["runtime"],doc:["An exact representation of a positive whole number, \nnegative whole number, or zero. The largest and smallest \nrepresentable values are platform-dependent:\n\n- For the JVM runtime, integer values between\n  -2<sup>63<\/sup> and 2<sup>63<\/sup>-1 may be represented \n  without overflow.\n- For the JavaScript runtime, integer values with a\n  magnitude no greater than 2<sup>53<\/sup> may be\n  represented without loss of precision.\n\nOverflow or loss of precision occurs silently (with no \nexception raised).\n\nAn integer is considered equal to its [[float]] \nrepresentation.\n\nAn integer is represented as a sequence of bits. Not all of \nthe bits in the representation may be addressed by the \nmethods inherited from [[Binary]]:\n\n- For the JVM runtime, the bits at all indices (0 to 63) \n  are addressable.\n- For the JavaScript runtime, the bits at indices 0 to 31 \n  are addressable.\n\nLiteral integers may be written in decimal, hexadecimal, or\nbinary notation:\n\n    8660\n    #21D4\n    $10000111010100\n\nUnderscores may be used to group digits:\n\n    8660\n    #21_D4\n    $10_0001_1101_0100"]},$m:{notLargerThan:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"notLargerThan"},plus:{$t:{$pk:".",$nm:"Integer"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"plus"},largerThan:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"largerThan"},xor:{$t:{$pk:".",$nm:"Integer"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"xor"},minus:{$t:{$pk:".",$nm:"Integer"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"minus"},get:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],native:[],doc:["If the `index` is for an addressable bit, the value of \nthat bit. Otherwise false."],actual:[]},$nm:"get"},equals:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Object"},$mt:"prm",$nm:"that"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"equals"},or:{$t:{$pk:".",$nm:"Integer"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"or"},set:{$t:{$pk:".",$nm:"Integer"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"},{$t:{$pk:".",$nm:"Boolean"},$mt:"prm",$def:1,$nm:"bit"}]],$mt:"m",$an:{shared:[],native:[],doc:["If the `index` is for an addressable bit, an instance \nwith the same addressable bits as this instance, but \nwith that bit set to `bit`. Otherwise an instance with \nthe same addressable bits as this instance."],actual:[]},$nm:"set"},compare:{$t:{$pk:".",$nm:"Comparison"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"compare"},smallerThan:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"smallerThan"},and:{$t:{$pk:".",$nm:"Integer"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"and"},clear:{$t:{$pk:".",$nm:"Integer"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],native:[],doc:["If the `index` is for an addressable bit, an instance \nwith the same addressable bits as this instance, but \nwith that bit cleared. Otherwise an instance with the \nsame addressable bits as this instance."],actual:[]},$nm:"clear"},remainder:{$t:{$pk:".",$nm:"Integer"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"remainder"},plusInteger:{$t:{$pk:".",$nm:"Integer"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"integer"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"plusInteger"},notSmallerThan:{$t:{$pk:".",$nm:"Boolean"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"notSmallerThan"},leftLogicalShift:{$t:{$pk:".",$nm:"Integer"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"shift"}]],$mt:"m",$an:{shared:[],native:[],doc:["If shift is in the range of addressable bits \n(`0..runtime.integerAddressableSize-1`), shift the \naddressable bits to the left by `shift` positions.\nOtherwise shift the addressable bits to the left by \n`(bits + (shift % bits)) % bits` where \n`bits=runtime.integerAddressableSize`."],actual:[]},$nm:"leftLogicalShift"},times:{$t:{$pk:".",$nm:"Integer"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"times"},powerOfInteger:{$t:{$pk:".",$nm:"Integer"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"integer"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"powerOfInteger"},timesInteger:{$t:{$pk:".",$nm:"Integer"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"integer"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"timesInteger"},rightArithmeticShift:{$t:{$pk:".",$nm:"Integer"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"shift"}]],$mt:"m",$an:{shared:[],native:[],doc:["If shift is in the range of addressable bits \n(`0..runtime.integerAddressableSize-1`), shift the \naddressable bits to the right by `shift` positions, \nwith sign extension. Otherwise shift the addressable \nbits to the right by `(bits + (shift % bits)) % bits` \nwhere `bits=runtime.integerAddressableSize`."],actual:[]},$nm:"rightArithmeticShift"},rightLogicalShift:{$t:{$pk:".",$nm:"Integer"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"shift"}]],$mt:"m",$an:{shared:[],native:[],doc:["If shift is in the range of addressable bits \n(`0..runtime.integerAddressableSize-1`), shift the \naddressable bits to the right by `shift` positions, \nwith zero extension. Otherwise shift the addressable \nbits to the right by `(bits + (shift % bits)) % bits` \nwhere `bits=runtime.integerAddressableSize`."],actual:[]},$nm:"rightLogicalShift"},power:{$t:{$pk:".",$nm:"Integer"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"power"},divided:{$t:{$pk:".",$nm:"Integer"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"other"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"divided"},neighbour:{$t:{$pk:".",$nm:"Integer"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"offset"}]],$mt:"m",$an:{shared:[],native:[],actual:[]},$nm:"neighbour"},flip:{$t:{$pk:".",$nm:"Integer"},$ps:[[{$t:{$pk:".",$nm:"Integer"},$mt:"prm",$nm:"index"}]],$mt:"m",$an:{shared:[],native:[],doc:["If the `index` is for an addressable bit, an instance \nwith the same addressable bits as this instance, but \nwith that bit flipped. Otherwise an instance with the \nsame addressable bits as this instance."],actual:[]},$nm:"flip"}},$at:{successor:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],native:[],actual:[]},$nm:"successor"},hash:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],native:[],actual:[]},$nm:"hash"},magnitude:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],native:[],actual:[]},$nm:"magnitude"},zero:{$t:{$pk:".",$nm:"Boolean"},$mt:"a",$an:{shared:[],native:[],actual:[]},$nm:"zero"},fractionalPart:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],native:[],actual:[]},$nm:"fractionalPart"},float:{$t:{$pk:".",$nm:"Float"},$mt:"a",$an:{shared:[],native:[],throws:["OverflowException","if the number cannot be represented as a `Float`\nwithout loss of precision"],doc:["The number, represented as a [[Float]], if such a \nrepresentation is possible."]},$nm:"float"},integer$woput0:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$nm:"integer"},character:{$t:{$pk:".",$nm:"Character"},$mt:"a",$an:{shared:[],native:[],throws:["OverflowException","if there is no such character"],doc:["The UTF-32 character with this UCS code point."]},$nm:"character"},not:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],native:[],actual:[]},$nm:"not"},predecessor:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],native:[],actual:[]},$nm:"predecessor"},sign:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],native:[],actual:[]},$nm:"sign"},unit:{$t:{$pk:".",$nm:"Boolean"},$mt:"a",$an:{shared:[],native:[],actual:[]},$nm:"unit"},string:{$t:{$pk:".",$nm:"String"},$mt:"a",$an:{shared:[],native:[],actual:[]},$nm:"string"},integerValue:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],native:[],actual:[]},$nm:"integerValue"},wholePart:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],native:[],actual:[]},$nm:"wholePart"},negative:{$t:{$pk:".",$nm:"Boolean"},$mt:"a",$an:{shared:[],native:[],actual:[]},$nm:"negative"},positive:{$t:{$pk:".",$nm:"Boolean"},$mt:"a",$an:{shared:[],native:[],actual:[]},$nm:"positive"},negated:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$an:{shared:[],native:[],actual:[]},$nm:"negated"}},$nm:"Integer"},first:{$t:{comp:"u",$ts:[{$nm:"Absent"},{$nm:"Value"}]},$ps:[[{$t:{$tp:[{$mt:"tp",$nm:"Value"},{$mt:"tp",$nm:"Absent"}],$pk:".",$nm:"Iterable"},$mt:"prm",$nm:"values"}]],$mt:"m",$tp:[{$nm:"Value"},{$sts:[{$pk:".",$nm:"Null"}],$nm:"Absent"}],$an:{shared:[],doc:["The first of the given values (usually a comprehension),\nif any."]},$nm:"first"},zeroInt:{$t:{$pk:".",$nm:"Integer"},$mt:"a",$nm:"zeroInt"}},"$mod-bin":"7.0"};
ex$.$CCMM$=function(){return $CCMM$;};
var BasicID=1;//used by identityHash
function getT$name() {return this.constructor.T$name;}
function getT$all() {return this.constructor.T$all;}
function initType(type, typeName) {
var cons = function() {}
type.$$ = cons;
cons.T$name = typeName;
cons.T$all = {}
cons.T$all[typeName] = type;
for (var i=2; i<arguments.length; ++i) {
var superTypes = arguments[i].$$.T$all;
for (var $ in superTypes) {cons.T$all[$] = superTypes[$]}
}
cons.prototype.getT$name = getT$name;
cons.prototype.getT$all = getT$all;
}
function initTypeProto(type, typeName) {
initType.apply(this, arguments);
var args = [].slice.call(arguments, 2);
args.unshift(type);
inheritProto.apply(this, args);
}
function initTypeProtoI(type, typeName) {
initType.apply(this, arguments);
var args = [].slice.call(arguments, 2);
if (type.$$.T$all['ceylon.language::Object']===undefined) {
type.$$.T$all['ceylon.language::Object']=$_Object;
//args.unshift($_Object);
}
args.unshift(type);
inheritProto.apply(this, args);
}
function initExistingType(type, cons, typeName) {
type.$$ = cons;
cons.T$name = typeName;
cons.T$all = {}
cons.T$all[typeName] = type;
for (var i=3; i<arguments.length; ++i) {
var superTypes = arguments[i].$$.T$all;
for (var $ in superTypes) {cons.T$all[$] = superTypes[$]}
}
var proto = cons.prototype;
if (proto !== undefined) {
try {
proto.getT$name = getT$name;
proto.getT$all = getT$all;
} catch (exc) {
// browser probably prevented access to the prototype
}
}
}
function initExistingTypeProto(type, cons, typeName) {
var args = [].slice.call(arguments, 0);
args.push($init$Basic());
initExistingType.apply(this, args);
var proto = cons.prototype;
if ((proto !== undefined) && (proto.getHash === undefined)) {
var origToString = proto.toString;
try {
inheritProto(type, Basic);
proto.toString = origToString;
} catch (exc) {
// browser probably prevented access to the prototype
}
}
}
function inheritProto(type) {
var proto = type.$$.prototype;
for (var i=1; i<arguments.length; ++i) {
var superProto = arguments[i].$$.prototype;
var names = Object.getOwnPropertyNames(superProto);
for (var j=0; j<names.length; ++j) {
var name = names[j];
var desc = Object.getOwnPropertyDescriptor(superProto, name);
// only copy own, enumerable properties
if (desc && desc.enumerable) {
if (desc.get) {
// defined through getter/setter, so copy the definition
Object.defineProperty(proto, name, desc);
} else if (proto[name]===undefined || desc.value.$fml===undefined) {
proto[name] = desc.value;
}
}
}
}
}
// Define a property on the given object (which may be a prototype).
// "get" and "set" are getter/setter functions, and the latter is optional.
function atr$(obj, name, get, set, metamodel,settermm) {
Object.defineProperty(obj, name, {get: get, set: set, configurable: true, enumerable: true});
//if (name[0]==='$')name=name.substring(1);//names matching reserved words are prefixed with $
obj['$prop$get'+name[0].toUpperCase()+name.substring(1)] = {get:get, set:set, $crtmm$:metamodel};
if (settermm)set.$crtmm$=settermm;
}
// Create a copy of the given property. The name of the copied property is name+suffix.
// This is used in closure mode to provide access to inherited attribute implementations.
function copySuperAttr(obj, name, suffix) {
var desc;
var o = obj;
// It may be an inherited property, so check the prototype chain.
do {
if ((desc = Object.getOwnPropertyDescriptor(o, name))) {break;}
o = o.__proto__;
} while (o);
if (desc) {
Object.defineProperty(obj, name+suffix, desc);
}
}
// read/writeAttrib return the getter/setter for the given property as defined in the
// given type. This is used in prototype mode to access inherited attribute implementations.
function attrGetter(type, name) {
return Object.getOwnPropertyDescriptor(type.$$.prototype, name).get;
}
function attrSetter(type, name, value) {
return Object.getOwnPropertyDescriptor(type.$$.prototype, name).set;
}
ex$.initType=initType;
ex$.initTypeProto=initTypeProto;
ex$.initTypeProtoI=initTypeProtoI;
ex$.initExistingType=initExistingType;
ex$.initExistingTypeProto=initExistingTypeProto;
ex$.inheritProto=inheritProto;
ex$.atr$=atr$;
ex$.copySuperAttr=copySuperAttr;
ex$.attrGetter=attrGetter;
ex$.attrSetter=attrSetter;
function Anything(anything$){
$init$Anything();
if(anything$===undefined)throwexc(InvocationException$meta$model("Cannot instantiate abstract class"),'?','?')
return anything$;
}
Anything.$crtmm$=function(){return{mod:$CCMM$,$ps:[],of:[{t:$_Object},{t:Null}],$an:function(){return[doc($CCMM$['ceylon.language'].Anything.$an.doc[0]),by(["Gavin"].reifyCeylonType({t:$_String})),shared(),abstract()];},d:['$','Anything']};};
ex$.Anything=Anything;
function $init$Anything(){
if(Anything.$$===undefined){initTypeProto(Anything,'ceylon.language::Anything');}
return Anything;
}
ex$.$init$Anything=$init$Anything;$init$Anything();
function Nothing(wat) {
throw "Nothing";
}
initType(Nothing, 'ceylon.language::Nothing');
//This is quite a special case, since Nothing is not in the model, we need to insert it there
$CCMM$['ceylon.language']["Nothing"]={"$mt":"c","$an":{"shared":[]},"$nm":"Nothing"};
Nothing.$crtmm$=function(){return{$ps:[],$an:function(){return[shared()]},mod:$CCMM$,d:['$','Nothing']};}
function $_Object(object$){$init$$_Object();if(object$===undefined)throwexc(InvocationException$meta$model("Cannot instantiate abstract class"),'?','?')
Anything(object$);object$.$prop$getString={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$_Object,$an:function(){return[doc($CCMM$['ceylon.language'].Object.$at.string.$an.doc[0]),shared(),$_default()];},d:['$','Object','$at','string']};}};object$.$prop$getString.get=function(){return string};return object$;}
$_Object.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Anything},$ps:[],$an:function(){return[doc($CCMM$['ceylon.language'].Object.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Basic),$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Null)].reifyCeylonType({t:ClassDeclaration$meta$declaration})),by(["Gavin"].reifyCeylonType({t:$_String})),shared(),abstract()];},d:['$','Object']};};
ex$.$_Object=$_Object;function $init$$_Object(){if($_Object.$$===undefined){initTypeProto($_Object,'ceylon.language::Object',$init$Anything());
(function(object$){object$.equals={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'that',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:$_Object,$an:function(){return[doc($CCMM$['ceylon.language'].Object.$m.equals.$an.doc[0]),shared(),formal()];},d:['$','Object','$m','equals']};}};object$.$prop$getHash={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$_Object,$an:function(){return[doc($CCMM$['ceylon.language'].Object.$at.hash.$an.doc[0]),shared(),formal()];},d:['$','Object','$at','hash']};}};atr$(object$,'string',function(){var object$=this;return className(object$).plus("@").plus(object$.hash.string);},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$_Object,$an:function(){return[doc($CCMM$['ceylon.language'].Object.$at.string.$an.doc[0]),shared(),$_default()];},d:['$','Object','$at','string']};});})($_Object.$$.prototype);}
return $_Object;}
ex$.$init$$_Object=$init$$_Object;$init$$_Object();function Null(null$){$init$Null();if(null$===undefined)throwexc(InvocationException$meta$model("Cannot instantiate abstract class"),'?','?')
Anything(null$);return null$;}
Null.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Anything},$ps:[],of:[$prop$get$1],$an:function(){return[doc($CCMM$['ceylon.language'].Null.$an.doc[0]),see([$init$OpenValue()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$prop$getNull)].reifyCeylonType({t:ValueDeclaration$meta$declaration})),by(["Gavin"].reifyCeylonType({t:$_String})),shared(),abstract()];},d:['$','Null']};};
ex$.Null=Null;function $init$Null(){if(Null.$$===undefined){initTypeProto(Null,'ceylon.language::Null',$init$Anything());
}
return Null;}
ex$.$init$Null=$init$Null;$init$Null();function $1(){var null$=new $1.$$;Null(null$);return null$;
};$1.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Null},$an:function(){return[doc("The null value."),by("Gavin"),shared()];},d:['$','null']};};function $init$$1(){if($1.$$===undefined){initTypeProto($1,'ceylon.language::null',$init$Null());
}
return $1;}
ex$.$init$$1=$init$$1;$init$$1();var $2;function getNull(){if($2===undefined){$2=$init$$1()();$2.$crtmm$=getNull.$crtmm$;}
return $2;}
ex$.getNull=getNull;getNull.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Null},$an:function(){return[doc("The null value."),by(["Gavin"].reifyCeylonType({t:$_String})),shared()];},d:['$','null']};};$prop$getNull={get:getNull,$crtmm$:getNull.$crtmm$};get$1=getNull;$prop$get$1=getNull;ex$.$prop$getNull=$prop$getNull;function Identifiable(identifiable$){identifiable$.$prop$getHash={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Identifiable,$an:function(){return[doc($CCMM$['ceylon.language'].Identifiable.$at.hash.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),identityHash)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared(),$_default(),actual()];},d:['$','Identifiable','$at','hash']};}};identifiable$.$prop$getHash.get=function(){return hash};}
Identifiable.$crtmm$=function(){return{mod:$CCMM$,$an:function(){return[doc($CCMM$['ceylon.language'].Identifiable.$an.doc[0]),by(["Gavin"].reifyCeylonType({t:$_String})),shared()];},d:['$','Identifiable']};};
ex$.Identifiable=Identifiable;function $init$Identifiable(){if(Identifiable.$$===undefined){initTypeProtoI(Identifiable,'ceylon.language::Identifiable');
(function(identifiable$){identifiable$.equals=function equals($3){var identifiable$=this;var $4;if(is$(($4=$3),{t:Identifiable})){return (identifiable$===$4);}else {return false;}};identifiable$.equals.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'that',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:Identifiable,$an:function(){return[doc($CCMM$['ceylon.language'].Identifiable.$m.equals.$an.doc[0]),shared(),$_default(),actual()];},d:['$','Identifiable','$m','equals']};};atr$(identifiable$,'hash',function(){var identifiable$=this;return identityHash(identifiable$);},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Identifiable,$an:function(){return[doc($CCMM$['ceylon.language'].Identifiable.$at.hash.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),identityHash)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared(),$_default(),actual()];},d:['$','Identifiable','$at','hash']};});})(Identifiable.$$.prototype);}
return Identifiable;}
ex$.$init$Identifiable=$init$Identifiable;$init$Identifiable();function Callable($$targs$$,callable$){set_type_args(callable$,$$targs$$);}
Callable.$crtmm$=function(){return{mod:$CCMM$,$tp:{Return$Callable:{'var':'out'},Arguments$Callable:{'var':'in','satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].Callable.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Tuple)].reifyCeylonType({t:ClassDeclaration$meta$declaration})),shared()];},d:['$','Callable']};};
ex$.Callable=Callable;function $init$Callable(){if(Callable.$$===undefined){initTypeProtoI(Callable,'ceylon.language::Callable');
}
return Callable;}
ex$.$init$Callable=$init$Callable;$init$Callable();function $JsCallable(callable,parms,targs) {
if (callable.getT$all === undefined) {
callable.getT$all=Callable.getT$all;
}
var set_meta = callable.$crtmm$ === undefined;
if (set_meta) {
callable.$crtmm$={$ps:[],mod:$CCMM$,d:['$','Callable']};
if (parms !== undefined) {
callable.$crtmm$['$ps']=parms;
}
}
if (targs !== undefined && callable.$$targs$$ === undefined) {
callable.$$targs$$=targs;
if (set_meta) {
callable.$crtmm$['$t']=targs['Return'];
}
}
return callable;
}
initExistingTypeProto($JsCallable, Function, 'ceylon.language::JsCallable', Callable);
function noop() { return null; }
function JsCallable(o,f) {
if (o === null) return noop;
var f2 = function() { return f.apply(o, arguments); };
f2.$crtmm$=f.$crtmm$===undefined?Callable.$crtmm$:f.$crtmm$;
return f2;
}
JsCallable.$crtmm$=function(){return{ 'satisfies':[{t:Callable,a:{Return$Callable:'Return$Callable',Arguments$Callable:'Arguments$Callable'}}],
$tp:{Return$Callable:{'var':'out'}, Arguments$Callable:{'var':'in'}},$an:function(){return[shared()];},mod:$CCMM$,d:['$','Callable']};}
function JsCallableList(value) {
return function() {
var rval = Array(value.length);
for (var i = 0; i < value.length; i++) {
var c = value[i];
rval[i] = c.f.apply(c.o, arguments);
}
return value.length===0?getEmpty():ArraySequence(rval,{Element$ArraySequence:{t:Callable}});
};
}
JsCallableList.$crtmm$={$tp:{Return$Callable:{'var':'out'}, Arguments$Callable:{'var':'in'}},$an:function(){return[shared()];},mod:$CCMM$,d:['$','Callable']};
ex$.JsCallableList=JsCallableList;
ex$.JsCallable=JsCallable;
ex$.$JsCallable=$JsCallable;
function Comprehension(makeNextFunc, $$targs$$, compr) {
$init$Comprehension();
if (compr===undefined) {compr = new Comprehension.$$;}
Basic(compr);
compr.makeNextFunc = makeNextFunc;
compr.$$targs$$=$$targs$$;
return compr;
}
Comprehension.$crtmm$={$nm:'Comprehension',$an:function(){return[shared()];},mod:$CCMM$,d:['$','Iterable']};
function $init$Comprehension() {
if (Comprehension.$$===undefined) {
initTypeProto(Comprehension, 'ceylon.language::Comprehension', $init$Basic(), $init$Iterable());
}
return Comprehension;
}
$init$Comprehension();
var Comprehension$proto = Comprehension.$$.prototype;
Comprehension$proto.iterator = function() {
return ComprehensionIterator(this.makeNextFunc(), this.$$targs$$);
}
Comprehension$proto.sequence = function() {
return sequential(this,{Element$sequential:this.$$targs$$.Element$Iterable});
}
Comprehension$proto.sequence.$crtmm$={$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','Iterable','$m','sequence']}
ex$.Comprehension=Comprehension;
function ComprehensionIterator(nextFunc, $$targs$$, it) {
$init$ComprehensionIterator();
if (it===undefined) {it = new ComprehensionIterator.$$;}
it.$$targs$$=$$targs$$;
Basic(it);
it.next = nextFunc;
return it;
}
ComprehensionIterator.$crtmm$={$nm:'ComprehensionIterator',$an:function(){return[shared()];},mod:$CCMM$,d:['$','Iterator']};
function $init$ComprehensionIterator() {
if (ComprehensionIterator.$$===undefined) {
initTypeProto(ComprehensionIterator, 'ceylon.language::ComprehensionIterator',
$init$Basic(), $init$Iterator());
}
return ComprehensionIterator;
}
$init$ComprehensionIterator();
function Basic(basic$){$init$Basic();if(basic$===undefined)throwexc(InvocationException$meta$model("Cannot instantiate abstract class"),'?','?')
$_Object(basic$);Identifiable(basic$);return basic$;}
Basic.$crtmm$=function(){return{mod:$CCMM$,'super':{t:$_Object},$ps:[],satisfies:[{t:Identifiable}],$an:function(){return[doc($CCMM$['ceylon.language'].Basic.$an.doc[0]),by(["Gavin"].reifyCeylonType({t:$_String})),shared(),abstract()];},d:['$','Basic']};};
ex$.Basic=Basic;function $init$Basic(){if(Basic.$$===undefined){initTypeProto(Basic,'ceylon.language::Basic',$init$$_Object(),$init$Identifiable());
}
return Basic;}
ex$.$init$Basic=$init$Basic;$init$Basic();function Throwable($5,cause,throwable$){$init$Throwable();if(throwable$===undefined)throwexc(InvocationException$meta$model("Cannot instantiate abstract class"),'?','?')
if($5===undefined){$5=null;}
throwable$.$5_=$5;if(cause===undefined){cause=null;}
throwable$.cause_=cause;if(typeof($init$native$Throwable$before)==='function')$init$native$Throwable$before(throwable$);throwable$.$prop$getCause={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Throwable}]},$cont:Throwable,$an:function(){return[doc("The underlying cause of this exception."),shared()];},d:['$','Throwable','$at','cause']};}};throwable$.$prop$getCause.get=function(){return cause};throwable$.$prop$get$5={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:$_String}]},$cont:Throwable,$an:function(){return[doc("A description of the problem.")];},d:['$','Throwable','$at','description$arbt90']};}};throwable$.$prop$get$5.get=function(){return $5};throwable$.$prop$getMessage={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Throwable,$an:function(){return[doc($CCMM$['ceylon.language'].Throwable.$at.message.$an.doc[0]),see([$init$OpenValue()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Throwable().$$.prototype.$prop$getCause)].reifyCeylonType({t:ValueDeclaration$meta$declaration})),shared(),$_default()];},d:['$','Throwable','$at','message']};}};throwable$.$prop$getMessage.get=function(){return message};throwable$.$prop$getString={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Throwable,$an:function(){return[shared(),actual(),$_default()];},d:['$','Throwable','$at','string']};}};throwable$.$prop$getString.get=function(){return string};throwable$.$prop$getSuppressed={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Throwable}}},$cont:Throwable,$an:function(){return[doc($CCMM$['ceylon.language'].Throwable.$at.suppressed.$an.doc[0]),shared(),$_native()];},d:['$','Throwable','$at','suppressed']};}};if(typeof($init$native$Throwable$after)==='function')$init$native$Throwable$after(throwable$);return throwable$;}
Throwable.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[{$nm:'description',$mt:'prm',$def:1,$t:{t:'u',l:[{t:Null},{t:$_String}]},$an:function(){return[doc("A description of the problem.")];}},{$nm:'cause',$mt:'prm',$def:1,$t:{t:'u',l:[{t:Null},{t:Throwable}]},$an:function(){return[doc("The underlying cause of this exception."),shared()];}}],of:[{t:Exception},{t:$_Error}],$an:function(){return[doc($CCMM$['ceylon.language'].Throwable.$an.doc[0]),by(["Gavin","Tom"].reifyCeylonType({t:$_String})),shared(),$_native(),abstract()];},d:['$','Throwable']};};
ex$.Throwable=Throwable;function $init$Throwable(){if(Throwable.$$===undefined){initTypeProto(Throwable,'ceylon.language::Throwable',Basic);
(function(throwable$){atr$(throwable$,'cause',function(){return this.cause_;},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Throwable}]},$cont:Throwable,$an:function(){return[doc("The underlying cause of this exception."),shared()];},d:['$','Throwable','$at','cause']};});atr$(throwable$,'$5',function(){return this.$5_;},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:$_String}]},$cont:Throwable,$an:function(){return[doc("A description of the problem.")];},d:['$','Throwable','$at','description$arbt90']};});atr$(throwable$,'message',function(){var throwable$=this;return ($6=($7=throwable$.$5,nn$($7)?$7:($8=throwable$.cause,nn$($8)?$8.message:null)),nn$($6)?$6:"");},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Throwable,$an:function(){return[doc($CCMM$['ceylon.language'].Throwable.$at.message.$an.doc[0]),see([$init$OpenValue()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Throwable().$$.prototype.$prop$getCause)].reifyCeylonType({t:ValueDeclaration$meta$declaration})),shared(),$_default()];},d:['$','Throwable','$at','message']};});atr$(throwable$,'string',function(){var throwable$=this;return className(throwable$).plus(" \"".plus(throwable$.message).plus("\""));},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Throwable,$an:function(){return[shared(),actual(),$_default()];},d:['$','Throwable','$at','string']};});throwable$.printStackTrace=function (){var throwable$=this;return printStackTrace(throwable$);};throwable$.printStackTrace.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[],$cont:Throwable,$an:function(){return[doc($CCMM$['ceylon.language'].Throwable.$m.printStackTrace.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),printStackTrace)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared()];},d:['$','Throwable','$m','printStackTrace']};};throwable$.addSuppressed=function addSuppressed(sup) {
if (this.$sups$===undefined) {
this.$sups$=[].reifyCeylonType({t:Throwable});
}
if (sup.getT$name === undefined) sup = NativeException(sup);
this.$sups$.push(sup);
}
throwable$.addSuppressed.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'suppressed',$mt:'prm',$t:{t:Throwable},$an:function(){return[];}}],$cont:Throwable,$an:function(){return[doc($CCMM$['ceylon.language'].Throwable.$m.addSuppressed.$an.doc[0]),shared(),$_native()];},d:['$','Throwable','$m','addSuppressed']};};atr$(throwable$,'suppressed',function(){return this.$sups$===undefined||this.$sups$.length===0?getEmpty():ArraySequence(this.$sups$,{Element$ArraySequence:{t:Throwable}});
throwable$.suppressed.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Throwable}}},$cont:Throwable,$an:function(){return[doc($CCMM$['ceylon.language'].Throwable.$at.suppressed.$an.doc[0]),shared(),$_native()];},d:['$','Throwable','$at','suppressed']};};},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Throwable}}},$cont:Throwable,$an:function(){return[doc($CCMM$['ceylon.language'].Throwable.$at.suppressed.$an.doc[0]),shared(),$_native()];},d:['$','Throwable','$at','suppressed']};});})(Throwable.$$.prototype);}
return Throwable;}
ex$.$init$Throwable=$init$Throwable;$init$Throwable();var $6,$7,$8;function printStackTrace(exc, _write) {
if (_write===undefined)_write=getProcess().writeError;
var _c = className(exc);
if (exc.message.size > 0) {
_c += ' "' + exc.message + '"';
}
_write(_c);_write(getOperatingSystem().newline);
for (var i=0; i<exc.stack_trace.length; i++) {
var f = exc.stack_trace[i];
if (f == "CIRCULAR") {
_write("    (Infinite loop detected)");
_write(getOperatingSystem().newline);
return;
}
var mm = getrtmm$$(f);
if (mm) {
var _src = '';
if (i==0) {
if (exc.$loc && exc.$file) _src = ' (' + exc.$file + " " + exc.$loc + ')';
}
var pkn=mm.d[0];
if (pkn==='$')pkn='ceylon.language';
_write("    at " + pkn + "::" + mm.d[mm.d.length-1] + _src);_write(getOperatingSystem().newline);
}
}
}
printStackTrace.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'exception',$mt:'prm',$t:{t:Throwable},$an:function(){return[];}},{$nm:'write',$mt:'prm',$pt:'f',$def:1,$t:{t:Anything},$an:function(){return[doc($CCMM$['ceylon.language'].printStackTrace.$m.write$yte596.$an.doc[0])];}}],$an:function(){return[doc($CCMM$['ceylon.language'].printStackTrace.$an.doc[0]),shared(),$_native()];},d:['$','printStackTrace']};};
ex$.printStackTrace=printStackTrace;function $init$native$Throwable$before(exc) {
var _caller=arguments.callee.caller.caller;
exc.stack_trace=[];
var ilc=0;
var ilf=null;
while(_caller) {
exc.stack_trace.push(_caller);
_caller = _caller.caller;
if (_caller===ilf) {
ilc++;
if (ilc>2) {
exc.stack_trace.push("CIRCULAR");
_caller = null;
}
} else if (ilc===0 && _caller && exc.stack_trace.contains(_caller)) {
ilc=1;
ilf=_caller;
}
}
}
function $_Error($9,$a,error$){$init$$_Error();if(error$===undefined)error$=new $_Error.$$;
if($9===undefined){$9=null;}
error$.$9_=$9;if($a===undefined){$a=null;}
error$.$a_=$a;Throwable(error$.$9,error$.$a,error$);if(typeof($init$native$$_Error$before)==='function')$init$native$$_Error$before(error$);if(typeof($init$native$$_Error$after)==='function')$init$native$$_Error$after(error$);return error$;}
$_Error.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Throwable},$ps:[{$nm:'description',$mt:'prm',$def:1,$t:{t:'u',l:[{t:Null},{t:$_String}]},$an:function(){return[];}},{$nm:'cause',$mt:'prm',$def:1,$t:{t:'u',l:[{t:Null},{t:Throwable}]},$an:function(){return[];}}],$an:function(){return[doc($CCMM$['ceylon.language'].Error.$an.doc[0]),by(["Gavin","Tom"].reifyCeylonType({t:$_String})),shared(),$_native()];},d:['$','Error']};};
ex$.$_Error=$_Error;function $init$$_Error(){if($_Error.$$===undefined){initTypeProto($_Error,'ceylon.language::Error',$init$Throwable());
(function(error$){atr$(error$,'$9',function(){return this.$9_;},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:$_String}]},$cont:$_Error,d:['$','Error','$at','description$rwszx8']};});atr$(error$,'$a',function(){return this.$a_;},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Throwable}]},$cont:$_Error,d:['$','Error','$at','cause$d2vvlt']};});})($_Error.$$.prototype);}
return $_Error;}
ex$.$init$$_Error=$init$$_Error;$init$$_Error();function Exception($b,$c,exception$){$init$Exception();if(exception$===undefined)exception$=new Exception.$$;
if($b===undefined){$b=null;}
exception$.$b_=$b;if($c===undefined){$c=null;}
exception$.$c_=$c;Throwable(exception$.$b,exception$.$c,exception$);if(typeof($init$native$Exception$before)==='function')$init$native$Exception$before(exception$);if(typeof($init$native$Exception$after)==='function')$init$native$Exception$after(exception$);return exception$;}
Exception.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Throwable},$ps:[{$nm:'description',$mt:'prm',$def:1,$t:{t:'u',l:[{t:Null},{t:$_String}]},$an:function(){return[];}},{$nm:'cause',$mt:'prm',$def:1,$t:{t:'u',l:[{t:Null},{t:Throwable}]},$an:function(){return[];}}],$an:function(){return[doc($CCMM$['ceylon.language'].Exception.$an.doc[0]),by(["Gavin","Tom"].reifyCeylonType({t:$_String})),shared(),$_native()];},d:['$','Exception']};};
ex$.Exception=Exception;function $init$Exception(){if(Exception.$$===undefined){initTypeProto(Exception,'ceylon.language::Exception',$init$Throwable());
(function(exception$){atr$(exception$,'$b',function(){return this.$b_;},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:$_String}]},$cont:Exception,d:['$','Exception','$at','description$etadt1']};});atr$(exception$,'$c',function(){return this.$c_;},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Throwable}]},$cont:Exception,d:['$','Exception','$at','cause$tn7i4g']};});})(Exception.$$.prototype);}
return Exception;}
ex$.$init$Exception=$init$Exception;$init$Exception();function Comparison(string,comparison$){$init$Comparison();if(comparison$===undefined)throwexc(InvocationException$meta$model("Cannot instantiate abstract class"),'?','?')
comparison$.string_=string;return comparison$;}
Comparison.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[{$nm:'string',$mt:'prm',$t:{t:$_String},$an:function(){return[shared(),actual()];}}],of:[$prop$get$d,$prop$get$e,$prop$get$f],$an:function(){return[doc($CCMM$['ceylon.language'].Comparison.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Comparable)].reifyCeylonType({t:InterfaceDeclaration$meta$declaration})),by(["Gavin"].reifyCeylonType({t:$_String})),shared(),abstract()];},d:['$','Comparison']};};
ex$.Comparison=Comparison;function $init$Comparison(){if(Comparison.$$===undefined){initTypeProto(Comparison,'ceylon.language::Comparison',Basic);
(function(comparison$){atr$(comparison$,'string',function(){return this.string_;},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Comparison,$an:function(){return[shared(),actual()];},d:['$','Comparison','$at','string']};});})(Comparison.$$.prototype);}
return Comparison;}
ex$.$init$Comparison=$init$Comparison;$init$Comparison();function $f(){var equal$=new $f.$$;Comparison("equal",equal$);return equal$;
};$f.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Comparison},$an:function(){return[doc($CCMM$['ceylon.language'].equal.$an.doc[0]),shared()];},d:['$','equal']};};function $init$$f(){if($f.$$===undefined){initTypeProto($f,'ceylon.language::equal',$init$Comparison());
}
return $f;}
ex$.$init$$f=$init$$f;$init$$f();var $g;function getEqual(){if($g===undefined){$g=$init$$f()();$g.$crtmm$=getEqual.$crtmm$;}
return $g;}
ex$.getEqual=getEqual;getEqual.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$f},$an:function(){return[doc($CCMM$['ceylon.language'].equal.$an.doc[0]),shared()];},d:['$','equal']};};$prop$getEqual={get:getEqual,$crtmm$:getEqual.$crtmm$};get$f=getEqual;$prop$get$f=getEqual;ex$.$prop$getEqual=$prop$getEqual;function $e(){var smaller$=new $e.$$;Comparison("smaller",smaller$);return smaller$;
};$e.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Comparison},$an:function(){return[doc("The value is smaller than the given value."),shared()];},d:['$','smaller']};};function $init$$e(){if($e.$$===undefined){initTypeProto($e,'ceylon.language::smaller',$init$Comparison());
}
return $e;}
ex$.$init$$e=$init$$e;$init$$e();var $h;function getSmaller(){if($h===undefined){$h=$init$$e()();$h.$crtmm$=getSmaller.$crtmm$;}
return $h;}
ex$.getSmaller=getSmaller;getSmaller.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$e},$an:function(){return[doc("The value is smaller than the given value."),shared()];},d:['$','smaller']};};$prop$getSmaller={get:getSmaller,$crtmm$:getSmaller.$crtmm$};get$e=getSmaller;$prop$get$e=getSmaller;ex$.$prop$getSmaller=$prop$getSmaller;function $d(){var larger$=new $d.$$;Comparison("larger",larger$);return larger$;
};$d.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Comparison},$an:function(){return[doc("The value is larger than the given value."),shared()];},d:['$','larger']};};function $init$$d(){if($d.$$===undefined){initTypeProto($d,'ceylon.language::larger',$init$Comparison());
}
return $d;}
ex$.$init$$d=$init$$d;$init$$d();var $i;function getLarger(){if($i===undefined){$i=$init$$d()();$i.$crtmm$=getLarger.$crtmm$;}
return $i;}
ex$.getLarger=getLarger;getLarger.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$d},$an:function(){return[doc("The value is larger than the given value."),shared()];},d:['$','larger']};};$prop$getLarger={get:getLarger,$crtmm$:getLarger.$crtmm$};get$d=getLarger;$prop$get$d=getLarger;ex$.$prop$getLarger=$prop$getLarger;function identityHash(x) {
var hash = x.BasicID;
return (hash !== undefined)
? hash : (x.BasicID = BasicID++);
}
identityHash.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$ps:[{$nm:'x',$mt:'prm',$t:{t:Identifiable},$an:function(){return[];}}],$an:function(){return[doc($CCMM$['ceylon.language'].identityHash.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),identical)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared(),$_native()];},d:['$','identityHash']};};
ex$.identityHash=identityHash;function rethrow$impl($j){throw wrapexc($j,'5:4-5:11','ceylon/language/impl/rethrow.ceylon');}
ex$.rethrow$impl=rethrow$impl;rethrow$impl.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'x',$mt:'prm',$t:{t:Throwable},$an:function(){return[];}}],$an:function(){return[doc($CCMM$['ceylon.language.impl'].rethrow.$an.doc[0]),by(["Stephane Epardaud"].reifyCeylonType({t:$_String})),shared()];},d:['ceylon.language.impl','rethrow']};};
//#Anything
function Iterable($$targs$$,iterable$){Category({Element$Category:{t:$_Object}},iterable$);add_type_arg(iterable$,'Element$Category',{t:$_Object});set_type_args(iterable$,$$targs$$);iterable$.$prop$getEmpty={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$at.empty.$an.doc[0]),shared(),$_default()];},d:['$','Iterable','$at','empty']};}};iterable$.$prop$getEmpty.get=function(){return empty};iterable$.$prop$getSize={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$at.size.$an.doc[0]),shared(),$_default()];},d:['$','Iterable','$at','size']};}};iterable$.$prop$getSize.get=function(){return size};iterable$.$prop$getFirst={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:['Absent$Iterable','Element$Iterable']},$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$at.first.$an.doc[0]),shared(),$_default()];},d:['$','Iterable','$at','first']};}};iterable$.$prop$getFirst.get=function(){return first};iterable$.$prop$getRest={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Element$Iterable'}},$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$at.rest.$an.doc[0]),see([$init$OpenValue()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Iterable().$$.prototype.$prop$getFirst)].reifyCeylonType({t:ValueDeclaration$meta$declaration})),shared(),$_default()];},d:['$','Iterable','$at','rest']};}};iterable$.$prop$getRest.get=function(){return rest};iterable$.$prop$getCoalesced={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:{t:'i',l:['Element$Iterable',{t:$_Object}]}}},$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$at.coalesced.$an.doc[0]),shared(),$_default()];},d:['$','Iterable','$at','coalesced']};}};iterable$.$prop$getCoalesced.get=function(){return coalesced};}
Iterable.$crtmm$=function(){return{mod:$CCMM$,$tp:{Element$Iterable:{'var':'out'},Absent$Iterable:{'var':'out','satisfies':[{t:Null}],'def':{t:Null}}},satisfies:[{t:Category,a:{Element$Category:{t:$_Object}}}],$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Collection)].reifyCeylonType({t:InterfaceDeclaration$meta$declaration})),by(["Gavin"].reifyCeylonType({t:$_String})),shared()];},d:['$','Iterable']};};
ex$.Iterable=Iterable;function $init$Iterable(){if(Iterable.$$===undefined){initTypeProtoI(Iterable,'ceylon.language::Iterable',$init$Category());
(function(iterable$){iterable$.iterator={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Iterable'}},$ps:[],$cont:Iterable,$an:function(){return[doc("An iterator for the elements belonging to this stream."),shared(),formal()];},d:['$','Iterable','$m','iterator']};}};atr$(iterable$,'empty',function(){var iterable$=this;return is$(iterable$.iterator().next(),{t:Finished});},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$at.empty.$an.doc[0]),shared(),$_default()];},d:['$','Iterable','$at','empty']};});atr$(iterable$,'size',function(){var iterable$=this;return iterable$.count($JsCallable((function ($k){return true;}),[{$nm:'e',$mt:'prm',$t:'Element$Iterable',$an:function(){return[];}}],{Return$Callable:{t:$_Boolean},Arguments$Callable:{t:'T',l:[iterable$.$$targs$$.Element$Iterable]}}));},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$at.size.$an.doc[0]),shared(),$_default()];},d:['$','Iterable','$at','size']};});iterable$.longerThan=function longerThan($l){var iterable$=this;if(($l<0)){return true;}var $m=(0);function set$m($n){return $m=$n;};var $p;for(var $o=iterable$.iterator();($p=$o.next())!==getFinished();){if((($q=$m,$m=$q.successor,$q)==$l)){return true;}var $q;}return false;};iterable$.longerThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.longerThan.$an.doc[0]),see([$init$OpenValue()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Iterable().$$.prototype.$prop$getSize)].reifyCeylonType({t:ValueDeclaration$meta$declaration})),shared(),$_default()];},d:['$','Iterable','$m','longerThan']};};iterable$.shorterThan=function shorterThan($r){var iterable$=this;if(($r<=0)){return false;}var $s=(0);function set$s($t){return $s=$t;};var $v;for(var $u=iterable$.iterator();($v=$u.next())!==getFinished();){if((($s=$s.successor)==$r)){return false;}}return true;};iterable$.shorterThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.shorterThan.$an.doc[0]),see([$init$OpenValue()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Iterable().$$.prototype.$prop$getSize)].reifyCeylonType({t:ValueDeclaration$meta$declaration})),shared(),$_default()];},d:['$','Iterable','$m','shorterThan']};};iterable$.contains=function ($w){var iterable$=this;return iterable$.any($JsCallable(ifExists($JsCallable(($x=$w,JsCallable($x,$x!==null?$x.equals:null)),[{$nm:'that',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],{Return$Callable:{t:$_Boolean},Arguments$Callable:{t:'T',l:[{t:$_Object}]}})),[{$nm:'p2',$mt:'prm',$t:{t:Anything}}],{Return$Callable:{t:$_Boolean},Arguments$Callable:{t:'T',l:[{t:Anything}]}}));};iterable$.contains.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'element',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:Iterable,$an:function(){return[shared(),actual(),$_default()];},d:['$','Iterable','$m','contains']};};atr$(iterable$,'first',function(){var iterable$=this;return first(iterable$,{Absent$first:iterable$.$$targs$$.Absent$Iterable,Value$first:iterable$.$$targs$$.Element$Iterable});},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:['Absent$Iterable','Element$Iterable']},$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$at.first.$an.doc[0]),shared(),$_default()];},d:['$','Iterable','$at','first']};});atr$(iterable$,'last',function(){var iterable$=this;var $y=iterable$.first;function set$y($z){return $y=$z;};$prop$get$y={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:['Absent$Iterable','Element$Iterable']},$cont:iterable$.$prop$getLast,$an:function(){return[variable()];},d:['$','Iterable','$at','last','$at','e$eiotyw']};}};$prop$get$y.get=function(){return $y};$prop$get$y.set=set$y;if(set$y.$crtmm$===undefined)set$y.$crtmm$=$prop$get$y.$crtmm$;var $11;for(var $10=iterable$.iterator();($11=$10.next())!==getFinished();){$y=$11;}return $y;},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:['Absent$Iterable','Element$Iterable']},$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$at.last.$an.doc[0]),shared(),$_default()];},d:['$','Iterable','$at','last']};});atr$(iterable$,'rest',function(){var iterable$=this;return iterable$.skip(1);},undefined,function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Element$Iterable'}},$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$at.rest.$an.doc[0]),see([$init$OpenValue()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Iterable().$$.prototype.$prop$getFirst)].reifyCeylonType({t:ValueDeclaration$meta$declaration})),shared(),$_default()];},d:['$','Iterable','$at','rest']};});iterable$.sequence=function (){var iterable$=this;return tpl$([],undefined,iterable$);};iterable$.sequence.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Iterable'}},$ps:[],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.sequence.$an.doc[0]),shared(),$_default()];},d:['$','Iterable','$m','sequence']};};iterable$.$_map=function ($12,$$$mptypes){var iterable$=this;return sarg$(function($13){switch($13){}return getFinished();},function(){return Comprehension(function(){var $14=iterable$.iterator();var $15=getFinished();var next$15=function(){return $15=$14.next();}
next$15();return function(){if($15!==getFinished()){var $16=$15;var $17=$12($16);next$15();return $17;}
return getFinished();}
},{Absent$Iterable:{t:Null},Element$Iterable:$$$mptypes.Result$map});},{Absent$Iterable:iterable$.$$targs$$.Absent$Iterable,Element$Iterable:$$$mptypes.Result$map});};iterable$.$_map.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:'Absent$Iterable',Element$Iterable:'Result$map'}},$ps:[{$nm:'collecting',$mt:'prm',$pt:'f',$t:'Result$map',$an:function(){return[doc("The mapping to apply to the elements.")];}}],$cont:Iterable,$tp:{Result$map:{}},$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.map.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Iterable().$$.prototype.collect)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared(),$_default()];},d:['$','Iterable','$m','map']};};iterable$.$_filter=function ($18){var iterable$=this;return sarg$(function($19){switch($19){}return getFinished();},function(){return Comprehension(function(){var $1a=iterable$.iterator();var $1b=getFinished();var next$1b=function(){while(($1b=$1a.next())!==getFinished()){if($18($1b)){return $1b;}
}
return getFinished();}
next$1b();return function(){if($1b!==getFinished()){var $1c=$1b;var $1d=$1c;next$1b();return $1d;}
return getFinished();}
},{Absent$Iterable:{t:Null},Element$Iterable:iterable$.$$targs$$.Element$Iterable});},{Element$Iterable:iterable$.$$targs$$.Element$Iterable,Absent$Iterable:{t:Null}});};iterable$.$_filter.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Element$Iterable'}},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[doc("The predicate the elements must satisfy.")];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.filter.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Iterable().$$.prototype.select)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared(),$_default()];},d:['$','Iterable','$m','filter']};};iterable$.fold=function fold($1e,$1f,$$$mptypes){var iterable$=this;var $1g=$1e;function set$1g($1h){return $1g=$1h;};var $1j;for(var $1i=iterable$.iterator();($1j=$1i.next())!==getFinished();){$1g=$1f($1g,$1j);}return $1g;};iterable$.fold.$crtmm$=function(){return{mod:$CCMM$,$t:'Result$fold',$ps:[{$nm:'initial',$mt:'prm',$t:'Result$fold',$an:function(){return[];}},{$nm:'accumulating',$mt:'prm',$pt:'f',$t:'Result$fold',$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.fold.$m.accumulating$s9k7gi.$an.doc[0])];}}],$cont:Iterable,$tp:{Result$fold:{}},$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.fold.$an.doc[0]),shared(),$_default()];},d:['$','Iterable','$m','fold']};};iterable$.$_reduce=function $_reduce($1k,$$$mptypes){var iterable$=this;var $1l=iterable$.iterator();var $1m;if(!is$(($1m=$1l.next()),{t:Finished})){var $1n=$1m;function set$1n($1o){return $1n=$1o;};var $1p;while(!is$(($1p=$1l.next()),{t:Finished})){$1n=$1k($1n,$1p);}return $1n;}else {//assert at Iterable.ceylon (262:12-263:35)
var $1q;if(!(is$(($1q=null),iterable$.$$targs$$.Absent$Iterable))) {throw wrapexc(AssertionError("iterable must be empty: \'is Absent null\' at Iterable.ceylon (263:19-263:34)"),'262:12-263:35','Iterable.ceylon'); }
return null;}};iterable$.$_reduce.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Result$reduce','Element$Iterable','Absent$Iterable']},$ps:[{$nm:'accumulating',$mt:'prm',$pt:'f',$t:'Result$reduce',$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.reduce.$m.accumulating$t8yt4h.$an.doc[0])];}}],$cont:Iterable,$tp:{Result$reduce:{}},$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.reduce.$an.doc[0]),shared(),$_default()];},d:['$','Iterable','$m','reduce']};};iterable$.find=function find($1r){var iterable$=this;var $1t;for(var $1s=iterable$.iterator();($1t=$1s.next())!==getFinished();){if($1r($1t)){return $1t;}}return null;};iterable$.find.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$Iterable']},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[doc("The predicate the element must satisfy.")];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.find.$an.doc[0]),shared(),$_default()];},d:['$','Iterable','$m','find']};};iterable$.findLast=function findLast($1u){var iterable$=this;var $1v=null;function set$1v($1w){return $1v=$1w;};var $1y;for(var $1x=iterable$.iterator();($1y=$1x.next())!==getFinished();){if($1u($1y)){$1v=$1y;}}return $1v;};iterable$.findLast.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$Iterable']},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[doc("The predicate the element must satisfy.")];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.findLast.$an.doc[0]),shared(),$_default()];},d:['$','Iterable','$m','findLast']};};iterable$.$_sort=function ($1z){var iterable$=this;return internalSort($1z,iterable$,{Element$internalSort:iterable$.$$targs$$.Element$Iterable});};iterable$.$_sort.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Iterable'}},$ps:[{$nm:'comparing',$mt:'prm',$pt:'f',$t:{t:Comparison},$an:function(){return[doc("The function comparing pairs of elements.")];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.sort.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),byIncreasing),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),byDecreasing)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared(),$_default()];},d:['$','Iterable','$m','sort']};};iterable$.collect=function ($20,$$$mptypes){var iterable$=this;return iterable$.$_map($20,{Result$map:$$$mptypes.Result$collect}).sequence();};iterable$.collect.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Result$collect'}},$ps:[{$nm:'collecting',$mt:'prm',$pt:'f',$t:'Result$collect',$an:function(){return[doc("The transformation applied to the elements.")];}}],$cont:Iterable,$tp:{Result$collect:{}},$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.collect.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Iterable().$$.prototype.$_map)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared(),$_default()];},d:['$','Iterable','$m','collect']};};iterable$.select=function ($21){var iterable$=this;return iterable$.$_filter($21).sequence();};iterable$.select.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Iterable'}},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[doc("The predicate the elements must satisfy.")];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.select.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Iterable().$$.prototype.$_filter)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared(),$_default()];},d:['$','Iterable','$m','select']};};iterable$.any=function any($22){var iterable$=this;var $24;for(var $23=iterable$.iterator();($24=$23.next())!==getFinished();){if($22($24)){return true;}}return false;};iterable$.any.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[doc("The predicate that at least one element \nmust satisfy.")];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.any.$an.doc[0]),shared(),$_default()];},d:['$','Iterable','$m','any']};};iterable$.$_every=function $_every($25){var iterable$=this;var $27;for(var $26=iterable$.iterator();($27=$26.next())!==getFinished();){if(!$25($27)){return false;}}return true;};iterable$.$_every.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[doc("The predicate that all elements must \nsatisfy.")];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.every.$an.doc[0]),shared(),$_default()];},d:['$','Iterable','$m','every']};};iterable$.skip=function skip($28){var iterable$=this;if(($28<=0)){return iterable$;}else {var $29=false;var $2b=false;var $2a=(function(){function $2c($$targs$$){var $2c$=new $2c.$$;$2c$.outer$=iterable$;$2c$.$$targs$$=$$targs$$;Iterable({Absent$Iterable:{t:Null},Element$Iterable:iterable$.$$targs$$.Element$Iterable},$2c$);add_type_arg($2c$,'Absent$Iterable',{t:Null});return $2c$;
};$2c.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:skip,satisfies:[{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Element$Iterable'}}],d:['$','Iterable','$m','skip','$o','iterable$4vxoa3']};};function $init$$2c(){if($2c.$$===undefined){initTypeProto($2c,'ceylon.language::Iterable.iterable',Basic,$init$Iterable());
(function($2c$){$2c$.iterator=function iterator(){var $2c$=this;var $2d=iterable$.iterator();var $2e=(0);function set$2e($2f){return $2e=$2f;};while(((($2g=$2e,$2e=$2g.successor,$2g)<$28)&&!is$($2d.next(),{t:Finished}))){}var $2g;return $2d;};$2c$.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Iterable'}},$ps:[],$cont:$2c,$an:function(){return[shared(),actual()];},d:['$','Iterable','$m','skip','$o','iterable$4vxoa3','$m','iterator']};};})($2c.$$.prototype);}
return $2c;}
$init$$2c();var $2h;function get$2h(){if($2h===undefined){$2h=$init$$2c()({Absent$Iterable:{t:Null},Element$Iterable:iterable$.$$targs$$.Element$Iterable});$2h.$crtmm$=get$2h.$crtmm$;}
return $2h;}
get$2h.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$2c},$cont:skip,d:['$','Iterable','$m','skip','$o','iterable$4vxoa4']};};$prop$get$2h={get:get$2h,$crtmm$:get$2h.$crtmm$};get$2c=get$2h;$prop$get$2c=get$2h;return get$2h();}());if($2a!==undefined){return $2a;}}
};iterable$.skip.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Element$Iterable'}},$ps:[{$nm:'skipping',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.skip.$an.doc[0]),shared(),$_default()];},d:['$','Iterable','$m','skip']};};iterable$.take=function take($2i){var iterable$=this;if(($2i<=0)){return getEmpty();}else {var $2j=false;var $2l=false;var $2k=(function(){function $2m($$targs$$){var $2m$=new $2m.$$;$2m$.outer$=iterable$;$2m$.$$targs$$=$$targs$$;Iterable({Absent$Iterable:{t:Null},Element$Iterable:iterable$.$$targs$$.Element$Iterable},$2m$);add_type_arg($2m$,'Absent$Iterable',{t:Null});$2m$.$prop$getFirst={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$Iterable']},$cont:$2m,$an:function(){return[shared(),actual()];},d:['$','Iterable','$m','take','$o','iterable$a55cm5','$at','first']};}};$2m$.$prop$getFirst.get=function(){return first};return $2m$;
};$2m.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:take,satisfies:[{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Element$Iterable'}}],d:['$','Iterable','$m','take','$o','iterable$a55cm5']};};function $init$$2m(){if($2m.$$===undefined){initTypeProto($2m,'ceylon.language::Iterable.iterable',Basic,$init$Iterable());
(function($2m$){$2m$.iterator=function iterator(){var $2m$=this;var $2n=iterable$.iterator();function $2o($$targs$$){var $2o$=new $2o.$$;$2o$.outer$=$2m$;$2o$.$$targs$$=$$targs$$;Iterator({Element$Iterator:iterable$.$$targs$$.Element$Iterable},$2o$);$2o$.$2p_=(0);$2o$.$prop$get$2p={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$2o,$an:function(){return[variable()];},d:['$','Iterable','$m','take','$o','iterable$a55cm5','$m','iterator','$o','iterator$yoafu7','$at','i$t88zcj']};}};$2o$.$prop$get$2p.get=function(){return $2p};return $2o$;
};$2o.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:'Element$Iterable'}}],d:['$','Iterable','$m','take','$o','iterable$a55cm5','$m','iterator','$o','iterator$yoafu7']};};function $init$$2o(){if($2o.$$===undefined){initTypeProto($2o,'ceylon.language::Iterable.iterable.iterator',Basic,$init$Iterator());
(function($2o$){atr$($2o$,'$2p',function(){return this.$2p_;},function($2q){return this.$2p_=$2q;},function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$2o,$an:function(){return[variable()];},d:['$','Iterable','$m','take','$o','iterable$a55cm5','$m','iterator','$o','iterator$yoafu7','$at','i$t88zcj']};});$2o$.next=function next(){var $2o$=this;return ($2r=((($2o$.$2p=$2o$.$2p.successor)>$2i)?getFinished():null),nn$($2r)?$2r:$2n.next());var $2r;};$2o$.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$Iterable',{t:Finished}]},$ps:[],$cont:$2o,$an:function(){return[actual(),shared()];},d:['$','Iterable','$m','take','$o','iterable$a55cm5','$m','iterator','$o','iterator$yoafu7','$m','next']};};})($2o.$$.prototype);}
return $2o;}
$init$$2o();var $2s;function get$2s(){if($2s===undefined){$2s=$init$$2o()({Element$Iterator:iterable$.$$targs$$.Element$Iterable});$2s.$crtmm$=get$2s.$crtmm$;}
return $2s;}
get$2s.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$2o},$cont:iterator,d:['$','Iterable','$m','take','$o','iterable$a55cm5','$m','iterator','$o','iterator$yoafu6']};};$prop$get$2s={get:get$2s,$crtmm$:get$2s.$crtmm$};get$2o=get$2s;$prop$get$2o=get$2s;return get$2s();};$2m$.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Iterable'}},$ps:[],$cont:$2m,$an:function(){return[shared(),actual()];},d:['$','Iterable','$m','take','$o','iterable$a55cm5','$m','iterator']};};atr$($2m$,'first',function(){var $2m$=this;return iterable$.first;},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$Iterable']},$cont:$2m,$an:function(){return[shared(),actual()];},d:['$','Iterable','$m','take','$o','iterable$a55cm5','$at','first']};});})($2m.$$.prototype);}
return $2m;}
$init$$2m();var $2t;function get$2t(){if($2t===undefined){$2t=$init$$2m()({Absent$Iterable:{t:Null},Element$Iterable:iterable$.$$targs$$.Element$Iterable});$2t.$crtmm$=get$2t.$crtmm$;}
return $2t;}
get$2t.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$2m},$cont:take,d:['$','Iterable','$m','take','$o','iterable$a55cm4']};};$prop$get$2t={get:get$2t,$crtmm$:get$2t.$crtmm$};get$2m=get$2t;$prop$get$2m=get$2t;return get$2t();}());if($2k!==undefined){return $2k;}}
};iterable$.take.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Element$Iterable'}},$ps:[{$nm:'taking',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.take.$an.doc[0]),shared(),$_default()];},d:['$','Iterable','$m','take']};};iterable$.skipWhile=function skipWhile($2u){var iterable$=this;function $2v($$targs$$){var $2v$=new $2v.$$;$2v$.outer$=iterable$;$2v$.$$targs$$=$$targs$$;Iterable({Absent$Iterable:{t:Null},Element$Iterable:iterable$.$$targs$$.Element$Iterable},$2v$);add_type_arg($2v$,'Absent$Iterable',{t:Null});return $2v$;
};$2v.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:skipWhile,satisfies:[{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Element$Iterable'}}],d:['$','Iterable','$m','skipWhile','$o','iterable$yia8gl']};};function $init$$2v(){if($2v.$$===undefined){initTypeProto($2v,'ceylon.language::Iterable.iterable',Basic,$init$Iterable());
(function($2v$){$2v$.iterator=function iterator(){var $2v$=this;var $2w=iterable$.iterator();var $2x;while(!is$(($2x=$2w.next()),{t:Finished})){if(!$2u($2x)){var $2y=false;var $30=false;var $2z=(function(){function $31($$targs$$){var $31$=new $31.$$;$31$.outer$=$2v$;$31$.$$targs$$=$$targs$$;Iterator({Element$Iterator:iterable$.$$targs$$.Element$Iterable},$31$);$31$.$32_=true;$31$.$prop$get$32={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:$31,$an:function(){return[variable()];},d:['$','Iterable','$m','skipWhile','$o','iterable$yia8gl','$m','iterator','$o','iterator$gjv393','$at','first$brr4ua']};}};$31$.$prop$get$32.get=function(){return $32};return $31$;
};$31.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:'Element$Iterable'}}],d:['$','Iterable','$m','skipWhile','$o','iterable$yia8gl','$m','iterator','$o','iterator$gjv393']};};function $init$$31(){if($31.$$===undefined){initTypeProto($31,'ceylon.language::Iterable.iterable.iterator',Basic,$init$Iterator());
(function($31$){atr$($31$,'$32',function(){return this.$32_;},function($33){return this.$32_=$33;},function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:$31,$an:function(){return[variable()];},d:['$','Iterable','$m','skipWhile','$o','iterable$yia8gl','$m','iterator','$o','iterator$gjv393','$at','first$brr4ua']};});$31$.next=function next(){var $31$=this;if($31$.$32){$31$.$32=false;return $2x;}else {return $2w.next();}};$31$.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$Iterable',{t:Finished}]},$ps:[],$cont:$31,$an:function(){return[actual(),shared()];},d:['$','Iterable','$m','skipWhile','$o','iterable$yia8gl','$m','iterator','$o','iterator$gjv393','$m','next']};};})($31.$$.prototype);}
return $31;}
$init$$31();var $34;function get$34(){if($34===undefined){$34=$init$$31()({Element$Iterator:iterable$.$$targs$$.Element$Iterable});$34.$crtmm$=get$34.$crtmm$;}
return $34;}
get$34.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$31},$cont:iterator,d:['$','Iterable','$m','skipWhile','$o','iterable$yia8gl','$m','iterator','$o','iterator$gjv394']};};$prop$get$34={get:get$34,$crtmm$:get$34.$crtmm$};get$31=get$34;$prop$get$31=get$34;return get$34();}());if($2z!==undefined){return $2z;}}
}return getEmptyIterator();};$2v$.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Iterable'}},$ps:[],$cont:$2v,$an:function(){return[shared(),actual()];},d:['$','Iterable','$m','skipWhile','$o','iterable$yia8gl','$m','iterator']};};})($2v.$$.prototype);}
return $2v;}
$init$$2v();var $35;function get$35(){if($35===undefined){$35=$init$$2v()({Absent$Iterable:{t:Null},Element$Iterable:iterable$.$$targs$$.Element$Iterable});$35.$crtmm$=get$35.$crtmm$;}
return $35;}
get$35.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$2v},$cont:skipWhile,d:['$','Iterable','$m','skipWhile','$o','iterable$yia8gm']};};$prop$get$35={get:get$35,$crtmm$:get$35.$crtmm$};get$2v=get$35;$prop$get$2v=get$35;return get$35();};iterable$.skipWhile.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Element$Iterable'}},$ps:[{$nm:'skipping',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.skipWhile.$an.doc[0]),shared(),$_default()];},d:['$','Iterable','$m','skipWhile']};};iterable$.takeWhile=function takeWhile($36){var iterable$=this;function $37($$targs$$){var $37$=new $37.$$;$37$.outer$=iterable$;$37$.$$targs$$=$$targs$$;Iterable({Absent$Iterable:{t:Null},Element$Iterable:iterable$.$$targs$$.Element$Iterable},$37$);add_type_arg($37$,'Absent$Iterable',{t:Null});return $37$;
};$37.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:takeWhile,satisfies:[{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Element$Iterable'}}],d:['$','Iterable','$m','takeWhile','$o','iterable$dpvoxf']};};function $init$$37(){if($37.$$===undefined){initTypeProto($37,'ceylon.language::Iterable.iterable',Basic,$init$Iterable());
(function($37$){$37$.iterator=function iterator(){var $37$=this;var $38=iterable$.iterator();function $39($$targs$$){var $39$=new $39.$$;$39$.outer$=$37$;$39$.$$targs$$=$$targs$$;Iterator({Element$Iterator:iterable$.$$targs$$.Element$Iterable},$39$);$39$.$3a_=true;$39$.$prop$get$3a={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:$39,$an:function(){return[variable()];},d:['$','Iterable','$m','takeWhile','$o','iterable$dpvoxf','$m','iterator','$o','iterator$z3gwcl','$at','alive$77gnol']};}};$39$.$prop$get$3a.get=function(){return $3a};return $39$;
};$39.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:'Element$Iterable'}}],d:['$','Iterable','$m','takeWhile','$o','iterable$dpvoxf','$m','iterator','$o','iterator$z3gwcl']};};function $init$$39(){if($39.$$===undefined){initTypeProto($39,'ceylon.language::Iterable.iterable.iterator',Basic,$init$Iterator());
(function($39$){atr$($39$,'$3a',function(){return this.$3a_;},function($3b){return this.$3a_=$3b;},function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:$39,$an:function(){return[variable()];},d:['$','Iterable','$m','takeWhile','$o','iterable$dpvoxf','$m','iterator','$o','iterator$z3gwcl','$at','alive$77gnol']};});$39$.next=function next(){var $39$=this;var $3c;if($39$.$3a&&!is$(($3c=$38.next()),{t:Finished})){if($36($3c)){return $3c;}else {$39$.$3a=false;}}return getFinished();};$39$.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$Iterable',{t:Finished}]},$ps:[],$cont:$39,$an:function(){return[actual(),shared()];},d:['$','Iterable','$m','takeWhile','$o','iterable$dpvoxf','$m','iterator','$o','iterator$z3gwcl','$m','next']};};})($39.$$.prototype);}
return $39;}
$init$$39();var $3d;function get$3d(){if($3d===undefined){$3d=$init$$39()({Element$Iterator:iterable$.$$targs$$.Element$Iterable});$3d.$crtmm$=get$3d.$crtmm$;}
return $3d;}
get$3d.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$39},$cont:iterator,d:['$','Iterable','$m','takeWhile','$o','iterable$dpvoxf','$m','iterator','$o','iterator$z3gwck']};};$prop$get$3d={get:get$3d,$crtmm$:get$3d.$crtmm$};get$39=get$3d;$prop$get$39=get$3d;return get$3d();};$37$.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Iterable'}},$ps:[],$cont:$37,$an:function(){return[shared(),actual()];},d:['$','Iterable','$m','takeWhile','$o','iterable$dpvoxf','$m','iterator']};};})($37.$$.prototype);}
return $37;}
$init$$37();var $3e;function get$3e(){if($3e===undefined){$3e=$init$$37()({Absent$Iterable:{t:Null},Element$Iterable:iterable$.$$targs$$.Element$Iterable});$3e.$crtmm$=get$3e.$crtmm$;}
return $3e;}
get$3e.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$37},$cont:takeWhile,d:['$','Iterable','$m','takeWhile','$o','iterable$dpvoxe']};};$prop$get$3e={get:get$3e,$crtmm$:get$3e.$crtmm$};get$37=get$3e;$prop$get$37=get$3e;return get$3e();};iterable$.takeWhile.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Element$Iterable'}},$ps:[{$nm:'taking',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.takeWhile.$an.doc[0]),shared(),$_default()];},d:['$','Iterable','$m','takeWhile']};};iterable$.by=function by($3f){var iterable$=this;//assert at Iterable.ceylon (499:8-500:25)
if(!(($3f>0))) {throw wrapexc(AssertionError("step size must be greater than zero: \'step > 0\' at Iterable.ceylon (500:15-500:24)"),'499:8-500:25','Iterable.ceylon'); }
if(($3f==1)){return iterable$;}else {var $3g=false;var $3i=false;var $3h=(function(){function $3j($$targs$$){var $3j$=new $3j.$$;$3j$.outer$=iterable$;$3j$.$$targs$$=$$targs$$;Iterable({Absent$Iterable:iterable$.$$targs$$.Absent$Iterable,Element$Iterable:iterable$.$$targs$$.Element$Iterable},$3j$);return $3j$;
};$3j.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:by,satisfies:[{t:Iterable,a:{Absent$Iterable:'Absent$Iterable',Element$Iterable:'Element$Iterable'}}],d:['$','Iterable','$m','by','$o','iterable$uz32cr']};};function $init$$3j(){if($3j.$$===undefined){initTypeProto($3j,'ceylon.language::Iterable.iterable',Basic,$init$Iterable());
(function($3j$){$3j$.iterator=function iterator(){var $3j$=this;var $3k=iterable$.iterator();function $3l($$targs$$){var $3l$=new $3l.$$;$3l$.outer$=$3j$;$3l$.$$targs$$=$$targs$$;Iterator({Element$Iterator:iterable$.$$targs$$.Element$Iterable},$3l$);return $3l$;
};$3l.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:'Element$Iterable'}}],d:['$','Iterable','$m','by','$o','iterable$uz32cr','$m','iterator','$o','iterator$xxobct']};};function $init$$3l(){if($3l.$$===undefined){initTypeProto($3l,'ceylon.language::Iterable.iterable.iterator',Basic,$init$Iterator());
(function($3l$){$3l$.next=function next(){var $3l$=this;var $3m=$3k.next();var $3n=(0);function set$3n($3o){return $3n=$3o;};while(((($3n=$3n.successor)<$3f)&&!is$($3k.next(),{t:Finished}))){}return $3m;};$3l$.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$Iterable',{t:Finished}]},$ps:[],$cont:$3l,$an:function(){return[shared(),actual()];},d:['$','Iterable','$m','by','$o','iterable$uz32cr','$m','iterator','$o','iterator$xxobct','$m','next']};};})($3l.$$.prototype);}
return $3l;}
$init$$3l();var $3p;function get$3p(){if($3p===undefined){$3p=$init$$3l()({Element$Iterator:iterable$.$$targs$$.Element$Iterable});$3p.$crtmm$=get$3p.$crtmm$;}
return $3p;}
get$3p.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$3l},$cont:iterator,d:['$','Iterable','$m','by','$o','iterable$uz32cr','$m','iterator','$o','iterator$xxobcs']};};$prop$get$3p={get:get$3p,$crtmm$:get$3p.$crtmm$};get$3l=get$3p;$prop$get$3l=get$3p;return get$3p();};$3j$.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Iterable'}},$ps:[],$cont:$3j,$an:function(){return[shared(),actual()];},d:['$','Iterable','$m','by','$o','iterable$uz32cr','$m','iterator']};};})($3j.$$.prototype);}
return $3j;}
$init$$3j();var $3q;function get$3q(){if($3q===undefined){$3q=$init$$3j()({Absent$Iterable:iterable$.$$targs$$.Absent$Iterable,Element$Iterable:iterable$.$$targs$$.Element$Iterable});$3q.$crtmm$=get$3q.$crtmm$;}
return $3q;}
get$3q.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$3j},$cont:by,d:['$','Iterable','$m','by','$o','iterable$uz32cq']};};$prop$get$3q={get:get$3q,$crtmm$:get$3q.$crtmm$};get$3j=get$3q;$prop$get$3j=get$3q;return get$3q();}());if($3h!==undefined){return $3h;}}
};iterable$.by.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:'Absent$Iterable',Element$Iterable:'Element$Iterable'}},$ps:[{$nm:'step',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.by.$an.doc[0]),$_throws($init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),AssertionError),"if the given step size is nonpositive, \ni.e. `step<1`"),shared(),$_default()];},d:['$','Iterable','$m','by']};};iterable$.count=function count($3r){var iterable$=this;var $3s=(0);function set$3s($3t){return $3s=$3t;};var $3v;for(var $3u=iterable$.iterator();($3v=$3u.next())!==getFinished();){if($3r($3v)){($3w=$3s,$3s=$3w.successor,$3w);var $3w;}}return $3s;};iterable$.count.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[doc("The predicate satisfied by the elements to\nbe counted.")];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.count.$an.doc[0]),shared(),$_default()];},d:['$','Iterable','$m','count']};};atr$(iterable$,'coalesced',function(){var iterable$=this;return sarg$(function($3x){switch($3x){}return getFinished();},function(){return Comprehension(function(){var $40;var $3y=iterable$.iterator();var $3z=getFinished();var $40;var next$3z=function(){while(($3z=$3y.next())!==getFinished()){if(($40=$3z)!==null){return $3z;}
}
return getFinished();}
next$3z();return function(){if($3z!==getFinished()){var $41=$3z;var $42=$40;next$3z();return $42;}
return getFinished();}
},{Absent$Iterable:{t:Null},Element$Iterable:{t:'i',l:[iterable$.$$targs$$.Element$Iterable,{t:$_Object}]}});},{Element$Iterable:{t:'i',l:[iterable$.$$targs$$.Element$Iterable,{t:$_Object}]},Absent$Iterable:{t:Null}});},undefined,function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:{t:'i',l:['Element$Iterable',{t:$_Object}]}}},$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$at.coalesced.$an.doc[0]),shared(),$_default()];},d:['$','Iterable','$at','coalesced']};});atr$(iterable$,'indexed',function(){var iterable$=this;function $43($$targs$$){var $43$=new $43.$$;$43$.outer$=iterable$;$43$.$$targs$$=$$targs$$;Iterable({Absent$Iterable:{t:'u',l:[{t:'i',l:[iterable$.$$targs$$.Element$Iterable,{t:Null}]},iterable$.$$targs$$.Absent$Iterable]},Element$Iterable:{t:Entry,a:{Key$Entry:{t:Integer},Item$Entry:{t:'i',l:[iterable$.$$targs$$.Element$Iterable,{t:$_Object}]}}}},$43$);add_type_arg($43$,'Element$Iterable',{t:Entry,a:{Key$Entry:{t:Integer},Item$Entry:{t:'i',l:[iterable$.$$targs$$.Element$Iterable,{t:$_Object}]}}});return $43$;
};$43.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:$43$.$prop$getIndexed,satisfies:[{t:Iterable,a:{Absent$Iterable:{t:'u',l:[{t:'i',l:['Element$Iterable',{t:Null}]},'Absent$Iterable']},Element$Iterable:{t:Entry,a:{Key$Entry:{t:Integer},Item$Entry:{t:'i',l:['Element$Iterable',{t:$_Object}]}}}}}],d:['$','Iterable','$at','indexed','$o','indexes$ox5eju']};};function $init$$43(){if($43.$$===undefined){initTypeProto($43,'ceylon.language::Iterable.indexes',Basic,$init$Iterable());
(function($43$){$43$.iterator=function iterator(){var $43$=this;var $44=iterable$.iterator();function $45($$targs$$){var $45$=new $45.$$;$45$.outer$=$43$;$45$.$$targs$$=$$targs$$;Iterator({Element$Iterator:{t:Entry,a:{Key$Entry:{t:Integer},Item$Entry:{t:'i',l:[iterable$.$$targs$$.Element$Iterable,{t:$_Object}]}}}},$45$);add_type_arg($45$,'Element$Iterator',{t:Entry,a:{Key$Entry:{t:Integer},Item$Entry:{t:'i',l:[iterable$.$$targs$$.Element$Iterable,{t:$_Object}]}}});$45$.$46_=(0);$45$.$prop$get$46={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$45,$an:function(){return[variable()];},d:['$','Iterable','$at','indexed','$o','indexes$ox5eju','$m','iterator','$o','iterator$l8585k','$at','i$rm0wck']};}};$45$.$prop$get$46.get=function(){return $46};return $45$;
};$45.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:{t:Entry,a:{Key$Entry:{t:Integer},Item$Entry:{t:'i',l:['Element$Iterable',{t:$_Object}]}}}}}],d:['$','Iterable','$at','indexed','$o','indexes$ox5eju','$m','iterator','$o','iterator$l8585k']};};function $init$$45(){if($45.$$===undefined){initTypeProto($45,'ceylon.language::Iterable.indexes.iterator',Basic,$init$Iterator());
(function($45$){atr$($45$,'$46',function(){return this.$46_;},function($47){return this.$46_=$47;},function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$45,$an:function(){return[variable()];},d:['$','Iterable','$at','indexed','$o','indexes$ox5eju','$m','iterator','$o','iterator$l8585k','$at','i$rm0wck']};});$45$.next=function next(){var $45$=this;var $48=$44.next();function set$48($49){return $48=$49;};while(!nn$($48)){($4a=$45$.$46,$45$.$46=$4a.successor,$4a);var $4a;$48=$44.next();}//assert at Iterable.ceylon (575:24-575:48)
var $4b;if(!(($4b=$48)!==null)) {throw wrapexc(AssertionError("Assertion failed: \'exists n = next\' at Iterable.ceylon (575:31-575:47)"),'575:24-575:48','Iterable.ceylon'); }
var $4c;if(!is$(($4c=$4b),{t:Finished})){return Entry(($4d=$45$.$46,$45$.$46=$4d.successor,$4d),$4c,{Key$Entry:{t:Integer},Item$Entry:{t:'i',l:[iterable$.$$targs$$.Element$Iterable,{t:$_Object}]}});var $4d;}else {return getFinished();}};$45$.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Entry,a:{Key$Entry:{t:Integer},Item$Entry:{t:'i',l:['Element$Iterable',{t:$_Object}]}}},{t:Finished}]},$ps:[],$cont:$45,$an:function(){return[shared(),actual()];},d:['$','Iterable','$at','indexed','$o','indexes$ox5eju','$m','iterator','$o','iterator$l8585k','$m','next']};};})($45.$$.prototype);}
return $45;}
$init$$45();var $4e;function get$4e(){if($4e===undefined){$4e=$init$$45()({Element$Iterator:{t:Entry,a:{Key$Entry:{t:Integer},Item$Entry:{t:'i',l:[iterable$.$$targs$$.Element$Iterable,{t:$_Object}]}}}});$4e.$crtmm$=get$4e.$crtmm$;}
return $4e;}
get$4e.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$45},$cont:iterator,d:['$','Iterable','$at','indexed','$o','indexes$ox5eju','$m','iterator','$o','iterator$l8585j']};};$prop$get$4e={get:get$4e,$crtmm$:get$4e.$crtmm$};get$45=get$4e;$prop$get$45=get$4e;return get$4e();};$43$.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:{t:Entry,a:{Key$Entry:{t:Integer},Item$Entry:{t:'i',l:['Element$Iterable',{t:$_Object}]}}}}},$ps:[],$cont:$43,$an:function(){return[shared(),actual()];},d:['$','Iterable','$at','indexed','$o','indexes$ox5eju','$m','iterator']};};})($43.$$.prototype);}
return $43;}
$init$$43();var $4f;function get$4f(){if($4f===undefined){$4f=$init$$43()({Absent$Iterable:{t:'u',l:[{t:'i',l:[iterable$.$$targs$$.Element$Iterable,{t:Null}]},iterable$.$$targs$$.Absent$Iterable]},Element$Iterable:{t:Entry,a:{Key$Entry:{t:Integer},Item$Entry:{t:'i',l:[iterable$.$$targs$$.Element$Iterable,{t:$_Object}]}}}});$4f.$crtmm$=get$4f.$crtmm$;}
return $4f;}
get$4f.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$43},$cont:$43$.$prop$getIndexed,d:['$','Iterable','$at','indexed','$o','indexes$ox5ejv']};};$prop$get$4f={get:get$4f,$crtmm$:get$4f.$crtmm$};get$43=get$4f;$prop$get$43=get$4f;return get$4f();},undefined,function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:'u',l:[{t:'i',l:['Element$Iterable',{t:Null}]},'Absent$Iterable']},Element$Iterable:{t:Entry,a:{Key$Entry:{t:Integer},Item$Entry:{t:'i',l:['Element$Iterable',{t:$_Object}]}}}}},$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$at.indexed.$an.doc[0]),shared(),$_default()];},d:['$','Iterable','$at','indexed']};});iterable$.following=function following($4g,$$$mptypes){var iterable$=this;function $4h($$targs$$){var $4h$=new $4h.$$;$4h$.outer$=iterable$;$4h$.$$targs$$=$$targs$$;Iterable({Absent$Iterable:{t:Nothing},Element$Iterable:{t:'u',l:[iterable$.$$targs$$.Element$Iterable,$$$mptypes.Other$following]}},$4h$);return $4h$;
};$4h.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:following,satisfies:[{t:Iterable,a:{Absent$Iterable:{t:Nothing},Element$Iterable:{t:'u',l:['Element$Iterable','Other$following']}}}],d:['$','Iterable','$m','following','$o','cons$cje1zn']};};function $init$$4h(){if($4h.$$===undefined){initTypeProto($4h,'ceylon.language::Iterable.cons',Basic,$init$Iterable());
(function($4h$){$4h$.iterator=function iterator(){var $4h$=this;var $4i=iterable$.iterator();function $4j($$targs$$){var $4j$=new $4j.$$;$4j$.outer$=$4h$;$4j$.$$targs$$=$$targs$$;Iterator({Element$Iterator:{t:'u',l:[iterable$.$$targs$$.Element$Iterable,$$$mptypes.Other$following]}},$4j$);$4j$.$4k_=true;$4j$.$prop$get$4k={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:$4j,$an:function(){return[variable()];},d:['$','Iterable','$m','following','$o','cons$cje1zn','$m','iterator','$o','iterator$alxb7j','$at','first$nib52k']};}};$4j$.$prop$get$4k.get=function(){return $4k};return $4j$;
};$4j.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:{t:'u',l:['Element$Iterable','Other$following']}}}],d:['$','Iterable','$m','following','$o','cons$cje1zn','$m','iterator','$o','iterator$alxb7j']};};function $init$$4j(){if($4j.$$===undefined){initTypeProto($4j,'ceylon.language::Iterable.cons.iterator',Basic,$init$Iterator());
(function($4j$){atr$($4j$,'$4k',function(){return this.$4k_;},function($4l){return this.$4k_=$4l;},function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:$4j,$an:function(){return[variable()];},d:['$','Iterable','$m','following','$o','cons$cje1zn','$m','iterator','$o','iterator$alxb7j','$at','first$nib52k']};});$4j$.next=function next(){var $4j$=this;if($4j$.$4k){$4j$.$4k=false;return $4g;}else {return $4i.next();}};$4j$.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$Iterable','Other$following',{t:Finished}]},$ps:[],$cont:$4j,$an:function(){return[shared(),actual()];},d:['$','Iterable','$m','following','$o','cons$cje1zn','$m','iterator','$o','iterator$alxb7j','$m','next']};};})($4j.$$.prototype);}
return $4j;}
$init$$4j();var $4m;function get$4m(){if($4m===undefined){$4m=$init$$4j()({Element$Iterator:{t:'u',l:[iterable$.$$targs$$.Element$Iterable,$$$mptypes.Other$following]}});$4m.$crtmm$=get$4m.$crtmm$;}
return $4m;}
get$4m.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$4j},$cont:iterator,d:['$','Iterable','$m','following','$o','cons$cje1zn','$m','iterator','$o','iterator$alxb7i']};};$prop$get$4m={get:get$4m,$crtmm$:get$4m.$crtmm$};get$4j=get$4m;$prop$get$4j=get$4m;return get$4m();};$4h$.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:{t:'u',l:['Element$Iterable','Other$following']}}},$ps:[],$cont:$4h,$an:function(){return[shared(),actual()];},d:['$','Iterable','$m','following','$o','cons$cje1zn','$m','iterator']};};})($4h.$$.prototype);}
return $4h;}
$init$$4h();var $4n;function get$4n(){if($4n===undefined){$4n=$init$$4h()({Absent$Iterable:{t:Nothing},Element$Iterable:{t:'u',l:[iterable$.$$targs$$.Element$Iterable,$$$mptypes.Other$following]}});$4n.$crtmm$=get$4n.$crtmm$;}
return $4n;}
get$4n.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$4h},$cont:following,d:['$','Iterable','$m','following','$o','cons$cje1zo']};};$prop$get$4n={get:get$4n,$crtmm$:get$4n.$crtmm$};get$4h=get$4n;$prop$get$4h=get$4n;return get$4n();};iterable$.following.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:Nothing},Element$Iterable:{t:'u',l:['Element$Iterable','Other$following']}}},$ps:[{$nm:'head',$mt:'prm',$t:'Other$following',$an:function(){return[];}}],$cont:Iterable,$tp:{Other$following:{}},$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.following.$an.doc[0]),shared(),$_default()];},d:['$','Iterable','$m','following']};};iterable$.chain=function chain($4o,$$$mptypes){var iterable$=this;function $4p($$targs$$){var $4p$=new $4p.$$;$4p$.outer$=iterable$;$4p$.$$targs$$=$$targs$$;Iterable({Absent$Iterable:{t:'i',l:[iterable$.$$targs$$.Absent$Iterable,$$$mptypes.OtherAbsent$chain]},Element$Iterable:{t:'u',l:[iterable$.$$targs$$.Element$Iterable,$$$mptypes.Other$chain]}},$4p$);return $4p$;
};$4p.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:chain,satisfies:[{t:Iterable,a:{Absent$Iterable:{t:'i',l:['Absent$Iterable','OtherAbsent$chain']},Element$Iterable:{t:'u',l:['Element$Iterable','Other$chain']}}}],d:['$','Iterable','$m','chain','$o','chained$lrwq56']};};function $init$$4p(){if($4p.$$===undefined){initTypeProto($4p,'ceylon.language::Iterable.chained',Basic,$init$Iterable());
(function($4p$){$4p$.iterator=function (){var $4p$=this;return ChainedIterator(iterable$,$4o,{Other$ChainedIterator:$$$mptypes.Other$chain,Element$ChainedIterator:iterable$.$$targs$$.Element$Iterable});};$4p$.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:{t:'u',l:['Element$Iterable','Other$chain']}}},$ps:[],$cont:$4p,$an:function(){return[shared(),actual()];},d:['$','Iterable','$m','chain','$o','chained$lrwq56','$m','iterator']};};})($4p.$$.prototype);}
return $4p;}
$init$$4p();var $4q;function get$4q(){if($4q===undefined){$4q=$init$$4p()({Absent$Iterable:{t:'i',l:[iterable$.$$targs$$.Absent$Iterable,$$$mptypes.OtherAbsent$chain]},Element$Iterable:{t:'u',l:[iterable$.$$targs$$.Element$Iterable,$$$mptypes.Other$chain]}});$4q.$crtmm$=get$4q.$crtmm$;}
return $4q;}
get$4q.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$4p},$cont:chain,d:['$','Iterable','$m','chain','$o','chained$lrwq57']};};$prop$get$4q={get:get$4q,$crtmm$:get$4q.$crtmm$};get$4p=get$4q;$prop$get$4p=get$4q;return get$4q();};iterable$.chain.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:'i',l:['Absent$Iterable','OtherAbsent$chain']},Element$Iterable:{t:'u',l:['Element$Iterable','Other$chain']}}},$ps:[{$nm:'other',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:'OtherAbsent$chain',Element$Iterable:'Other$chain'}},$an:function(){return[];}}],$cont:Iterable,$tp:{Other$chain:{},OtherAbsent$chain:{'satisfies':[{t:Null}]}},$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.chain.$an.doc[0]),shared(),$_default()];},d:['$','Iterable','$m','chain']};};iterable$.defaultNullElements=function ($4r,$$$mptypes){var iterable$=this;return sarg$(function($4s){switch($4s){}return getFinished();},function(){return Comprehension(function(){var $4t=iterable$.iterator();var $4u=getFinished();var next$4u=function(){return $4u=$4t.next();}
next$4u();return function(){if($4u!==getFinished()){var $4v=$4u;var $4w=($4x=$4v,nn$($4x)?$4x:$4r);next$4u();return $4w;}
return getFinished();}
},{Absent$Iterable:{t:Null},Element$Iterable:{t:'u',l:[$$$mptypes.Default$defaultNullElements,{t:'i',l:[iterable$.$$targs$$.Element$Iterable,{t:$_Object}]}]}});},{Absent$Iterable:iterable$.$$targs$$.Absent$Iterable,Element$Iterable:{t:'u',l:[$$$mptypes.Default$defaultNullElements,{t:'i',l:[iterable$.$$targs$$.Element$Iterable,{t:$_Object}]}]}});};iterable$.defaultNullElements.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:'Absent$Iterable',Element$Iterable:{t:'u',l:[{t:'i',l:['Element$Iterable',{t:$_Object}]},'Default$defaultNullElements']}}},$ps:[{$nm:'defaultValue',$mt:'prm',$t:'Default$defaultNullElements',$an:function(){return[doc("A default value that replaces `null` elements.")];}}],$cont:Iterable,$tp:{Default$defaultNullElements:{}},$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.defaultNullElements.$an.doc[0]),shared(),$_default()];},d:['$','Iterable','$m','defaultNullElements']};};atr$(iterable$,'string',function(){var iterable$=this;var $4y=StringBuilder();$prop$get$4y={$crtmm$:function(){return{mod:$CCMM$,$t:{t:StringBuilder},$cont:iterable$.$prop$getString,d:['$','Iterable','$at','string','$at','sb$rmbw7f']};}};$prop$get$4y.get=function(){return $4y};$4y.append("{");var $4z=iterable$.iterator();$prop$get$4z={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Iterable'}},$cont:iterable$.$prop$getString,d:['$','Iterable','$at','string','$at','it$rmkgnj']};}};$prop$get$4z.get=function(){return $4z};var $50=$4z.next();function set$50($51){return $50=$51;};$prop$get$50={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$Iterable',{t:Finished}]},$cont:iterable$.$prop$getString,$an:function(){return[variable()];},d:['$','Iterable','$at','string','$at','current$d0ua0h']};}};$prop$get$50.get=function(){return $50};$prop$get$50.set=set$50;if(set$50.$crtmm$===undefined)set$50.$crtmm$=$prop$get$50.$crtmm$;var $52;if(!is$(($52=$50),{t:Finished})){$4y.append(" ").append(($53=($54=$50,nn$($54)?$54.string:null),nn$($53)?$53:"<null>"));var $53,$54;var $55=(1);function set$55($56){return $55=$56;};$prop$get$55={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:iterable$.$prop$getString,$an:function(){return[variable()];},d:['$','Iterable','$at','string','$at','count$2o4egg']};}};$prop$get$55.get=function(){return $55};$prop$get$55.set=set$55;if(set$55.$crtmm$===undefined)set$55.$crtmm$=$prop$get$55.$crtmm$;while(true){$50=$4z.next();var $57;if(is$(($57=$50),{t:Finished})){$4y.append(" ");break;}else {if(($55==30)){$4y.append(", ... ");break;}else {$4y.append(", ").append(($58=($59=$50,nn$($59)?$59.string:null),nn$($58)?$58:"<null>"));var $58,$59;($5a=$55,$55=$5a.successor,$5a);var $5a;}}}}$4y.append("}");return $4y.string;},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$at.string.$an.doc[0]),shared(),actual(),$_default()];},d:['$','Iterable','$at','string']};});atr$(iterable$,'cycled',function(){var iterable$=this;function $5b($$targs$$){var $5b$=new $5b.$$;$5b$.outer$=iterable$;$5b$.$$targs$$=$$targs$$;Iterable({Absent$Iterable:iterable$.$$targs$$.Absent$Iterable,Element$Iterable:iterable$.$$targs$$.Element$Iterable},$5b$);$5b$.$prop$get$5c={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:'Absent$Iterable',Element$Iterable:'Element$Iterable'}},$cont:$5b,d:['$','Iterable','$at','cycled','$o','iterable$qixtkx','$at','orig$q0k0r9']};}};$5b$.$prop$get$5c.get=function(){return $5c};return $5b$;
};$5b.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:$5b$.$prop$getCycled,satisfies:[{t:Iterable,a:{Absent$Iterable:'Absent$Iterable',Element$Iterable:'Element$Iterable'}}],d:['$','Iterable','$at','cycled','$o','iterable$qixtkx']};};function $init$$5b(){if($5b.$$===undefined){initTypeProto($5b,'ceylon.language::Iterable.iterable',Basic,$init$Iterable());
(function($5b$){atr$($5b$,'$5c',function(){return iterable$;},undefined,function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:'Absent$Iterable',Element$Iterable:'Element$Iterable'}},$cont:$5b,d:['$','Iterable','$at','cycled','$o','iterable$qixtkx','$at','orig$q0k0r9']};});$5b$.iterator=function iterator(){var $5b$=this;function $5d($$targs$$){var $5d$=new $5d.$$;$5d$.outer$=$5b$;$5d$.$$targs$$=$$targs$$;Iterator({Element$Iterator:iterable$.$$targs$$.Element$Iterable},$5d$);$5d$.$5e_=getEmptyIterator();$5d$.$prop$get$5e={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Iterable'}},$cont:$5d,$an:function(){return[variable()];},d:['$','Iterable','$at','cycled','$o','iterable$qixtkx','$m','iterator','$o','iterator$tlvaun','$at','iter$ep431e']};}};$5d$.$prop$get$5e.get=function(){return $5e};return $5d$;
};$5d.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:'Element$Iterable'}}],d:['$','Iterable','$at','cycled','$o','iterable$qixtkx','$m','iterator','$o','iterator$tlvaun']};};function $init$$5d(){if($5d.$$===undefined){initTypeProto($5d,'ceylon.language::Iterable.iterable.iterator',Basic,$init$Iterator());
(function($5d$){atr$($5d$,'$5e',function(){return this.$5e_;},function($5f){return this.$5e_=$5f;},function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Iterable'}},$cont:$5d,$an:function(){return[variable()];},d:['$','Iterable','$at','cycled','$o','iterable$qixtkx','$m','iterator','$o','iterator$tlvaun','$at','iter$ep431e']};});$5d$.next=function next(){var $5d$=this;var $5g;if(!is$(($5g=$5d$.$5e.next()),{t:Finished})){return $5g;}else {$5d$.$5e=$5b$.$5c.iterator();return $5d$.$5e.next();}};$5d$.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$Iterable',{t:Finished}]},$ps:[],$cont:$5d,$an:function(){return[shared(),actual()];},d:['$','Iterable','$at','cycled','$o','iterable$qixtkx','$m','iterator','$o','iterator$tlvaun','$m','next']};};})($5d.$$.prototype);}
return $5d;}
$init$$5d();var $5h;function get$5h(){if($5h===undefined){$5h=$init$$5d()({Element$Iterator:iterable$.$$targs$$.Element$Iterable});$5h.$crtmm$=get$5h.$crtmm$;}
return $5h;}
get$5h.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$5d},$cont:iterator,d:['$','Iterable','$at','cycled','$o','iterable$qixtkx','$m','iterator','$o','iterator$tlvauo']};};$prop$get$5h={get:get$5h,$crtmm$:get$5h.$crtmm$};get$5d=get$5h;$prop$get$5d=get$5h;return get$5h();};$5b$.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Iterable'}},$ps:[],$cont:$5b,$an:function(){return[shared(),actual()];},d:['$','Iterable','$at','cycled','$o','iterable$qixtkx','$m','iterator']};};})($5b.$$.prototype);}
return $5b;}
$init$$5b();var $5i;function get$5i(){if($5i===undefined){$5i=$init$$5b()({Absent$Iterable:iterable$.$$targs$$.Absent$Iterable,Element$Iterable:iterable$.$$targs$$.Element$Iterable});$5i.$crtmm$=get$5i.$crtmm$;}
return $5i;}
get$5i.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$5b},$cont:$5b$.$prop$getCycled,d:['$','Iterable','$at','cycled','$o','iterable$qixtky']};};$prop$get$5i={get:get$5i,$crtmm$:get$5i.$crtmm$};get$5b=get$5i;$prop$get$5b=get$5i;return get$5i();},undefined,function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:'Absent$Iterable',Element$Iterable:'Element$Iterable'}},$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$at.cycled.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Iterable().$$.prototype.cycle)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared(),$_default()];},d:['$','Iterable','$at','cycled']};});iterable$.cycle=function cycle($5j){var iterable$=this;function $5k($$targs$$){var $5k$=new $5k.$$;$5k$.outer$=iterable$;$5k$.$$targs$$=$$targs$$;Iterable({Absent$Iterable:iterable$.$$targs$$.Absent$Iterable,Element$Iterable:iterable$.$$targs$$.Element$Iterable},$5k$);$5k$.$prop$get$5l={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:'Absent$Iterable',Element$Iterable:'Element$Iterable'}},$cont:$5k,d:['$','Iterable','$m','cycle','$o','iterable$i44j55','$at','orig$1l40qr']};}};$5k$.$prop$get$5l.get=function(){return $5l};return $5k$;
};$5k.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:cycle,satisfies:[{t:Iterable,a:{Absent$Iterable:'Absent$Iterable',Element$Iterable:'Element$Iterable'}}],d:['$','Iterable','$m','cycle','$o','iterable$i44j55']};};function $init$$5k(){if($5k.$$===undefined){initTypeProto($5k,'ceylon.language::Iterable.iterable',Basic,$init$Iterable());
(function($5k$){atr$($5k$,'$5l',function(){return iterable$;},undefined,function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:'Absent$Iterable',Element$Iterable:'Element$Iterable'}},$cont:$5k,d:['$','Iterable','$m','cycle','$o','iterable$i44j55','$at','orig$1l40qr']};});$5k$.iterator=function iterator(){var $5k$=this;function $5m($$targs$$){var $5m$=new $5m.$$;$5m$.outer$=$5k$;$5m$.$$targs$$=$$targs$$;Iterator({Element$Iterator:iterable$.$$targs$$.Element$Iterable},$5m$);$5m$.$5n_=getEmptyIterator();$5m$.$prop$get$5n={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Iterable'}},$cont:$5m,$an:function(){return[variable()];},d:['$','Iterable','$m','cycle','$o','iterable$i44j55','$m','iterator','$o','iterator$rc2auh','$at','iter$sordmy']};}};$5m$.$prop$get$5n.get=function(){return $5n};$5m$.$5o_=(0);$5m$.$prop$get$5o={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$5m,$an:function(){return[variable()];},d:['$','Iterable','$m','cycle','$o','iterable$i44j55','$m','iterator','$o','iterator$rc2auh','$at','count$s5h45z']};}};$5m$.$prop$get$5o.get=function(){return $5o};return $5m$;
};$5m.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:'Element$Iterable'}}],d:['$','Iterable','$m','cycle','$o','iterable$i44j55','$m','iterator','$o','iterator$rc2auh']};};function $init$$5m(){if($5m.$$===undefined){initTypeProto($5m,'ceylon.language::Iterable.iterable.iterator',Basic,$init$Iterator());
(function($5m$){atr$($5m$,'$5n',function(){return this.$5n_;},function($5p){return this.$5n_=$5p;},function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Iterable'}},$cont:$5m,$an:function(){return[variable()];},d:['$','Iterable','$m','cycle','$o','iterable$i44j55','$m','iterator','$o','iterator$rc2auh','$at','iter$sordmy']};});atr$($5m$,'$5o',function(){return this.$5o_;},function($5q){return this.$5o_=$5q;},function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$5m,$an:function(){return[variable()];},d:['$','Iterable','$m','cycle','$o','iterable$i44j55','$m','iterator','$o','iterator$rc2auh','$at','count$s5h45z']};});$5m$.next=function next(){var $5m$=this;var $5r;if(!is$(($5r=$5m$.$5n.next()),{t:Finished})){return $5r;}else {if(($5m$.$5o<$5j)){($5s=$5m$.$5o,$5m$.$5o=$5s.successor,$5s);var $5s;$5m$.$5n=$5k$.$5l.iterator();}else {$5m$.$5n=getEmptyIterator();}return $5m$.$5n.next();}};$5m$.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$Iterable',{t:Finished}]},$ps:[],$cont:$5m,$an:function(){return[shared(),actual()];},d:['$','Iterable','$m','cycle','$o','iterable$i44j55','$m','iterator','$o','iterator$rc2auh','$m','next']};};})($5m.$$.prototype);}
return $5m;}
$init$$5m();var $5t;function get$5t(){if($5t===undefined){$5t=$init$$5m()({Element$Iterator:iterable$.$$targs$$.Element$Iterable});$5t.$crtmm$=get$5t.$crtmm$;}
return $5t;}
get$5t.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$5m},$cont:iterator,d:['$','Iterable','$m','cycle','$o','iterable$i44j55','$m','iterator','$o','iterator$rc2aug']};};$prop$get$5t={get:get$5t,$crtmm$:get$5t.$crtmm$};get$5m=get$5t;$prop$get$5m=get$5t;return get$5t();};$5k$.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Iterable'}},$ps:[],$cont:$5k,$an:function(){return[shared(),actual()];},d:['$','Iterable','$m','cycle','$o','iterable$i44j55','$m','iterator']};};})($5k.$$.prototype);}
return $5k;}
$init$$5k();var $5u;function get$5u(){if($5u===undefined){$5u=$init$$5k()({Absent$Iterable:iterable$.$$targs$$.Absent$Iterable,Element$Iterable:iterable$.$$targs$$.Element$Iterable});$5u.$crtmm$=get$5u.$crtmm$;}
return $5u;}
get$5u.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$5k},$cont:cycle,d:['$','Iterable','$m','cycle','$o','iterable$i44j56']};};$prop$get$5u={get:get$5u,$crtmm$:get$5u.$crtmm$};get$5k=get$5u;$prop$get$5k=get$5u;return get$5u();};iterable$.cycle.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:'Absent$Iterable',Element$Iterable:'Element$Iterable'}},$ps:[{$nm:'times',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.cycle.$an.doc[0]),see([$init$OpenValue()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Iterable().$$.prototype.$prop$getCycled),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Iterable().$$.prototype.repeat)].reifyCeylonType({t:'u',l:[{t:ValueDeclaration$meta$declaration},{t:FunctionDeclaration$meta$declaration}]})),shared(),$_default()];},d:['$','Iterable','$m','cycle']};};iterable$.repeat=function repeat($5v){var iterable$=this;return iterable$.cycle($5v).sequence();};iterable$.repeat.$crtmm$=function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:'Element$Iterable'}},$ps:[{$nm:'times',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.repeat.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Iterable().$$.prototype.cycle)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared(),$_default()];},d:['$','Iterable','$m','repeat']};};})(Iterable.$$.prototype);}
return Iterable;}
ex$.$init$Iterable=$init$Iterable;$init$Iterable();var $x,$4x;var commaList=function ($5w){return ($5x=Comprehension(function(){var $5y=$5w.iterator();var $5z=getFinished();var next$5z=function(){return $5z=$5y.next();}
next$5z();return function(){if($5z!==getFinished()){var $60=$5z;var $61=($62=$60,nn$($62)?$62:"<null>");next$5z();return $61;}
return getFinished();}
},{Absent$Iterable:{t:Null},Element$Iterable:{t:$_Object}}),($63=", ",JsCallable($63,$63!==null?$63.join:null))($5x));};commaList.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$ps:[{$nm:'elements',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:{t:Anything}}},$an:function(){return[];}}],d:['$','commaList']};};var $5x,$62,$63;function ifExists($64){return function($65){var $66;if(($66=$65)!==null){return $64($66);}else {return false;}}};ifExists.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'predicate',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],d:['$','ifExists']};};function Correspondence($$targs$$,correspondence$){set_type_args(correspondence$,$$targs$$);}
Correspondence.$crtmm$=function(){return{mod:$CCMM$,$tp:{Key$Correspondence:{'var':'in','satisfies':[{t:$_Object}]},Item$Correspondence:{'var':'out'}},$an:function(){return[doc($CCMM$['ceylon.language'].Correspondence.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Map),$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),List),$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Category)].reifyCeylonType({t:InterfaceDeclaration$meta$declaration})),by(["Gavin"].reifyCeylonType({t:$_String})),shared()];},d:['$','Correspondence']};};
ex$.Correspondence=Correspondence;function $init$Correspondence(){if(Correspondence.$$===undefined){initTypeProtoI(Correspondence,'ceylon.language::Correspondence');
(function(correspondence$){correspondence$.$_get={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Item$Correspondence']},$ps:[{$nm:'key',$mt:'prm',$t:'Key$Correspondence',$an:function(){return[];}}],$cont:Correspondence,$an:function(){return[doc($CCMM$['ceylon.language'].Correspondence.$m.get.$an.doc[0]),see("Correspondence.items"),shared(),formal()];},d:['$','Correspondence','$m','get']};}};correspondence$.defines=function ($67){var correspondence$=this;return nn$(correspondence$.$_get($67));};correspondence$.defines.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'key',$mt:'prm',$t:'Key$Correspondence',$an:function(){return[];}}],$cont:Correspondence,$an:function(){return[doc("Determines if there is a value defined for the \ngiven key."),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Correspondence().$$.prototype.definesAny),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Correspondence().$$.prototype.definesEvery),$init$OpenValue()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Correspondence().$$.prototype.$prop$getKeys)].reifyCeylonType({t:'u',l:[{t:FunctionDeclaration$meta$declaration},{t:ValueDeclaration$meta$declaration}]})),shared(),$_default()];},d:['$','Correspondence','$m','defines']};};atr$(correspondence$,'keys',function(){var correspondence$=this;function $68($$targs$$){var $68$=new $68.$$;$68$.outer$=correspondence$;$68$.$$targs$$=$$targs$$;Category({Element$Category:correspondence$.$$targs$$.Key$Correspondence},$68$);return $68$;
};$68.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:correspondence$.$prop$getKeys,satisfies:[{t:Category,a:{Element$Category:'Key$Correspondence'}}],d:['$','Correspondence','$at','keys','$o','keys$y1pibl']};};function $init$$68(){if($68.$$===undefined){initTypeProto($68,'ceylon.language::Correspondence.keys',Basic,$init$Category());
(function($68$){$68$.contains=function ($69){var $68$=this;return correspondence$.defines($69);};})($68.$$.prototype);}
return $68;}
$init$$68();var $6a;function get$6a(){if($6a===undefined){$6a=$init$$68()({Element$Category:correspondence$.$$targs$$.Key$Correspondence});$6a.$crtmm$=get$6a.$crtmm$;}
return $6a;}
get$6a.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$68},$cont:correspondence$.$prop$getKeys,d:['$','Correspondence','$at','keys','$o','keys$y1pibm']};};$prop$get$6a={get:get$6a,$crtmm$:get$6a.$crtmm$};get$68=get$6a;$prop$get$68=get$6a;return get$6a();},undefined,function(){return{mod:$CCMM$,$t:{t:Category,a:{Element$Category:'Key$Correspondence'}},$cont:Correspondence,$an:function(){return[doc($CCMM$['ceylon.language'].Correspondence.$at.keys.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Correspondence().$$.prototype.defines)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared(),$_default()];},d:['$','Correspondence','$at','keys']};});correspondence$.definesEvery=function definesEvery($6b){var correspondence$=this;var $6d;for(var $6c=$6b.iterator();($6d=$6c.next())!==getFinished();){if(!correspondence$.defines($6d)){return false;}}
if(getFinished()===$6d){return true;}};correspondence$.definesEvery.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'keys',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Key$Correspondence'}},$an:function(){return[];}}],$cont:Correspondence,$an:function(){return[doc($CCMM$['ceylon.language'].Correspondence.$m.definesEvery.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Correspondence().$$.prototype.defines)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared(),$_default()];},d:['$','Correspondence','$m','definesEvery']};};correspondence$.definesAny=function definesAny($6e){var correspondence$=this;var $6g;for(var $6f=$6e.iterator();($6g=$6f.next())!==getFinished();){if(correspondence$.defines($6g)){return true;}}
if(getFinished()===$6g){return false;}};correspondence$.definesAny.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'keys',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Key$Correspondence'}},$an:function(){return[];}}],$cont:Correspondence,$an:function(){return[doc($CCMM$['ceylon.language'].Correspondence.$m.definesAny.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Correspondence().$$.prototype.defines)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared(),$_default()];},d:['$','Correspondence','$m','definesAny']};};correspondence$.items=function ($6h){var correspondence$=this;return tpl$([],undefined,Comprehension(function(){var $6i=$6h.iterator();var $6j=getFinished();var next$6j=function(){return $6j=$6i.next();}
next$6j();return function(){if($6j!==getFinished()){var $6k=$6j;var $6l=correspondence$.$_get($6k);next$6j();return $6l;}
return getFinished();}
},{Absent$Iterable:{t:Null},Element$Iterable:{t:'u',l:[{t:Null},correspondence$.$$targs$$.Item$Correspondence]}}));};correspondence$.items.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:'u',l:[{t:Null},'Item$Correspondence']}}},$ps:[{$nm:'keys',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Key$Correspondence'}},$an:function(){return[];}}],$cont:Correspondence,$an:function(){return[doc($CCMM$['ceylon.language'].Correspondence.$m.items.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Correspondence().$$.prototype.$_get)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared(),$_default()];},d:['$','Correspondence','$m','items']};};})(Correspondence.$$.prototype);}
return Correspondence;}
ex$.$init$Correspondence=$init$Correspondence;$init$Correspondence();function Finished(finished$){$init$Finished();if(finished$===undefined)throwexc(InvocationException$meta$model("Cannot instantiate abstract class"),'?','?')
return finished$;}
Finished.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],of:[$prop$get$6m],$an:function(){return[doc($CCMM$['ceylon.language'].Finished.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Iterator)].reifyCeylonType({t:InterfaceDeclaration$meta$declaration})),shared(),abstract()];},d:['$','Finished']};};
ex$.Finished=Finished;function $init$Finished(){if(Finished.$$===undefined){initTypeProto(Finished,'ceylon.language::Finished',Basic);
}
return Finished;}
ex$.$init$Finished=$init$Finished;$init$Finished();function $6m(){var finished$=new $6m.$$;Finished(finished$);finished$.$prop$getString={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$6m,$an:function(){return[shared(),actual()];},d:['$','finished','$at','string']};}};finished$.$prop$getString.get=function(){return string};return finished$;
};$6m.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Finished},$an:function(){return[doc($CCMM$['ceylon.language'].finished.$an.doc[0]),see("Iterator"),shared()];},d:['$','finished']};};function $init$$6m(){if($6m.$$===undefined){initTypeProto($6m,'ceylon.language::finished',$init$Finished());
(function(finished$){atr$(finished$,'string',function(){var finished$=this;return "finished";},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$6m,$an:function(){return[shared(),actual()];},d:['$','finished','$at','string']};});})($6m.$$.prototype);}
return $6m;}
ex$.$init$$6m=$init$$6m;$init$$6m();var $6n;function getFinished(){if($6n===undefined){$6n=$init$$6m()();$6n.$crtmm$=getFinished.$crtmm$;}
return $6n;}
ex$.getFinished=getFinished;getFinished.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$6m},$an:function(){return[doc($CCMM$['ceylon.language'].finished.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Iterator)].reifyCeylonType({t:InterfaceDeclaration$meta$declaration})),shared()];},d:['$','finished']};};$prop$getFinished={get:getFinished,$crtmm$:getFinished.$crtmm$};get$6m=getFinished;$prop$get$6m=getFinished;ex$.$prop$getFinished=$prop$getFinished;function Sequential($$targs$$,sequential$){List({Element$List:$$targs$$.Element$Sequential},sequential$);Ranged({Span$Ranged:{t:Sequential,a:{Element$Sequential:$$targs$$.Element$Sequential}},Element$Ranged:$$targs$$.Element$Sequential,Index$Ranged:{t:Integer}},sequential$);add_type_arg(sequential$,'Span$Ranged',{t:Sequential,a:{Element$Sequential:sequential$.$$targs$$.Element$Sequential}});add_type_arg(sequential$,'Index$Ranged',{t:Integer});set_type_args(sequential$,$$targs$$);sequential$.$prop$getKeys={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Integer}}},$cont:Sequential,$an:function(){return[doc("A sequence containing all indexes of this sequence."),shared(),actual(),$_default()];},d:['$','Sequential','$at','keys']};}};sequential$.$prop$getKeys.get=function(){return keys};sequential$.$prop$getString={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Sequential,$an:function(){return[doc($CCMM$['ceylon.language'].Sequential.$at.string.$an.doc[0]),shared(),actual(),$_default()];},d:['$','Sequential','$at','string']};}};sequential$.$prop$getString.get=function(){return string};}
Sequential.$crtmm$=function(){return{mod:$CCMM$,$tp:{Element$Sequential:{'var':'out'}},satisfies:[{t:List,a:{Element$List:'Element$Sequential'}},{t:Ranged,a:{Span$Ranged:{t:Sequential,a:{Element$Sequential:'Element$Sequential'}},Element$Ranged:'Element$Sequential',Index$Ranged:{t:Integer}}}],of:[{t:Empty},{t:Sequence,a:{Element$Sequence:'Element$Sequential'}}],$an:function(){return[doc($CCMM$['ceylon.language'].Sequential.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Tuple)].reifyCeylonType({t:ClassDeclaration$meta$declaration})),shared()];},d:['$','Sequential']};};
ex$.Sequential=Sequential;function $init$Sequential(){if(Sequential.$$===undefined){initTypeProtoI(Sequential,'ceylon.language::Sequential',$init$List(),$init$Ranged());
(function(sequential$){sequential$.$prop$getReversed={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Sequential'}},$cont:Sequential,$an:function(){return[doc("Reverse this sequence, returning a new sequence."),shared(),actual(),formal()];},d:['$','Sequential','$at','reversed']};}};sequential$.sequence=function (){var sequential$=this;return sequential$;};sequential$.sequence.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Sequential'}},$ps:[],$cont:Sequential,$an:function(){return[doc("This sequence."),shared(),actual(),$_default()];},d:['$','Sequential','$m','sequence']};};sequential$.$prop$getRest={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Sequential'}},$cont:Sequential,$an:function(){return[doc("The rest of the sequence, without the first element."),shared(),actual(),formal()];},d:['$','Sequential','$at','rest']};}};atr$(sequential$,'keys',function(){var sequential$=this;return (function(){var $6o=sequential$.size;return $6o>0?Range(0,0+$6o-1,{Element$Sequential:{t:Integer}}):getEmpty();}());},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Integer}}},$cont:Sequential,$an:function(){return[doc("A sequence containing all indexes of this sequence."),shared(),actual(),$_default()];},d:['$','Sequential','$at','keys']};});sequential$.repeat=function ($6q){var sequential$=this;return tpl$([],undefined,sequential$.cycle($6q));};sequential$.repeat.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Sequential'}},$ps:[{$nm:'times',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Sequential,$an:function(){return[doc($CCMM$['ceylon.language'].Sequential.$m.repeat.$an.doc[0]),shared(),actual(),$_default()];},d:['$','Sequential','$m','repeat']};};sequential$.initial=function ($6r){var sequential$=this;return sequential$.segment(0,$6r);};sequential$.initial.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Sequential'}},$ps:[{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Sequential,$an:function(){return[doc($CCMM$['ceylon.language'].Sequential.$m.initial.$an.doc[0]),shared(),actual(),$_default()];},d:['$','Sequential','$m','initial']};};sequential$.terminal=function terminal($6s){var sequential$=this;var $6t;if(($6t=sequential$.lastIndex)!==null&&($6s>0)){return sequential$.span($6t.minus($6s).plus(1),$6t);}else {return getEmpty();}};sequential$.terminal.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Sequential'}},$ps:[{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Sequential,$an:function(){return[doc($CCMM$['ceylon.language'].Sequential.$m.terminal.$an.doc[0]),shared(),actual(),$_default()];},d:['$','Sequential','$m','terminal']};};sequential$.trim=function ($6u){var sequential$=this;return tpl$([],undefined,sequential$.getT$all()['ceylon.language::List'].$$.prototype.trim.call(this,$6u));};sequential$.trim.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Sequential'}},$ps:[{$nm:'trimming',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:Sequential,$an:function(){return[doc($CCMM$['ceylon.language'].Sequential.$m.trim.$an.doc[0]),shared(),actual(),$_default()];},d:['$','Sequential','$m','trim']};};sequential$.trimLeading=function ($6v){var sequential$=this;return tpl$([],undefined,sequential$.getT$all()['ceylon.language::List'].$$.prototype.trimLeading.call(this,$6v));};sequential$.trimLeading.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Sequential'}},$ps:[{$nm:'trimming',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:Sequential,$an:function(){return[doc($CCMM$['ceylon.language'].Sequential.$m.trimLeading.$an.doc[0]),shared(),actual(),$_default()];},d:['$','Sequential','$m','trimLeading']};};sequential$.trimTrailing=function ($6w){var sequential$=this;return tpl$([],undefined,sequential$.getT$all()['ceylon.language::List'].$$.prototype.trimTrailing.call(this,$6w));};sequential$.trimTrailing.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Sequential'}},$ps:[{$nm:'trimming',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:Sequential,$an:function(){return[doc($CCMM$['ceylon.language'].Sequential.$m.trimTrailing.$an.doc[0]),shared(),actual(),$_default()];},d:['$','Sequential','$m','trimTrailing']};};sequential$.following={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'T',l:[{$t:'Other$following'},{$t:'Element$Sequential',seq:1}]},$ps:[{$nm:'head',$mt:'prm',$t:'Other$following',$an:function(){return[];}}],$cont:Sequential,$tp:{Other$following:{}},$an:function(){return[doc($CCMM$['ceylon.language'].Sequential.$m.following.$an.doc[0]),shared(),actual(),formal()];},d:['$','Sequential','$m','following']};}};sequential$.clone=function (){var sequential$=this;return sequential$;};sequential$.clone.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Sequential'}},$ps:[],$cont:Sequential,$an:function(){return[doc("This sequence."),shared(),actual(),$_default()];},d:['$','Sequential','$m','clone']};};atr$(sequential$,'string',function(){var sequential$=this;return ($6x=(sequential$.empty?"[]":null),nn$($6x)?$6x:"[".plus(commaList(sequential$)).plus("]"));},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Sequential,$an:function(){return[doc($CCMM$['ceylon.language'].Sequential.$at.string.$an.doc[0]),shared(),actual(),$_default()];},d:['$','Sequential','$at','string']};});})(Sequential.$$.prototype);}
return Sequential;}
ex$.$init$Sequential=$init$Sequential;$init$Sequential();var $6x;function Sequence($$targs$$,sequence$){Sequential({Element$Sequential:$$targs$$.Element$Sequence},sequence$);Iterable({Absent$Iterable:{t:Nothing},Element$Iterable:$$targs$$.Element$Sequence},sequence$);set_type_args(sequence$,$$targs$$);sequence$.$prop$getEmpty={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:Sequence,$an:function(){return[doc($CCMM$['ceylon.language'].Sequence.$at.empty.$an.doc[0]),shared(),actual()];},d:['$','Sequence','$at','empty']};}};sequence$.$prop$getEmpty.get=function(){return empty};sequence$.$prop$getKeys={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequence,a:{Element$Sequence:{t:Integer}}},$cont:Sequence,$an:function(){return[doc($CCMM$['ceylon.language'].Sequence.$at.keys.$an.doc[0]),shared(),actual(),$_default()];},d:['$','Sequence','$at','keys']};}};sequence$.$prop$getKeys.get=function(){return keys};sequence$.$prop$getString={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Sequence,$an:function(){return[shared(),actual(),$_default()];},d:['$','Sequence','$at','string']};}};sequence$.$prop$getString.get=function(){return string};}
Sequence.$crtmm$=function(){return{mod:$CCMM$,$tp:{Element$Sequence:{'var':'out'}},satisfies:[{t:Sequential,a:{Element$Sequential:'Element$Sequence'}},{t:Iterable,a:{Absent$Iterable:{t:Nothing},Element$Iterable:'Element$Sequence'}}],$an:function(){return[doc($CCMM$['ceylon.language'].Sequence.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Empty)].reifyCeylonType({t:InterfaceDeclaration$meta$declaration})),by(["Gavin"].reifyCeylonType({t:$_String})),shared()];},d:['$','Sequence']};};
ex$.Sequence=Sequence;function $init$Sequence(){if(Sequence.$$===undefined){initTypeProtoI(Sequence,'ceylon.language::Sequence',$init$Sequential(),$init$Iterable());
(function(sequence$){sequence$.$prop$getLastIndex={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Sequence,$an:function(){return[doc("The index of the last element of the sequence."),see([$init$OpenValue()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Iterable().$$.prototype.$prop$getSize)].reifyCeylonType({t:ValueDeclaration$meta$declaration})),shared(),actual(),formal()];},d:['$','Sequence','$at','lastIndex']};}};sequence$.$prop$getFirst={$crtmm$:function(){return{mod:$CCMM$,$t:'Element$Sequence',$cont:Sequence,$an:function(){return[doc($CCMM$['ceylon.language'].Sequence.$at.first.$an.doc[0]),shared(),actual(),formal()];},d:['$','Sequence','$at','first']};}};sequence$.$prop$getLast={$crtmm$:function(){return{mod:$CCMM$,$t:'Element$Sequence',$cont:Sequence,$an:function(){return[doc($CCMM$['ceylon.language'].Sequence.$at.last.$an.doc[0]),shared(),actual(),formal()];},d:['$','Sequence','$at','last']};}};atr$(sequence$,'empty',function(){var sequence$=this;return false;},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:Sequence,$an:function(){return[doc($CCMM$['ceylon.language'].Sequence.$at.empty.$an.doc[0]),shared(),actual()];},d:['$','Sequence','$at','empty']};});atr$(sequence$,'keys',function(){var sequence$=this;return Range(0,sequence$.lastIndex,{Element$Range:{t:Integer}});},undefined,function(){return{mod:$CCMM$,$t:{t:Sequence,a:{Element$Sequence:{t:Integer}}},$cont:Sequence,$an:function(){return[doc($CCMM$['ceylon.language'].Sequence.$at.keys.$an.doc[0]),shared(),actual(),$_default()];},d:['$','Sequence','$at','keys']};});sequence$.$prop$getReversed={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequence,a:{Element$Sequence:'Element$Sequence'}},$cont:Sequence,$an:function(){return[doc("Reverse this sequence, returning a new nonempty\nsequence."),shared(),actual(),formal()];},d:['$','Sequence','$at','reversed']};}};sequence$.sequence=function (){var sequence$=this;return sequence$;};sequence$.sequence.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequence,a:{Element$Sequence:'Element$Sequence'}},$ps:[],$cont:Sequence,$an:function(){return[doc("This nonempty sequence."),shared(),$_default(),actual()];},d:['$','Sequence','$m','sequence']};};sequence$.$prop$getRest={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Sequence'}},$cont:Sequence,$an:function(){return[doc("The rest of the sequence, without the first element."),shared(),actual(),formal()];},d:['$','Sequence','$at','rest']};}};sequence$.$_sort=function $_sort($6y){var sequence$=this;var $6z=internalSort($6y,sequence$,{Element$internalSort:sequence$.$$targs$$.Element$Sequence});//assert at Sequence.ceylon (65:8-65:27)
var $70;if(!(nonempty(($70=$6z)))) {throw wrapexc(AssertionError("Assertion failed: \'nonempty s\' at Sequence.ceylon (65:15-65:26)"),'65:8-65:27','Sequence.ceylon'); }
return $70;};sequence$.$_sort.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequence,a:{Element$Sequence:'Element$Sequence'}},$ps:[{$nm:'comparing',$mt:'prm',$pt:'f',$t:{t:Comparison},$an:function(){return[doc("The function comparing pairs of elements.")];}}],$cont:Sequence,$an:function(){return[doc($CCMM$['ceylon.language'].Sequence.$m.sort.$an.doc[0]),shared(),$_default(),actual()];},d:['$','Sequence','$m','sort']};};sequence$.collect=function collect($71,$$$mptypes){var sequence$=this;var $72=sequence$.$_map($71,{Result$map:$$$mptypes.Result$collect}).sequence();//assert at Sequence.ceylon (75:8-75:27)
var $73;if(!(nonempty(($73=$72)))) {throw wrapexc(AssertionError("Assertion failed: \'nonempty s\' at Sequence.ceylon (75:15-75:26)"),'75:8-75:27','Sequence.ceylon'); }
return $73;};sequence$.collect.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequence,a:{Element$Sequence:'Result$collect'}},$ps:[{$nm:'collecting',$mt:'prm',$pt:'f',$t:'Result$collect',$an:function(){return[doc("The transformation applied to the elements.")];}}],$cont:Sequence,$tp:{Result$collect:{}},$an:function(){return[doc($CCMM$['ceylon.language'].Sequence.$m.collect.$an.doc[0]),shared(),$_default(),actual()];},d:['$','Sequence','$m','collect']};};sequence$.clone=function (){var sequence$=this;return sequence$;};sequence$.clone.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequence,a:{Element$Sequence:'Element$Sequence'}},$ps:[],$cont:Sequence,$an:function(){return[doc("This nonempty sequence."),shared(),actual(),$_default()];},d:['$','Sequence','$m','clone']};};atr$(sequence$,'string',function(){var sequence$=this;return attrGetter(sequence$.getT$all()['ceylon.language::Sequential'],'string').call(this);},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Sequence,$an:function(){return[shared(),actual(),$_default()];},d:['$','Sequence','$at','string']};});sequence$.shorterThan=function ($74){var sequence$=this;return sequence$.getT$all()['ceylon.language::List'].$$.prototype.shorterThan.call(this,$74);};sequence$.shorterThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Sequence,$an:function(){return[shared(),actual(),$_default()];},d:['$','Sequence','$m','shorterThan']};};sequence$.longerThan=function ($75){var sequence$=this;return sequence$.getT$all()['ceylon.language::List'].$$.prototype.longerThan.call(this,$75);};sequence$.longerThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Sequence,$an:function(){return[shared(),actual(),$_default()];},d:['$','Sequence','$m','longerThan']};};sequence$.findLast=function ($76){var sequence$=this;return sequence$.getT$all()['ceylon.language::List'].$$.prototype.findLast.call(this,$76);};sequence$.findLast.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$Sequence']},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:Sequence,$an:function(){return[shared(),$_default(),actual()];},d:['$','Sequence','$m','findLast']};};sequence$.repeat=function ($77){var sequence$=this;return sequence$.getT$all()['ceylon.language::Sequential'].$$.prototype.repeat.call(this,$77);};sequence$.repeat.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Sequence'}},$ps:[{$nm:'times',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Sequence,$an:function(){return[shared(),actual(),$_default()];},d:['$','Sequence','$m','repeat']};};sequence$.following=function ($78,$$$mptypes){var sequence$=this;return tpl$([$78],{t:'T',l:[$$$mptypes.Other$following,{t:Sequence,a:{Element$Sequence:sequence$.$$targs$$.Element$Sequence}}]},sequence$);};sequence$.following.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'T',l:[{$t:'Other$following'},{$t:'Element$Sequence',seq:1}]},$ps:[{$nm:'head',$mt:'prm',$t:'Other$following',$an:function(){return[];}}],$cont:Sequence,$tp:{Other$following:{}},$an:function(){return[shared(),actual(),$_default()];},d:['$','Sequence','$m','following']};};})(Sequence.$$.prototype);}
return Sequence;}
ex$.$init$Sequence=$init$Sequence;$init$Sequence();function sequence($79,$$$mptypes){var $7a;if(is$(($7a=$79),{t:Sequence,a:{Element$Sequence:$$$mptypes.Element$sequence}})){return $7a;}var $7b=$_Array($79,{Element$Array:$$$mptypes.Element$sequence});if($7b.empty){//assert at Sequence.ceylon (116:8-116:31)
var $7c;if(!(is$(($7c=null),$$$mptypes.Absent$sequence))) {throw wrapexc(AssertionError("Assertion failed: \'is Absent null\' at Sequence.ceylon (116:15-116:30)"),'116:8-116:31','Sequence.ceylon'); }
return null;}return ArraySequence($7b,{Element$ArraySequence:$$$mptypes.Element$sequence});}
ex$.sequence=sequence;sequence.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Sequence,a:{Element$Sequence:'Element$sequence'}},'Absent$sequence']},$ps:[{$nm:'elements',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:'Absent$sequence',Element$Iterable:'Element$sequence'}},$an:function(){return[];}}],$tp:{Element$sequence:{},Absent$sequence:{'satisfies':[{t:Null}]}},$an:function(){return[doc($CCMM$['ceylon.language'].sequence.$an.doc[0]),by(["Gavin"].reifyCeylonType({t:$_String})),shared()];},d:['$','sequence']};};function Empty(empty$){Sequential({Element$Sequential:{t:Nothing}},empty$);Ranged({Span$Ranged:{t:Empty},Element$Ranged:{t:Nothing},Index$Ranged:{t:Integer}},empty$);add_type_arg(empty$,'Span$Ranged',{t:Empty});add_type_arg(empty$,'Index$Ranged',{t:Integer});empty$.$prop$getKeys={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Empty},$cont:Empty,$an:function(){return[doc("Returns an `Empty`."),shared(),actual()];},d:['$','Empty','$at','keys']};}};empty$.$prop$getKeys.get=function(){return keys};empty$.$prop$getEmpty={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:Empty,$an:function(){return[doc("Returns `true`."),shared(),actual()];},d:['$','Empty','$at','empty']};}};empty$.$prop$getEmpty.get=function(){return empty};empty$.$prop$getSize={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Empty,$an:function(){return[doc("Returns 0."),shared(),actual()];},d:['$','Empty','$at','size']};}};empty$.$prop$getSize.get=function(){return size};empty$.$prop$getReversed={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Empty},$cont:Empty,$an:function(){return[doc("Returns an `Empty`."),shared(),actual()];},d:['$','Empty','$at','reversed']};}};empty$.$prop$getReversed.get=function(){return reversed};empty$.$prop$getString={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Empty,$an:function(){return[doc($CCMM$['ceylon.language'].Empty.$at.string.$an.doc[0]),shared(),actual()];},d:['$','Empty','$at','string']};}};empty$.$prop$getString.get=function(){return string};empty$.$prop$getLastIndex={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Null},$cont:Empty,$an:function(){return[doc("Returns `null`."),shared(),actual()];},d:['$','Empty','$at','lastIndex']};}};empty$.$prop$getLastIndex.get=function(){return lastIndex};empty$.$prop$getFirst={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Null},$cont:Empty,$an:function(){return[doc("Returns `null`."),shared(),actual()];},d:['$','Empty','$at','first']};}};empty$.$prop$getFirst.get=function(){return first};empty$.$prop$getLast={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Null},$cont:Empty,$an:function(){return[doc("Returns `null`."),shared(),actual()];},d:['$','Empty','$at','last']};}};empty$.$prop$getLast.get=function(){return last};empty$.$prop$getRest={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Empty},$cont:Empty,$an:function(){return[doc("Returns an `Empty`."),shared(),actual()];},d:['$','Empty','$at','rest']};}};empty$.$prop$getRest.get=function(){return rest};empty$.$prop$getCoalesced={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Empty},$cont:Empty,$an:function(){return[doc("Returns an `Empty`."),shared(),actual()];},d:['$','Empty','$at','coalesced']};}};empty$.$prop$getCoalesced.get=function(){return coalesced};empty$.$prop$getIndexed={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Empty},$cont:Empty,$an:function(){return[doc("Returns an `Empty`."),shared(),actual()];},d:['$','Empty','$at','indexed']};}};empty$.$prop$getIndexed.get=function(){return indexed};}
Empty.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:Sequential,a:{Element$Sequential:{t:Nothing}}},{t:Ranged,a:{Span$Ranged:{t:Empty},Element$Ranged:{t:Nothing},Index$Ranged:{t:Integer}}}],of:[$prop$get$7d],$an:function(){return[doc($CCMM$['ceylon.language'].Empty.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Sequence)].reifyCeylonType({t:InterfaceDeclaration$meta$declaration})),shared()];},d:['$','Empty']};};
ex$.Empty=Empty;function $init$Empty(){if(Empty.$$===undefined){initTypeProtoI(Empty,'ceylon.language::Empty',$init$Sequential(),$init$Ranged());
(function(empty$){empty$.iterator=function (){var empty$=this;return getEmptyIterator();};empty$.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:{t:Nothing}}},$ps:[],$cont:Empty,$an:function(){return[doc("Returns an iterator that is already exhausted."),shared(),actual()];},d:['$','Empty','$m','iterator']};};empty$.$_get=function ($7e){var empty$=this;return null;};empty$.$_get.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Null},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Empty,$an:function(){return[doc("Returns `null` for any given index."),shared(),actual()];},d:['$','Empty','$m','get']};};empty$.getFromLast=function ($7f){var empty$=this;return null;};empty$.getFromLast.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Null},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Empty,$an:function(){return[doc("Returns `null` for any given index."),shared(),actual()];},d:['$','Empty','$m','getFromLast']};};empty$.getFromFirst=function ($7g){var empty$=this;return null;};empty$.getFromFirst.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Null},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Empty,$an:function(){return[doc("Returns `null` for any given index."),shared(),actual()];},d:['$','Empty','$m','getFromFirst']};};atr$(empty$,'keys',function(){var empty$=this;return empty$;},undefined,function(){return{mod:$CCMM$,$t:{t:Empty},$cont:Empty,$an:function(){return[doc("Returns an `Empty`."),shared(),actual()];},d:['$','Empty','$at','keys']};});empty$.segment=function ($7h,$7i){var empty$=this;return empty$;};empty$.segment.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Empty,$an:function(){return[doc("Returns an `Empty` for any given segment."),shared(),actual()];},d:['$','Empty','$m','segment']};};empty$.span=function ($7j,$7k){var empty$=this;return empty$;};empty$.span.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'to',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Empty,$an:function(){return[doc("Returns an `Empty` for any given span."),shared(),actual()];},d:['$','Empty','$m','span']};};empty$.spanTo=function ($7l){var empty$=this;return empty$;};empty$.spanTo.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'to',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Empty,$an:function(){return[doc("Returns an `Empty` for any given span."),shared(),actual()];},d:['$','Empty','$m','spanTo']};};empty$.spanFrom=function ($7m){var empty$=this;return empty$;};empty$.spanFrom.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Empty,$an:function(){return[doc("Returns an `Empty` for any given span."),shared(),actual()];},d:['$','Empty','$m','spanFrom']};};atr$(empty$,'empty',function(){var empty$=this;return true;},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:Empty,$an:function(){return[doc("Returns `true`."),shared(),actual()];},d:['$','Empty','$at','empty']};});atr$(empty$,'size',function(){var empty$=this;return 0},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Empty,$an:function(){return[doc("Returns 0."),shared(),actual()];},d:['$','Empty','$at','size']};});atr$(empty$,'reversed',function(){var empty$=this;return empty$;},undefined,function(){return{mod:$CCMM$,$t:{t:Empty},$cont:Empty,$an:function(){return[doc("Returns an `Empty`."),shared(),actual()];},d:['$','Empty','$at','reversed']};});empty$.sequence=function (){var empty$=this;return empty$;};empty$.sequence.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[],$cont:Empty,$an:function(){return[doc("Returns an `Empty`."),shared(),actual()];},d:['$','Empty','$m','sequence']};};atr$(empty$,'string',function(){var empty$=this;return "[]";},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Empty,$an:function(){return[doc($CCMM$['ceylon.language'].Empty.$at.string.$an.doc[0]),shared(),actual()];},d:['$','Empty','$at','string']};});atr$(empty$,'lastIndex',function(){var empty$=this;return null;},undefined,function(){return{mod:$CCMM$,$t:{t:Null},$cont:Empty,$an:function(){return[doc("Returns `null`."),shared(),actual()];},d:['$','Empty','$at','lastIndex']};});atr$(empty$,'first',function(){var empty$=this;return null;},undefined,function(){return{mod:$CCMM$,$t:{t:Null},$cont:Empty,$an:function(){return[doc("Returns `null`."),shared(),actual()];},d:['$','Empty','$at','first']};});atr$(empty$,'last',function(){var empty$=this;return null;},undefined,function(){return{mod:$CCMM$,$t:{t:Null},$cont:Empty,$an:function(){return[doc("Returns `null`."),shared(),actual()];},d:['$','Empty','$at','last']};});atr$(empty$,'rest',function(){var empty$=this;return empty$;},undefined,function(){return{mod:$CCMM$,$t:{t:Empty},$cont:Empty,$an:function(){return[doc("Returns an `Empty`."),shared(),actual()];},d:['$','Empty','$at','rest']};});empty$.clone=function (){var empty$=this;return empty$;};empty$.clone.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[],$cont:Empty,$an:function(){return[doc("Returns an `Empty`."),shared(),actual()];},d:['$','Empty','$m','clone']};};atr$(empty$,'coalesced',function(){var empty$=this;return empty$;},undefined,function(){return{mod:$CCMM$,$t:{t:Empty},$cont:Empty,$an:function(){return[doc("Returns an `Empty`."),shared(),actual()];},d:['$','Empty','$at','coalesced']};});atr$(empty$,'indexed',function(){var empty$=this;return empty$;},undefined,function(){return{mod:$CCMM$,$t:{t:Empty},$cont:Empty,$an:function(){return[doc("Returns an `Empty`."),shared(),actual()];},d:['$','Empty','$at','indexed']};});empty$.chain=function ($7n,$$$mptypes){var empty$=this;return $7n;};empty$.chain.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:'OtherAbsent$chain',Element$Iterable:'Other$chain'}},$ps:[{$nm:'other',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:'OtherAbsent$chain',Element$Iterable:'Other$chain'}},$an:function(){return[];}}],$cont:Empty,$tp:{Other$chain:{},OtherAbsent$chain:{'satisfies':[{t:Null}]}},$an:function(){return[doc("Returns `other`."),shared(),actual()];},d:['$','Empty','$m','chain']};};empty$.contains=function ($7o){var empty$=this;return false;};empty$.contains.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'element',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:Empty,$an:function(){return[doc("Returns `false` for any given element."),shared(),actual()];},d:['$','Empty','$m','contains']};};empty$.count=function ($7p){return 0;};empty$.count.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:Empty,$an:function(){return[doc("Returns 0 for any given predicate."),shared(),actual()];},d:['$','Empty','$m','count']};};empty$.defines=function ($7q){var empty$=this;return false;};empty$.defines.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Empty,$an:function(){return[shared(),actual()];},d:['$','Empty','$m','defines']};};empty$.$_map=function ($7r,$$$mptypes){var empty$=this;return empty$;};empty$.$_map.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'collecting',$mt:'prm',$pt:'f',$t:'Result$map',$an:function(){return[];}}],$cont:Empty,$tp:{Result$map:{}},$an:function(){return[shared(),actual()];},d:['$','Empty','$m','map']};};empty$.$_filter=function ($7s){var empty$=this;return empty$;};empty$.$_filter.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:Empty,$an:function(){return[shared(),actual()];},d:['$','Empty','$m','filter']};};empty$.fold=function ($7t,$7u,$$$mptypes){var empty$=this;return $7t;};empty$.fold.$crtmm$=function(){return{mod:$CCMM$,$t:'Result$fold',$ps:[{$nm:'initial',$mt:'prm',$t:'Result$fold',$an:function(){return[];}},{$nm:'accumulating',$mt:'prm',$pt:'f',$t:'Result$fold',$an:function(){return[];}}],$cont:Empty,$tp:{Result$fold:{}},$an:function(){return[shared(),actual()];},d:['$','Empty','$m','fold']};};empty$.$_reduce=function ($7v,$$$mptypes){var empty$=this;return null;};empty$.$_reduce.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Null},$ps:[{$nm:'accumulating',$mt:'prm',$pt:'f',$t:'Result$reduce',$an:function(){return[];}}],$cont:Empty,$tp:{Result$reduce:{}},$an:function(){return[shared(),actual()];},d:['$','Empty','$m','reduce']};};empty$.find=function ($7w){var empty$=this;return null;};empty$.find.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Null},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:Empty,$an:function(){return[shared(),actual()];},d:['$','Empty','$m','find']};};empty$.$_sort=function ($7x){var empty$=this;return empty$;};empty$.$_sort.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'comparing',$mt:'prm',$pt:'f',$t:{t:Comparison},$an:function(){return[];}}],$cont:Empty,$an:function(){return[shared(),actual()];},d:['$','Empty','$m','sort']};};empty$.collect=function ($7y,$$$mptypes){var empty$=this;return empty$;};empty$.collect.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'collecting',$mt:'prm',$pt:'f',$t:'Result$collect',$an:function(){return[];}}],$cont:Empty,$tp:{Result$collect:{}},$an:function(){return[shared(),actual()];},d:['$','Empty','$m','collect']};};empty$.select=function ($7z){var empty$=this;return empty$;};empty$.select.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:Empty,$an:function(){return[shared(),actual()];},d:['$','Empty','$m','select']};};empty$.any=function ($80){var empty$=this;return false;};empty$.any.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:Empty,$an:function(){return[shared(),actual()];},d:['$','Empty','$m','any']};};empty$.$_every=function ($81){var empty$=this;return true;};empty$.$_every.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:Empty,$an:function(){return[shared(),actual()];},d:['$','Empty','$m','every']};};empty$.skip=function ($82){var empty$=this;return empty$;};empty$.skip.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'skipping',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Empty,$an:function(){return[shared(),actual()];},d:['$','Empty','$m','skip']};};empty$.take=function ($83){var empty$=this;return empty$;};empty$.take.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'taking',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Empty,$an:function(){return[shared(),actual()];},d:['$','Empty','$m','take']};};empty$.by=function ($84){var empty$=this;return empty$;};empty$.by.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'step',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Empty,$an:function(){return[shared(),actual()];},d:['$','Empty','$m','by']};};empty$.withLeading=function ($85,$$$mptypes){var empty$=this;return tpl$([$85],{t:'T',l:[$$$mptypes.Element$withLeading]});};empty$.withLeading.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'T',l:[{$t:'Element$withLeading'}]},$ps:[{$nm:'element',$mt:'prm',$t:'Element$withLeading',$an:function(){return[];}}],$cont:Empty,$tp:{Element$withLeading:{}},$an:function(){return[shared(),actual()];},d:['$','Empty','$m','withLeading']};};empty$.withTrailing=function ($86,$$$mptypes){var empty$=this;return tpl$([$86],{t:'T',l:[$$$mptypes.Element$withTrailing]});};empty$.withTrailing.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'T',l:[{$t:'Element$withTrailing'}]},$ps:[{$nm:'element',$mt:'prm',$t:'Element$withTrailing',$an:function(){return[];}}],$cont:Empty,$tp:{Element$withTrailing:{}},$an:function(){return[shared(),actual()];},d:['$','Empty','$m','withTrailing']};};empty$.following=function ($87,$$$mptypes){var empty$=this;return tpl$([$87],{t:'T',l:[$$$mptypes.Other$following]});};empty$.following.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'T',l:[{$t:'Other$following'}]},$ps:[{$nm:'head',$mt:'prm',$t:'Other$following',$an:function(){return[];}}],$cont:Empty,$tp:{Other$following:{}},$an:function(){return[shared(),actual()];},d:['$','Empty','$m','following']};};})(Empty.$$.prototype);}
return Empty;}
ex$.$init$Empty=$init$Empty;$init$Empty();function $7d(){var empty$=new $7d.$$;$_Object(empty$);Empty(empty$);return empty$;
};$7d.$crtmm$=function(){return{mod:$CCMM$,'super':{t:$_Object},satisfies:[{t:Empty}],$an:function(){return[doc($CCMM$['ceylon.language'].empty.$an.doc[0]),by("Tako Schotanus"),shared()];},d:['$','empty']};};function $init$$7d(){if($7d.$$===undefined){initTypeProto($7d,'ceylon.language::empty',$init$$_Object(),$init$Empty());
}
return $7d;}
ex$.$init$$7d=$init$$7d;$init$$7d();var $88;function getEmpty(){if($88===undefined){$88=$init$$7d()();$88.$crtmm$=getEmpty.$crtmm$;}
return $88;}
ex$.getEmpty=getEmpty;getEmpty.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$7d},$an:function(){return[doc($CCMM$['ceylon.language'].empty.$an.doc[0]),by(["Tako Schotanus"].reifyCeylonType({t:$_String})),shared()];},d:['$','empty']};};$prop$getEmpty={get:getEmpty,$crtmm$:getEmpty.$crtmm$};get$7d=getEmpty;$prop$get$7d=getEmpty;ex$.$prop$getEmpty=$prop$getEmpty;function $89($$targs$$){var emptyIterator$=new $89.$$;emptyIterator$.$$targs$$=$$targs$$;Iterator({Element$Iterator:{t:Nothing}},emptyIterator$);return emptyIterator$;
};$89.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:Iterator,a:{Element$Iterator:{t:Nothing}}}],$an:function(){return[doc("An iterator that returns no elements."),shared()];},d:['$','emptyIterator']};};function $init$$89(){if($89.$$===undefined){initTypeProto($89,'ceylon.language::emptyIterator',Basic,$init$Iterator());
(function(emptyIterator$){emptyIterator$.next=function (){var emptyIterator$=this;return getFinished();};})($89.$$.prototype);}
return $89;}
ex$.$init$$89=$init$$89;$init$$89();var $8a;function getEmptyIterator(){if($8a===undefined){$8a=$init$$89()({Element$Iterator:{t:Nothing}});$8a.$crtmm$=getEmptyIterator.$crtmm$;}
return $8a;}
ex$.getEmptyIterator=getEmptyIterator;getEmptyIterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$89},$an:function(){return[doc("An iterator that returns no elements."),shared()];},d:['$','emptyIterator']};};$prop$getEmptyIterator={get:getEmptyIterator,$crtmm$:getEmptyIterator.$crtmm$};get$89=getEmptyIterator;$prop$get$89=getEmptyIterator;ex$.$prop$getEmptyIterator=$prop$getEmptyIterator;function StringBuilder(stringBuilder$){$init$StringBuilder();if(stringBuilder$===undefined)stringBuilder$=new StringBuilder.$$;
stringBuilder$.$8b_=arrayOfSize(10,Character(88,true),{Element$arrayOfSize:{t:Character}});stringBuilder$.$prop$get$8b={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Array,a:{Element$Array:{t:Character}}},$cont:StringBuilder,$an:function(){return[doc("The storage"),variable()];},d:['$','StringBuilder','$at','array$b7xzb7']};}};stringBuilder$.$prop$get$8b.get=function(){return $8b};stringBuilder$.$8c_=(0);stringBuilder$.$prop$get$8c={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:StringBuilder,$an:function(){return[doc("The number of items in [[array]] which have actually been appended."),variable()];},d:['$','StringBuilder','$at','length$bireuw']};}};stringBuilder$.$prop$get$8c.get=function(){return $8c};return stringBuilder$;}
StringBuilder.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],$an:function(){return[doc($CCMM$['ceylon.language'].StringBuilder.$an.doc[0]),shared()];},d:['$','StringBuilder']};};
ex$.StringBuilder=StringBuilder;function $init$StringBuilder(){if(StringBuilder.$$===undefined){initTypeProto(StringBuilder,'ceylon.language::StringBuilder',Basic);
(function(stringBuilder$){atr$(stringBuilder$,'$8b',function(){return this.$8b_;},function($8d){return this.$8b_=$8d;},function(){return{mod:$CCMM$,$t:{t:$_Array,a:{Element$Array:{t:Character}}},$cont:StringBuilder,$an:function(){return[doc("The storage"),variable()];},d:['$','StringBuilder','$at','array$b7xzb7']};});atr$(stringBuilder$,'$8c',function(){return this.$8c_;},function($8e){return this.$8c_=$8e;},function(){return{mod:$CCMM$,$t:{t:Integer},$cont:StringBuilder,$an:function(){return[doc("The number of items in [[array]] which have actually been appended."),variable()];},d:['$','StringBuilder','$at','length$bireuw']};});stringBuilder$.$8f=function $8f($8g,$8h){var stringBuilder$=this;var $8i=stringBuilder$.$8c.plus($8h);var $8j=$8g.times(2).plus(2);function set$8j($8k){return $8j=$8k;};//assert at StringBuilder.ceylon (14:8-15:33)
if(!(($8i>0))) {throw wrapexc(AssertionError("Overflow: \'requiredSize > 0\' at StringBuilder.ceylon (15:15-15:32)"),'14:8-15:33','StringBuilder.ceylon'); }
if(($8j<$8i)){$8j=$8i;}//assert at StringBuilder.ceylon (19:8-20:47)
if(!(($8j<=getRuntime().maxArraySize))) {throw wrapexc(AssertionError("Required array too large: \'result <= runtime.maxArraySize\' at StringBuilder.ceylon (20:15-20:46)"),'19:8-20:47','StringBuilder.ceylon'); }
return $8j;};stringBuilder$.$8f.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$ps:[{$nm:'existingSize',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'extra',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:StringBuilder,$an:function(){return[doc("Resize policy")];},d:['$','StringBuilder','$m','newSize$qgycph']};};stringBuilder$.$8l=function $8l($8m){var stringBuilder$=this;if((stringBuilder$.$8b.size>=stringBuilder$.$8c.plus($8m))){return stringBuilder$.$8b;}else {var $8n=arrayOfSize(stringBuilder$.$8f(stringBuilder$.$8b.size,$8m),Character(88,true),{Element$arrayOfSize:{t:Character}});stringBuilder$.$8b.copyTo($8n);stringBuilder$.$8b=$8n;return $8n;}};stringBuilder$.$8l.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Array,a:{Element$Array:{t:Character}}},$ps:[{$nm:'extra',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:StringBuilder,$an:function(){return[doc($CCMM$['ceylon.language'].StringBuilder.$m.getStorage$qrnjf3.$an.doc[0])];},d:['$','StringBuilder','$m','getStorage$qrnjf3']};};atr$(stringBuilder$,'string',function(){var stringBuilder$=this;return $_String(stringBuilder$.$8b.take(stringBuilder$.$8c));},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:StringBuilder,$an:function(){return[doc($CCMM$['ceylon.language'].StringBuilder.$at.string.$an.doc[0]),shared(),actual()];},d:['$','StringBuilder','$at','string']};});stringBuilder$.append=function append($8o){var stringBuilder$=this;if(!$8o.empty){var $8p=stringBuilder$.$8l($8o.size);var $8q=(0);function set$8q($8r){return $8q=$8r;};while(($8q<$8o.size)){//assert at StringBuilder.ceylon (51:16-51:45)
var $8s;if(!(($8s=$8o.$_get($8q))!==null)) {throw wrapexc(AssertionError("Assertion failed: \'exists char=string[i]\' at StringBuilder.ceylon (51:22-51:44)"),'51:16-51:45','StringBuilder.ceylon'); }
$8p.set(stringBuilder$.$8c.plus($8q),$8s);($8t=$8q,$8q=$8t.successor,$8t);var $8t;}(stringBuilder$.$8c=stringBuilder$.$8c.plus($8o.size));}return stringBuilder$;};stringBuilder$.append.$crtmm$=function(){return{mod:$CCMM$,$t:{t:StringBuilder},$ps:[{$nm:'string',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:StringBuilder,$an:function(){return[doc("Append the characters in the given [[string]]."),shared()];},d:['$','StringBuilder','$m','append']};};stringBuilder$.appendAll=function appendAll($8u){var stringBuilder$=this;var $8w;for(var $8v=$8u.iterator();($8w=$8v.next())!==getFinished();){stringBuilder$.append($8w);}return stringBuilder$;};stringBuilder$.appendAll.$crtmm$=function(){return{mod:$CCMM$,$t:{t:StringBuilder},$ps:[{$nm:'strings',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:{t:$_String}}},$an:function(){return[];}}],$cont:StringBuilder,$an:function(){return[doc("Append the characters in the given [[strings]]."),shared()];},d:['$','StringBuilder','$m','appendAll']};};stringBuilder$.appendCharacter=function appendCharacter($8x){var stringBuilder$=this;var $8y=stringBuilder$.$8l(1);$8y.set(stringBuilder$.$8c,$8x);($8z=stringBuilder$.$8c,stringBuilder$.$8c=$8z.successor,$8z);var $8z;return stringBuilder$;};stringBuilder$.appendCharacter.$crtmm$=function(){return{mod:$CCMM$,$t:{t:StringBuilder},$ps:[{$nm:'character',$mt:'prm',$t:{t:Character},$an:function(){return[];}}],$cont:StringBuilder,$an:function(){return[doc("Append the given [[character]]."),shared()];},d:['$','StringBuilder','$m','appendCharacter']};};stringBuilder$.appendNewline=function appendNewline(){var stringBuilder$=this;stringBuilder$.appendCharacter(Character(10,true));return stringBuilder$;};stringBuilder$.appendNewline.$crtmm$=function(){return{mod:$CCMM$,$t:{t:StringBuilder},$ps:[],$cont:StringBuilder,$an:function(){return[doc("Append a newline character."),shared()];},d:['$','StringBuilder','$m','appendNewline']};};stringBuilder$.appendSpace=function appendSpace(){var stringBuilder$=this;stringBuilder$.appendCharacter(Character(32,true));return stringBuilder$;};stringBuilder$.appendSpace.$crtmm$=function(){return{mod:$CCMM$,$t:{t:StringBuilder},$ps:[],$cont:StringBuilder,$an:function(){return[doc("Append a space character."),shared()];},d:['$','StringBuilder','$m','appendSpace']};};stringBuilder$.reset=function reset(){var stringBuilder$=this;stringBuilder$.$8c=(0);return stringBuilder$;};stringBuilder$.reset.$crtmm$=function(){return{mod:$CCMM$,$t:{t:StringBuilder},$ps:[],$cont:StringBuilder,$an:function(){return[doc("Remove all content and return to initial state."),shared()];},d:['$','StringBuilder','$m','reset']};};stringBuilder$.insert=function insert($90,$91){var stringBuilder$=this;if(!$91.empty){var $92=stringBuilder$.$8l($91.size);$92.copyTo($92,$90,$90.plus($91.size),stringBuilder$.$8c.minus($90));var $93=(0);function set$93($94){return $93=$94;};while(($93<$91.size)){//assert at StringBuilder.ceylon (109:16-109:47)
var $95;if(!(($95=$91.$_get($93))!==null)) {throw wrapexc(AssertionError("Assertion failed: \'exists char = string[i]\' at StringBuilder.ceylon (109:22-109:46)"),'109:16-109:47','StringBuilder.ceylon'); }
$92.set($90.plus($93),$95);($96=$93,$93=$96.successor,$96);var $96;}(stringBuilder$.$8c=stringBuilder$.$8c.plus($91.size));}return stringBuilder$;};stringBuilder$.insert.$crtmm$=function(){return{mod:$CCMM$,$t:{t:StringBuilder},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'string',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:StringBuilder,$an:function(){return[doc($CCMM$['ceylon.language'].StringBuilder.$m.insert.$an.doc[0]),shared()];},d:['$','StringBuilder','$m','insert']};};stringBuilder$.insertCharacter=function insertCharacter($97,$98){var stringBuilder$=this;return stringBuilder$.insert($97,$98.string);};stringBuilder$.insertCharacter.$crtmm$=function(){return{mod:$CCMM$,$t:{t:StringBuilder},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'character',$mt:'prm',$t:{t:Character},$an:function(){return[];}}],$cont:StringBuilder,$an:function(){return[doc($CCMM$['ceylon.language'].StringBuilder.$m.insertCharacter.$an.doc[0]),shared()];},d:['$','StringBuilder','$m','insertCharacter']};};stringBuilder$.$_delete$defs$length=function($99,$9a){return 1;};stringBuilder$.$_delete=function $_delete($99,$9a){var stringBuilder$=this;if($9a===undefined){$9a=stringBuilder$.$_delete$defs$length($99,$9a);}
if(($99<0)){$99=(0);}else {if(($99>=stringBuilder$.$8c)){return stringBuilder$;}}var $9b=smallest($99.plus($9a),stringBuilder$.$8c,{Element$smallest:{t:Integer}});stringBuilder$.$8b.copyTo(stringBuilder$.$8b,$9b,$99,stringBuilder$.$8c.minus($9b));if(($99.plus($9a)>stringBuilder$.$8c)){(stringBuilder$.$8c=$99);}else {($9c=stringBuilder$,$9c.$8c=$9c.$8c.minus($9a));var $9c;}return stringBuilder$;};stringBuilder$.$_delete.$crtmm$=function(){return{mod:$CCMM$,$t:{t:StringBuilder},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[variable(),shared(),actual()];}},{$nm:'length',$mt:'prm',$def:1,$t:{t:Integer},$an:function(){return[];}}],$cont:StringBuilder,$an:function(){return[doc($CCMM$['ceylon.language'].StringBuilder.$m.delete.$an.doc[0]),shared()];},d:['$','StringBuilder','$m','delete']};};stringBuilder$.deleteInitial=function deleteInitial($9d){var stringBuilder$=this;return stringBuilder$.$_delete(0,$9d);};stringBuilder$.deleteInitial.$crtmm$=function(){return{mod:$CCMM$,$t:{t:StringBuilder},$ps:[{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:StringBuilder,$an:function(){return[doc($CCMM$['ceylon.language'].StringBuilder.$m.deleteInitial.$an.doc[0]),shared()];},d:['$','StringBuilder','$m','deleteInitial']};};stringBuilder$.deleteTerminal=function deleteTerminal($9e){var stringBuilder$=this;return stringBuilder$.$_delete(stringBuilder$.size.minus($9e),$9e);};stringBuilder$.deleteTerminal.$crtmm$=function(){return{mod:$CCMM$,$t:{t:StringBuilder},$ps:[{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:StringBuilder,$an:function(){return[doc($CCMM$['ceylon.language'].StringBuilder.$m.deleteTerminal.$an.doc[0]),shared()];},d:['$','StringBuilder','$m','deleteTerminal']};};atr$(stringBuilder$,'size',function(){var stringBuilder$=this;return stringBuilder$.$8c;},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:StringBuilder,$an:function(){return[doc($CCMM$['ceylon.language'].StringBuilder.$at.size.$an.doc[0]),shared()];},d:['$','StringBuilder','$at','size']};});})(StringBuilder.$$.prototype);}
return StringBuilder;}
ex$.$init$StringBuilder=$init$StringBuilder;$init$StringBuilder();function SequenceBuilder$impl($9f,$$targs$$,sequenceBuilder$){$init$SequenceBuilder$impl();if(sequenceBuilder$===undefined)sequenceBuilder$=new SequenceBuilder$impl.$$;
set_type_args(sequenceBuilder$,$$targs$$);if($9f===undefined){$9f=(5);}
sequenceBuilder$.$9f_=$9f;sequenceBuilder$.$9g_=null;sequenceBuilder$.$prop$get$9g={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:$_Array,a:{Element$Array:'Element$SequenceBuilder'}}]},$cont:SequenceBuilder$impl,$an:function(){return[doc("The storage"),variable()];},d:['ceylon.language.impl','SequenceBuilder','$at','store$acm4cb']};}};sequenceBuilder$.$prop$get$9g.get=function(){return $9g};sequenceBuilder$.$9h_=(0);sequenceBuilder$.$prop$get$9h={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:SequenceBuilder$impl,$an:function(){return[doc("The number of items in [[array]] which have actually been appended."),variable()];},d:['ceylon.language.impl','SequenceBuilder','$at','length$ffk3eq']};}};sequenceBuilder$.$prop$get$9h.get=function(){return $9h};return sequenceBuilder$;}
SequenceBuilder$impl.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[{$nm:'initialSize',$mt:'prm',$def:1,$t:{t:Integer},$an:function(){return[];}}],$tp:{Element$SequenceBuilder:{}},$an:function(){return[shared()];},d:['ceylon.language.impl','SequenceBuilder']};};
ex$.SequenceBuilder$impl=SequenceBuilder$impl;function $init$SequenceBuilder$impl(){if(SequenceBuilder$impl.$$===undefined){initTypeProto(SequenceBuilder$impl,'ceylon.language.impl::SequenceBuilder',Basic);
(function(sequenceBuilder$){atr$(sequenceBuilder$,'$9g',function(){return this.$9g_;},function($9i){return this.$9g_=$9i;},function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:$_Array,a:{Element$Array:'Element$SequenceBuilder'}}]},$cont:SequenceBuilder$impl,$an:function(){return[doc("The storage"),variable()];},d:['ceylon.language.impl','SequenceBuilder','$at','store$acm4cb']};});atr$(sequenceBuilder$,'$9h',function(){return this.$9h_;},function($9j){return this.$9h_=$9j;},function(){return{mod:$CCMM$,$t:{t:Integer},$cont:SequenceBuilder$impl,$an:function(){return[doc("The number of items in [[array]] which have actually been appended."),variable()];},d:['ceylon.language.impl','SequenceBuilder','$at','length$ffk3eq']};});sequenceBuilder$.$9k=function $9k($9l,$9m){var sequenceBuilder$=this;var $9n=sequenceBuilder$.$9h.plus($9m);var $9o=$9l.times(2).plus(2);function set$9o($9p){return $9o=$9p;};//assert at SequenceBuilder.ceylon (12:8-13:33)
if(!(($9n>0))) {throw wrapexc(AssertionError("Overflow: \'requiredSize > 0\' at SequenceBuilder.ceylon (13:15-13:32)"),'12:8-13:33','SequenceBuilder.ceylon'); }
if(($9o<$9n)){$9o=$9n;}//assert at SequenceBuilder.ceylon (17:8-18:47)
if(!(($9o<=getRuntime().maxArraySize))) {throw wrapexc(AssertionError("Required array too large: \'result <= runtime.maxArraySize\' at SequenceBuilder.ceylon (18:15-18:46)"),'17:8-18:47','SequenceBuilder.ceylon'); }
return $9o;};sequenceBuilder$.$9k.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$ps:[{$nm:'existingSize',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'extra',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:SequenceBuilder$impl,$an:function(){return[doc("Resize policy")];},d:['ceylon.language.impl','SequenceBuilder','$m','newSize$hd5k5']};};sequenceBuilder$.$9q=function $9q($9r,$9s){var sequenceBuilder$=this;var $9t;if(($9t=sequenceBuilder$.$9g)!==null){if(($9t.size>=sequenceBuilder$.$9h.plus($9r))){return $9t;}else {var $9u=arrayOfSize(sequenceBuilder$.$9k($9t.size,$9r),$9s,{Element$arrayOfSize:sequenceBuilder$.$$targs$$.Element$SequenceBuilder});$9t.copyTo($9u);(sequenceBuilder$.$9g=$9u);return $9u;}}else {var $9v=arrayOfSize(sequenceBuilder$.$9f,$9s,{Element$arrayOfSize:sequenceBuilder$.$$targs$$.Element$SequenceBuilder});(sequenceBuilder$.$9g=$9v);return $9v;}};sequenceBuilder$.$9q.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Array,a:{Element$Array:'Element$SequenceBuilder'}},$ps:[{$nm:'extra',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'example',$mt:'prm',$t:'Element$SequenceBuilder',$an:function(){return[];}}],$cont:SequenceBuilder$impl,$an:function(){return[doc($CCMM$['ceylon.language.impl'].SequenceBuilder.$m.getStorage$hb50af.$an.doc[0])];},d:['ceylon.language.impl','SequenceBuilder','$m','getStorage$hb50af']};};sequenceBuilder$.sequence=function sequence(){var sequenceBuilder$=this;var $9w;if(($9w=sequenceBuilder$.$9g)!==null){return $9w.take(sequenceBuilder$.$9h).sequence();}else {return getEmpty();}};sequenceBuilder$.sequence.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$SequenceBuilder'}},$ps:[],$cont:SequenceBuilder$impl,$an:function(){return[doc("The resulting sequential."),shared()];},d:['ceylon.language.impl','SequenceBuilder','$m','sequence']};};sequenceBuilder$.append=function append($9x){var sequenceBuilder$=this;var $9y=sequenceBuilder$.$9q(1,$9x);$9y.set(sequenceBuilder$.$9h,$9x);($9z=sequenceBuilder$.$9h,sequenceBuilder$.$9h=$9z.successor,$9z);var $9z;return sequenceBuilder$;};sequenceBuilder$.append.$crtmm$=function(){return{mod:$CCMM$,$t:{t:SequenceBuilder$impl,a:{Element$SequenceBuilder:'Element$SequenceBuilder'}},$ps:[{$nm:'element',$mt:'prm',$t:'Element$SequenceBuilder',$an:function(){return[];}}],$cont:SequenceBuilder$impl,$an:function(){return[doc("Append the given [[element]]."),shared()];},d:['ceylon.language.impl','SequenceBuilder','$m','append']};};sequenceBuilder$.appendAll=function appendAll($a0){var sequenceBuilder$=this;var $a2;for(var $a1=$a0.iterator();($a2=$a1.next())!==getFinished();){sequenceBuilder$.append($a2);}return sequenceBuilder$;};sequenceBuilder$.appendAll.$crtmm$=function(){return{mod:$CCMM$,$t:{t:SequenceBuilder$impl,a:{Element$SequenceBuilder:'Element$SequenceBuilder'}},$ps:[{$nm:'elements',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Element$SequenceBuilder'}},$an:function(){return[];}}],$cont:SequenceBuilder$impl,$an:function(){return[doc("Append all of the given elements."),shared()];},d:['ceylon.language.impl','SequenceBuilder','$m','appendAll']};};atr$(sequenceBuilder$,'size',function(){var sequenceBuilder$=this;return sequenceBuilder$.$9h;},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:SequenceBuilder$impl,$an:function(){return[doc("Returns the length of the current content"),shared()];},d:['ceylon.language.impl','SequenceBuilder','$at','size']};});atr$(sequenceBuilder$,'$9f',function(){return this.$9f_;},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:SequenceBuilder$impl,d:['ceylon.language.impl','SequenceBuilder','$at','initialSize$rb9uf']};});})(SequenceBuilder$impl.$$.prototype);}
return SequenceBuilder$impl;}
ex$.$init$SequenceBuilder$impl=$init$SequenceBuilder$impl;$init$SequenceBuilder$impl();
//#native Boolean
//#native Callable
function Binary($$targs$$,binary$){set_type_args(binary$,$$targs$$);binary$.set$defs$bit=function($a3,$a4){return true;};}
Binary.$crtmm$=function(){return{mod:$CCMM$,$tp:{Other$Binary:{'satisfies':[{t:Binary,a:{Other$Binary:'Other$Binary'}}]}},of:['Other$Binary'],$an:function(){return[doc($CCMM$['ceylon.language'].Binary.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Integer)].reifyCeylonType({t:ClassDeclaration$meta$declaration})),by(["Stef"].reifyCeylonType({t:$_String})),shared()];},d:['$','Binary']};};
ex$.Binary=Binary;function $init$Binary(){if(Binary.$$===undefined){initTypeProtoI(Binary,'ceylon.language::Binary');
(function(binary$){binary$.$prop$getNot={$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Binary',$cont:Binary,$an:function(){return[doc("The binary complement of this sequence of bits."),shared(),formal()];},d:['$','Binary','$at','not']};}};binary$.leftLogicalShift={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Binary',$ps:[{$nm:'shift',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Binary,$an:function(){return[doc($CCMM$['ceylon.language'].Binary.$m.leftLogicalShift.$an.doc[0]),shared(),formal()];},d:['$','Binary','$m','leftLogicalShift']};}};binary$.rightLogicalShift={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Binary',$ps:[{$nm:'shift',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Binary,$an:function(){return[doc($CCMM$['ceylon.language'].Binary.$m.rightLogicalShift.$an.doc[0]),shared(),formal()];},d:['$','Binary','$m','rightLogicalShift']};}};binary$.rightArithmeticShift={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Binary',$ps:[{$nm:'shift',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Binary,$an:function(){return[doc($CCMM$['ceylon.language'].Binary.$m.rightArithmeticShift.$an.doc[0]),shared(),formal()];},d:['$','Binary','$m','rightArithmeticShift']};}};binary$.and={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Binary',$ps:[{$nm:'other',$mt:'prm',$t:'Other$Binary',$an:function(){return[];}}],$cont:Binary,$an:function(){return[doc("Performs a logical AND operation."),shared(),formal()];},d:['$','Binary','$m','and']};}};binary$.or={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Binary',$ps:[{$nm:'other',$mt:'prm',$t:'Other$Binary',$an:function(){return[];}}],$cont:Binary,$an:function(){return[doc("Performs a logical inclusive OR operation."),shared(),formal()];},d:['$','Binary','$m','or']};}};binary$.xor={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Binary',$ps:[{$nm:'other',$mt:'prm',$t:'Other$Binary',$an:function(){return[];}}],$cont:Binary,$an:function(){return[doc("Performs a logical exclusive OR operation."),shared(),formal()];},d:['$','Binary','$m','xor']};}};binary$.$_get={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Binary,$an:function(){return[doc($CCMM$['ceylon.language'].Binary.$m.get.$an.doc[0]),shared(),formal()];},d:['$','Binary','$m','get']};}};binary$.set={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Binary',$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'bit',$mt:'prm',$def:1,$t:{t:$_Boolean},$an:function(){return[];}}],$cont:Binary,$an:function(){return[doc($CCMM$['ceylon.language'].Binary.$m.set.$an.doc[0]),shared(),formal()];},d:['$','Binary','$m','set']};}};binary$.clear=function ($a5){var binary$=this;return binary$.set($a5,false);};binary$.clear.$crtmm$=function(){return{mod:$CCMM$,$t:'Other$Binary',$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Binary,$an:function(){return[doc($CCMM$['ceylon.language'].Binary.$m.clear.$an.doc[0]),shared(),$_default()];},d:['$','Binary','$m','clear']};};binary$.flip={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Binary',$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Binary,$an:function(){return[doc($CCMM$['ceylon.language'].Binary.$m.flip.$an.doc[0]),shared(),formal()];},d:['$','Binary','$m','flip']};}};})(Binary.$$.prototype);}
return Binary;}
ex$.$init$Binary=$init$Binary;$init$Binary();function Destroyable(destroyable$){}
Destroyable.$crtmm$=function(){return{mod:$CCMM$,$an:function(){return[doc($CCMM$['ceylon.language'].Destroyable.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Obtainable)].reifyCeylonType({t:InterfaceDeclaration$meta$declaration})),shared()];},d:['$','Destroyable']};};
ex$.Destroyable=Destroyable;function $init$Destroyable(){if(Destroyable.$$===undefined){initTypeProtoI(Destroyable,'ceylon.language::Destroyable');
(function(destroyable$){destroyable$.destroy={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'error',$mt:'prm',$t:{t:'u',l:[{t:Null},{t:Throwable}]},$an:function(){return[doc($CCMM$['ceylon.language'].Destroyable.$m.destroy.$at.error$28101j.$an.doc[0])];}}],$cont:Destroyable,$an:function(){return[doc($CCMM$['ceylon.language'].Destroyable.$m.destroy.$an.doc[0]),shared(),formal()];},d:['$','Destroyable','$m','destroy']};}};})(Destroyable.$$.prototype);}
return Destroyable;}
ex$.$init$Destroyable=$init$Destroyable;$init$Destroyable();function Obtainable(obtainable$){}
Obtainable.$crtmm$=function(){return{mod:$CCMM$,$an:function(){return[doc($CCMM$['ceylon.language'].Obtainable.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Destroyable)].reifyCeylonType({t:InterfaceDeclaration$meta$declaration})),shared()];},d:['$','Obtainable']};};
ex$.Obtainable=Obtainable;function $init$Obtainable(){if(Obtainable.$$===undefined){initTypeProtoI(Obtainable,'ceylon.language::Obtainable');
(function(obtainable$){obtainable$.obtain={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[],$cont:Obtainable,$an:function(){return[doc($CCMM$['ceylon.language'].Obtainable.$m.obtain.$an.doc[0]),$_throws("AssertionError","if an illegal state is detected"),shared(),formal()];},d:['$','Obtainable','$m','obtain']};}};obtainable$.release={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'error',$mt:'prm',$t:{t:'u',l:[{t:Null},{t:Throwable}]},$an:function(){return[doc($CCMM$['ceylon.language'].Obtainable.$m.release.$at.error$bfbekx.$an.doc[0])];}}],$cont:Obtainable,$an:function(){return[doc($CCMM$['ceylon.language'].Obtainable.$m.release.$an.doc[0]),$_throws("AssertionError","if an illegal state is detected"),shared(),formal()];},d:['$','Obtainable','$m','release']};}};})(Obtainable.$$.prototype);}
return Obtainable;}
ex$.$init$Obtainable=$init$Obtainable;$init$Obtainable();function Ranged($$targs$$,ranged$){Iterable({Absent$Iterable:{t:Null},Element$Iterable:$$targs$$.Element$Ranged},ranged$);add_type_arg(ranged$,'Absent$Iterable',{t:Null});set_type_args(ranged$,$$targs$$);}
Ranged.$crtmm$=function(){return{mod:$CCMM$,$tp:{Index$Ranged:{'var':'in'},Element$Ranged:{'var':'out'},Span$Ranged:{'var':'out','satisfies':[{t:Ranged,a:{Span$Ranged:'Span$Ranged',Element$Ranged:'Element$Ranged',Index$Ranged:'Index$Ranged'}}]}},satisfies:[{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Element$Ranged'}}],of:['Span$Ranged'],$an:function(){return[doc($CCMM$['ceylon.language'].Ranged.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),List),$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Sequence),$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$_String)].reifyCeylonType({t:'u',l:[{t:InterfaceDeclaration$meta$declaration},{t:ClassDeclaration$meta$declaration}]})),shared()];},d:['$','Ranged']};};
ex$.Ranged=Ranged;function $init$Ranged(){if(Ranged.$$===undefined){initTypeProtoI(Ranged,'ceylon.language::Ranged',$init$Iterable());
(function(ranged$){ranged$.span={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Span$Ranged',$ps:[{$nm:'from',$mt:'prm',$t:'Index$Ranged',$an:function(){return[];}},{$nm:'to',$mt:'prm',$t:'Index$Ranged',$an:function(){return[];}}],$cont:Ranged,$an:function(){return[doc($CCMM$['ceylon.language'].Ranged.$m.span.$an.doc[0]),shared(),formal()];},d:['$','Ranged','$m','span']};}};ranged$.spanFrom={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Span$Ranged',$ps:[{$nm:'from',$mt:'prm',$t:'Index$Ranged',$an:function(){return[];}}],$cont:Ranged,$an:function(){return[doc($CCMM$['ceylon.language'].Ranged.$m.spanFrom.$an.doc[0]),shared(),formal()];},d:['$','Ranged','$m','spanFrom']};}};ranged$.spanTo={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Span$Ranged',$ps:[{$nm:'to',$mt:'prm',$t:'Index$Ranged',$an:function(){return[];}}],$cont:Ranged,$an:function(){return[doc($CCMM$['ceylon.language'].Ranged.$m.spanTo.$an.doc[0]),shared(),formal()];},d:['$','Ranged','$m','spanTo']};}};ranged$.segment={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Span$Ranged',$ps:[{$nm:'from',$mt:'prm',$t:'Index$Ranged',$an:function(){return[];}},{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Ranged,$an:function(){return[doc($CCMM$['ceylon.language'].Ranged.$m.segment.$an.doc[0]),shared(),formal()];},d:['$','Ranged','$m','segment']};}};})(Ranged.$$.prototype);}
return Ranged;}
ex$.$init$Ranged=$init$Ranged;$init$Ranged();function Iterator($$targs$$,iterator$){set_type_args(iterator$,$$targs$$);}
Iterator.$crtmm$=function(){return{mod:$CCMM$,$tp:{Element$Iterator:{'var':'out'}},$an:function(){return[doc("Produces elements of an [[Iterable]] object."),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Iterable)].reifyCeylonType({t:InterfaceDeclaration$meta$declaration})),by(["Gavin"].reifyCeylonType({t:$_String})),shared()];},d:['$','Iterator']};};
ex$.Iterator=Iterator;function $init$Iterator(){if(Iterator.$$===undefined){initTypeProtoI(Iterator,'ceylon.language::Iterator');
(function(iterator$){iterator$.next={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$Iterator',{t:Finished}]},$ps:[],$cont:Iterator,$an:function(){return[doc($CCMM$['ceylon.language'].Iterator.$m.next.$an.doc[0]),shared(),formal()];},d:['$','Iterator','$m','next']};}};})(Iterator.$$.prototype);}
return Iterator;}
ex$.$init$Iterator=$init$Iterator;$init$Iterator();function Collection($$targs$$,collection$){Iterable({Absent$Iterable:{t:Null},Element$Iterable:$$targs$$.Element$Collection},collection$);add_type_arg(collection$,'Absent$Iterable',{t:Null});set_type_args(collection$,$$targs$$);collection$.$prop$getEmpty={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:Collection,$an:function(){return[doc($CCMM$['ceylon.language'].Collection.$at.empty.$an.doc[0]),shared(),actual(),$_default()];},d:['$','Collection','$at','empty']};}};collection$.$prop$getEmpty.get=function(){return empty};collection$.$prop$getString={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Collection,$an:function(){return[doc($CCMM$['ceylon.language'].Collection.$at.string.$an.doc[0]),shared(),actual(),$_default()];},d:['$','Collection','$at','string']};}};collection$.$prop$getString.get=function(){return string};}
Collection.$crtmm$=function(){return{mod:$CCMM$,$tp:{Element$Collection:{'var':'out'}},satisfies:[{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Element$Collection'}}],$an:function(){return[doc($CCMM$['ceylon.language'].Collection.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),List),$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Map),$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Set)].reifyCeylonType({t:InterfaceDeclaration$meta$declaration})),shared()];},d:['$','Collection']};};
ex$.Collection=Collection;function $init$Collection(){if(Collection.$$===undefined){initTypeProtoI(Collection,'ceylon.language::Collection',$init$Iterable());
(function(collection$){collection$.clone={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Collection,a:{Element$Collection:'Element$Collection'}},$ps:[],$cont:Collection,$an:function(){return[doc($CCMM$['ceylon.language'].Collection.$m.clone.$an.doc[0]),shared(),formal()];},d:['$','Collection','$m','clone']};}};atr$(collection$,'empty',function(){var collection$=this;return (collection$.size==0);},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:Collection,$an:function(){return[doc($CCMM$['ceylon.language'].Collection.$at.empty.$an.doc[0]),shared(),actual(),$_default()];},d:['$','Collection','$at','empty']};});collection$.contains=function contains($a6){var collection$=this;var $a8;for(var $a7=collection$.iterator();($a8=$a7.next())!==getFinished();){var $a9;if(($a9=$a8)!==null&&$a9.equals($a6)){return true;}}
if(getFinished()===$a8){return false;}};collection$.contains.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'element',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:Collection,$an:function(){return[doc($CCMM$['ceylon.language'].Collection.$m.contains.$an.doc[0]),shared(),actual(),$_default()];},d:['$','Collection','$m','contains']};};atr$(collection$,'string',function(){var collection$=this;return ($aa=(collection$.empty?"{}":null),nn$($aa)?$aa:"{ ".plus(commaList(collection$)).plus(" }"));},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Collection,$an:function(){return[doc($CCMM$['ceylon.language'].Collection.$at.string.$an.doc[0]),shared(),actual(),$_default()];},d:['$','Collection','$at','string']};});})(Collection.$$.prototype);}
return Collection;}
ex$.$init$Collection=$init$Collection;$init$Collection();var $aa;function Category($$targs$$,category$){set_type_args(category$,$$targs$$);}
Category.$crtmm$=function(){return{mod:$CCMM$,$tp:{Element$Category:{'var':'in','satisfies':[{t:$_Object}],'def':{t:$_Object}}},$an:function(){return[doc($CCMM$['ceylon.language'].Category.$an.doc[0]),by(["Gavin"].reifyCeylonType({t:$_String})),shared()];},d:['$','Category']};};
ex$.Category=Category;function $init$Category(){if(Category.$$===undefined){initTypeProtoI(Category,'ceylon.language::Category');
(function(category$){category$.contains={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'element',$mt:'prm',$t:'Element$Category',$an:function(){return[];}}],$cont:Category,$an:function(){return[doc($CCMM$['ceylon.language'].Category.$m.contains.$an.doc[0]),see("containsEvery","containsAny"),shared(),formal()];},d:['$','Category','$m','contains']};}};category$.containsEvery=function containsEvery($ab){var category$=this;var $ad;for(var $ac=$ab.iterator();($ad=$ac.next())!==getFinished();){if(!category$.contains($ad)){return false;}}
if(getFinished()===$ad){return true;}};category$.containsEvery.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'elements',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Element$Category'}},$an:function(){return[];}}],$cont:Category,$an:function(){return[doc($CCMM$['ceylon.language'].Category.$m.containsEvery.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Category().$$.prototype.contains)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared(),$_default()];},d:['$','Category','$m','containsEvery']};};category$.containsAny=function containsAny($ae){var category$=this;var $ag;for(var $af=$ae.iterator();($ag=$af.next())!==getFinished();){if(category$.contains($ag)){return true;}}
if(getFinished()===$ag){return false;}};category$.containsAny.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'elements',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Element$Category'}},$an:function(){return[];}}],$cont:Category,$an:function(){return[doc($CCMM$['ceylon.language'].Category.$m.containsAny.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Category().$$.prototype.contains)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared(),$_default()];},d:['$','Category','$m','containsAny']};};})(Category.$$.prototype);}
return Category;}
ex$.$init$Category=$init$Category;$init$Category();function List($$targs$$,list$){Collection({Element$Collection:$$targs$$.Element$List},list$);Correspondence({Item$Correspondence:$$targs$$.Element$List,Key$Correspondence:{t:Integer}},list$);add_type_arg(list$,'Key$Correspondence',{t:Integer});Ranged({Span$Ranged:{t:List,a:{Element$List:$$targs$$.Element$List}},Element$Ranged:$$targs$$.Element$List,Index$Ranged:{t:Integer}},list$);add_type_arg(list$,'Span$Ranged',{t:List,a:{Element$List:list$.$$targs$$.Element$List}});add_type_arg(list$,'Index$Ranged',{t:Integer});set_type_args(list$,$$targs$$);list$.$prop$getSize={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$at.size.$an.doc[0]),see([$init$OpenValue()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$List().$$.prototype.$prop$getLastIndex)].reifyCeylonType({t:ValueDeclaration$meta$declaration})),shared(),actual(),$_default()];},d:['$','List','$at','size']};}};list$.$prop$getSize.get=function(){return size};list$.$prop$getRest={$crtmm$:function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:'Element$List'}},$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$at.rest.$an.doc[0]),shared(),actual(),$_default()];},d:['$','List','$at','rest']};}};list$.$prop$getRest.get=function(){return rest};list$.$prop$getReversed={$crtmm$:function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:'Element$List'}},$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$at.reversed.$an.doc[0]),shared(),$_default()];},d:['$','List','$at','reversed']};}};list$.$prop$getReversed.get=function(){return reversed};list$.$prop$getFirst={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$List']},$cont:List,$an:function(){return[doc("Returns the first element of this `List`, if any."),shared(),actual(),$_default()];},d:['$','List','$at','first']};}};list$.$prop$getFirst.get=function(){return first};list$.$prop$getKeys={$crtmm$:function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:{t:Integer}}},$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$at.keys.$an.doc[0]),shared(),actual(),$_default()];},d:['$','List','$at','keys']};}};list$.$prop$getKeys.get=function(){return keys};}
List.$crtmm$=function(){return{mod:$CCMM$,$tp:{Element$List:{'var':'out'}},satisfies:[{t:Collection,a:{Element$Collection:'Element$List'}},{t:Correspondence,a:{Item$Correspondence:'Element$List',Key$Correspondence:{t:Integer}}},{t:Ranged,a:{Span$Ranged:{t:List,a:{Element$List:'Element$List'}},Element$Ranged:'Element$List',Index$Ranged:{t:Integer}}}],$an:function(){return[doc($CCMM$['ceylon.language'].List.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Sequence),$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Empty),$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$_Array)].reifyCeylonType({t:'u',l:[{t:InterfaceDeclaration$meta$declaration},{t:ClassDeclaration$meta$declaration}]})),shared()];},d:['$','List']};};
ex$.List=List;function $init$List(){if(List.$$===undefined){initTypeProtoI(List,'ceylon.language::List',$init$Collection(),$init$Correspondence(),$init$Ranged());
(function(list$){list$.$prop$getLastIndex={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$at.lastIndex.$an.doc[0]),see([$init$OpenValue()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$List().$$.prototype.$prop$getSize)].reifyCeylonType({t:ValueDeclaration$meta$declaration})),shared(),formal()];},d:['$','List','$at','lastIndex']};}};atr$(list$,'size',function(){var list$=this;return ($ah=list$.lastIndex,nn$($ah)?$ah:(-1)).plus(1);},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$at.size.$an.doc[0]),see([$init$OpenValue()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$List().$$.prototype.$prop$getLastIndex)].reifyCeylonType({t:ValueDeclaration$meta$declaration})),shared(),actual(),$_default()];},d:['$','List','$at','size']};});list$.shorterThan=function ($ai){var list$=this;return (list$.size<$ai);};list$.shorterThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:List,$an:function(){return[shared(),actual(),$_default()];},d:['$','List','$m','shorterThan']};};list$.longerThan=function ($aj){var list$=this;return (list$.size>$aj);};list$.longerThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:List,$an:function(){return[shared(),actual(),$_default()];},d:['$','List','$m','longerThan']};};atr$(list$,'rest',function(){var list$=this;return list$.Rest$List(1);},undefined,function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:'Element$List'}},$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$at.rest.$an.doc[0]),shared(),actual(),$_default()];},d:['$','List','$at','rest']};});list$.sublistFrom=function ($ak){var list$=this;return ($al=(($ak<0)?list$:null),nn$($al)?$al:list$.Rest$List($ak));};list$.sublistFrom.$crtmm$=function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:'Element$List'}},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.sublistFrom.$an.doc[0]),shared(),$_default()];},d:['$','List','$m','sublistFrom']};};list$.sublistTo=function ($am){var list$=this;return ($an=(($am<0)?list$:null),nn$($an)?$an:list$.Sublist$List($am));};list$.sublistTo.$crtmm$=function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:'Element$List'}},$ps:[{$nm:'to',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.sublistTo.$an.doc[0]),shared(),$_default()];},d:['$','List','$m','sublistTo']};};list$.sublist=function ($ao,$ap){var list$=this;return list$.sublistTo($ap).sublistFrom($ao);};list$.sublist.$crtmm$=function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:'Element$List'}},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'to',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.sublist.$an.doc[0]),shared(),$_default()];},d:['$','List','$m','sublist']};};list$.defines=function ($aq){var list$=this;return ($ar=$aq,$ar.compare((0))!==getSmaller()&&$ar.compare(($as=list$.lastIndex,nn$($as)?$as:(-1)))!==getLarger());};list$.defines.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.defines.$an.doc[0]),shared(),actual(),$_default()];},d:['$','List','$m','defines']};};list$.getFromFirst={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$List']},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.getFromFirst.$an.doc[0]),see("getFromLast"),shared(),formal()];},d:['$','List','$m','getFromFirst']};}};list$.$_get=function ($at){var list$=this;return list$.getFromFirst($at);};list$.$_get.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$List']},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.get.$an.doc[0]),shared(),actual(),$_default()];},d:['$','List','$m','get']};};list$.getFromLast=function getFromLast($au){var list$=this;var $av;if(($av=list$.lastIndex)!==null){return list$.getFromFirst($av.minus($au));}else {return null;}};list$.getFromLast.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$List']},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.getFromLast.$an.doc[0]),shared(),$_default()];},d:['$','List','$m','getFromLast']};};list$.iterator=function iterator(){var list$=this;function $aw($$targs$$){var $aw$=new $aw.$$;$aw$.outer$=list$;$aw$.$$targs$$=$$targs$$;Iterator({Element$Iterator:list$.$$targs$$.Element$List},$aw$);$aw$.$ax_=(0);$aw$.$prop$get$ax={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$aw,$an:function(){return[variable()];},d:['$','List','$m','iterator','$o','listIterator$182yav','$at','index$7sxwcc']};}};$aw$.$prop$get$ax.get=function(){return $ax};return $aw$;
};$aw.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:'Element$List'}}],d:['$','List','$m','iterator','$o','listIterator$182yav']};};function $init$$aw(){if($aw.$$===undefined){initTypeProto($aw,'ceylon.language::List.listIterator',Basic,$init$Iterator());
(function($aw$){atr$($aw$,'$ax',function(){return this.$ax_;},function($ay){return this.$ax_=$ay;},function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$aw,$an:function(){return[variable()];},d:['$','List','$m','iterator','$o','listIterator$182yav','$at','index$7sxwcc']};});$aw$.next=function next(){var $aw$=this;var $az;if(($az=list$.lastIndex)!==null&&($aw$.$ax<=$az)){var $b0;if(($b0=list$.getFromFirst(($b1=$aw$.$ax,$aw$.$ax=$b1.successor,$b1)))!==null){return $b0;}else {//assert at List.ceylon (139:24-139:48)
var $b2;if(!(is$(($b2=null),list$.$$targs$$.Element$List))) {throw wrapexc(AssertionError("Assertion failed: \'is Element null\' at List.ceylon (139:31-139:47)"),'139:24-139:48','List.ceylon'); }
return null;}var $b1;}else {return getFinished();}};$aw$.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$List',{t:Finished}]},$ps:[],$cont:$aw,$an:function(){return[shared(),actual()];},d:['$','List','$m','iterator','$o','listIterator$182yav','$m','next']};};})($aw.$$.prototype);}
return $aw;}
$init$$aw();var $b3;function get$b3(){if($b3===undefined){$b3=$init$$aw()({Element$Iterator:list$.$$targs$$.Element$List});$b3.$crtmm$=get$b3.$crtmm$;}
return $b3;}
get$b3.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$aw},$cont:iterator,d:['$','List','$m','iterator','$o','listIterator$182yaw']};};$prop$get$b3={get:get$b3,$crtmm$:get$b3.$crtmm$};get$aw=get$b3;$prop$get$aw=get$b3;return get$b3();};list$.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$List'}},$ps:[],$cont:List,$an:function(){return[shared(),actual(),$_default()];},d:['$','List','$m','iterator']};};atr$(list$,'reversed',function(){var list$=this;return list$.Reversed$List();},undefined,function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:'Element$List'}},$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$at.reversed.$an.doc[0]),shared(),$_default()];},d:['$','List','$at','reversed']};});list$.equals=function equals($b4){var list$=this;var $b5;if(is$(($b5=$b4),{t:$_String})){return false;}var $b6;if(is$(($b6=$b4),{t:List,a:{Element$List:{t:Anything}}})){if(($b6.size==list$.size)){var $b8;for(var $b7=Range(0,list$.size.minus(1),{Element$Range:{t:Integer}}).iterator();($b8=$b7.next())!==getFinished();){var $b9=list$.getFromFirst($b8);var $ba=$b6.getFromFirst($b8);var $bb;if(($bb=$b9)!==null){var $bc;if(($bc=$ba)!==null){if((!$bb.equals($bc))){return false;}}else {return false;}}else {var $bd;if(($bd=$ba)!==null){return false;}}}
if(getFinished()===$b8){return true;}}}return false;};list$.equals.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'that',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.equals.$an.doc[0]),shared(),actual(),$_default()];},d:['$','List','$m','equals']};};atr$(list$,'hash',function(){var list$=this;var $be=(1);function set$be($bf){return $be=$bf;};$prop$get$be={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:list$.$prop$getHash,$an:function(){return[variable()];},d:['$','List','$at','hash','$at','hash$ypbuur']};}};$prop$get$be.get=function(){return $be};$prop$get$be.set=set$be;if(set$be.$crtmm$===undefined)set$be.$crtmm$=$prop$get$be.$crtmm$;var $bh;for(var $bg=list$.iterator();($bh=$bg.next())!==getFinished();){($be=$be.times(31));var $bi;if(($bi=$bh)!==null){($be=$be.plus($bi.hash));}}return $be;},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:List,$an:function(){return[shared(),actual(),$_default()];},d:['$','List','$at','hash']};});list$.findLast=function findLast($bj){var list$=this;var $bk;if(($bk=list$.lastIndex)!==null){var $bl=$bk;function set$bl($bm){return $bl=$bm;};while(($bl>=0)){var $bn=list$.getFromFirst(($bo=$bl,$bl=$bo.predecessor,$bo));var $bo;var $bp;var $bq;if(($bq=$bn)!==null){$bp=$bq;}else {//assert at List.ceylon (221:20-221:44)
var $br;if(!(is$(($br=null),list$.$$targs$$.Element$List))) {throw wrapexc(AssertionError("Assertion failed: \'is Element null\' at List.ceylon (221:27-221:43)"),'221:20-221:44','List.ceylon'); }
$bp=null;}if($bj($bp)){return $bp;}}}return null;};list$.findLast.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$List']},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:List,$an:function(){return[shared(),$_default(),actual()];},d:['$','List','$m','findLast']};};atr$(list$,'first',function(){var list$=this;return list$.getFromFirst(0);},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$List']},$cont:List,$an:function(){return[doc("Returns the first element of this `List`, if any."),shared(),actual(),$_default()];},d:['$','List','$at','first']};});atr$(list$,'last',function(){var list$=this;var $bs;if(($bs=list$.lastIndex)!==null){return list$.getFromLast($bs);}else {return null;}},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$List']},$cont:List,$an:function(){return[doc("Returns the last element of this `List`, if any."),shared(),actual(),$_default()];},d:['$','List','$at','last']};});atr$(list$,'keys',function(){var list$=this;return list$.Indexes$List();},undefined,function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:{t:Integer}}},$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$at.keys.$an.doc[0]),shared(),actual(),$_default()];},d:['$','List','$at','keys']};});list$.withLeading=function ($bt,$$$mptypes){var list$=this;return tpl$([],undefined,Singleton($bt,{Element$Singleton:$$$mptypes.Other$withLeading}).chain(list$,{OtherAbsent$chain:{t:Null},Other$chain:list$.$$targs$$.Element$List}));};list$.withLeading.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequence,a:{Element$Sequence:{t:'u',l:['Other$withLeading','Element$List']}}},$ps:[{$nm:'element',$mt:'prm',$t:'Other$withLeading',$an:function(){return[doc("The first element of the resulting sequence.")];}}],$cont:List,$tp:{Other$withLeading:{}},$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.withLeading.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Iterable().$$.prototype.following)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared(),$_default()];},d:['$','List','$m','withLeading']};};list$.withTrailing=function ($bu,$$$mptypes){var list$=this;return tpl$([],undefined,list$.chain(Singleton($bu,{Element$Singleton:$$$mptypes.Other$withTrailing}),{OtherAbsent$chain:{t:Nothing},Other$chain:$$$mptypes.Other$withTrailing}));};list$.withTrailing.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequence,a:{Element$Sequence:{t:'u',l:['Element$List','Other$withTrailing']}}},$ps:[{$nm:'element',$mt:'prm',$t:'Other$withTrailing',$an:function(){return[doc("The last element of the resulting sequence.")];}}],$cont:List,$tp:{Other$withTrailing:{}},$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.withTrailing.$an.doc[0]),shared(),$_default()];},d:['$','List','$m','withTrailing']};};list$.startsWith=function ($bv){var list$=this;return list$.includesAt(0,$bv);};list$.startsWith.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'sublist',$mt:'prm',$t:{t:List,a:{Element$List:{t:Anything}}},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.startsWith.$an.doc[0]),shared(),$_default()];},d:['$','List','$m','startsWith']};};list$.endsWith=function ($bw){var list$=this;return list$.includesAt(list$.size.minus($bw.size),$bw);};list$.endsWith.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'sublist',$mt:'prm',$t:{t:List,a:{Element$List:{t:Anything}}},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.endsWith.$an.doc[0]),shared(),$_default()];},d:['$','List','$m','endsWith']};};list$.includesAt=function includesAt($bx,$by){var list$=this;var $c0;for(var $bz=(function(){var $c1=$by.size;return $c1>0?Range(0,0+$c1-1,{Element$Sequential:{t:Integer}}):getEmpty();}()).iterator();($c0=$bz.next())!==getFinished();){var $c3=list$.getFromFirst($bx.plus($c0));var $c4=$by.getFromFirst($c0);var $c5;if(($c5=$c3)!==null){var $c6;if(($c6=$c4)!==null){if((!$c5.equals($c6))){return false;}}else {return false;}}else {var $c7;if(($c7=$c4)!==null){return false;}}}
if(getFinished()===$c0){return true;}};list$.includesAt.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[doc("The index at which the [[sublist]] might occur.")];}},{$nm:'sublist',$mt:'prm',$t:{t:List,a:{Element$List:{t:Anything}}},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.includesAt.$an.doc[0]),shared(),$_default()];},d:['$','List','$m','includesAt']};};list$.includes=function includes($c8){var list$=this;var $ca=(0),$cb=list$.size;for(var $cc=0;$cc<$cb;$cc++,($ca=$ca.successor)){if(list$.includesAt($ca,$c8)){return true;}}return false;};list$.includes.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'sublist',$mt:'prm',$t:{t:List,a:{Element$List:{t:Anything}}},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.includes.$an.doc[0]),shared(),$_default()];},d:['$','List','$m','includes']};};list$.inclusions=function ($cd){var list$=this;return sarg$(function($ce){switch($ce){}return getFinished();},function(){return Comprehension(function(){var $cf=(function(){var $ch=list$.size;return $ch>0?Range(0,0+$ch-1,{Element$Sequential:{t:Integer}}):getEmpty();}()).iterator();var $cg=getFinished();var next$cg=function(){while(($cg=$cf.next())!==getFinished()){if(list$.includesAt($cg,$cd)){return $cg;}
}
return getFinished();}
next$cg();return function(){if($cg!==getFinished()){var $cj=$cg;var $ck=$cj;next$cg();return $ck;}
return getFinished();}
},{Absent$Iterable:{t:Null},Element$Iterable:{t:Integer}});},{Element$Iterable:{t:Integer},Absent$Iterable:{t:Null}});};list$.inclusions.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:{t:Integer}}},$ps:[{$nm:'sublist',$mt:'prm',$t:{t:List,a:{Element$List:{t:Anything}}},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.inclusions.$an.doc[0]),shared(),$_default()];},d:['$','List','$m','inclusions']};};list$.firstInclusion=function firstInclusion($cl){var list$=this;var $cn;for(var $cm=(function(){var $co=list$.size;return $co>0?Range(0,0+$co-1,{Element$Sequential:{t:Integer}}):getEmpty();}()).iterator();($cn=$cm.next())!==getFinished();){if(list$.includesAt($cn,$cl)){return $cn;}}
if(getFinished()===$cn){return null;}};list$.firstInclusion.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},$ps:[{$nm:'sublist',$mt:'prm',$t:{t:List,a:{Element$List:{t:Anything}}},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.firstInclusion.$an.doc[0]),shared(),$_default()];},d:['$','List','$m','firstInclusion']};};list$.lastInclusion=function lastInclusion($cq){var list$=this;var $cs;for(var $cr=(function(){var $ct=list$.size;return $ct>0?Range(0,0+$ct-1,{Element$Sequential:{t:Integer}}):getEmpty();}()).reversed.iterator();($cs=$cr.next())!==getFinished();){if(list$.includesAt($cs,$cq)){return $cs;}}
if(getFinished()===$cs){return null;}};list$.lastInclusion.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},$ps:[{$nm:'sublist',$mt:'prm',$t:{t:List,a:{Element$List:{t:Anything}}},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.lastInclusion.$an.doc[0]),shared(),$_default()];},d:['$','List','$m','lastInclusion']};};list$.occursAt=function occursAt($cv,$cw){var list$=this;var $cx=list$.getFromFirst($cv);var $cy;if(($cy=$cw)!==null){var $cz;if(($cz=$cx)!==null){return $cz.equals($cy);}else {return false;}}else {return !nn$($cx);}};list$.occursAt.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[doc("The index at which the value might occur.")];}},{$nm:'element',$mt:'prm',$t:{t:Anything},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.occursAt.$an.doc[0]),shared(),$_default()];},d:['$','List','$m','occursAt']};};list$.occurs=function occurs($d0){var list$=this;var $d2=(0),$d3=list$.size;for(var $d4=0;$d4<$d3;$d4++,($d2=$d2.successor)){if(list$.occursAt($d2,$d0)){return true;}}return false;};list$.occurs.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'element',$mt:'prm',$t:{t:Anything},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.occurs.$an.doc[0]),shared(),$_default()];},d:['$','List','$m','occurs']};};list$.contains=function ($d5){var list$=this;return list$.occurs($d5);};list$.contains.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'element',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.contains.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$List().$$.prototype.occurs)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared(),actual(),$_default()];},d:['$','List','$m','contains']};};list$.occurrences=function ($d6){var list$=this;return sarg$(function($d7){switch($d7){}return getFinished();},function(){return Comprehension(function(){var $d8=(function(){var $da=list$.size;return $da>0?Range(0,0+$da-1,{Element$Sequential:{t:Integer}}):getEmpty();}()).iterator();var $d9=getFinished();var next$d9=function(){while(($d9=$d8.next())!==getFinished()){if(list$.occursAt($d9,$d6)){return $d9;}
}
return getFinished();}
next$d9();return function(){if($d9!==getFinished()){var $dc=$d9;var $dd=$dc;next$d9();return $dd;}
return getFinished();}
},{Absent$Iterable:{t:Null},Element$Iterable:{t:Integer}});},{Element$Iterable:{t:Integer},Absent$Iterable:{t:Null}});};list$.occurrences.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:{t:Integer}}},$ps:[{$nm:'element',$mt:'prm',$t:{t:Anything},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.occurrences.$an.doc[0]),shared(),$_default()];},d:['$','List','$m','occurrences']};};list$.firstOccurrence=function firstOccurrence($de){var list$=this;var $dg;for(var $df=(function(){var $dh=list$.size;return $dh>0?Range(0,0+$dh-1,{Element$Sequential:{t:Integer}}):getEmpty();}()).iterator();($dg=$df.next())!==getFinished();){if(list$.occursAt($dg,$de)){return $dg;}}
if(getFinished()===$dg){return null;}};list$.firstOccurrence.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},$ps:[{$nm:'element',$mt:'prm',$t:{t:Anything},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.firstOccurrence.$an.doc[0]),shared(),$_default()];},d:['$','List','$m','firstOccurrence']};};list$.lastOccurrence=function lastOccurrence($dj){var list$=this;var $dl;for(var $dk=(function(){var $dm=list$.size;return $dm>0?Range(0,0+$dm-1,{Element$Sequential:{t:Integer}}):getEmpty();}()).reversed.iterator();($dl=$dk.next())!==getFinished();){if(list$.occursAt($dl,$dj)){return $dl;}}
if(getFinished()===$dl){return null;}};list$.lastOccurrence.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},$ps:[{$nm:'element',$mt:'prm',$t:{t:Anything},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.lastOccurrence.$an.doc[0]),shared(),$_default()];},d:['$','List','$m','lastOccurrence']};};list$.indexesWhere=function ($do){var list$=this;return sarg$(function($dp){switch($dp){}return getFinished();},function(){return Comprehension(function(){var $ds;var $dq=(function(){var $dt=list$.size;return $dt>0?Range(0,0+$dt-1,{Element$Sequential:{t:Integer}}):getEmpty();}()).iterator();var $dr=getFinished();var $ds;var next$dr=function(){while(($dr=$dq.next())!==getFinished()){if(is$(($ds=list$.getFromFirst($dr)),list$.$$targs$$.Element$List)&&$do($ds)){return $dr;}
}
return getFinished();}
next$dr();return function(){if($dr!==getFinished()){var $dv=$dr;var $dw=$dv;next$dr();return $dw;}
return getFinished();}
},{Absent$Iterable:{t:Null},Element$Iterable:{t:Integer}});},{Element$Iterable:{t:Integer},Absent$Iterable:{t:Null}});};list$.indexesWhere.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:{t:Integer}}},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[doc("The predicate the indexed elements must \nsatisfy")];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.indexesWhere.$an.doc[0]),shared(),$_default()];},d:['$','List','$m','indexesWhere']};};list$.firstIndexWhere=function firstIndexWhere($dx){var list$=this;var $dy=(0);function set$dy($dz){return $dy=$dz;};while(($dy<list$.size)){//assert at List.ceylon (434:12-434:59)
var $e0;if(!(is$(($e0=list$.getFromFirst($dy)),list$.$$targs$$.Element$List))) {throw wrapexc(AssertionError("Assertion failed: \'is Element element=getFromFirst(index)\' at List.ceylon (434:19-434:58)"),'434:12-434:59','List.ceylon'); }
if($dx($e0)){return $dy;}($e1=$dy,$dy=$e1.successor,$e1);var $e1;}return null;};list$.firstIndexWhere.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[doc("The predicate the indexed elements must \nsatisfy")];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.firstIndexWhere.$an.doc[0]),shared(),$_default()];},d:['$','List','$m','firstIndexWhere']};};list$.lastIndexWhere=function lastIndexWhere($e2){var list$=this;var $e3=list$.size;function set$e3($e4){return $e3=$e4;};while(($e3>0)){($e5=$e3,$e3=$e5.predecessor,$e5);var $e5;//assert at List.ceylon (452:12-452:59)
var $e6;if(!(is$(($e6=list$.getFromFirst($e3)),list$.$$targs$$.Element$List))) {throw wrapexc(AssertionError("Assertion failed: \'is Element element=getFromFirst(index)\' at List.ceylon (452:19-452:58)"),'452:12-452:59','List.ceylon'); }
if($e2($e6)){return $e3;}}return null;};list$.lastIndexWhere.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[doc("The predicate the indexed elements must \nsatisfy")];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.lastIndexWhere.$an.doc[0]),shared(),$_default()];},d:['$','List','$m','lastIndexWhere']};};list$.trim=function trim($e7){var list$=this;var $e8;if(($e8=list$.lastIndex)!==null){var $e9=(-1);function set$e9($ea){return $e9=$ea;};var $eb=(-1);function set$eb($ec){return $eb=$ec;};var $ee;for(var $ed=Range(0,$e8,{Element$Range:{t:Integer}}).iterator();($ee=$ed.next())!==getFinished();){//assert at List.ceylon (468:16-468:60)
var $ef;if(!(is$(($ef=list$.getFromFirst($ee)),list$.$$targs$$.Element$List))) {throw wrapexc(AssertionError("Assertion failed: \'is Element elem=getFromFirst(index)\' at List.ceylon (468:23-468:59)"),'468:16-468:60','List.ceylon'); }
if(!$e7($ef)){$e9=$ee;break;}}
if(getFinished()===$ee){return getEmpty();}var $eh;for(var $eg=Range($e8,0,{Element$Range:{t:Integer}}).iterator();($eh=$eg.next())!==getFinished();){//assert at List.ceylon (478:16-478:60)
var $ei;if(!(is$(($ei=list$.getFromFirst($eh)),list$.$$targs$$.Element$List))) {throw wrapexc(AssertionError("Assertion failed: \'is Element elem=getFromFirst(index)\' at List.ceylon (478:23-478:59)"),'478:16-478:60','List.ceylon'); }
if(!$e7($ei)){$eb=$eh;break;}}
if(getFinished()===$eh){return getEmpty();}return list$.span($e9,$eb);}else {return getEmpty();}};list$.trim.$crtmm$=function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:'Element$List'}},$ps:[{$nm:'trimming',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.trim.$an.doc[0]),shared(),$_default()];},d:['$','List','$m','trim']};};list$.trimLeading=function trimLeading($ej){var list$=this;var $ek;if(($ek=list$.lastIndex)!==null){var $em=(0),$el=$ek,$en=$em.compare($el),$eo=$en===getSmaller()?'successor':'predecessor';for(;$el.compare($em)!==$en;$em=$em[$eo]){//assert at List.ceylon (500:16-500:60)
var $ep;if(!(is$(($ep=list$.getFromFirst($em)),list$.$$targs$$.Element$List))) {throw wrapexc(AssertionError("Assertion failed: \'is Element elem=getFromFirst(index)\' at List.ceylon (500:23-500:59)"),'500:16-500:60','List.ceylon'); }
if(!$ej($ep)){return list$.span($em,$ek);}}}return getEmpty();};list$.trimLeading.$crtmm$=function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:'Element$List'}},$ps:[{$nm:'trimming',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.trimLeading.$an.doc[0]),shared(),$_default()];},d:['$','List','$m','trimLeading']};};list$.trimTrailing=function trimTrailing($eq){var list$=this;var $er;if(($er=list$.lastIndex)!==null){var $et=$er,$es=(0),$eu=$et.compare($es),$ev=$eu===getSmaller()?'successor':'predecessor';for(;$es.compare($et)!==$eu;$et=$et[$ev]){//assert at List.ceylon (515:16-515:60)
var $ew;if(!(is$(($ew=list$.getFromFirst($et)),list$.$$targs$$.Element$List))) {throw wrapexc(AssertionError("Assertion failed: \'is Element elem=getFromFirst(index)\' at List.ceylon (515:23-515:59)"),'515:16-515:60','List.ceylon'); }
if(!$eq($ew)){return list$.span(0,$et);}}}return getEmpty();};list$.trimTrailing.$crtmm$=function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:'Element$List'}},$ps:[{$nm:'trimming',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.trimTrailing.$an.doc[0]),shared(),$_default()];},d:['$','List','$m','trimTrailing']};};list$.initial=function ($ex){var list$=this;return list$.segment(0,$ex);};list$.initial.$crtmm$=function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:'Element$List'}},$ps:[{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.initial.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$List().$$.prototype.terminal)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared(),$_default()];},d:['$','List','$m','initial']};};list$.terminal=function terminal($ey){var list$=this;var $ez;if(($ez=list$.lastIndex)!==null&&($ey>0)){return list$.span($ez.minus($ey).plus(1),$ez);}else {return getEmpty();}};list$.terminal.$crtmm$=function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:'Element$List'}},$ps:[{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.terminal.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$List().$$.prototype.initial)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared(),$_default()];},d:['$','List','$m','terminal']};};list$.span=function ($f0,$f1){var list$=this;return tpl$([],undefined,list$.sublist($f0,$f1));};list$.span.$crtmm$=function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:'Element$List'}},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'to',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:List,$an:function(){return[shared(),actual(),$_default()];},d:['$','List','$m','span']};};list$.spanFrom=function ($f2){var list$=this;return ($f3=(($f2>=list$.size)?getEmpty():null),nn$($f3)?$f3:tpl$([],undefined,list$.sublistFrom($f2)));};list$.spanFrom.$crtmm$=function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:'Element$List'}},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:List,$an:function(){return[shared(),actual(),$_default()];},d:['$','List','$m','spanFrom']};};list$.spanTo=function ($f4){var list$=this;return ($f5=(($f4<0)?getEmpty():null),nn$($f5)?$f5:tpl$([],undefined,list$.sublistTo($f4)));};list$.spanTo.$crtmm$=function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:'Element$List'}},$ps:[{$nm:'to',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:List,$an:function(){return[shared(),actual(),$_default()];},d:['$','List','$m','spanTo']};};list$.segment=function ($f6,$f7){var list$=this;return ($f8=(($f7<1)?getEmpty():null),nn$($f8)?$f8:tpl$([],undefined,list$.sublist($f6,$f6.plus($f7).minus(1))));};list$.segment.$crtmm$=function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:'Element$List'}},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:List,$an:function(){return[shared(),actual(),$_default()];},d:['$','List','$m','segment']};};list$.clone={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:'Element$List'}},$ps:[],$cont:List,$an:function(){return[shared(),actual(),formal()];},d:['$','List','$m','clone']};}};function Indexes$List($f9$){$init$Indexes$List();if($f9$===undefined)$f9$=new this.Indexes$List.$$;
$f9$.outer$=this;$f9$.$$targs$$={Element$List:{t:Integer}};$_Object($f9$);List({Element$List:{t:Integer}},$f9$);add_type_arg($f9$,'Element$List',{t:Integer});return $f9$;}
Indexes$List.$crtmm$=function(){return{mod:$CCMM$,'super':{t:$_Object},$ps:[],$cont:List,satisfies:[{t:List,a:{Element$List:{t:Integer}}}],d:['$','List','$c','Indexes$1g59zu']};};function $init$Indexes$List(){if(Indexes$List.$$===undefined){initTypeProto(Indexes$List,'ceylon.language::List.Indexes',$init$$_Object(),$init$List());
List.Indexes$List=Indexes$List;
(function($f9$){atr$($f9$,'lastIndex',function(){var $f9$=this;return $f9$.outer$.lastIndex;},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},$cont:Indexes$List,$an:function(){return[shared(),actual()];},d:['$','List','$c','Indexes$1g59zu','$at','lastIndex']};});$f9$.getFromFirst=function ($fa){var $f9$=this;return ($f9$.defines($fa)?$fa:null);};$f9$.clone=function (){var $f9$=this;return (function(){var $fb=$f9$.size;return $fb>0?Range(0,0+$fb-1,{Element$Sequential:{t:Integer}}):getEmpty();}());};$f9$.segment=function ($fd,$fe){var $f9$=this;return $f9$.clone().segment($fd,$fe);};$f9$.span=function ($ff,$fg){var $f9$=this;return $f9$.clone().span($ff,$fg);};$f9$.spanFrom=function ($fh){var $f9$=this;return $f9$.clone().spanFrom($fh);};$f9$.spanTo=function ($fi){var $f9$=this;return $f9$.clone().spanTo($fi);};atr$($f9$,'string',function(){var $f9$=this;var $fj;if(($fj=$f9$.lastIndex)!==null){return "{ 0, ... , ".plus($fj.string).plus(" }");}else {return "{}";}},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Indexes$List,$an:function(){return[shared(),actual()];},d:['$','List','$c','Indexes$1g59zu','$at','string']};});$f9$.iterator=function iterator(){var $f9$=this;function $fk($$targs$$){var $fk$=new $fk.$$;$fk$.outer$=$f9$;$fk$.$$targs$$=$$targs$$;Iterator({Element$Iterator:{t:Integer}},$fk$);add_type_arg($fk$,'Element$Iterator',{t:Integer});$fk$.$fl_=(0);$fk$.$prop$get$fl={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$fk,$an:function(){return[variable()];},d:['$','List','$c','Indexes$1g59zu','$m','iterator','$o','iterator$fgqud0','$at','i$izpgzk']};}};$fk$.$prop$get$fl.get=function(){return $fl};return $fk$;
};$fk.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:{t:Integer}}}],d:['$','List','$c','Indexes$1g59zu','$m','iterator','$o','iterator$fgqud0']};};function $init$$fk(){if($fk.$$===undefined){initTypeProto($fk,'ceylon.language::List.Indexes.iterator',Basic,$init$Iterator());
(function($fk$){atr$($fk$,'$fl',function(){return this.$fl_;},function($fm){return this.$fl_=$fm;},function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$fk,$an:function(){return[variable()];},d:['$','List','$c','Indexes$1g59zu','$m','iterator','$o','iterator$fgqud0','$at','i$izpgzk']};});$fk$.next=function next(){var $fk$=this;if(($fk$.$fl<$f9$.size)){return ($fn=$fk$.$fl,$fk$.$fl=$fn.successor,$fn);var $fn;}else {return getFinished();}};$fk$.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Integer},{t:Finished}]},$ps:[],$cont:$fk,$an:function(){return[shared(),actual()];},d:['$','List','$c','Indexes$1g59zu','$m','iterator','$o','iterator$fgqud0','$m','next']};};})($fk.$$.prototype);}
return $fk;}
$init$$fk();var $fo;function get$fo(){if($fo===undefined){$fo=$init$$fk()({Element$Iterator:{t:Integer}});$fo.$crtmm$=get$fo.$crtmm$;}
return $fo;}
get$fo.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$fk},$cont:iterator,d:['$','List','$c','Indexes$1g59zu','$m','iterator','$o','iterator$fgqud1']};};$prop$get$fo={get:get$fo,$crtmm$:get$fo.$crtmm$};get$fk=get$fo;$prop$get$fk=get$fo;return get$fo();};$f9$.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:{t:Integer}}},$ps:[],$cont:Indexes$List,$an:function(){return[shared(),actual()];},d:['$','List','$c','Indexes$1g59zu','$m','iterator']};};$f9$.Indexes$List=Indexes$List;})(Indexes$List.$$.prototype);}
return Indexes$List;}
list$.$init$Indexes$List=$init$Indexes$List;$init$Indexes$List();list$.Indexes$List=Indexes$List;function Rest$List($fp,$fq$){$init$Rest$List();if($fq$===undefined)$fq$=new this.Rest$List.$$;
$fq$.outer$=this;$fq$.$$targs$$={Element$List:$fq$.outer$.$$targs$$.Element$List};$fq$.$fp_=$fp;$_Object($fq$);List({Element$List:$fq$.outer$.$$targs$$.Element$List},$fq$);//assert at List.ceylon (616:8-616:24)
if(!(($fq$.$fp>=0))) {throw wrapexc(AssertionError("Assertion failed: \'from>=0\' at List.ceylon (616:15-616:23)"),'616:8-616:24','List.ceylon'); }
$fq$.segment=function ($fr,$fs){var list$=this;return $fq$.outer$.segment($fr.plus($fq$.$fp),$fs);};$fq$.span=function ($ft,$fu){var list$=this;return $fq$.outer$.span($ft.plus($fq$.$fp),$fu.plus($fq$.$fp));};$fq$.spanFrom=function ($fv){var list$=this;return $fq$.outer$.spanFrom($fv.plus($fq$.$fp));};$fq$.spanTo=function ($fw){var list$=this;return $fq$.outer$.span($fq$.$fp,$fw.plus($fq$.$fp));};$fq$.clone=function (){var list$=this;return $fq$.outer$.clone().Rest$List($fq$.$fp);};return $fq$;}
Rest$List.$crtmm$=function(){return{mod:$CCMM$,'super':{t:$_Object},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:List,satisfies:[{t:List,a:{Element$List:'Element$List'}}],d:['$','List','$c','Rest$fyp886']};};function $init$Rest$List(){if(Rest$List.$$===undefined){initTypeProto(Rest$List,'ceylon.language::List.Rest',$init$$_Object(),$init$List());
List.Rest$List=Rest$List;
(function($fq$){$fq$.getFromFirst=function getFromFirst($fx){var $fq$=this;if(($fx<0)){return null;}else {return $fq$.outer$.getFromFirst($fx.plus($fq$.$fp));}};$fq$.getFromFirst.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$List']},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Rest$List,$an:function(){return[shared(),actual()];},d:['$','List','$c','Rest$fyp886','$m','getFromFirst']};};atr$($fq$,'lastIndex',function(){var $fq$=this;var $fy=$fq$.outer$.size.minus($fq$.$fp);$prop$get$fy={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$fq$.$prop$getLastIndex,d:['$','List','$c','Rest$fyp886','$at','lastIndex','$at','size$te3kmj']};}};$prop$get$fy.get=function(){return $fy};return (($fy>0)?$fy.minus(1):null);},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},$cont:Rest$List,$an:function(){return[shared(),actual()];},d:['$','List','$c','Rest$fyp886','$at','lastIndex']};});$fq$.segment=function ($fr,$fs){var $fq$=this;return $fq$.outer$.segment($fr.plus($fq$.$fp),$fs);};$fq$.span=function ($ft,$fu){var $fq$=this;return $fq$.outer$.span($ft.plus($fq$.$fp),$fu.plus($fq$.$fp));};$fq$.spanFrom=function ($fv){var $fq$=this;return $fq$.outer$.spanFrom($fv.plus($fq$.$fp));};$fq$.spanTo=function ($fw){var $fq$=this;return $fq$.outer$.span($fq$.$fp,$fw.plus($fq$.$fp));};$fq$.clone=function (){var $fq$=this;return $fq$.outer$.clone().Rest$List($fq$.$fp);};$fq$.iterator=function iterator(){var $fq$=this;var $fz=$fq$.outer$.iterator();var $g0=(0);function set$g0($g1){return $g0=$g1;};while((($g2=$g0,$g0=$g2.successor,$g2)<$fq$.$fp)){$fz.next();}var $g2;function $g3($$targs$$){var $g3$=new $g3.$$;$g3$.outer$=$fq$;$g3$.$$targs$$=$$targs$$;Iterator({Element$Iterator:$fq$.outer$.$$targs$$.Element$List},$g3$);return $g3$;
};$g3.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:'Element$List'}}],d:['$','List','$c','Rest$fyp886','$m','iterator','$o','iterator$z81ye0']};};function $init$$g3(){if($g3.$$===undefined){initTypeProto($g3,'ceylon.language::List.Rest.iterator',Basic,$init$Iterator());
(function($g3$){$g3$.next=function (){var $g3$=this;return $fz.next();};})($g3.$$.prototype);}
return $g3;}
$init$$g3();var $g4;function get$g4(){if($g4===undefined){$g4=$init$$g3()({Element$Iterator:$fq$.outer$.$$targs$$.Element$List});$g4.$crtmm$=get$g4.$crtmm$;}
return $g4;}
get$g4.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$g3},$cont:iterator,d:['$','List','$c','Rest$fyp886','$m','iterator','$o','iterator$z81ydz']};};$prop$get$g4={get:get$g4,$crtmm$:get$g4.$crtmm$};get$g3=get$g4;$prop$get$g3=get$g4;return get$g4();};$fq$.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$List'}},$ps:[],$cont:Rest$List,$an:function(){return[shared(),actual()];},d:['$','List','$c','Rest$fyp886','$m','iterator']};};atr$($fq$,'$fp',function(){return this.$fp_;},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Rest$List,d:['$','List','$c','Rest$fyp886','$at','from$8r4afz']};});$fq$.Rest$List=Rest$List;})(Rest$List.$$.prototype);}
return Rest$List;}
list$.$init$Rest$List=$init$Rest$List;$init$Rest$List();list$.Rest$List=Rest$List;function Sublist$List($g5,$g6$){$init$Sublist$List();if($g6$===undefined)$g6$=new this.Sublist$List.$$;
$g6$.outer$=this;$g6$.$$targs$$={Element$List:$g6$.outer$.$$targs$$.Element$List};$g6$.$g5_=$g5;$_Object($g6$);List({Element$List:$g6$.outer$.$$targs$$.Element$List},$g6$);//assert at List.ceylon (660:8-660:22)
if(!(($g6$.$g5>=0))) {throw wrapexc(AssertionError("Assertion failed: \'to>=0\' at List.ceylon (660:15-660:21)"),'660:8-660:22','List.ceylon'); }
$g6$.segment=function ($g7,$g8){var list$=this;return ($g9=(($g7.plus($g8).minus(1)>$g6$.$g5)?$g6$.outer$.segment($g7,$g6$.$g5):null),nn$($g9)?$g9:$g6$.outer$.segment($g7,$g8));};var $g9;$g6$.span=function ($ga,$gb){var list$=this;return ($gc=(($gb>$g6$.$g5)?$g6$.outer$.span($ga,$g6$.$g5):null),nn$($gc)?$gc:$g6$.outer$.span($ga,$gb));};var $gc;$g6$.spanFrom=function ($gd){var list$=this;return $g6$.outer$.span($gd,$g6$.$g5);};$g6$.spanTo=function ($ge){var list$=this;return ($gf=(($ge>$g6$.$g5)?$g6$.outer$.spanTo($g6$.$g5):null),nn$($gf)?$gf:$g6$.outer$.spanTo($ge));};var $gf;$g6$.clone=function (){var list$=this;return $g6$.outer$.clone().Sublist$List($g6$.$g5);};return $g6$;}
Sublist$List.$crtmm$=function(){return{mod:$CCMM$,'super':{t:$_Object},$ps:[{$nm:'to',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:List,satisfies:[{t:List,a:{Element$List:'Element$List'}}],d:['$','List','$c','Sublist$elvxw4']};};function $init$Sublist$List(){if(Sublist$List.$$===undefined){initTypeProto(Sublist$List,'ceylon.language::List.Sublist',$init$$_Object(),$init$List());
List.Sublist$List=Sublist$List;
(function($g6$){$g6$.getFromFirst=function getFromFirst($gg){var $g6$=this;if((($gg<0)||($gg>$g6$.$g5))){return null;}else {return $g6$.outer$.getFromFirst($gg);}};$g6$.getFromFirst.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$List']},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Sublist$List,$an:function(){return[shared(),actual()];},d:['$','List','$c','Sublist$elvxw4','$m','getFromFirst']};};atr$($g6$,'lastIndex',function(){var $g6$=this;var $gh;if(($gh=$g6$.outer$.lastIndex)!==null){return ($gi=(($gh<$g6$.$g5)?$gh:null),nn$($gi)?$gi:$g6$.$g5);var $gi;}else {return null;}},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},$cont:Sublist$List,$an:function(){return[shared(),actual()];},d:['$','List','$c','Sublist$elvxw4','$at','lastIndex']};});$g6$.segment=function ($g7,$g8){var $g6$=this;return ($gj=(($g7.plus($g8).minus(1)>$g6$.$g5)?$g6$.outer$.segment($g7,$g6$.$g5):null),nn$($gj)?$gj:$g6$.outer$.segment($g7,$g8));};$g6$.span=function ($ga,$gb){var $g6$=this;return ($gk=(($gb>$g6$.$g5)?$g6$.outer$.span($ga,$g6$.$g5):null),nn$($gk)?$gk:$g6$.outer$.span($ga,$gb));};$g6$.spanFrom=function ($gd){var $g6$=this;return $g6$.outer$.span($gd,$g6$.$g5);};$g6$.spanTo=function ($ge){var $g6$=this;return ($gl=(($ge>$g6$.$g5)?$g6$.outer$.spanTo($g6$.$g5):null),nn$($gl)?$gl:$g6$.outer$.spanTo($ge));};$g6$.clone=function (){var $g6$=this;return $g6$.outer$.clone().Sublist$List($g6$.$g5);};$g6$.iterator=function iterator(){var $g6$=this;var $gm=$g6$.outer$.iterator();var $gn=(0);function set$gn($go){return $gn=$go;};function $gp($$targs$$){var $gp$=new $gp.$$;$gp$.outer$=$g6$;$gp$.$$targs$$=$$targs$$;Iterator({Element$Iterator:$g6$.outer$.$$targs$$.Element$List},$gp$);return $gp$;
};$gp.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:'Element$List'}}],d:['$','List','$c','Sublist$elvxw4','$m','iterator','$o','iterator$j4f49q']};};function $init$$gp(){if($gp.$$===undefined){initTypeProto($gp,'ceylon.language::List.Sublist.iterator',Basic,$init$Iterator());
(function($gp$){$gp$.next=function next(){var $gp$=this;if((($gq=$gn,$gn=$gq.successor,$gq)>$g6$.$g5)){return getFinished();}else {return $gm.next();}var $gq;};$gp$.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$List',{t:Finished}]},$ps:[],$cont:$gp,$an:function(){return[shared(),actual()];},d:['$','List','$c','Sublist$elvxw4','$m','iterator','$o','iterator$j4f49q','$m','next']};};})($gp.$$.prototype);}
return $gp;}
$init$$gp();var $gr;function get$gr(){if($gr===undefined){$gr=$init$$gp()({Element$Iterator:$g6$.outer$.$$targs$$.Element$List});$gr.$crtmm$=get$gr.$crtmm$;}
return $gr;}
get$gr.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$gp},$cont:iterator,d:['$','List','$c','Sublist$elvxw4','$m','iterator','$o','iterator$j4f49p']};};$prop$get$gr={get:get$gr,$crtmm$:get$gr.$crtmm$};get$gp=get$gr;$prop$get$gp=get$gr;return get$gr();};$g6$.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$List'}},$ps:[],$cont:Sublist$List,$an:function(){return[shared(),actual()];},d:['$','List','$c','Sublist$elvxw4','$m','iterator']};};atr$($g6$,'$g5',function(){return this.$g5_;},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Sublist$List,d:['$','List','$c','Sublist$elvxw4','$at','to$1d4wke']};});$g6$.Sublist$List=Sublist$List;})(Sublist$List.$$.prototype);}
return Sublist$List;}
list$.$init$Sublist$List=$init$Sublist$List;$init$Sublist$List();list$.Sublist$List=Sublist$List;function Reversed$List($gs$){$init$Reversed$List();if($gs$===undefined)$gs$=new this.Reversed$List.$$;
$gs$.outer$=this;$gs$.$$targs$$={Element$List:$gs$.outer$.$$targs$$.Element$List};$_Object($gs$);List({Element$List:$gs$.outer$.$$targs$$.Element$List},$gs$);return $gs$;}
Reversed$List.$crtmm$=function(){return{mod:$CCMM$,'super':{t:$_Object},$ps:[],$cont:List,satisfies:[{t:List,a:{Element$List:'Element$List'}}],d:['$','List','$c','Reversed$ijs9g8']};};function $init$Reversed$List(){if(Reversed$List.$$===undefined){initTypeProto(Reversed$List,'ceylon.language::List.Reversed',$init$$_Object(),$init$List());
List.Reversed$List=Reversed$List;
(function($gs$){atr$($gs$,'lastIndex',function(){var $gs$=this;return $gs$.outer$.lastIndex;},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},$cont:Reversed$List,$an:function(){return[shared(),actual()];},d:['$','List','$c','Reversed$ijs9g8','$at','lastIndex']};});$gs$.getFromFirst=function getFromFirst($gt){var $gs$=this;var $gu;if(($gu=$gs$.lastIndex)!==null){return $gs$.outer$.getFromFirst($gu.minus($gt));}else {return null;}};$gs$.getFromFirst.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$List']},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Reversed$List,$an:function(){return[shared(),actual()];},d:['$','List','$c','Reversed$ijs9g8','$m','getFromFirst']};};$gs$.segment=function segment($gv,$gw){var $gs$=this;var $gx;if(($gx=$gs$.lastIndex)!==null&&($gw>1)){var $gy=$gx.minus($gv);return $gs$.outer$.span($gy,$gy.minus($gw).plus(1));}else {return getEmpty();}};$gs$.segment.$crtmm$=function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:'Element$List'}},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Reversed$List,$an:function(){return[shared(),actual()];},d:['$','List','$c','Reversed$ijs9g8','$m','segment']};};$gs$.span=function ($gz,$h0){var $gs$=this;return $gs$.outer$.span($h0,$gz);};$gs$.spanFrom=function spanFrom($h1){var $gs$=this;var $h2;if(($h2=$gs$.lastIndex)!==null&&($h1<=$h2)){return $gs$.outer$.span($h2.minus($h1),0);}else {return getEmpty();}};$gs$.spanFrom.$crtmm$=function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:'Element$List'}},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Reversed$List,$an:function(){return[shared(),actual()];},d:['$','List','$c','Reversed$ijs9g8','$m','spanFrom']};};$gs$.spanTo=function spanTo($h3){var $gs$=this;var $h4;if(($h4=$gs$.lastIndex)!==null&&($h3>=0)){return $gs$.outer$.span($h4,$h4.minus($h3));}else {return getEmpty();}};$gs$.spanTo.$crtmm$=function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:'Element$List'}},$ps:[{$nm:'to',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Reversed$List,$an:function(){return[shared(),actual()];},d:['$','List','$c','Reversed$ijs9g8','$m','spanTo']};};$gs$.clone=function (){var $gs$=this;return $gs$.outer$.clone().reversed;};$gs$.iterator=function iterator(){var $gs$=this;var $h5=$gs$.outer$;function $h6($$targs$$){var $h6$=new $h6.$$;$h6$.outer$=$gs$;$h6$.$$targs$$=$$targs$$;Iterator({Element$Iterator:$gs$.outer$.$$targs$$.Element$List},$h6$);$h6$.$h7_=$h5.size.minus(1);$h6$.$prop$get$h7={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$h6,$an:function(){return[variable()];},d:['$','List','$c','Reversed$ijs9g8','$m','iterator','$o','iterator$49yo9m','$at','i$x8c4cy']};}};$h6$.$prop$get$h7.get=function(){return $h7};return $h6$;
};$h6.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:'Element$List'}}],d:['$','List','$c','Reversed$ijs9g8','$m','iterator','$o','iterator$49yo9m']};};function $init$$h6(){if($h6.$$===undefined){initTypeProto($h6,'ceylon.language::List.Reversed.iterator',Basic,$init$Iterator());
(function($h6$){atr$($h6$,'$h7',function(){return this.$h7_;},function($h8){return this.$h7_=$h8;},function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$h6,$an:function(){return[variable()];},d:['$','List','$c','Reversed$ijs9g8','$m','iterator','$o','iterator$49yo9m','$at','i$x8c4cy']};});$h6$.next=function next(){var $h6$=this;if(($h6$.$h7>=0)){//assert at List.ceylon (768:24-769:56)
var $h9;if(!(is$(($h9=$h5.getFromFirst(($ha=$h6$.$h7,$h6$.$h7=$ha.predecessor,$ha))),$gs$.outer$.$$targs$$.Element$List))) {throw wrapexc(AssertionError("Assertion failed: \'is Element elem = \n                            outerList.getFromFirst(i--)\' at List.ceylon (768:31-769:55)"),'768:24-769:56','List.ceylon'); }
var $ha;return $h9;}else {return getFinished();}};$h6$.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$List',{t:Finished}]},$ps:[],$cont:$h6,$an:function(){return[shared(),actual()];},d:['$','List','$c','Reversed$ijs9g8','$m','iterator','$o','iterator$49yo9m','$m','next']};};})($h6.$$.prototype);}
return $h6;}
$init$$h6();var $hb;function get$hb(){if($hb===undefined){$hb=$init$$h6()({Element$Iterator:$gs$.outer$.$$targs$$.Element$List});$hb.$crtmm$=get$hb.$crtmm$;}
return $hb;}
get$hb.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$h6},$cont:iterator,d:['$','List','$c','Reversed$ijs9g8','$m','iterator','$o','iterator$49yo9l']};};$prop$get$hb={get:get$hb,$crtmm$:get$hb.$crtmm$};get$h6=get$hb;$prop$get$h6=get$hb;return get$hb();};$gs$.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$List'}},$ps:[],$cont:Reversed$List,$an:function(){return[shared(),actual()];},d:['$','List','$c','Reversed$ijs9g8','$m','iterator']};};$gs$.Reversed$List=Reversed$List;})(Reversed$List.$$.prototype);}
return Reversed$List;}
list$.$init$Reversed$List=$init$Reversed$List;$init$Reversed$List();list$.Reversed$List=Reversed$List;})(List.$$.prototype);}
return List;}
ex$.$init$List=$init$List;$init$List();var $ah,$al,$an,$as,$f3,$f5,$f8,$gj,$gk,$gl;function $_Array(elems,$$targs$$) {
$init$$_Array();
var e=[];
if (!(elems === null || elems === undefined)) {
var iter=elems.iterator();
var item;while((item=iter.next())!==getFinished()) {
e.push(item);
}
}
e.$$targs$$=$$targs$$;
var t=$$targs$$.Element$Array;
List({Element$List:t}, e);
return e;
}
$_Array.$crtmm$=function(){return{mod:$CCMM$,'super':{t:$_Object},$ps:[{$nm:'elements',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Element$Array'}},$an:function(){return[];}}],$tp:{Element$Array:{}},satisfies:[{t:List,a:{Element$List:'Element$Array'}},{t:Ranged,a:{Span$Ranged:{t:$_Array,a:{Element$Array:'Element$Array'}},Element$Ranged:'Element$Array',Index$Ranged:{t:Integer}}}],$an:function(){return[doc($CCMM$['ceylon.language'].Array.$an.doc[0]),shared(),$_final(),$_native()];},d:['$','Array']};};
ex$.$_Array=$_Array;function $init$$_Array(){if($_Array.$$===undefined){initExistingType($_Array, Array, 'ceylon.language::Array', $_Object, Ranged, $init$List());
inheritProto($_Array, $_Object, Ranged, $init$List());

(function(array$){array$.$_get=function get(i){
var e=this[i];
if (e===undefined)
return null;
return e;
}
array$.$_get.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$Array']},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:$_Array,$an:function(){return[doc($CCMM$['ceylon.language'].Array.$m.get.$an.doc[0]),shared(),actual(),$_native()];},d:['$','Array','$m','get']};};array$.getFromLast=function getFromLast(i){
var e=this[this.length-1-i];
if (e===undefined)
return null;
return e;
}
array$.getFromLast.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$Array']},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:$_Array,$an:function(){return[doc($CCMM$['ceylon.language'].Array.$m.getFromLast.$an.doc[0]),shared(),actual(),$_native()];},d:['$','Array','$m','getFromLast']};};array$.getFromFirst=function getFromFirst(i){
var e=this[i];
if (e===undefined)
return null;
return e;
}
array$.getFromFirst.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$Array']},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:$_Array,$an:function(){return[doc($CCMM$['ceylon.language'].Array.$m.getFromFirst.$an.doc[0]),shared(),actual(),$_native()];},d:['$','Array','$m','getFromFirst']};};array$.set=function(idx,elem) {
if (idx >= 0 && idx < this.length) {
this[idx] = elem;
}
}
array$.set.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[doc("The index of the element to replace.")];}},{$nm:'element',$mt:'prm',$t:'Element$Array',$an:function(){return[doc("The new element.")];}}],$cont:$_Array,$an:function(){return[doc($CCMM$['ceylon.language'].Array.$m.set.$an.doc[0]),$_throws($init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),AssertionError),"if the given index is out of bounds, that is, \nif `index<0` or if `index>lastIndex`"),shared(),$_native()];},d:['$','Array','$m','set']};};array$.copyTo=function(other,srcpos,dstpos,length){
if(srcpos===undefined)srcpos=0;
if(length===undefined)length=this.size-srcpos;
if (length===0)return;
if(dstpos===undefined)dstpos=0;
var endpos=srcpos+length-1;
if (srcpos<0||srcpos>=this.size||length<1||dstpos+length>other.size||endpos>=this.size)throw Exception("Array index out of bounds");
if (other===this && dstpos>srcpos) {
dstpos+=length-1;
for (var i=endpos; i>=srcpos; i--) {
other[dstpos--]=this[i];
}
} else {
for (var i=srcpos;i<=endpos;i++) {
other[dstpos++]=this[i];
}
}
}
array$.copyTo.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'destination',$mt:'prm',$t:{t:$_Array,a:{Element$Array:'Element$Array'}},$an:function(){return[doc("The array into which to copy the elements.")];}},{$nm:'sourcePosition',$mt:'prm',$def:1,$t:{t:Integer},$an:function(){return[doc("The index of the first element in this array to copy.")];}},{$nm:'destinationPosition',$mt:'prm',$def:1,$t:{t:Integer},$an:function(){return[doc("The index in the given array into which to \ncopy the first element.")];}},{$nm:'length',$mt:'prm',$def:1,$t:{t:Integer},$an:function(){return[doc("The number of elements to copy.")];}}],$cont:$_Array,$an:function(){return[doc($CCMM$['ceylon.language'].Array.$m.copyTo.$an.doc[0]),shared(),$_native()];},d:['$','Array','$m','copyTo']};};atr$(array$,'lastIndex',function(){return this.length>0 ? (this.length-1) : null;
array$.lastIndex.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},$cont:$_Array,$an:function(){return[shared(),actual(),$_native()];},d:['$','Array','$at','lastIndex']};};},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},$cont:$_Array,$an:function(){return[shared(),actual(),$_native()];},d:['$','Array','$at','lastIndex']};});atr$(array$,'first',function(){return this.length>0 ? this[0] : null;
array$.first.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$Array']},$cont:$_Array,$an:function(){return[shared(),actual(),$_native()];},d:['$','Array','$at','first']};};},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$Array']},$cont:$_Array,$an:function(){return[shared(),actual(),$_native()];},d:['$','Array','$at','first']};});atr$(array$,'last',function(){return this.length>0 ? this[this.length-1] : null;
array$.last.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$Array']},$cont:$_Array,$an:function(){return[shared(),actual(),$_native()];},d:['$','Array','$at','last']};};},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$Array']},$cont:$_Array,$an:function(){return[shared(),actual(),$_native()];},d:['$','Array','$at','last']};});array$.clone=function(){return this;}
array$.clone.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Array,a:{Element$Array:'Element$Array'}},$ps:[],$cont:$_Array,$an:function(){return[doc("A new array with the same elements as this array."),shared(),actual(),$_native()];},d:['$','Array','$m','clone']};};atr$(array$,'empty',function(){return this.length==0;
array$.empty.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:$_Array,$an:function(){return[shared(),actual(),$_native()];},d:['$','Array','$at','empty']};};},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:$_Array,$an:function(){return[shared(),actual(),$_native()];},d:['$','Array','$at','empty']};});atr$(array$,'size',function(){return this.length;
array$.size.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$_Array,$an:function(){return[shared(),actual(),$_native()];},d:['$','Array','$at','size']};};},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$_Array,$an:function(){return[shared(),actual(),$_native()];},d:['$','Array','$at','size']};});array$.defines=function(i){return List.$$.prototype.defines.call(this,i);}
array$.defines.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:$_Array,$an:function(){return[shared(),actual(),$_native()];},d:['$','Array','$m','defines']};};array$.iterator=function() {
var $idx$=0;
var $arr$=this;
return new ComprehensionIterator(function() {
return ($idx$===$arr$.length) ? getFinished() : $arr$[$idx$++];
},{Element$Iterable:this._elemTarg(),Absent$Iterable:{t:Null}});
}
array$.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Array'}},$ps:[],$cont:$_Array,$an:function(){return[shared(),actual(),$_native()];},d:['$','Array','$m','iterator']};};array$.contains=function(elem) {
for (var i=0; i<this.length; i++) {
if (elem.equals(this[i])) {
return true;
}
}
return false;
}
array$.contains.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'element',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:$_Array,$an:function(){return[shared(),actual(),$_native()];},d:['$','Array','$m','contains']};};array$.sequence=function() {
if(this.length===0)return getEmpty();
return ArraySequence(this,{Element$ArraySequence:this._elemTarg()});
}
array$.sequence.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Array'}},$ps:[],$cont:$_Array,$an:function(){return[shared(),actual(),$_native()];},d:['$','Array','$m','sequence']};};array$.count=function(){return List.$$.prototype.count.apply(this,arguments);}
array$.count.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:$_Array,$an:function(){return[shared(),actual(),$_native()];},d:['$','Array','$m','count']};};array$.span=function(from, to) {
if (from > to) {
var arr = this.segment(to, from-to+1);
arr.reverse();
return arr.reifyCeylonType(this._elemTarg());
}
return this.segment(from, to-from+1);
}
array$.span.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Array,a:{Element$Array:'Element$Array'}},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'to',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:$_Array,$an:function(){return[shared(),actual(),$_native()];},d:['$','Array','$m','span']};};array$.spanFrom=function(from) {
return this.span(from, 0x7fffffff);
}
array$.spanFrom.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Array,a:{Element$Array:'Element$Array'}},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:$_Array,$an:function(){return[shared(),actual(),$_native()];},d:['$','Array','$m','spanFrom']};};array$.spanTo=function(to) {
return to < 0 ? getEmpty() : this.span(0, to);
}
array$.spanTo.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Array,a:{Element$Array:'Element$Array'}},$ps:[{$nm:'to',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:$_Array,$an:function(){return[shared(),actual(),$_native()];},d:['$','Array','$m','spanTo']};};array$.segment=function(from, len) {
if (len <= 0) { return getEmpty(); }
var stop = from + len;
var seq = this.slice((from>=0)?from:0, (stop>=0)?stop:0);
return seq.reifyCeylonType(this._elemTarg());
}
array$.segment.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Array,a:{Element$Array:'Element$Array'}},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:$_Array,$an:function(){return[shared(),actual(),$_native()];},d:['$','Array','$m','segment']};};array$.skip=function(c){
if (c<=0)return this;
var r=this.slice(c);
return r.reifyCeylonType(this._elemTarg());
}
array$.skip.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Element$Array'}},$ps:[{$nm:'skipping',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:$_Array,$an:function(){return[shared(),actual(),$_native()];},d:['$','Array','$m','skip']};};array$.take=function(c) {
if (c<=0)return [].reifyCeylonType(this._elemTarg());
var r=this.slice(0,c);
return r.reifyCeylonType(this._elemTarg());
}
array$.take.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Element$Array'}},$ps:[{$nm:'taking',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:$_Array,$an:function(){return[shared(),actual(),$_native()];},d:['$','Array','$m','take']};};array$.by=function(c){
if (c<=0)throw AssertionError("Step must be > 0");
if (c===1)return this;
var r=[],idx=0;
while (idx<this.length) {
r.push(this[idx]);
idx+=c;
}
return r.reifyCeylonType(this._elemTarg());
}
array$.by.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Element$Array'}},$ps:[{$nm:'step',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:$_Array,$an:function(){return[shared(),actual(),$_native()];},d:['$','Array','$m','by']};};array$.sortInPlace=function(f) {
this.sort(function(a,b) {
var r = f(a,b);
return r===getLarger()?1:r===getSmaller()?-1:0;
});
}
array$.sortInPlace.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'comparing',$mt:'prm',$pt:'f',$t:{t:Comparison},$an:function(){return[];}}],$cont:$_Array,$an:function(){return[doc($CCMM$['ceylon.language'].Array.$m.sortInPlace.$an.doc[0]),shared(),$_native()];},d:['$','Array','$m','sortInPlace']};};atr$(array$,'$hc',function(){return this.$hc_;},undefined,function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Element$Array'}},$cont:$_Array,d:['$','Array','$at','elements$v26qpk']};});})($_Array.$$.prototype);}
return $_Array;}
ex$.$init$$_Array=$init$$_Array;$init$$_Array();var arrprot$=Array.prototype;
var origArrToString = arrprot$.toString;
arrprot$.toString = origArrToString;
arrprot$.getFromFirst=$_Array.$$.prototype.getFromFirst;
arrprot$.reifyCeylonType=function(t,ne) {
if (t===null || t===undefined)t={t:Anything};
if (this.$$targs$$===undefined)this.$$targs$$=={};
add_type_arg(this,'Element$Iterable',t);
add_type_arg(this,'Element$Array',t);
add_type_arg(this,'Element$List',t);
add_type_arg(this,'Element$Sequential',t);
add_type_arg(this,'Absent$Iterable',ne?{t:Nothing}:{t:Null});
return this;
}
arrprot$._elemTarg=function(){
var t = this.$$targs$$ && this.$$targs$$.Element$Array;
if (t===undefined)t = this.$$targs$$ && this.$$targs$$.Element$Iterable;
if (t===undefined)t = this.$$targs$$ && this.$$targs$$.Element$List;
if (t===undefined)t = {t:Anything};
if (this.$$targs$$===undefined)this.$$targs$$={
Element$Array:t, Element$List:t, Element$Iterable:t,
Element$Collection:t, Item$Correspondence:t,Element$Ranged:t,
Absent$Iterable:Null, Key$Correspondence:{t:Integer},
Index$Ranged:{t:Integer}, Span$Ranged:{t:$_Array,a:{Element$Array:'Element$Array'}}
};
return t;
}
arrprot$.getT$name = function() {
return $_Array.$$.T$name;
}
arrprot$.getT$all = function() {
return $_Array.$$.T$all;
}
atr$(arrprot$,'reversed', function() {
this._elemTarg();
return this.Reversed$List();
},undefined,List.$$.prototype.$prop$getReversed.$crtmm$);
atr$(arrprot$,'rest', function() {
this._elemTarg();
return this.Rest$List(1);
},undefined,List.$$.prototype.$prop$getRest.$crtmm$);
function sarg$(elems,spread,$$targs$$){
$init$sarg();
that=new sarg$.$$;
Iterable($$targs$$,that);
that.e=elems;
that.s=spread;
return that;
}
sarg$.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],$tp:{T$LazyIterable:{'var':'out'}},satisfies:[{t:Iterable,a:{Element$Iterable:'T$LazyIterable',Absent$Iterable:{t:Null}}}],$an:function(){return[shared()];},d:['$','LazyIterable']};};
ex$.sarg$=sarg$;
function $init$sarg(){if(sarg$.$$===undefined){
initTypeProto(sarg$,'ceylon.language::LazyIterable',Basic,Iterable);
(function(that){
that.iterator=function (){
var sarg=this;
function iter($$targs$$){
var $$4=new iter.$$;
$$4.outer$=sarg;
$$4.$$targs$$=$$targs$$;
Iterator({Element$Iterator:sarg.$$targs$$.Element$Iterable},$$4);
$$4.i=0;
return $$4;
};iter.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:'T$LazyIterable'}}],d:['$','LazyIterable','$m','iterator','$o','it']};};
if(iter.$$===undefined){
initTypeProto(iter,'LazyIterable.it',Basic,Iterator);
iter.$$.prototype.next=function(){
if (this.sp)return this.sp.next();
var e=sarg.e(this.i);
if (e===getFinished() && sarg.s) {
this.sp=sarg.s().iterator();
e=this.sp.next();
} else {
this.i++;
}
return e;
};
iter.$$.prototype.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['T$LazyIterable',{t:Finished}]},$ps:[],$cont:iter,$an:function(){return[shared(),actual()];},d:['$','LazyIterable','$m','iterator','$o','it','$m','next']};};
}
return iter({Element$Iterator:sarg.$$targs$$.T$LazyIterable});
};
that.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'T$LazyIterable'}},$ps:[],$cont:$sarg,$an:function(){return[shared(),actual()];},d:['$','LazyIterable','$m','iterator']};};
})(sarg$.$$.prototype);
}
return sarg$;
}
$init$sarg();
ex$.$init$sarg=$init$sarg;
$init$sarg();
function ArraySequence($hd,$$targs$$,arraySequence$){$init$ArraySequence();if(arraySequence$===undefined)arraySequence$=new ArraySequence.$$;
set_type_args(arraySequence$,$$targs$$);arraySequence$.$hd_=$hd;Sequence({Element$Sequence:$$targs$$.Element$ArraySequence},arraySequence$);//assert at ArraySequence.ceylon (9:4-9:25)
if(!(!arraySequence$.$hd.empty)) {throw wrapexc(AssertionError("Assertion failed: \'!array.empty\' at ArraySequence.ceylon (9:11-9:24)"),'9:4-9:25','ArraySequence.ceylon'); }
arraySequence$.$prop$getSize={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:ArraySequence,$an:function(){return[shared(),actual()];},d:['$','ArraySequence','$at','size']};}};arraySequence$.$prop$getSize.get=function(){return size};arraySequence$.$prop$getRest={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$ArraySequence'}},$cont:ArraySequence,$an:function(){return[shared(),actual()];},d:['$','ArraySequence','$at','rest']};}};arraySequence$.$prop$getRest.get=function(){return rest};arraySequence$.$prop$getHash={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:ArraySequence,$an:function(){return[shared(),actual()];},d:['$','ArraySequence','$at','hash']};}};arraySequence$.$prop$getHash.get=function(){return hash};return arraySequence$;}
ArraySequence.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[{$nm:'array',$mt:'prm',$t:{t:$_Array,a:{Element$Array:'Element$ArraySequence'}},$an:function(){return[];}}],$tp:{Element$ArraySequence:{}},satisfies:[{t:Sequence,a:{Element$Sequence:'Element$ArraySequence'}}],$an:function(){return[doc($CCMM$['ceylon.language'].ArraySequence.$an.doc[0])];},d:['$','ArraySequence']};};function $init$ArraySequence(){if(ArraySequence.$$===undefined){initTypeProto(ArraySequence,'ceylon.language::ArraySequence',Basic,$init$Sequence());
(function(arraySequence$){arraySequence$.getFromFirst=function ($he){var arraySequence$=this;return arraySequence$.$hd.getFromFirst($he);};arraySequence$.getFromFirst.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$ArraySequence']},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:ArraySequence,$an:function(){return[shared(),actual()];},d:['$','ArraySequence','$m','getFromFirst']};};arraySequence$.contains=function ($hf){var arraySequence$=this;return arraySequence$.$hd.contains($hf);};arraySequence$.contains.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'element',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:ArraySequence,$an:function(){return[shared(),actual()];},d:['$','ArraySequence','$m','contains']};};atr$(arraySequence$,'size',function(){var arraySequence$=this;return arraySequence$.$hd.size;},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:ArraySequence,$an:function(){return[shared(),actual()];},d:['$','ArraySequence','$at','size']};});arraySequence$.iterator=function (){var arraySequence$=this;return arraySequence$.$hd.iterator();};arraySequence$.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$ArraySequence'}},$ps:[],$cont:ArraySequence,$an:function(){return[shared(),actual()];},d:['$','ArraySequence','$m','iterator']};};atr$(arraySequence$,'first',function(){var arraySequence$=this;//assert at ArraySequence.ceylon (23:8-23:47)
var $hg;if(!(is$(($hg=arraySequence$.$hd.first),arraySequence$.$$targs$$.Element$ArraySequence))) {throw wrapexc(AssertionError("Assertion failed: \'is Element first = array.first\' at ArraySequence.ceylon (23:15-23:46)"),'23:8-23:47','ArraySequence.ceylon'); }
return $hg;},undefined,function(){return{mod:$CCMM$,$t:'Element$ArraySequence',$cont:ArraySequence,$an:function(){return[shared(),actual()];},d:['$','ArraySequence','$at','first']};});atr$(arraySequence$,'last',function(){var arraySequence$=this;//assert at ArraySequence.ceylon (28:8-28:45)
var $hh;if(!(is$(($hh=arraySequence$.$hd.last),arraySequence$.$$targs$$.Element$ArraySequence))) {throw wrapexc(AssertionError("Assertion failed: \'is Element last = array.last\' at ArraySequence.ceylon (28:15-28:44)"),'28:8-28:45','ArraySequence.ceylon'); }
return $hh;},undefined,function(){return{mod:$CCMM$,$t:'Element$ArraySequence',$cont:ArraySequence,$an:function(){return[shared(),actual()];},d:['$','ArraySequence','$at','last']};});atr$(arraySequence$,'lastIndex',function(){var arraySequence$=this;//assert at ArraySequence.ceylon (33:8-33:51)
var $hi;if(!(($hi=arraySequence$.$hd.lastIndex)!==null)) {throw wrapexc(AssertionError("Assertion failed: \'exists lastIndex = array.lastIndex\' at ArraySequence.ceylon (33:15-33:50)"),'33:8-33:51','ArraySequence.ceylon'); }
return $hi;},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:ArraySequence,$an:function(){return[shared(),actual()];},d:['$','ArraySequence','$at','lastIndex']};});atr$(arraySequence$,'rest',function(){var arraySequence$=this;return ($hj=sequence(arraySequence$.$hd.rest,{Absent$sequence:{t:Null},Element$sequence:arraySequence$.$$targs$$.Element$ArraySequence}),nn$($hj)?$hj:getEmpty());},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$ArraySequence'}},$cont:ArraySequence,$an:function(){return[shared(),actual()];},d:['$','ArraySequence','$at','rest']};});atr$(arraySequence$,'reversed',function(){var arraySequence$=this;//assert at ArraySequence.ceylon (41:8-41:67)
var $hk;if(!(($hk=sequence(arraySequence$.$hd.reversed,{Absent$sequence:{t:Null},Element$sequence:arraySequence$.$$targs$$.Element$ArraySequence}))!==null)) {throw wrapexc(AssertionError("Assertion failed: \'exists reversed = package.sequence(array.reversed)\' at ArraySequence.ceylon (41:15-41:66)"),'41:8-41:67','ArraySequence.ceylon'); }
return $hk;},undefined,function(){return{mod:$CCMM$,$t:{t:Sequence,a:{Element$Sequence:'Element$ArraySequence'}},$cont:ArraySequence,$an:function(){return[shared(),actual()];},d:['$','ArraySequence','$at','reversed']};});arraySequence$.segment=function segment($hl,$hm){var arraySequence$=this;if(($hl<0)){return ($hn=sequence(arraySequence$.$hd.segment(0,$hm.plus($hl)),{Absent$sequence:{t:Null},Element$sequence:arraySequence$.$$targs$$.Element$ArraySequence}),nn$($hn)?$hn:getEmpty());var $hn;}else {return ($ho=sequence(arraySequence$.$hd.segment($hl,$hm),{Absent$sequence:{t:Null},Element$sequence:arraySequence$.$$targs$$.Element$ArraySequence}),nn$($ho)?$ho:getEmpty());var $ho;}};arraySequence$.segment.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$ArraySequence'}},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:ArraySequence,$an:function(){return[shared(),actual()];},d:['$','ArraySequence','$m','segment']};};arraySequence$.span=function span($hp,$hq){var arraySequence$=this;if(($hp<=$hq)){if((($hq<0)||($hp>arraySequence$.lastIndex))){return getEmpty();}return ($hr=sequence(arraySequence$.$hd.span(largest($hp,0,{Element$largest:{t:Integer}}),smallest($hq,arraySequence$.lastIndex,{Element$smallest:{t:Integer}})),{Absent$sequence:{t:Null},Element$sequence:arraySequence$.$$targs$$.Element$ArraySequence}),nn$($hr)?$hr:getEmpty());var $hr;}else {if((($hp<0)||($hq>arraySequence$.lastIndex))){return getEmpty();}return ($hs=sequence(arraySequence$.$hd.span(smallest($hp,arraySequence$.lastIndex,{Element$smallest:{t:Integer}}),largest($hq,0,{Element$largest:{t:Integer}})),{Absent$sequence:{t:Null},Element$sequence:arraySequence$.$$targs$$.Element$ArraySequence}),nn$($hs)?$hs:getEmpty());var $hs;}};arraySequence$.span.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$ArraySequence'}},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'to',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:ArraySequence,$an:function(){return[shared(),actual()];},d:['$','ArraySequence','$m','span']};};arraySequence$.spanFrom=function spanFrom($ht){var arraySequence$=this;if(($ht>arraySequence$.lastIndex)){return getEmpty();}else {return ($hu=sequence(arraySequence$.$hd.spanFrom(largest($ht,0,{Element$largest:{t:Integer}})),{Absent$sequence:{t:Null},Element$sequence:arraySequence$.$$targs$$.Element$ArraySequence}),nn$($hu)?$hu:getEmpty());var $hu;}};arraySequence$.spanFrom.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$ArraySequence'}},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:ArraySequence,$an:function(){return[shared(),actual()];},d:['$','ArraySequence','$m','spanFrom']};};arraySequence$.spanTo=function spanTo($hv){var arraySequence$=this;if(($hv<0)){return getEmpty();}else {return ($hw=sequence(arraySequence$.$hd.spanTo(smallest($hv,arraySequence$.lastIndex,{Element$smallest:{t:Integer}})),{Absent$sequence:{t:Null},Element$sequence:arraySequence$.$$targs$$.Element$ArraySequence}),nn$($hw)?$hw:getEmpty());var $hw;}};arraySequence$.spanTo.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$ArraySequence'}},$ps:[{$nm:'to',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:ArraySequence,$an:function(){return[shared(),actual()];},d:['$','ArraySequence','$m','spanTo']};};arraySequence$.equals=function ($hx){var arraySequence$=this;return arraySequence$.getT$all()['ceylon.language::List'].$$.prototype.equals.call(this,$hx);};arraySequence$.equals.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'that',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:ArraySequence,$an:function(){return[shared(),actual()];},d:['$','ArraySequence','$m','equals']};};atr$(arraySequence$,'hash',function(){var arraySequence$=this;return attrGetter(arraySequence$.getT$all()['ceylon.language::List'],'hash').call(this);},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:ArraySequence,$an:function(){return[shared(),actual()];},d:['$','ArraySequence','$at','hash']};});atr$(arraySequence$,'$hd',function(){return this.$hd_;},undefined,function(){return{mod:$CCMM$,$t:{t:$_Array,a:{Element$Array:'Element$ArraySequence'}},$cont:ArraySequence,d:['$','ArraySequence','$at','array$sfdy8d']};});})(ArraySequence.$$.prototype);}
return ArraySequence;}
ex$.$init$ArraySequence=$init$ArraySequence;$init$ArraySequence();var $hj;function Tuple(first,rest,$$targs$$,tuple$){$init$Tuple();if(tuple$===undefined)tuple$=new Tuple.$$;
set_type_args(tuple$,$$targs$$);tuple$.first_=first;tuple$.rest_=rest;$_Object(tuple$);Sequence({Element$Sequence:$$targs$$.Element$Tuple},tuple$);if(typeof($init$native$Tuple$before)==='function')$init$native$Tuple$before(tuple$,$$targs$$);tuple$.$prop$getFirst={$crtmm$:function(){return{mod:$CCMM$,$t:'First$Tuple',$cont:Tuple,$an:function(){return[doc($CCMM$['ceylon.language'].Tuple.$at.first.$an.doc[0]),shared(),actual(),$_native()];},d:['$','Tuple','$at','first']};}};tuple$.$prop$getFirst.get=function(){return first};tuple$.$prop$getRest={$crtmm$:function(){return{mod:$CCMM$,$t:'Rest$Tuple',$cont:Tuple,$an:function(){return[doc($CCMM$['ceylon.language'].Tuple.$at.rest.$an.doc[0]),shared(),actual(),$_native()];},d:['$','Tuple','$at','rest']};}};tuple$.$prop$getRest.get=function(){return rest};if(typeof($init$native$Tuple$after)==='function')$init$native$Tuple$after(tuple$,$$targs$$);return tuple$;}
Tuple.$crtmm$=function(){return{mod:$CCMM$,'super':{t:$_Object},$ps:[{$nm:'first',$mt:'prm',$t:'First$Tuple',$an:function(){return[doc($CCMM$['ceylon.language'].Tuple.$at.first.$an.doc[0]),shared(),actual(),$_native()];}},{$nm:'rest',$mt:'prm',$t:'Rest$Tuple',$an:function(){return[doc($CCMM$['ceylon.language'].Tuple.$at.rest.$an.doc[0]),shared(),actual(),$_native()];}}],$tp:{Element$Tuple:{'var':'out'},First$Tuple:{'var':'out','satisfies':['Element$Tuple']},Rest$Tuple:{'var':'out','satisfies':[{t:Sequential,a:{Element$Sequential:'Element$Tuple'}}],'def':{t:Empty}}},satisfies:[{t:Sequence,a:{Element$Sequence:'Element$Tuple'}}],$an:function(){return[doc($CCMM$['ceylon.language'].Tuple.$an.doc[0]),by(["Gavin"].reifyCeylonType({t:$_String})),shared(),$_final(),$_native()];},d:['$','Tuple']};};
ex$.Tuple=Tuple;function $init$Tuple(){if(Tuple.$$===undefined){initTypeProto(Tuple,'ceylon.language::Tuple',$init$$_Object(),$init$Sequence());
(function(tuple$){atr$(tuple$,'first',function(){return this.first_;
tuple$.first.$crtmm$=function(){return{mod:$CCMM$,$t:'First$Tuple',$cont:Tuple,$an:function(){return[doc($CCMM$['ceylon.language'].Tuple.$at.first.$an.doc[0]),shared(),actual(),$_native()];},d:['$','Tuple','$at','first']};};},undefined,function(){return{mod:$CCMM$,$t:'First$Tuple',$cont:Tuple,$an:function(){return[doc($CCMM$['ceylon.language'].Tuple.$at.first.$an.doc[0]),shared(),actual(),$_native()];},d:['$','Tuple','$at','first']};});atr$(tuple$,'rest',function(){return this.rest_;
tuple$.rest.$crtmm$=function(){return{mod:$CCMM$,$t:'Rest$Tuple',$cont:Tuple,$an:function(){return[doc($CCMM$['ceylon.language'].Tuple.$at.rest.$an.doc[0]),shared(),actual(),$_native()];},d:['$','Tuple','$at','rest']};};},undefined,function(){return{mod:$CCMM$,$t:'Rest$Tuple',$cont:Tuple,$an:function(){return[doc($CCMM$['ceylon.language'].Tuple.$at.rest.$an.doc[0]),shared(),actual(),$_native()];},d:['$','Tuple','$at','rest']};});atr$(tuple$,'size',function(){var tuple$=this;return (1).plus(tuple$.rest.size);},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Tuple,$an:function(){return[shared(),actual()];},d:['$','Tuple','$at','size']};});tuple$.getFromFirst=function getFromFirst($hy){var tuple$=this;var $hz=$hy.compare(0);if($hz===getSmaller()) {return null;}else if($hz===getEqual()) {return tuple$.first;}else if($hz===getLarger()) {return tuple$.rest.getFromFirst($hy.minus(1));}};tuple$.getFromFirst.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$Tuple']},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Tuple,$an:function(){return[shared(),actual(),$_native()];},d:['$','Tuple','$m','getFromFirst']};};atr$(tuple$,'lastIndex',function(){var tuple$=this;var $i0;if(($i0=tuple$.rest.lastIndex)!==null){return $i0.plus(1);}else {return 0}},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Tuple,$an:function(){return[shared(),actual(),$_native()];},d:['$','Tuple','$at','lastIndex']};});atr$(tuple$,'last',function(){var tuple$=this;var $i1;if(nonempty(($i1=tuple$.rest))){return $i1.last;}else {return tuple$.first;}},undefined,function(){return{mod:$CCMM$,$t:'Element$Tuple',$cont:Tuple,$an:function(){return[doc("The last element of this tuple."),shared(),actual(),$_native()];},d:['$','Tuple','$at','last']};});tuple$.segment=function segment($i2,$i3){var tuple$=this;if(($i3<=0)){return getEmpty();}var $i4=($i5=(($i2<0)?0:null),nn$($i5)?$i5:$i2);var $i5;if(($i4==0)){return ($i6=(($i3==1)?tpl$([tuple$.first],{t:'T',l:[tuple$.$$targs$$.First$Tuple]}):null),nn$($i6)?$i6:tuple$.rest.segment(0,$i3.plus($i4).minus(1)).withLeading(tuple$.first,{Other$withLeading:tuple$.$$targs$$.First$Tuple}));var $i6;}return tuple$.rest.segment($i4.minus(1),$i3);};tuple$.segment.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Tuple'}},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Tuple,$an:function(){return[shared(),actual(),$_native()];},d:['$','Tuple','$m','segment']};};tuple$.span=function span($i7,$i8){var tuple$=this;if((($i7<0)&&($i8<0))){return getEmpty();}var $i9=($ia=(($i7<0)?0:null),nn$($ia)?$ia:$i7);var $ia;var $ib=($ic=(($i8<0)?0:null),nn$($ic)?$ic:$i8);var $ic;return ($id=(($i9<=$ib)?tuple$.segment($i7,$ib.minus($i9).plus(1)):null),nn$($id)?$id:tuple$.segment($ib,$i9.minus($ib).plus(1)).reversed.sequence());var $id;};tuple$.span.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Tuple'}},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'end',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Tuple,$an:function(){return[shared(),actual(),$_native()];},d:['$','Tuple','$m','span']};};tuple$.spanTo=function ($ie){var tuple$=this;return ($if=(($ie<0)?getEmpty():null),nn$($if)?$if:tuple$.span(0,$ie));};tuple$.spanFrom=function ($ig){var tuple$=this;return tuple$.span($ig,tuple$.size);};atr$(tuple$,'reversed',function(){var tuple$=this;return tuple$.rest.reversed.withTrailing(tuple$.first,{Other$withTrailing:tuple$.$$targs$$.First$Tuple});},undefined,function(){return{mod:$CCMM$,$t:{t:Sequence,a:{Element$Sequence:'Element$Tuple'}},$cont:Tuple,$an:function(){return[shared(),actual()];},d:['$','Tuple','$at','reversed']};});tuple$.clone=function (){var tuple$=this;return tuple$;};tuple$.clone.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'T',l:[{$t:'First$Tuple'}]},$ps:[],$cont:Tuple,$an:function(){return[doc("This tuple."),shared(),actual(),$_native()];},d:['$','Tuple','$m','clone']};};tuple$.iterator=function iterator(){var tuple$=this;function $ih($$targs$$){var $ih$=new $ih.$$;$ih$.outer$=tuple$;$ih$.$$targs$$=$$targs$$;Iterator({Element$Iterator:tuple$.$$targs$$.Element$Tuple},$ih$);$ih$.$ii_=tuple$;$ih$.$prop$get$ii={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Tuple'}},$cont:$ih,$an:function(){return[variable()];},d:['$','Tuple','$m','iterator','$o','iterator$qzn7eb','$at','current$4fo7z']};}};$ih$.$prop$get$ii.get=function(){return $ii};return $ih$;
};$ih.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:'Element$Tuple'}}],d:['$','Tuple','$m','iterator','$o','iterator$qzn7eb']};};function $init$$ih(){if($ih.$$===undefined){initTypeProto($ih,'ceylon.language::Tuple.iterator',Basic,$init$Iterator());
(function($ih$){atr$($ih$,'$ii',function(){return this.$ii_;},function($ij){return this.$ii_=$ij;},function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Tuple'}},$cont:$ih,$an:function(){return[variable()];},d:['$','Tuple','$m','iterator','$o','iterator$qzn7eb','$at','current$4fo7z']};});$ih$.next=function next(){var $ih$=this;var $ik;if(nonempty(($ik=$ih$.$ii))){$ih$.$ii=$ik.rest;return $ik.first;}else {return getFinished();}};$ih$.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$Tuple',{t:Finished}]},$ps:[],$cont:$ih,$an:function(){return[shared(),actual()];},d:['$','Tuple','$m','iterator','$o','iterator$qzn7eb','$m','next']};};})($ih.$$.prototype);}
return $ih;}
$init$$ih();var $il;function get$il(){if($il===undefined){$il=$init$$ih()({Element$Iterator:tuple$.$$targs$$.Element$Tuple});$il.$crtmm$=get$il.$crtmm$;}
return $il;}
get$il.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$ih},$cont:iterator,d:['$','Tuple','$m','iterator','$o','iterator$qzn7ec']};};$prop$get$il={get:get$il,$crtmm$:get$il.$crtmm$};get$ih=get$il;$prop$get$ih=get$il;return get$il();};tuple$.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Tuple'}},$ps:[],$cont:Tuple,$an:function(){return[shared(),actual(),$_native()];},d:['$','Tuple','$m','iterator']};};tuple$.contains=function contains($im){var tuple$=this;var $in;if(($in=tuple$.first)!==null&&$in.equals($im)){return true;}else {return tuple$.rest.contains($im);}};tuple$.contains.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'element',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:Tuple,$an:function(){return[doc($CCMM$['ceylon.language'].Tuple.$m.contains.$an.doc[0]),shared(),actual(),$_native()];},d:['$','Tuple','$m','contains']};};tuple$.withLeading=function ($io,$$$mptypes){var tuple$=this;return Tuple($io,tuple$,{First$Tuple:$$$mptypes.Other$withLeading,Rest$Tuple:{t:'T',l:[tuple$.$$targs$$.First$Tuple,{t:Anything}]},Element$Tuple:{t:'u',l:[$$$mptypes.Other$withLeading,tuple$.$$targs$$.Element$Tuple]}});};tuple$.withLeading.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'T',l:[{$t:'Other$withLeading'},{$t:'First$Tuple'}]},$ps:[{$nm:'element',$mt:'prm',$t:'Other$withLeading',$an:function(){return[doc("The first element of the resulting tuple.")];}}],$cont:Tuple,$tp:{Other$withLeading:{}},$an:function(){return[doc($CCMM$['ceylon.language'].Tuple.$m.withLeading.$an.doc[0]),shared(),actual(),$_native()];},d:['$','Tuple','$m','withLeading']};};})(Tuple.$$.prototype);}
return Tuple;}
ex$.$init$Tuple=$init$Tuple;$init$Tuple();var $if;function ChainedIterator($ip,$iq,$$targs$$,chainedIterator$){$init$ChainedIterator();if(chainedIterator$===undefined)chainedIterator$=new ChainedIterator.$$;
set_type_args(chainedIterator$,$$targs$$);chainedIterator$.$ip_=$ip;chainedIterator$.$iq_=$iq;Iterator({Element$Iterator:{t:'u',l:[$$targs$$.Element$ChainedIterator,$$targs$$.Other$ChainedIterator]}},chainedIterator$);chainedIterator$.$ir_=chainedIterator$.$ip.iterator();chainedIterator$.$prop$get$ir={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:{t:'u',l:['Element$ChainedIterator','Other$ChainedIterator']}}},$cont:ChainedIterator,$an:function(){return[variable()];},d:['$','ChainedIterator','$at','iter$2p4fla']};}};chainedIterator$.$prop$get$ir.get=function(){return $ir};chainedIterator$.$is_=true;chainedIterator$.$prop$get$is={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:ChainedIterator,$an:function(){return[variable()];},d:['$','ChainedIterator','$at','more$5ang2r']};}};chainedIterator$.$prop$get$is.get=function(){return $is};return chainedIterator$;}
ChainedIterator.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[{$nm:'first',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Element$ChainedIterator'}},$an:function(){return[];}},{$nm:'second',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Other$ChainedIterator'}},$an:function(){return[];}}],$tp:{Element$ChainedIterator:{'var':'out'},Other$ChainedIterator:{'var':'out'}},satisfies:[{t:Iterator,a:{Element$Iterator:{t:'u',l:['Element$ChainedIterator','Other$ChainedIterator']}}}],$an:function(){return[doc($CCMM$['ceylon.language'].ChainedIterator.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Iterable().$$.prototype.chain)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),by(["Enrique Zamudio"].reifyCeylonType({t:$_String}))];},d:['$','ChainedIterator']};};function $init$ChainedIterator(){if(ChainedIterator.$$===undefined){initTypeProto(ChainedIterator,'ceylon.language::ChainedIterator',Basic,$init$Iterator());
(function(chainedIterator$){atr$(chainedIterator$,'$ir',function(){return this.$ir_;},function($it){return this.$ir_=$it;},function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:{t:'u',l:['Element$ChainedIterator','Other$ChainedIterator']}}},$cont:ChainedIterator,$an:function(){return[variable()];},d:['$','ChainedIterator','$at','iter$2p4fla']};});atr$(chainedIterator$,'$is',function(){return this.$is_;},function($iu){return this.$is_=$iu;},function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:ChainedIterator,$an:function(){return[variable()];},d:['$','ChainedIterator','$at','more$5ang2r']};});chainedIterator$.next=function next(){var chainedIterator$=this;var $iv=chainedIterator$.$ir.next();function set$iv($iw){return $iv=$iw;};var $ix;if(is$(($ix=$iv),{t:Finished})){if(chainedIterator$.$is){chainedIterator$.$ir=chainedIterator$.$iq.iterator();chainedIterator$.$is=false;$iv=chainedIterator$.$ir.next();}}return $iv;};chainedIterator$.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$ChainedIterator','Other$ChainedIterator',{t:Finished}]},$ps:[],$cont:ChainedIterator,$an:function(){return[shared(),actual()];},d:['$','ChainedIterator','$m','next']};};atr$(chainedIterator$,'$ip',function(){return this.$ip_;},undefined,function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Element$ChainedIterator'}},$cont:ChainedIterator,d:['$','ChainedIterator','$at','first$4h62ti']};});atr$(chainedIterator$,'$iq',function(){return this.$iq_;},undefined,function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Other$ChainedIterator'}},$cont:ChainedIterator,d:['$','ChainedIterator','$at','second$9dpb6y']};});})(ChainedIterator.$$.prototype);}
return ChainedIterator;}
ex$.$init$ChainedIterator=$init$ChainedIterator;$init$ChainedIterator();function Entry(key,item,$$targs$$,entry$){$init$Entry();if(entry$===undefined)entry$=new Entry.$$;
set_type_args(entry$,$$targs$$);entry$.key_=key;entry$.item_=item;$_Object(entry$);entry$.$prop$getKey={$crtmm$:function(){return{mod:$CCMM$,$t:'Key$Entry',$cont:Entry,$an:function(){return[doc("The key used to access the entry."),shared()];},d:['$','Entry','$at','key']};}};entry$.$prop$getKey.get=function(){return key};entry$.$prop$getItem={$crtmm$:function(){return{mod:$CCMM$,$t:'Item$Entry',$cont:Entry,$an:function(){return[doc("The value associated with the key."),shared()];},d:['$','Entry','$at','item']};}};entry$.$prop$getItem.get=function(){return item};entry$.$prop$getPair={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'T',l:[{$t:'Key$Entry'},{$t:'Item$Entry'}]},$cont:Entry,$an:function(){return[doc($CCMM$['ceylon.language'].Entry.$at.pair.$an.doc[0]),shared()];},d:['$','Entry','$at','pair']};}};entry$.$prop$getPair.get=function(){return pair};entry$.$prop$getString={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Entry,$an:function(){return[doc($CCMM$['ceylon.language'].Entry.$at.string.$an.doc[0]),shared(),actual()];},d:['$','Entry','$at','string']};}};entry$.$prop$getString.get=function(){return string};return entry$;}
Entry.$crtmm$=function(){return{mod:$CCMM$,'super':{t:$_Object},$ps:[{$nm:'key',$mt:'prm',$t:'Key$Entry',$an:function(){return[doc("The key used to access the entry."),shared()];}},{$nm:'item',$mt:'prm',$t:'Item$Entry',$an:function(){return[doc("The value associated with the key."),shared()];}}],$tp:{Key$Entry:{'var':'out','satisfies':[{t:$_Object}]},Item$Entry:{'var':'out','satisfies':[{t:$_Object}]}},$an:function(){return[doc($CCMM$['ceylon.language'].Entry.$an.doc[0]),by(["Gavin"].reifyCeylonType({t:$_String})),shared(),$_final()];},d:['$','Entry']};};
ex$.Entry=Entry;function $init$Entry(){if(Entry.$$===undefined){initTypeProto(Entry,'ceylon.language::Entry',$init$$_Object());
(function(entry$){atr$(entry$,'key',function(){return this.key_;},undefined,function(){return{mod:$CCMM$,$t:'Key$Entry',$cont:Entry,$an:function(){return[doc("The key used to access the entry."),shared()];},d:['$','Entry','$at','key']};});atr$(entry$,'item',function(){return this.item_;},undefined,function(){return{mod:$CCMM$,$t:'Item$Entry',$cont:Entry,$an:function(){return[doc("The value associated with the key."),shared()];},d:['$','Entry','$at','item']};});atr$(entry$,'pair',function(){var entry$=this;return tpl$([entry$.key,entry$.item],{t:'T',l:[entry$.$$targs$$.Key$Entry,entry$.$$targs$$.Item$Entry]});},undefined,function(){return{mod:$CCMM$,$t:{t:'T',l:[{$t:'Key$Entry'},{$t:'Item$Entry'}]},$cont:Entry,$an:function(){return[doc($CCMM$['ceylon.language'].Entry.$at.pair.$an.doc[0]),shared()];},d:['$','Entry','$at','pair']};});entry$.equals=function equals($iy){var entry$=this;var $iz;if(is$(($iz=$iy),{t:Entry,a:{Key$Entry:{t:$_Object},Item$Entry:{t:$_Object}}})){return (entry$.key.equals($iz.key)&&entry$.item.equals($iz.item));}else {return false;}};entry$.equals.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'that',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:Entry,$an:function(){return[doc($CCMM$['ceylon.language'].Entry.$m.equals.$an.doc[0]),shared(),actual()];},d:['$','Entry','$m','equals']};};atr$(entry$,'hash',function(){var entry$=this;return (31).plus(entry$.key.hash).times(31).plus(entry$.item.hash);},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Entry,$an:function(){return[shared(),actual()];},d:['$','Entry','$at','hash']};});atr$(entry$,'string',function(){var entry$=this;return "".plus(entry$.key.string).plus("->").plus(entry$.item.string).plus("");},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Entry,$an:function(){return[doc($CCMM$['ceylon.language'].Entry.$at.string.$an.doc[0]),shared(),actual()];},d:['$','Entry','$at','string']};});})(Entry.$$.prototype);}
return Entry;}
ex$.$init$Entry=$init$Entry;$init$Entry();function Comparable($$targs$$,comparable$){set_type_args(comparable$,$$targs$$);}
Comparable.$crtmm$=function(){return{mod:$CCMM$,$tp:{Other$Comparable:{'var':'in','satisfies':[{t:Comparable,a:{Other$Comparable:'Other$Comparable'}}]}},of:['Other$Comparable'],$an:function(){return[doc($CCMM$['ceylon.language'].Comparable.$an.doc[0]),by(["Gavin"].reifyCeylonType({t:$_String})),shared()];},d:['$','Comparable']};};
ex$.Comparable=Comparable;function $init$Comparable(){if(Comparable.$$===undefined){initTypeProtoI(Comparable,'ceylon.language::Comparable');
(function(comparable$){comparable$.compare={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Comparison},$ps:[{$nm:'other',$mt:'prm',$t:'Other$Comparable',$an:function(){return[];}}],$cont:Comparable,$an:function(){return[doc($CCMM$['ceylon.language'].Comparable.$m.compare.$an.doc[0]),see("equals"),shared(),formal()];},d:['$','Comparable','$m','compare']};}};comparable$.largerThan=function ($j0){var comparable$=this;return (comparable$.compare($j0)===getLarger());};comparable$.largerThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'other',$mt:'prm',$t:'Other$Comparable',$an:function(){return[];}}],$cont:Comparable,$an:function(){return[doc($CCMM$['ceylon.language'].Comparable.$m.largerThan.$an.doc[0]),shared(),$_default()];},d:['$','Comparable','$m','largerThan']};};comparable$.smallerThan=function ($j1){var comparable$=this;return (comparable$.compare($j1)===getSmaller());};comparable$.smallerThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'other',$mt:'prm',$t:'Other$Comparable',$an:function(){return[];}}],$cont:Comparable,$an:function(){return[doc($CCMM$['ceylon.language'].Comparable.$m.smallerThan.$an.doc[0]),shared(),$_default()];},d:['$','Comparable','$m','smallerThan']};};comparable$.notSmallerThan=function ($j2){var comparable$=this;return !(comparable$.compare($j2)===getSmaller());};comparable$.notSmallerThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'other',$mt:'prm',$t:'Other$Comparable',$an:function(){return[];}}],$cont:Comparable,$an:function(){return[doc($CCMM$['ceylon.language'].Comparable.$m.notSmallerThan.$an.doc[0]),shared(),$_default()];},d:['$','Comparable','$m','notSmallerThan']};};comparable$.notLargerThan=function ($j3){var comparable$=this;return !(comparable$.compare($j3)===getLarger());};comparable$.notLargerThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'other',$mt:'prm',$t:'Other$Comparable',$an:function(){return[];}}],$cont:Comparable,$an:function(){return[doc($CCMM$['ceylon.language'].Comparable.$m.notLargerThan.$an.doc[0]),shared(),$_default()];},d:['$','Comparable','$m','notLargerThan']};};})(Comparable.$$.prototype);}
return Comparable;}
ex$.$init$Comparable=$init$Comparable;$init$Comparable();function Invertable($$targs$$,invertable$){Summable({Other$Summable:$$targs$$.Other$Invertable},invertable$);set_type_args(invertable$,$$targs$$);}
Invertable.$crtmm$=function(){return{mod:$CCMM$,$tp:{Other$Invertable:{'satisfies':[{t:Invertable,a:{Other$Invertable:'Other$Invertable'}}]}},satisfies:[{t:Summable,a:{Other$Summable:'Other$Invertable'}}],of:['Other$Invertable'],$an:function(){return[doc($CCMM$['ceylon.language'].Invertable.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Integer),$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Float)].reifyCeylonType({t:ClassDeclaration$meta$declaration})),by(["Gavin"].reifyCeylonType({t:$_String})),shared()];},d:['$','Invertable']};};
ex$.Invertable=Invertable;function $init$Invertable(){if(Invertable.$$===undefined){initTypeProtoI(Invertable,'ceylon.language::Invertable',$init$Summable());
(function(invertable$){invertable$.$prop$getNegated={$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Invertable',$cont:Invertable,$an:function(){return[doc("The additive inverse of this value."),shared(),formal()];},d:['$','Invertable','$at','negated']};}};invertable$.minus=function ($j4){var invertable$=this;return invertable$.plus($j4.negated);};invertable$.minus.$crtmm$=function(){return{mod:$CCMM$,$t:'Other$Invertable',$ps:[{$nm:'other',$mt:'prm',$t:'Other$Invertable',$an:function(){return[];}}],$cont:Invertable,$an:function(){return[doc($CCMM$['ceylon.language'].Invertable.$m.minus.$an.doc[0]),shared(),$_default()];},d:['$','Invertable','$m','minus']};};})(Invertable.$$.prototype);}
return Invertable;}
ex$.$init$Invertable=$init$Invertable;$init$Invertable();function Summable($$targs$$,summable$){set_type_args(summable$,$$targs$$);}
Summable.$crtmm$=function(){return{mod:$CCMM$,$tp:{Other$Summable:{'satisfies':[{t:Summable,a:{Other$Summable:'Other$Summable'}}]}},of:['Other$Summable'],$an:function(){return[doc($CCMM$['ceylon.language'].Summable.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$_String),$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Numeric)].reifyCeylonType({t:'u',l:[{t:ClassDeclaration$meta$declaration},{t:InterfaceDeclaration$meta$declaration}]})),by(["Gavin"].reifyCeylonType({t:$_String})),shared()];},d:['$','Summable']};};
ex$.Summable=Summable;function $init$Summable(){if(Summable.$$===undefined){initTypeProtoI(Summable,'ceylon.language::Summable');
(function(summable$){summable$.plus={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Summable',$ps:[{$nm:'other',$mt:'prm',$t:'Other$Summable',$an:function(){return[];}}],$cont:Summable,$an:function(){return[doc($CCMM$['ceylon.language'].Summable.$m.plus.$an.doc[0]),shared(),formal()];},d:['$','Summable','$m','plus']};}};})(Summable.$$.prototype);}
return Summable;}
ex$.$init$Summable=$init$Summable;$init$Summable();function Ordinal($$targs$$,ordinal$){set_type_args(ordinal$,$$targs$$);}
Ordinal.$crtmm$=function(){return{mod:$CCMM$,$tp:{Other$Ordinal:{'var':'out','satisfies':[{t:Ordinal,a:{Other$Ordinal:'Other$Ordinal'}}]}},of:['Other$Ordinal'],$an:function(){return[doc($CCMM$['ceylon.language'].Ordinal.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Character),$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Integer),$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Integral),$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Enumerable),$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Range)].reifyCeylonType({t:'u',l:[{t:ClassDeclaration$meta$declaration},{t:InterfaceDeclaration$meta$declaration}]})),by(["Gavin"].reifyCeylonType({t:$_String})),shared()];},d:['$','Ordinal']};};
ex$.Ordinal=Ordinal;function $init$Ordinal(){if(Ordinal.$$===undefined){initTypeProtoI(Ordinal,'ceylon.language::Ordinal');
(function(ordinal$){ordinal$.$prop$getSuccessor={$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Ordinal',$cont:Ordinal,$an:function(){return[doc("The successor of this value."),shared(),formal()];},d:['$','Ordinal','$at','successor']};}};ordinal$.$prop$getPredecessor={$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Ordinal',$cont:Ordinal,$an:function(){return[doc("The predecessor of this value."),shared(),formal()];},d:['$','Ordinal','$at','predecessor']};}};})(Ordinal.$$.prototype);}
return Ordinal;}
ex$.$init$Ordinal=$init$Ordinal;$init$Ordinal();function Enumerable($$targs$$,enumerable$){Ordinal({Other$Ordinal:$$targs$$.Other$Enumerable},enumerable$);set_type_args(enumerable$,$$targs$$);enumerable$.$prop$getSuccessor={$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Enumerable',$cont:Enumerable,$an:function(){return[shared(),actual(),$_default()];},d:['$','Enumerable','$at','successor']};}};enumerable$.$prop$getSuccessor.get=function(){return successor};enumerable$.$prop$getPredecessor={$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Enumerable',$cont:Enumerable,$an:function(){return[shared(),actual(),$_default()];},d:['$','Enumerable','$at','predecessor']};}};enumerable$.$prop$getPredecessor.get=function(){return predecessor};}
Enumerable.$crtmm$=function(){return{mod:$CCMM$,$tp:{Other$Enumerable:{'var':'out','satisfies':[{t:Enumerable,a:{Other$Enumerable:'Other$Enumerable'}}]}},satisfies:[{t:Ordinal,a:{Other$Ordinal:'Other$Enumerable'}}],of:['Other$Enumerable'],$an:function(){return[doc($CCMM$['ceylon.language'].Enumerable.$an.doc[0]),shared()];},d:['$','Enumerable']};};
ex$.Enumerable=Enumerable;function $init$Enumerable(){if(Enumerable.$$===undefined){initTypeProtoI(Enumerable,'ceylon.language::Enumerable',$init$Ordinal());
(function(enumerable$){enumerable$.$prop$getIntegerValue={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Enumerable,$an:function(){return[doc($CCMM$['ceylon.language'].Enumerable.$at.integerValue.$an.doc[0]),shared(),formal()];},d:['$','Enumerable','$at','integerValue']};}};enumerable$.neighbour={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Enumerable',$ps:[{$nm:'offset',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Enumerable,$an:function(){return[doc($CCMM$['ceylon.language'].Enumerable.$m.neighbour.$an.doc[0]),shared(),formal()];},d:['$','Enumerable','$m','neighbour']};}};atr$(enumerable$,'successor',function(){var enumerable$=this;return enumerable$.neighbour(1);},undefined,function(){return{mod:$CCMM$,$t:'Other$Enumerable',$cont:Enumerable,$an:function(){return[shared(),actual(),$_default()];},d:['$','Enumerable','$at','successor']};});atr$(enumerable$,'predecessor',function(){var enumerable$=this;return enumerable$.neighbour((-1));},undefined,function(){return{mod:$CCMM$,$t:'Other$Enumerable',$cont:Enumerable,$an:function(){return[shared(),actual(),$_default()];},d:['$','Enumerable','$at','predecessor']};});})(Enumerable.$$.prototype);}
return Enumerable;}
ex$.$init$Enumerable=$init$Enumerable;$init$Enumerable();function Numeric($$targs$$,numeric$){Invertable({Other$Invertable:$$targs$$.Other$Numeric},numeric$);set_type_args(numeric$,$$targs$$);}
Numeric.$crtmm$=function(){return{mod:$CCMM$,$tp:{Other$Numeric:{'satisfies':[{t:Numeric,a:{Other$Numeric:'Other$Numeric'}}]}},satisfies:[{t:Invertable,a:{Other$Invertable:'Other$Numeric'}}],of:['Other$Numeric'],$an:function(){return[doc($CCMM$['ceylon.language'].Numeric.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$_Number)].reifyCeylonType({t:InterfaceDeclaration$meta$declaration})),by(["Gavin"].reifyCeylonType({t:$_String})),shared()];},d:['$','Numeric']};};
ex$.Numeric=Numeric;function $init$Numeric(){if(Numeric.$$===undefined){initTypeProtoI(Numeric,'ceylon.language::Numeric',$init$Invertable());
(function(numeric$){numeric$.times={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Numeric',$ps:[{$nm:'other',$mt:'prm',$t:'Other$Numeric',$an:function(){return[];}}],$cont:Numeric,$an:function(){return[doc("The product of this number and the given number."),shared(),formal()];},d:['$','Numeric','$m','times']};}};numeric$.divided={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Numeric',$ps:[{$nm:'other',$mt:'prm',$t:'Other$Numeric',$an:function(){return[];}}],$cont:Numeric,$an:function(){return[doc($CCMM$['ceylon.language'].Numeric.$m.divided.$an.doc[0]),see("Integral"),shared(),formal()];},d:['$','Numeric','$m','divided']};}};})(Numeric.$$.prototype);}
return Numeric;}
ex$.$init$Numeric=$init$Numeric;$init$Numeric();function Exponentiable($$targs$$,exponentiable$){Numeric({Other$Numeric:$$targs$$.This$Exponentiable},exponentiable$);set_type_args(exponentiable$,$$targs$$);}
Exponentiable.$crtmm$=function(){return{mod:$CCMM$,$tp:{This$Exponentiable:{'satisfies':[{t:Exponentiable,a:{Other$Exponentiable:'Other$Exponentiable',This$Exponentiable:'This$Exponentiable'}}]},Other$Exponentiable:{'satisfies':[{t:Numeric,a:{Other$Numeric:'Other$Exponentiable'}}]}},satisfies:[{t:Numeric,a:{Other$Numeric:'This$Exponentiable'}}],of:['This$Exponentiable'],$an:function(){return[doc($CCMM$['ceylon.language'].Exponentiable.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Integer),$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Float)].reifyCeylonType({t:ClassDeclaration$meta$declaration})),shared()];},d:['$','Exponentiable']};};
ex$.Exponentiable=Exponentiable;function $init$Exponentiable(){if(Exponentiable.$$===undefined){initTypeProtoI(Exponentiable,'ceylon.language::Exponentiable',$init$Numeric());
(function(exponentiable$){exponentiable$.power={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'This$Exponentiable',$ps:[{$nm:'other',$mt:'prm',$t:'Other$Exponentiable',$an:function(){return[];}}],$cont:Exponentiable,$an:function(){return[doc("The result of raising this number to the given power."),shared(),formal()];},d:['$','Exponentiable','$m','power']};}};})(Exponentiable.$$.prototype);}
return Exponentiable;}
ex$.$init$Exponentiable=$init$Exponentiable;$init$Exponentiable();function Integral($$targs$$,integral$){$_Number({Other$Number:$$targs$$.Other$Integral},integral$);Enumerable({Other$Enumerable:$$targs$$.Other$Integral},integral$);set_type_args(integral$,$$targs$$);}
Integral.$crtmm$=function(){return{mod:$CCMM$,$tp:{Other$Integral:{'satisfies':[{t:Integral,a:{Other$Integral:'Other$Integral'}}]}},satisfies:[{t:$_Number,a:{Other$Number:'Other$Integral'}},{t:Enumerable,a:{Other$Enumerable:'Other$Integral'}}],of:['Other$Integral'],$an:function(){return[doc($CCMM$['ceylon.language'].Integral.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Integer)].reifyCeylonType({t:ClassDeclaration$meta$declaration})),by(["Gavin"].reifyCeylonType({t:$_String})),shared()];},d:['$','Integral']};};
ex$.Integral=Integral;function $init$Integral(){if(Integral.$$===undefined){initTypeProtoI(Integral,'ceylon.language::Integral',$init$$_Number(),$init$Enumerable());
(function(integral$){integral$.remainder={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Integral',$ps:[{$nm:'other',$mt:'prm',$t:'Other$Integral',$an:function(){return[];}}],$cont:Integral,$an:function(){return[doc($CCMM$['ceylon.language'].Integral.$m.remainder.$an.doc[0]),see("Numeric.divided"),shared(),formal()];},d:['$','Integral','$m','remainder']};}};integral$.$prop$getZero={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:Integral,$an:function(){return[doc("Determine if the number is the additive identity."),shared(),formal()];},d:['$','Integral','$at','zero']};}};integral$.$prop$getUnit={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:Integral,$an:function(){return[doc($CCMM$['ceylon.language'].Integral.$at.unit.$an.doc[0]),shared(),formal()];},d:['$','Integral','$at','unit']};}};integral$.divides=function ($j5){var integral$=this;return $j5.remainder(integral$).zero;};integral$.divides.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'other',$mt:'prm',$t:'Other$Integral',$an:function(){return[];}}],$cont:Integral,$an:function(){return[doc($CCMM$['ceylon.language'].Integral.$m.divides.$an.doc[0]),shared()];},d:['$','Integral','$m','divides']};};})(Integral.$$.prototype);}
return Integral;}
ex$.$init$Integral=$init$Integral;$init$Integral();function Scalable($$targs$$,scalable$){set_type_args(scalable$,$$targs$$);}
Scalable.$crtmm$=function(){return{mod:$CCMM$,$tp:{Scale$Scalable:{'var':'in','satisfies':[{t:Numeric,a:{Other$Numeric:'Scale$Scalable'}}]},Value$Scalable:{'var':'out','satisfies':[{t:Scalable,a:{Scale$Scalable:'Scale$Scalable',Value$Scalable:'Value$Scalable'}}]}},of:['Value$Scalable'],$an:function(){return[doc($CCMM$['ceylon.language'].Scalable.$an.doc[0]),by(["Gavin"].reifyCeylonType({t:$_String})),shared()];},d:['$','Scalable']};};
ex$.Scalable=Scalable;function $init$Scalable(){if(Scalable.$$===undefined){initTypeProtoI(Scalable,'ceylon.language::Scalable');
(function(scalable$){scalable$.scale={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Value$Scalable',$ps:[{$nm:'scalar',$mt:'prm',$t:'Scale$Scalable',$an:function(){return[];}}],$cont:Scalable,$an:function(){return[doc("Scale this value by the given scale factor."),shared(),formal()];},d:['$','Scalable','$m','scale']};}};})(Scalable.$$.prototype);}
return Scalable;}
ex$.$init$Scalable=$init$Scalable;$init$Scalable();function OverflowException(overflowException$){$init$OverflowException();if(overflowException$===undefined)overflowException$=new OverflowException.$$;
Exception("Numeric overflow",null,overflowException$);return overflowException$;}
OverflowException.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Exception},$ps:[],$an:function(){return[doc($CCMM$['ceylon.language'].OverflowException.$an.doc[0]),shared()];},d:['$','OverflowException']};};
ex$.OverflowException=OverflowException;function $init$OverflowException(){if(OverflowException.$$===undefined){initTypeProto(OverflowException,'ceylon.language::OverflowException',$init$Exception());
}
return OverflowException;}
ex$.$init$OverflowException=$init$OverflowException;$init$OverflowException();function InitializationError($j6,initializationError$){$init$InitializationError();if(initializationError$===undefined)initializationError$=new InitializationError.$$;
initializationError$.$j6_=$j6;AssertionError(initializationError$.$j6,initializationError$);return initializationError$;}
InitializationError.$crtmm$=function(){return{mod:$CCMM$,'super':{t:AssertionError},$ps:[{$nm:'description',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$an:function(){return[doc($CCMM$['ceylon.language'].InitializationError.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),late)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared()];},d:['$','InitializationError']};};
ex$.InitializationError=InitializationError;function $init$InitializationError(){if(InitializationError.$$===undefined){initTypeProto(InitializationError,'ceylon.language::InitializationError',$init$AssertionError());
(function(initializationError$){atr$(initializationError$,'$j6',function(){return this.$j6_;},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:InitializationError,d:['$','InitializationError','$at','description$lsghss']};});})(InitializationError.$$.prototype);}
return InitializationError;}
ex$.$init$InitializationError=$init$InitializationError;$init$InitializationError();function Resource(resource$){resource$.textContent$defs$encoding=function($j7){return "UTF-8";};resource$.$prop$getString={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Resource,$an:function(){return[shared(),actual()];},d:['$','Resource','$at','string']};}};resource$.$prop$getString.get=function(){return string};}
Resource.$crtmm$=function(){return{mod:$CCMM$,$an:function(){return[doc($CCMM$['ceylon.language'].Resource.$an.doc[0]),by(["Enrique Zamudio"].reifyCeylonType({t:$_String})),shared()];},d:['$','Resource']};};
ex$.Resource=Resource;function $init$Resource(){if(Resource.$$===undefined){initTypeProtoI(Resource,'ceylon.language::Resource');
(function(resource$){atr$(resource$,'name',function(){var resource$=this;var $j8=resource$.uri.lastOccurrence(Character(47,true));$prop$get$j8={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},$cont:resource$.$prop$getName,d:['$','Resource','$at','name','$at','pos$7gdnjs']};}};$prop$get$j8.get=function(){return $j8};var $j9;if(($j9=$j8)!==null){return resource$.uri.spanFrom($j9.plus(1));}return resource$.uri;},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Resource,$an:function(){return[doc("The name of the resource; usually the filename."),shared(),$_default()];},d:['$','Resource','$at','name']};});resource$.$prop$getSize={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Resource,$an:function(){return[doc("The size of the resource, in bytes."),shared(),formal()];},d:['$','Resource','$at','size']};}};resource$.$prop$getUri={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Resource,$an:function(){return[doc("The full path to the resource."),shared(),formal()];},d:['$','Resource','$at','uri']};}};resource$.textContent={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_String},$ps:[{$nm:'encoding',$mt:'prm',$def:1,$t:{t:$_String},$an:function(){return[];}}],$cont:Resource,$an:function(){return[doc($CCMM$['ceylon.language'].Resource.$m.textContent.$an.doc[0]),shared(),formal()];},d:['$','Resource','$m','textContent']};}};atr$(resource$,'string',function(){var resource$=this;return "Resource[".plus(resource$.uri).plus("]");},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Resource,$an:function(){return[shared(),actual()];},d:['$','Resource','$at','string']};});})(Resource.$$.prototype);}
return Resource;}
ex$.$init$Resource=$init$Resource;$init$Resource();
//#Number
function Set($$targs$$,set$){Collection({Element$Collection:$$targs$$.Element$Set},set$);set_type_args(set$,$$targs$$);}
Set.$crtmm$=function(){return{mod:$CCMM$,$tp:{Element$Set:{'var':'out','satisfies':[{t:$_Object}]}},satisfies:[{t:Collection,a:{Element$Collection:'Element$Set'}}],$an:function(){return[doc($CCMM$['ceylon.language'].Set.$an.doc[0]),shared()];},d:['$','Set']};};
ex$.Set=Set;function $init$Set(){if(Set.$$===undefined){initTypeProtoI(Set,'ceylon.language::Set',$init$Collection());
(function(set$){set$.contains=function ($ja){var set$=this;return set$.getT$all()['ceylon.language::Collection'].$$.prototype.contains.call(this,$ja);};set$.contains.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'element',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:Set,$an:function(){return[doc($CCMM$['ceylon.language'].Set.$m.contains.$an.doc[0]),shared(),actual(),$_default()];},d:['$','Set','$m','contains']};};set$.superset=function superset($jb){var set$=this;var $jd;for(var $jc=$jb.iterator();($jd=$jc.next())!==getFinished();){if(!set$.contains($jd)){return false;}}
if(getFinished()===$jd){return true;}};set$.superset.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'set',$mt:'prm',$t:{t:Set,a:{Element$Set:{t:$_Object}}},$an:function(){return[];}}],$cont:Set,$an:function(){return[doc($CCMM$['ceylon.language'].Set.$m.superset.$an.doc[0]),shared(),$_default()];},d:['$','Set','$m','superset']};};set$.subset=function subset($je){var set$=this;var $jg;for(var $jf=set$.iterator();($jg=$jf.next())!==getFinished();){if(!$je.contains($jg)){return false;}}
if(getFinished()===$jg){return true;}};set$.subset.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'set',$mt:'prm',$t:{t:Set,a:{Element$Set:{t:$_Object}}},$an:function(){return[];}}],$cont:Set,$an:function(){return[doc($CCMM$['ceylon.language'].Set.$m.subset.$an.doc[0]),shared(),$_default()];},d:['$','Set','$m','subset']};};set$.equals=function equals($jh){var set$=this;var $ji;if(is$(($ji=$jh),{t:Set,a:{Element$Set:{t:$_Object}}})&&($ji.size==set$.size)){var $jk;for(var $jj=set$.iterator();($jk=$jj.next())!==getFinished();){if(!$ji.contains($jk)){return false;}}
if(getFinished()===$jk){return true;}}return false;};set$.equals.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'that',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:Set,$an:function(){return[doc($CCMM$['ceylon.language'].Set.$m.equals.$an.doc[0]),shared(),actual(),$_default()];},d:['$','Set','$m','equals']};};atr$(set$,'hash',function(){var set$=this;var $jl=(0);function set$jl($jm){return $jl=$jm;};$prop$get$jl={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:set$.$prop$getHash,$an:function(){return[variable()];},d:['$','Set','$at','hash','$at','hashCode$1j2i2e']};}};$prop$get$jl.get=function(){return $jl};$prop$get$jl.set=set$jl;if(set$jl.$crtmm$===undefined)set$jl.$crtmm$=$prop$get$jl.$crtmm$;var $jo;for(var $jn=set$.iterator();($jo=$jn.next())!==getFinished();){($jl=$jl.plus($jo.hash));}return $jl;},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Set,$an:function(){return[shared(),actual(),$_default()];},d:['$','Set','$at','hash']};});set$.union={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Set,a:{Element$Set:{t:'u',l:['Element$Set','Other$union']}}},$ps:[{$nm:'set',$mt:'prm',$t:{t:Set,a:{Element$Set:'Other$union'}},$an:function(){return[];}}],$cont:Set,$tp:{Other$union:{'satisfies':[{t:$_Object}]}},$an:function(){return[doc($CCMM$['ceylon.language'].Set.$m.union.$an.doc[0]),shared(),formal()];},d:['$','Set','$m','union']};}};set$.intersection={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Set,a:{Element$Set:{t:'i',l:['Element$Set','Other$intersection']}}},$ps:[{$nm:'set',$mt:'prm',$t:{t:Set,a:{Element$Set:'Other$intersection'}},$an:function(){return[];}}],$cont:Set,$tp:{Other$intersection:{'satisfies':[{t:$_Object}]}},$an:function(){return[doc($CCMM$['ceylon.language'].Set.$m.intersection.$an.doc[0]),shared(),formal()];},d:['$','Set','$m','intersection']};}};set$.exclusiveUnion={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Set,a:{Element$Set:{t:'u',l:['Element$Set','Other$exclusiveUnion']}}},$ps:[{$nm:'set',$mt:'prm',$t:{t:Set,a:{Element$Set:'Other$exclusiveUnion'}},$an:function(){return[];}}],$cont:Set,$tp:{Other$exclusiveUnion:{'satisfies':[{t:$_Object}]}},$an:function(){return[doc($CCMM$['ceylon.language'].Set.$m.exclusiveUnion.$an.doc[0]),shared(),formal()];},d:['$','Set','$m','exclusiveUnion']};}};set$.complement={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Set,a:{Element$Set:'Element$Set'}},$ps:[{$nm:'set',$mt:'prm',$t:{t:Set,a:{Element$Set:'Other$complement'}},$an:function(){return[];}}],$cont:Set,$tp:{Other$complement:{'satisfies':[{t:$_Object}]}},$an:function(){return[doc($CCMM$['ceylon.language'].Set.$m.complement.$an.doc[0]),shared(),formal()];},d:['$','Set','$m','complement']};}};set$.clone={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Set,a:{Element$Set:'Element$Set'}},$ps:[],$cont:Set,$an:function(){return[shared(),actual(),formal()];},d:['$','Set','$m','clone']};}};})(Set.$$.prototype);}
return Set;}
ex$.$init$Set=$init$Set;$init$Set();function $jp($$targs$$){var emptySet$=new $jp.$$;emptySet$.$$targs$$=$$targs$$;$_Object(emptySet$);Set({Element$Set:{t:Nothing}},emptySet$);return emptySet$;
};$jp.$crtmm$=function(){return{mod:$CCMM$,'super':{t:$_Object},satisfies:[{t:Set,a:{Element$Set:{t:Nothing}}}],$an:function(){return[doc("An immutable [[Set]] with no elements."),shared()];},d:['$','emptySet']};};function $init$$jp(){if($jp.$$===undefined){initTypeProto($jp,'ceylon.language::emptySet',$init$$_Object(),$init$Set());
(function(emptySet$){emptySet$.union=function ($jq,$$$mptypes){var emptySet$=this;return $jq;};emptySet$.union.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Set,a:{Element$Set:'Other$union'}},$ps:[{$nm:'set',$mt:'prm',$t:{t:Set,a:{Element$Set:'Other$union'}},$an:function(){return[];}}],$cont:$jp,$tp:{Other$union:{'satisfies':[{t:$_Object}]}},$an:function(){return[shared(),actual()];},d:['$','emptySet','$m','union']};};emptySet$.intersection=function ($jr,$$$mptypes){var emptySet$=this;return getEmptySet();};emptySet$.intersection.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Set,a:{Element$Set:{t:Nothing}}},$ps:[{$nm:'set',$mt:'prm',$t:{t:Set,a:{Element$Set:'Other$intersection'}},$an:function(){return[];}}],$cont:$jp,$tp:{Other$intersection:{'satisfies':[{t:$_Object}]}},$an:function(){return[shared(),actual()];},d:['$','emptySet','$m','intersection']};};emptySet$.exclusiveUnion=function ($js,$$$mptypes){var emptySet$=this;return $js;};emptySet$.exclusiveUnion.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Set,a:{Element$Set:'Other$exclusiveUnion'}},$ps:[{$nm:'set',$mt:'prm',$t:{t:Set,a:{Element$Set:'Other$exclusiveUnion'}},$an:function(){return[];}}],$cont:$jp,$tp:{Other$exclusiveUnion:{'satisfies':[{t:$_Object}]}},$an:function(){return[shared(),actual()];},d:['$','emptySet','$m','exclusiveUnion']};};emptySet$.complement=function ($jt,$$$mptypes){var emptySet$=this;return getEmptySet();};emptySet$.complement.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Set,a:{Element$Set:{t:Nothing}}},$ps:[{$nm:'set',$mt:'prm',$t:{t:Set,a:{Element$Set:'Other$complement'}},$an:function(){return[];}}],$cont:$jp,$tp:{Other$complement:{'satisfies':[{t:$_Object}]}},$an:function(){return[shared(),actual()];},d:['$','emptySet','$m','complement']};};emptySet$.subset=function ($ju){var emptySet$=this;return true;};emptySet$.superset=function ($jv){var emptySet$=this;return $jv.empty;};emptySet$.clone=function (){var emptySet$=this;return getEmptySet();};emptySet$.iterator=function (){var emptySet$=this;return getEmptyIterator();};atr$(emptySet$,'size',function(){var emptySet$=this;return 0;},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$jp,$an:function(){return[shared(),actual()];},d:['$','emptySet','$at','size']};});atr$(emptySet$,'empty',function(){var emptySet$=this;return true;},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:$jp,$an:function(){return[shared(),actual()];},d:['$','emptySet','$at','empty']};});emptySet$.contains=function ($jw){var emptySet$=this;return false;};emptySet$.containsAny=function ($jx){var emptySet$=this;return false;};emptySet$.containsEvery=function ($jy){var emptySet$=this;return false;};emptySet$.count=function ($jz){return 0;};emptySet$.count.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:$jp,$an:function(){return[shared(),actual()];},d:['$','emptySet','$m','count']};};emptySet$.$_map=function ($k0,$$$mptypes){var emptySet$=this;return getEmptySet();};emptySet$.$_map.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Set,a:{Element$Set:{t:Nothing}}},$ps:[{$nm:'collecting',$mt:'prm',$pt:'f',$t:'Result$map',$an:function(){return[];}}],$cont:$jp,$tp:{Result$map:{}},$an:function(){return[shared(),actual()];},d:['$','emptySet','$m','map']};};emptySet$.$_filter=function ($k1){var emptySet$=this;return getEmptySet();};emptySet$.$_filter.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Set,a:{Element$Set:{t:Nothing}}},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:$jp,$an:function(){return[shared(),actual()];},d:['$','emptySet','$m','filter']};};emptySet$.fold=function ($k2,$k3,$$$mptypes){var emptySet$=this;return $k2;};emptySet$.fold.$crtmm$=function(){return{mod:$CCMM$,$t:'Result$fold',$ps:[{$nm:'initial',$mt:'prm',$t:'Result$fold',$an:function(){return[];}},{$nm:'accumulating',$mt:'prm',$pt:'f',$t:'Result$fold',$an:function(){return[];}}],$cont:$jp,$tp:{Result$fold:{}},$an:function(){return[shared(),actual()];},d:['$','emptySet','$m','fold']};};emptySet$.find=function ($k4){var emptySet$=this;return null;};emptySet$.find.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Null},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:$jp,$an:function(){return[shared(),actual()];},d:['$','emptySet','$m','find']};};emptySet$.collect=function ($k5,$$$mptypes){return getEmpty();};emptySet$.collect.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'collecting',$mt:'prm',$pt:'f',$t:'Result$collect',$an:function(){return[];}}],$cont:$jp,$tp:{Result$collect:{}},$an:function(){return[shared(),actual()];},d:['$','emptySet','$m','collect']};};emptySet$.select=function ($k6){return getEmpty();};emptySet$.select.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:$jp,$an:function(){return[shared(),actual()];},d:['$','emptySet','$m','select']};};emptySet$.any=function ($k7){var emptySet$=this;return false;};emptySet$.any.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:$jp,$an:function(){return[shared(),actual()];},d:['$','emptySet','$m','any']};};emptySet$.$_every=function ($k8){var emptySet$=this;return false;};emptySet$.$_every.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:$jp,$an:function(){return[shared(),actual()];},d:['$','emptySet','$m','every']};};emptySet$.skip=function ($k9){var emptySet$=this;return getEmptySet();};emptySet$.take=function ($ka){var emptySet$=this;return getEmptySet();};emptySet$.by=function ($kb){var emptySet$=this;return getEmptySet();};})($jp.$$.prototype);}
return $jp;}
ex$.$init$$jp=$init$$jp;$init$$jp();var $kc;function getEmptySet(){if($kc===undefined){$kc=$init$$jp()({Element$Set:{t:Nothing}});$kc.$crtmm$=getEmptySet.$crtmm$;}
return $kc;}
ex$.getEmptySet=getEmptySet;getEmptySet.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$jp},$an:function(){return[doc("An immutable [[Set]] with no elements."),shared()];},d:['$','emptySet']};};$prop$getEmptySet={get:getEmptySet,$crtmm$:getEmptySet.$crtmm$};get$jp=getEmptySet;$prop$get$jp=getEmptySet;ex$.$prop$getEmptySet=$prop$getEmptySet;function Range(first,last,$$targs$$,range$){$init$Range();if(range$===undefined)range$=new Range.$$;
set_type_args(range$,$$targs$$);range$.first_=first;range$.last_=last;$_Object(range$);Sequence({Element$Sequence:$$targs$$.Element$Range},range$);range$.$prop$getFirst={$crtmm$:function(){return{mod:$CCMM$,$t:'Element$Range',$cont:Range,$an:function(){return[doc("The start of the range."),shared(),actual()];},d:['$','Range','$at','first']};}};range$.$prop$getFirst.get=function(){return first};range$.$prop$getLast={$crtmm$:function(){return{mod:$CCMM$,$t:'Element$Range',$cont:Range,$an:function(){return[doc("The end of the range."),shared(),actual()];},d:['$','Range','$at','last']};}};range$.$prop$getLast.get=function(){return last};range$.$prop$getString={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Range,$an:function(){return[shared(),actual()];},d:['$','Range','$at','string']};}};range$.$prop$getString.get=function(){return string};range$.$prop$getDecreasing={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:Range,$an:function(){return[doc("Determines if the range is decreasing."),shared()];},d:['$','Range','$at','decreasing']};}};range$.$prop$getDecreasing.get=function(){return decreasing};range$.$prop$getLastIndex={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Range,$an:function(){return[doc("The index of the end of the range."),shared(),actual()];},d:['$','Range','$at','lastIndex']};}};range$.$prop$getLastIndex.get=function(){return lastIndex};range$.$prop$getReversed={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Range,a:{Element$Range:'Element$Range'}},$cont:Range,$an:function(){return[doc($CCMM$['ceylon.language'].Range.$at.reversed.$an.doc[0]),shared(),actual()];},d:['$','Range','$at','reversed']};}};range$.$prop$getReversed.get=function(){return reversed};range$.$prop$getCoalesced={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Range,a:{Element$Range:'Element$Range'}},$cont:Range,$an:function(){return[doc($CCMM$['ceylon.language'].Range.$at.coalesced.$an.doc[0]),shared(),actual()];},d:['$','Range','$at','coalesced']};}};range$.$prop$getCoalesced.get=function(){return coalesced};return range$;}
Range.$crtmm$=function(){return{mod:$CCMM$,'super':{t:$_Object},$ps:[{$nm:'first',$mt:'prm',$t:'Element$Range',$an:function(){return[doc("The start of the range."),shared(),actual()];}},{$nm:'last',$mt:'prm',$t:'Element$Range',$an:function(){return[doc("The end of the range."),shared(),actual()];}}],$tp:{Element$Range:{'satisfies':[{t:Ordinal,a:{Other$Ordinal:'Element$Range'}},{t:Comparable,a:{Other$Comparable:'Element$Range'}}]}},satisfies:[{t:Sequence,a:{Element$Sequence:'Element$Range'}}],$an:function(){return[doc($CCMM$['ceylon.language'].Range.$an.doc[0]),by(["Gavin"].reifyCeylonType({t:$_String})),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Ordinal)].reifyCeylonType({t:InterfaceDeclaration$meta$declaration})),shared(),$_final()];},d:['$','Range']};};
ex$.Range=Range;function $init$Range(){if(Range.$$===undefined){initTypeProto(Range,'ceylon.language::Range',$init$$_Object(),$init$Sequence());
(function(range$){atr$(range$,'first',function(){return this.first_;},undefined,function(){return{mod:$CCMM$,$t:'Element$Range',$cont:Range,$an:function(){return[doc("The start of the range."),shared(),actual()];},d:['$','Range','$at','first']};});atr$(range$,'last',function(){return this.last_;},undefined,function(){return{mod:$CCMM$,$t:'Element$Range',$cont:Range,$an:function(){return[doc("The end of the range."),shared(),actual()];},d:['$','Range','$at','last']};});atr$(range$,'string',function(){var range$=this;return range$.first.string.plus("..").plus(range$.last.string);},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Range,$an:function(){return[shared(),actual()];},d:['$','Range','$at','string']};});atr$(range$,'decreasing',function(){var range$=this;return range$.last.compare(range$.first).equals(getSmaller());},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:Range,$an:function(){return[doc("Determines if the range is decreasing."),shared()];},d:['$','Range','$at','decreasing']};});range$.$kd=function ($ke){var range$=this;return ($kf=(range$.decreasing?$ke.predecessor:null),nn$($kf)?$kf:$ke.successor);};range$.$kd.$crtmm$=function(){return{mod:$CCMM$,$t:'Element$Range',$ps:[{$nm:'x',$mt:'prm',$t:'Element$Range',$an:function(){return[];}}],$cont:Range,d:['$','Range','$m','next$dmsvh4']};};atr$(range$,'size',function(){var range$=this;var $kg;var $kh;if(is$(($kg=range$.last),{t:Enumerable,a:{Other$Enumerable:{t:Anything}}})&&is$(($kh=range$.first),{t:Enumerable,a:{Other$Enumerable:{t:Anything}}})){return $kg.integerValue.minus($kh.integerValue).magnitude.plus(1);}else {var $ki=(1);function set$ki($kj){return $ki=$kj;};$prop$get$ki={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:range$.$prop$getSize,$an:function(){return[variable()];},d:['$','Range','$at','size','$at','size$gmox5q']};}};$prop$get$ki.get=function(){return $ki};$prop$get$ki.set=set$ki;if(set$ki.$crtmm$===undefined)set$ki.$crtmm$=$prop$get$ki.$crtmm$;var $kk=range$.first;function set$kk($kl){return $kk=$kl;};$prop$get$kk={$crtmm$:function(){return{mod:$CCMM$,$t:'Element$Range',$cont:range$.$prop$getSize,$an:function(){return[variable()];},d:['$','Range','$at','size','$at','current$auwlye']};}};$prop$get$kk.get=function(){return $kk};$prop$get$kk.set=set$kk;if(set$kk.$crtmm$===undefined)set$kk.$crtmm$=$prop$get$kk.$crtmm$;while((!$kk.equals(range$.last))){($km=$ki,$ki=$km.successor,$km);var $km;$kk=range$.$kd($kk);}return $ki;}},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Range,$an:function(){return[doc("The nonzero number of elements in the range."),shared(),actual()];},d:['$','Range','$at','size']};});range$.longerThan=function longerThan($kn){var range$=this;if(($kn<1)){return true;}else {var $ko;var $kp;if(is$(($ko=range$.last),{t:Enumerable,a:{Other$Enumerable:{t:Anything}}})&&is$(($kp=range$.first),{t:Enumerable,a:{Other$Enumerable:{t:Anything}}})){return (range$.size>$kn);}else {var $kq=(1);function set$kq($kr){return $kq=$kr;};var $ks=range$.first;function set$ks($kt){return $ks=$kt;};while((!$ks.equals(range$.last))){if((($ku=$kq,$kq=$ku.successor,$ku)>$kn)){return true;}var $ku;$ks=range$.$kd($ks);}return false;}}};range$.longerThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Range,$an:function(){return[shared(),actual()];},d:['$','Range','$m','longerThan']};};range$.shorterThan=function shorterThan($kv){var range$=this;if(($kv<=1)){return false;}else {var $kw;var $kx;if(is$(($kw=range$.last),{t:Enumerable,a:{Other$Enumerable:{t:Anything}}})&&is$(($kx=range$.first),{t:Enumerable,a:{Other$Enumerable:{t:Anything}}})){return (range$.size<$kv);}else {var $ky=(1);function set$ky($kz){return $ky=$kz;};var $l0=range$.first;function set$l0($l1){return $l0=$l1;};while((!$l0.equals(range$.last))){if((($l2=$ky,$ky=$l2.successor,$l2)==$kv)){return false;}var $l2;$l0=range$.$kd($l0);}return true;}}};range$.shorterThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Range,$an:function(){return[shared(),actual()];},d:['$','Range','$m','shorterThan']};};atr$(range$,'lastIndex',function(){var range$=this;return range$.size.minus(1);},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Range,$an:function(){return[doc("The index of the end of the range."),shared(),actual()];},d:['$','Range','$at','lastIndex']};});atr$(range$,'rest',function(){var range$=this;if(range$.first.equals(range$.last)){return getEmpty();}else {return Range(range$.$kd(range$.first),range$.last,{Element$Range:range$.$$targs$$.Element$Range});}},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Range'}},$cont:Range,$an:function(){return[doc($CCMM$['ceylon.language'].Range.$at.rest.$an.doc[0]),shared(),actual()];},d:['$','Range','$at','rest']};});atr$(range$,'reversed',function(){var range$=this;return Range(range$.last,range$.first,{Element$Range:range$.$$targs$$.Element$Range});},undefined,function(){return{mod:$CCMM$,$t:{t:Range,a:{Element$Range:'Element$Range'}},$cont:Range,$an:function(){return[doc($CCMM$['ceylon.language'].Range.$at.reversed.$an.doc[0]),shared(),actual()];},d:['$','Range','$at','reversed']};});range$.getFromFirst=function getFromFirst($l3){var range$=this;if(($l3<0)){return null;}else {var $l4;if(is$(($l4=range$.first),{t:Enumerable,a:{Other$Enumerable:range$.$$targs$$.Element$Range}})){var $l5=$l4.neighbour(($l6=(range$.decreasing?(-$l3):null),nn$($l6)?$l6:$l3));var $l6;return (((range$.decreasing&&($l5.compare(range$.last)!==getSmaller()))||(!range$.decreasing&&($l5.compare(range$.last)!==getLarger())))?$l5:null);}else {var $l7=(0);function set$l7($l8){return $l7=$l8;};var $l9=range$.first;function set$l9($la){return $l9=$la;};while(($l7<$l3)){if($l9.equals(range$.last)){return null;}else {($l7=$l7.successor);$l9=range$.$kd($l9);}}return $l9;}}};range$.getFromFirst.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$Range']},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Range,$an:function(){return[doc($CCMM$['ceylon.language'].Range.$m.getFromFirst.$an.doc[0]),shared(),actual()];},d:['$','Range','$m','getFromFirst']};};range$.iterator=function iterator(){var range$=this;var $lb;var $lc;if(is$(($lb=range$.first),{t:Enumerable,a:{Other$Enumerable:range$.$$targs$$.Element$Range}})&&is$(($lc=range$.last),{t:Enumerable,a:{Other$Enumerable:range$.$$targs$$.Element$Range}})){return EnumerableRangeBy($lb,$lc,1,{Element$EnumerableRangeBy:{t:'i',l:[range$.$$targs$$.Element$Range,{t:Enumerable,a:{Other$Enumerable:range$.$$targs$$.Element$Range}}]}}).iterator();}function $ld($$targs$$){var $ld$=new $ld.$$;$ld$.outer$=range$;$ld$.$$targs$$=$$targs$$;Iterator({Element$Iterator:range$.$$targs$$.Element$Range},$ld$);$ld$.$le_=range$.first;$ld$.$prop$get$le={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$Range',{t:Finished}]},$cont:$ld,$an:function(){return[variable()];},d:['$','Range','$m','iterator','$o','iterator$3cbiv4','$at','current$t0h7c4']};}};$ld$.$prop$get$le.get=function(){return $le};return $ld$;
};$ld.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:'Element$Range'}}],d:['$','Range','$m','iterator','$o','iterator$3cbiv4']};};function $init$$ld(){if($ld.$$===undefined){initTypeProto($ld,'ceylon.language::Range.iterator',Basic,$init$Iterator());
(function($ld$){atr$($ld$,'$le',function(){return this.$le_;},function($lf){return this.$le_=$lf;},function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$Range',{t:Finished}]},$cont:$ld,$an:function(){return[variable()];},d:['$','Range','$m','iterator','$o','iterator$3cbiv4','$at','current$t0h7c4']};});$ld$.next=function next(){var $ld$=this;var $lg=$ld$.$le;var $lh;if(!is$(($lh=$ld$.$le),{t:Finished})){if(($li=(range$.decreasing?($lh.compare(range$.last)!==getLarger()):null),nn$($li)?$li:($lh.compare(range$.last)!==getSmaller()))){$ld$.$le=getFinished();}else {$ld$.$le=range$.$kd($lh);}var $li;}return $lg;};$ld$.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$Range',{t:Finished}]},$ps:[],$cont:$ld,$an:function(){return[shared(),actual()];},d:['$','Range','$m','iterator','$o','iterator$3cbiv4','$m','next']};};atr$($ld$,'string',function(){var $ld$=this;return "RangeIterator";},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$ld,$an:function(){return[shared(),actual()];},d:['$','Range','$m','iterator','$o','iterator$3cbiv4','$at','string']};});})($ld.$$.prototype);}
return $ld;}
$init$$ld();var $lj;function get$lj(){if($lj===undefined){$lj=$init$$ld()({Element$Iterator:range$.$$targs$$.Element$Range});$lj.$crtmm$=get$lj.$crtmm$;}
return $lj;}
get$lj.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$ld},$cont:iterator,d:['$','Range','$m','iterator','$o','iterator$3cbiv5']};};$prop$get$lj={get:get$lj,$crtmm$:get$lj.$crtmm$};get$ld=get$lj;$prop$get$ld=get$lj;return get$lj();};range$.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Range'}},$ps:[],$cont:Range,$an:function(){return[doc("An iterator for the elements of the range."),shared(),actual()];},d:['$','Range','$m','iterator']};};range$.by=function by($lk){var range$=this;//assert at Range.ceylon (186:8-187:25)
if(!(($lk>0))) {throw wrapexc(AssertionError("step size must be greater than zero: \'step > 0\' at Range.ceylon (187:15-187:24)"),'186:8-187:25','Range.ceylon'); }
if(($lk==1)){return range$;}else {var $ll;var $lm;if(is$(($ll=range$.first),{t:Enumerable,a:{Other$Enumerable:range$.$$targs$$.Element$Range}})&&is$(($lm=range$.last),{t:Enumerable,a:{Other$Enumerable:range$.$$targs$$.Element$Range}})){return EnumerableRangeBy($ll,$lm,$lk,{Element$EnumerableRangeBy:{t:'i',l:[range$.$$targs$$.Element$Range,{t:Enumerable,a:{Other$Enumerable:range$.$$targs$$.Element$Range}}]}});}else {return range$.getT$all()['ceylon.language::Iterable'].$$.prototype.by.call(this,$lk);}}};range$.by.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:Nothing},Element$Iterable:'Element$Range'}},$ps:[{$nm:'step',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Range,$an:function(){return[shared(),actual()];},d:['$','Range','$m','by']};};range$.shifted=function shifted($ln){var range$=this;if(($ln==0)){return range$;}else {var $lo;var $lp;if(is$(($lo=range$.first),{t:Enumerable,a:{Other$Enumerable:range$.$$targs$$.Element$Range}})&&is$(($lp=range$.last),{t:Enumerable,a:{Other$Enumerable:range$.$$targs$$.Element$Range}})){return Range($lo.neighbour($ln),$lp.neighbour($ln),{Element$Range:range$.$$targs$$.Element$Range});}else {var $lq=range$.first;function set$lq($lr){return $lq=$lr;};var $ls=range$.last;function set$ls($lt){return $ls=$lt;};var $lu=$ln.magnitude;var $lv=$ln.positive;var $lw=(0);function set$lw($lx){return $lw=$lx;};while((($ly=$lw,$lw=$ly.successor,$ly)<$lu)){if($lv){($lz=$lq,$lq=$lz.successor,$lz);var $lz;($m0=$ls,$ls=$m0.successor,$m0);var $m0;}else {($m1=$lq,$lq=$m1.predecessor,$m1);var $m1;($m2=$ls,$ls=$m2.predecessor,$m2);var $m2;}}var $ly;return Range($lq,$ls,{Element$Range:range$.$$targs$$.Element$Range});}}};range$.shifted.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Range,a:{Element$Range:'Element$Range'}},$ps:[{$nm:'shift',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Range,$an:function(){return[doc($CCMM$['ceylon.language'].Range.$m.shifted.$an.doc[0]),shared()];},d:['$','Range','$m','shifted']};};range$.count=function count($m3){var range$=this;var $m4=range$.first;function set$m4($m5){return $m4=$m5;};var $m6=(0);function set$m6($m7){return $m6=$m7;};while(range$.containsElement($m4)){if($m3($m4)){($m8=$m6,$m6=$m8.successor,$m8);var $m8;}$m4=range$.$kd($m4);}return $m6;};range$.count.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:Range,$an:function(){return[shared(),actual()];},d:['$','Range','$m','count']};};range$.contains=function contains($m9){var range$=this;var $ma;if(is$(($ma=$m9),range$.$$targs$$.Element$Range)){return range$.containsElement($ma);}else {return false;}};range$.contains.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'element',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:Range,$an:function(){return[doc("Determines if this range includes the given object."),shared(),actual()];},d:['$','Range','$m','contains']};};range$.occurs=function occurs($mb){var range$=this;var $mc;if(is$(($mc=$mb),range$.$$targs$$.Element$Range)){return range$.containsElement($mc);}else {return false;}};range$.occurs.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'element',$mt:'prm',$t:{t:Anything},$an:function(){return[];}}],$cont:Range,$an:function(){return[doc("Determines if this range includes the given value."),shared(),actual()];},d:['$','Range','$m','occurs']};};range$.containsElement=function ($md){var range$=this;return ($me=(range$.decreasing?(($md.compare(range$.first)!==getLarger())&&($md.compare(range$.last)!==getSmaller())):null),nn$($me)?$me:(($md.compare(range$.first)!==getSmaller())&&($md.compare(range$.last)!==getLarger())));};range$.containsElement.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'x',$mt:'prm',$t:'Element$Range',$an:function(){return[];}}],$cont:Range,$an:function(){return[doc("Determines if the range includes the given value."),shared()];},d:['$','Range','$m','containsElement']};};range$.includes=function includes($mf){var range$=this;var $mg;if(is$(($mg=$mf),{t:Range,a:{Element$Range:range$.$$targs$$.Element$Range}})){return range$.includesRange($mg);}else {return range$.getT$all()['ceylon.language::List'].$$.prototype.includes.call(this,$mf);}};range$.includes.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'sublist',$mt:'prm',$t:{t:List,a:{Element$List:{t:Anything}}},$an:function(){return[];}}],$cont:Range,$an:function(){return[shared(),actual()];},d:['$','Range','$m','includes']};};range$.includesRange=function includesRange($mh){var range$=this;return (((range$.decreasing==$mh.decreasing)&&($mi=$mh.first,$mi.compare(range$.first)!==getSmaller()&&$mi.compare(range$.last)!==getLarger()))&&($mj=$mh.last,$mj.compare(range$.first)!==getSmaller()&&$mj.compare(range$.last)!==getLarger()));};range$.includesRange.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'sublist',$mt:'prm',$t:{t:Range,a:{Element$Range:'Element$Range'}},$an:function(){return[];}}],$cont:Range,$an:function(){return[doc("Determines if this range includes the given range."),shared()];},d:['$','Range','$m','includesRange']};};range$.equals=function equals($mk){var range$=this;var $ml;if(is$(($ml=$mk),{t:Range,a:{Element$Range:{t:$_Object}}})){return ($ml.first.equals(range$.first)&&$ml.last.equals(range$.last));}else {return range$.getT$all()['ceylon.language::List'].$$.prototype.equals.call(this,$mk);}};range$.equals.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'that',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:Range,$an:function(){return[doc($CCMM$['ceylon.language'].Range.$m.equals.$an.doc[0]),shared(),actual()];},d:['$','Range','$m','equals']};};range$.clone=function (){var range$=this;return range$;};range$.clone.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Range,a:{Element$Range:'Element$Range'}},$ps:[],$cont:Range,$an:function(){return[doc($CCMM$['ceylon.language'].Range.$m.clone.$an.doc[0]),shared(),actual()];},d:['$','Range','$m','clone']};};range$.segment=function segment($mm,$mn){var range$=this;if((($mn<=0)||($mm.plus($mn)<0))){return getEmpty();}var $mo;if(is$(($mo=range$.first),{t:Enumerable,a:{Other$Enumerable:range$.$$targs$$.Element$Range}})){var $mp;var $mq;if(range$.decreasing){var $mr=$mo.neighbour((-$mm));if($mr.compare(range$.last).equals(getSmaller())){return getEmpty();}var $ms=$mo.neighbour((-$mm).minus($mn));$mq=($mt=($ms.compare(range$.last).equals(getSmaller())?range$.last:null),nn$($mt)?$mt:$ms);var $mt;$mp=($mu=($mr.compare($mo).equals(getLarger())?$mo:null),nn$($mu)?$mu:$mr);var $mu;}else {var $mv=$mo.neighbour($mm);if($mv.compare(range$.last).equals(getLarger())){return getEmpty();}var $mw=$mo.neighbour($mm.plus($mn).minus(1));$mq=($mx=($mw.compare(range$.last).equals(getLarger())?range$.last:null),nn$($mx)?$mx:$mw);var $mx;$mp=($my=($mv.compare($mo).equals(getSmaller())?$mo:null),nn$($my)?$my:$mv);var $my;}return Range($mp,$mq,{Element$Range:range$.$$targs$$.Element$Range});}else {var $mz=range$.first;function set$mz($n0){return $mz=$n0;};var $n1=(0);function set$n1($n2){return $n1=$n2;};while((($n3=$n1,$n1=$n3.successor,$n3)<$mm)){$mz=range$.$kd($mz);}var $n3;if(((range$.decreasing&&$mz.compare(range$.last).equals(getSmaller()))||(!range$.decreasing&&$mz.compare(range$.last).equals(getLarger())))){return getEmpty();}var $n4=range$.first;function set$n4($n5){return $n4=$n5;};var $n6=(0);function set$n6($n7){return $n6=$n7;};while(((($n8=$n6,$n6=$n8.successor,$n8)<$mm.plus($mn).minus(1))&&((range$.decreasing&&$n4.compare(range$.last).equals(getLarger()))||(!range$.decreasing&&$n4.compare(range$.last).equals(getSmaller()))))){$n4=range$.$kd($n4);}var $n8;return Range($mz,$n4,{Element$Range:range$.$$targs$$.Element$Range});}};range$.segment.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Range,a:{Element$Range:'Element$Range'}},{t:Empty}]},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Range,$an:function(){return[shared(),actual()];},d:['$','Range','$m','segment']};};range$.span=function span($n9,$na){var range$=this;if((($n9<0)&&($na<0))){return getEmpty();}var $nb;if(is$(($nb=range$.first),{t:Enumerable,a:{Other$Enumerable:range$.$$targs$$.Element$Range}})){var $nc;var $nd;if(range$.decreasing){$nc=$nb.neighbour((-$n9));$nd=$nb.neighbour((-$na));}else {$nc=$nb.neighbour($n9);$nd=$nb.neighbour($na);}if((($nc.compare($nb).equals(getSmaller())&&$nd.compare($nb).equals(getSmaller()))||($nc.compare(range$.last).equals(getLarger())&&$nd.compare(range$.last).equals(getLarger())))){return getEmpty();}var $ne;var $nf;if(range$.decreasing){$nf=($ng=($nh=($nd.compare(range$.last).equals(getSmaller())?range$.last:null),nn$($nh)?$nh:($nd.compare($nb).equals(getLarger())?$nb:null)),nn$($ng)?$ng:$nd);var $ng,$nh;$ne=($ni=($nj=($nc.compare(range$.last).equals(getSmaller())?range$.last:null),nn$($nj)?$nj:($nc.compare($nb).equals(getLarger())?$nb:null)),nn$($ni)?$ni:$nc);var $ni,$nj;}else {$nf=($nk=($nl=($nd.compare(range$.last).equals(getLarger())?range$.last:null),nn$($nl)?$nl:($nd.compare($nb).equals(getSmaller())?$nb:null)),nn$($nk)?$nk:$nd);var $nk,$nl;$ne=($nm=($nn=($nc.compare(range$.last).equals(getLarger())?range$.last:null),nn$($nn)?$nn:($nc.compare($nb).equals(getSmaller())?$nb:null)),nn$($nm)?$nm:$nc);var $nm,$nn;}return Range($ne,$nf,{Element$Range:range$.$$targs$$.Element$Range});}else {var $no=range$.first;function set$no($np){return $no=$np;};var $nq=(0);function set$nq($nr){return $nq=$nr;};while((($ns=$nq,$nq=$ns.successor,$ns)<$n9)){$no=range$.$kd($no);}var $ns;var $nt=range$.first;function set$nt($nu){return $nt=$nu;};var $nv=(0);function set$nv($nw){return $nv=$nw;};while((($nx=$nv,$nv=$nx.successor,$nx)<$na)){$nt=range$.$kd($nt);}var $nx;if(($no.compare(range$.last).equals(getLarger())&&$nt.compare(range$.last).equals(getLarger()))){return getEmpty();}var $ny;var $nz;if(range$.decreasing){$nz=($o0=($nt.compare(range$.last).equals(getSmaller())?range$.last:null),nn$($o0)?$o0:$nt);var $o0;$ny=($o1=($no.compare(range$.last).equals(getSmaller())?range$.last:null),nn$($o1)?$o1:$no);var $o1;}else {$nz=($o2=($nt.compare(range$.last).equals(getLarger())?range$.last:null),nn$($o2)?$o2:$nt);var $o2;$ny=($o3=($no.compare(range$.last).equals(getLarger())?range$.last:null),nn$($o3)?$o3:$no);var $o3;}return Range($ny,$nz,{Element$Range:range$.$$targs$$.Element$Range});}};range$.span.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Range,a:{Element$Range:'Element$Range'}},{t:Empty}]},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'to',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Range,$an:function(){return[shared(),actual()];},d:['$','Range','$m','span']};};range$.spanTo=function spanTo($o4){var range$=this;return ($o5=(($o4<0)?getEmpty():null),nn$($o5)?$o5:range$.span(0,$o4));var $o5;};range$.spanTo.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Range,a:{Element$Range:'Element$Range'}},{t:Empty}]},$ps:[{$nm:'to',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Range,$an:function(){return[shared(),actual()];},d:['$','Range','$m','spanTo']};};range$.spanFrom=function spanFrom($o6){var range$=this;return range$.span($o6,range$.size);};range$.spanFrom.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Range,a:{Element$Range:'Element$Range'}},{t:Empty}]},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Range,$an:function(){return[shared(),actual()];},d:['$','Range','$m','spanFrom']};};range$.skip=function skip($o7){var range$=this;if(($o7<=0)){return range$;}var $o8;var $o9;if(is$(($o9=range$.first),{t:Enumerable,a:{Other$Enumerable:range$.$$targs$$.Element$Range}})){$o8=$o9.neighbour(($oa=(range$.decreasing?(-$o7):null),nn$($oa)?$oa:$o7));var $oa;}else {var $ob=(0);function set$ob($oc){return $ob=$oc;};var $od=range$.first;function set$od($oe){return $od=$oe;};while((($of=$ob,$ob=$of.successor,$of)<$o7)){$od=range$.$kd($od);}var $of;$o8=$od;}return ($og=(range$.containsElement($o8)?Range($o8,range$.last,{Element$Range:range$.$$targs$$.Element$Range}):null),nn$($og)?$og:getEmpty());var $og;};range$.skip.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Range,a:{Element$Range:'Element$Range'}},{t:Empty}]},$ps:[{$nm:'skipping',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Range,$an:function(){return[shared(),actual()];},d:['$','Range','$m','skip']};};range$.take=function take($oh){var range$=this;if(($oh<=0)){return getEmpty();}var $oi;var $oj;if(is$(($oj=range$.first),{t:Enumerable,a:{Other$Enumerable:range$.$$targs$$.Element$Range}})){$oi=$oj.neighbour(($ok=(range$.decreasing?(-$oh).plus(1):null),nn$($ok)?$ok:$oh.minus(1)));var $ok;}else {var $ol=(0);function set$ol($om){return $ol=$om;};var $on=range$.first;function set$on($oo){return $on=$oo;};while((($ol=$ol.successor)<$oh)){$on=range$.$kd($on);}$oi=$on;}return ($op=(range$.containsElement($oi)?Range(range$.first,$oi,{Element$Range:range$.$$targs$$.Element$Range}):null),nn$($op)?$op:range$);var $op;};range$.take.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Range,a:{Element$Range:'Element$Range'}},{t:Empty}]},$ps:[{$nm:'taking',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Range,$an:function(){return[shared(),actual()];},d:['$','Range','$m','take']};};atr$(range$,'coalesced',function(){var range$=this;return range$;},undefined,function(){return{mod:$CCMM$,$t:{t:Range,a:{Element$Range:'Element$Range'}},$cont:Range,$an:function(){return[doc($CCMM$['ceylon.language'].Range.$at.coalesced.$an.doc[0]),shared(),actual()];},d:['$','Range','$at','coalesced']};});range$.sequence=function (){var range$=this;return range$;};range$.sequence.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Range,a:{Element$Range:'Element$Range'}},$ps:[],$cont:Range,$an:function(){return[doc("Returns this range."),shared(),actual()];},d:['$','Range','$m','sequence']};};})(Range.$$.prototype);}
return Range;}
ex$.$init$Range=$init$Range;$init$Range();var $kf,$me;function EnumerableRangeBy($oq,$or,$os,$$targs$$,enumerableRangeBy$){$init$EnumerableRangeBy();if(enumerableRangeBy$===undefined)enumerableRangeBy$=new EnumerableRangeBy.$$;
set_type_args(enumerableRangeBy$,$$targs$$);enumerableRangeBy$.$oq_=$oq;enumerableRangeBy$.$or_=$or;enumerableRangeBy$.$os_=$os;Iterable({Absent$Iterable:{t:Nothing},Element$Iterable:$$targs$$.Element$EnumerableRangeBy},enumerableRangeBy$);return enumerableRangeBy$;}
EnumerableRangeBy.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[{$nm:'first',$mt:'prm',$t:'Element$EnumerableRangeBy',$an:function(){return[];}},{$nm:'last',$mt:'prm',$t:'Element$EnumerableRangeBy',$an:function(){return[];}},{$nm:'step',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$tp:{Element$EnumerableRangeBy:{'satisfies':[{t:Comparable,a:{Other$Comparable:'Element$EnumerableRangeBy'}}]}},satisfies:[{t:Iterable,a:{Absent$Iterable:{t:Nothing},Element$Iterable:'Element$EnumerableRangeBy'}}],d:['$','EnumerableRangeBy']};};function $init$EnumerableRangeBy(){if(EnumerableRangeBy.$$===undefined){initTypeProto(EnumerableRangeBy,'ceylon.language::EnumerableRangeBy',Basic,$init$Iterable());
(function(enumerableRangeBy$){enumerableRangeBy$.iterator=function iterator(){var enumerableRangeBy$=this;//assert at Range.ceylon (483:8-484:44)
var $ot;var $ou;if(!(is$(($ot=enumerableRangeBy$.$oq),{t:Enumerable,a:{Other$Enumerable:enumerableRangeBy$.$$targs$$.Element$EnumerableRangeBy}})&&is$(($ou=enumerableRangeBy$.$or),{t:Enumerable,a:{Other$Enumerable:enumerableRangeBy$.$$targs$$.Element$EnumerableRangeBy}}))) {throw wrapexc(AssertionError("Assertion failed: \'is Enumerable<Element> first, \n                is Enumerable<Element> last\' at Range.ceylon (483:15-484:43)"),'483:8-484:44','Range.ceylon'); }
function $ov($$targs$$){var $ov$=new $ov.$$;$ov$.outer$=enumerableRangeBy$;$ov$.$$targs$$=$$targs$$;Iterator({Element$Iterator:enumerableRangeBy$.$$targs$$.Element$EnumerableRangeBy},$ov$);$ov$.$ow_=$ot;$ov$.$prop$get$ow={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'i',l:['Element$EnumerableRangeBy',{t:Enumerable,a:{Other$Enumerable:'Element$EnumerableRangeBy'}}]},$cont:$ov,$an:function(){return[variable()];},d:['$','EnumerableRangeBy','$m','iterator','$o','iterator$adqg2f','$at','current$p03b2b']};}};$ov$.$prop$get$ow.get=function(){return $ow};return $ov$;
};$ov.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:'Element$EnumerableRangeBy'}}],d:['$','EnumerableRangeBy','$m','iterator','$o','iterator$adqg2f']};};function $init$$ov(){if($ov.$$===undefined){initTypeProto($ov,'ceylon.language::EnumerableRangeBy.iterator',Basic,$init$Iterator());
(function($ov$){atr$($ov$,'$ow',function(){return this.$ow_;},function($ox){return this.$ow_=$ox;},function(){return{mod:$CCMM$,$t:{t:'i',l:['Element$EnumerableRangeBy',{t:Enumerable,a:{Other$Enumerable:'Element$EnumerableRangeBy'}}]},$cont:$ov,$an:function(){return[variable()];},d:['$','EnumerableRangeBy','$m','iterator','$o','iterator$adqg2f','$at','current$p03b2b']};});$ov$.next=function next(){var $ov$=this;var $oy=$ov$.$ow;var $oz;if($ou.compare($ot).equals(getSmaller())){if($ov$.$ow.compare($ou).equals(getSmaller())){return getFinished();}$oz=$ov$.$ow.neighbour((-enumerableRangeBy$.$os));}else {if($ov$.$ow.compare($ou).equals(getLarger())){return getFinished();}$oz=$ov$.$ow.neighbour(enumerableRangeBy$.$os);}//assert at Range.ceylon (505:16-505:52)
var $p0;if(!(is$(($p0=$oz),{t:Enumerable,a:{Other$Enumerable:enumerableRangeBy$.$$targs$$.Element$EnumerableRangeBy}}))) {throw wrapexc(AssertionError("Assertion failed: \'is Enumerable<Element> next\' at Range.ceylon (505:23-505:51)"),'505:16-505:52','Range.ceylon'); }
$ov$.$ow=$p0;return $oy;};$ov$.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$EnumerableRangeBy',{t:Finished}]},$ps:[],$cont:$ov,$an:function(){return[shared(),actual()];},d:['$','EnumerableRangeBy','$m','iterator','$o','iterator$adqg2f','$m','next']};};atr$($ov$,'string',function(){var $ov$=this;return "EnumerableRangeByIterator";},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$ov,$an:function(){return[shared(),actual()];},d:['$','EnumerableRangeBy','$m','iterator','$o','iterator$adqg2f','$at','string']};});})($ov.$$.prototype);}
return $ov;}
$init$$ov();var $p1;function get$p1(){if($p1===undefined){$p1=$init$$ov()({Element$Iterator:enumerableRangeBy$.$$targs$$.Element$EnumerableRangeBy});$p1.$crtmm$=get$p1.$crtmm$;}
return $p1;}
get$p1.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$ov},$cont:iterator,d:['$','EnumerableRangeBy','$m','iterator','$o','iterator$adqg2g']};};$prop$get$p1={get:get$p1,$crtmm$:get$p1.$crtmm$};get$ov=get$p1;$prop$get$ov=get$p1;return get$p1();};enumerableRangeBy$.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$EnumerableRangeBy'}},$ps:[],$cont:EnumerableRangeBy,$an:function(){return[shared(),actual()];},d:['$','EnumerableRangeBy','$m','iterator']};};atr$(enumerableRangeBy$,'$oq',function(){return this.$oq_;},undefined,function(){return{mod:$CCMM$,$t:'Element$EnumerableRangeBy',$cont:EnumerableRangeBy,d:['$','EnumerableRangeBy','$at','first$upfu98']};});atr$(enumerableRangeBy$,'$or',function(){return this.$or_;},undefined,function(){return{mod:$CCMM$,$t:'Element$EnumerableRangeBy',$cont:EnumerableRangeBy,d:['$','EnumerableRangeBy','$at','last$uv619y']};});atr$(enumerableRangeBy$,'$os',function(){return this.$os_;},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:EnumerableRangeBy,d:['$','EnumerableRangeBy','$at','step$pqo568']};});})(EnumerableRangeBy.$$.prototype);}
return EnumerableRangeBy;}
ex$.$init$EnumerableRangeBy=$init$EnumerableRangeBy;$init$EnumerableRangeBy();function Singleton($p2,$$targs$$,singleton$){$init$Singleton();if(singleton$===undefined)singleton$=new Singleton.$$;
set_type_args(singleton$,$$targs$$);singleton$.$p2_=$p2;$_Object(singleton$);Sequence({Element$Sequence:$$targs$$.Element$Singleton},singleton$);singleton$.$prop$getLastIndex={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Singleton,$an:function(){return[doc("Returns `0`."),shared(),actual()];},d:['$','Singleton','$at','lastIndex']};}};singleton$.$prop$getLastIndex.get=function(){return lastIndex};singleton$.$prop$getSize={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Singleton,$an:function(){return[doc("Returns `1`."),shared(),actual()];},d:['$','Singleton','$at','size']};}};singleton$.$prop$getSize.get=function(){return size};singleton$.$prop$getFirst={$crtmm$:function(){return{mod:$CCMM$,$t:'Element$Singleton',$cont:Singleton,$an:function(){return[doc("Returns the element contained in this `Singleton`."),shared(),actual()];},d:['$','Singleton','$at','first']};}};singleton$.$prop$getFirst.get=function(){return first};singleton$.$prop$getLast={$crtmm$:function(){return{mod:$CCMM$,$t:'Element$Singleton',$cont:Singleton,$an:function(){return[doc("Returns the element contained in this `Singleton`."),shared(),actual()];},d:['$','Singleton','$at','last']};}};singleton$.$prop$getLast.get=function(){return last};singleton$.$prop$getRest={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Empty},$cont:Singleton,$an:function(){return[doc("Returns `Empty`."),shared(),actual()];},d:['$','Singleton','$at','rest']};}};singleton$.$prop$getRest.get=function(){return rest};singleton$.$prop$getString={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Singleton,$an:function(){return[shared(),actual()];},d:['$','Singleton','$at','string']};}};singleton$.$prop$getString.get=function(){return string};singleton$.$prop$getReversed={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Singleton,a:{Element$Singleton:'Element$Singleton'}},$cont:Singleton,$an:function(){return[doc("Return this singleton."),shared(),actual()];},d:['$','Singleton','$at','reversed']};}};singleton$.$prop$getReversed.get=function(){return reversed};singleton$.$prop$getHash={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Singleton,$an:function(){return[shared(),actual()];},d:['$','Singleton','$at','hash']};}};singleton$.$prop$getHash.get=function(){return hash};return singleton$;}
Singleton.$crtmm$=function(){return{mod:$CCMM$,'super':{t:$_Object},$ps:[{$nm:'element',$mt:'prm',$t:'Element$Singleton',$an:function(){return[];}}],$tp:{Element$Singleton:{'var':'out'}},satisfies:[{t:Sequence,a:{Element$Sequence:'Element$Singleton'}}],$an:function(){return[doc($CCMM$['ceylon.language'].Singleton.$an.doc[0]),shared()];},d:['$','Singleton']};};
ex$.Singleton=Singleton;function $init$Singleton(){if(Singleton.$$===undefined){initTypeProto(Singleton,'ceylon.language::Singleton',$init$$_Object(),$init$Sequence());
(function(singleton$){atr$(singleton$,'lastIndex',function(){var singleton$=this;return 0},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Singleton,$an:function(){return[doc("Returns `0`."),shared(),actual()];},d:['$','Singleton','$at','lastIndex']};});atr$(singleton$,'size',function(){var singleton$=this;return 1},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Singleton,$an:function(){return[doc("Returns `1`."),shared(),actual()];},d:['$','Singleton','$at','size']};});atr$(singleton$,'first',function(){var singleton$=this;return singleton$.$p2;},undefined,function(){return{mod:$CCMM$,$t:'Element$Singleton',$cont:Singleton,$an:function(){return[doc("Returns the element contained in this `Singleton`."),shared(),actual()];},d:['$','Singleton','$at','first']};});atr$(singleton$,'last',function(){var singleton$=this;return singleton$.$p2;},undefined,function(){return{mod:$CCMM$,$t:'Element$Singleton',$cont:Singleton,$an:function(){return[doc("Returns the element contained in this `Singleton`."),shared(),actual()];},d:['$','Singleton','$at','last']};});atr$(singleton$,'rest',function(){var singleton$=this;return getEmpty();},undefined,function(){return{mod:$CCMM$,$t:{t:Empty},$cont:Singleton,$an:function(){return[doc("Returns `Empty`."),shared(),actual()];},d:['$','Singleton','$at','rest']};});singleton$.getFromFirst=function getFromFirst($p3){var singleton$=this;if(($p3==0)){return singleton$.$p2;}else {return null;}};singleton$.getFromFirst.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$Singleton']},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[doc("Returns the contained element, if the specified \nindex is `0`."),shared(),actual()];},d:['$','Singleton','$m','getFromFirst']};};singleton$.clone=function (){var singleton$=this;return singleton$;};singleton$.clone.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Singleton,a:{Element$Singleton:'Element$Singleton'}},$ps:[],$cont:Singleton,$an:function(){return[doc("Returns a `Singleton` with the same element."),shared(),actual()];},d:['$','Singleton','$m','clone']};};singleton$.iterator=function iterator(){var singleton$=this;function $p4($p4$){$init$$p4();if($p4$===undefined)$p4$=new $p4.$$;
$p4$.outer$=singleton$;$p4$.$$targs$$={Element$Iterator:$p4$.outer$.$$targs$$.Element$Singleton};Iterator({Element$Iterator:$p4$.outer$.$$targs$$.Element$Singleton},$p4$);$p4$.$p5_=false;$p4$.$prop$get$p5={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:$p4,$an:function(){return[variable()];},d:['$','Singleton','$m','iterator','$c','SingletonIterator$qt0efi','$at','done$wm9d4h']};}};$p4$.$prop$get$p5.get=function(){return $p5};return $p4$;}
$p4.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:'Element$Singleton'}}],d:['$','Singleton','$m','iterator','$c','SingletonIterator$qt0efi']};};function $init$$p4(){if($p4.$$===undefined){initTypeProto($p4,'ceylon.language::Singleton.SingletonIterator',Basic,$init$Iterator());
(function($p4$){atr$($p4$,'$p5',function(){return this.$p5_;},function($p6){return this.$p5_=$p6;},function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:$p4,$an:function(){return[variable()];},d:['$','Singleton','$m','iterator','$c','SingletonIterator$qt0efi','$at','done$wm9d4h']};});$p4$.next=function next(){var $p4$=this;if($p4$.$p5){return getFinished();}else {$p4$.$p5=true;return singleton$.$p2;}};$p4$.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$Singleton',{t:Finished}]},$ps:[],$cont:$p4,$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','iterator','$c','SingletonIterator$qt0efi','$m','next']};};atr$($p4$,'string',function(){var $p4$=this;return "SingletonIterator";},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$p4,$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','iterator','$c','SingletonIterator$qt0efi','$at','string']};});})($p4.$$.prototype);}
return $p4;}
$init$$p4();return $p4();};singleton$.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Singleton'}},$ps:[],$cont:Singleton,$an:function(){return[shared(),actual(),$_default()];},d:['$','Singleton','$m','iterator']};};atr$(singleton$,'string',function(){var singleton$=this;return "[".plus(($p7=($p8=singleton$.$p2,nn$($p8)?$p8.string:null),nn$($p7)?$p7:"null")).plus("]");},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Singleton,$an:function(){return[shared(),actual()];},d:['$','Singleton','$at','string']};});singleton$.segment=function ($p9,$pa){var singleton$=this;return ($pb=((($p9<=0)&&($p9.plus($pa)>0))?singleton$:null),nn$($pb)?$pb:getEmpty());};singleton$.segment.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Empty},{t:Singleton,a:{Element$Singleton:'Element$Singleton'}}]},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[doc($CCMM$['ceylon.language'].Singleton.$m.segment.$an.doc[0]),shared(),actual()];},d:['$','Singleton','$m','segment']};};singleton$.span=function ($pc,$pd){var singleton$=this;return ($pe=(((($pc<=0)&&($pd>=0))||(($pc>=0)&&($pd<=0)))?singleton$:null),nn$($pe)?$pe:getEmpty());};singleton$.span.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Empty},{t:Singleton,a:{Element$Singleton:'Element$Singleton'}}]},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'to',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[doc($CCMM$['ceylon.language'].Singleton.$m.span.$an.doc[0]),shared(),actual()];},d:['$','Singleton','$m','span']};};singleton$.spanTo=function ($pf){var singleton$=this;return ($pg=(($pf<0)?getEmpty():null),nn$($pg)?$pg:singleton$);};singleton$.spanTo.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Empty},{t:Singleton,a:{Element$Singleton:'Element$Singleton'}}]},$ps:[{$nm:'to',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','spanTo']};};singleton$.spanFrom=function ($ph){var singleton$=this;return ($pi=(($ph>0)?getEmpty():null),nn$($pi)?$pi:singleton$);};singleton$.spanFrom.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Empty},{t:Singleton,a:{Element$Singleton:'Element$Singleton'}}]},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','spanFrom']};};atr$(singleton$,'reversed',function(){var singleton$=this;return singleton$;},undefined,function(){return{mod:$CCMM$,$t:{t:Singleton,a:{Element$Singleton:'Element$Singleton'}},$cont:Singleton,$an:function(){return[doc("Return this singleton."),shared(),actual()];},d:['$','Singleton','$at','reversed']};});singleton$.equals=function equals($pj){var singleton$=this;var $pk;if(($pk=singleton$.$p2)!==null){var $pl;if(is$(($pl=$pj),{t:List,a:{Element$List:{t:Anything}}})){if(($pl.size==1)){var $pm;if(($pm=$pl.first)!==null){return $pm.equals($pk);}}}return false;}return false;};singleton$.equals.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'that',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[doc($CCMM$['ceylon.language'].Singleton.$m.equals.$an.doc[0]),shared(),actual()];},d:['$','Singleton','$m','equals']};};atr$(singleton$,'hash',function(){var singleton$=this;return (31).plus(($pn=($po=singleton$.$p2,nn$($po)?$po.hash:null),nn$($pn)?$pn:(0)));},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Singleton,$an:function(){return[shared(),actual()];},d:['$','Singleton','$at','hash']};});singleton$.contains=function contains($pp){var singleton$=this;var $pq;if(($pq=singleton$.$p2)!==null){return $pq.equals($pp);}return false;};singleton$.contains.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'element',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[doc($CCMM$['ceylon.language'].Singleton.$m.contains.$an.doc[0]),shared(),actual()];},d:['$','Singleton','$m','contains']};};singleton$.count=function ($pr){var singleton$=this;return ($ps=($pr(singleton$.$p2)?1:null),nn$($ps)?$ps:(0));};singleton$.count.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[doc($CCMM$['ceylon.language'].Singleton.$m.count.$an.doc[0]),shared(),actual()];},d:['$','Singleton','$m','count']};};singleton$.$_map=function ($pt,$$$mptypes){var singleton$=this;return Singleton($pt(singleton$.$p2),{Element$Singleton:$$$mptypes.Result$map});};singleton$.$_map.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Singleton,a:{Element$Singleton:'Result$map'}},$ps:[{$nm:'collecting',$mt:'prm',$pt:'f',$t:'Result$map',$an:function(){return[];}}],$cont:Singleton,$tp:{Result$map:{}},$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','map']};};singleton$.$_filter=function ($pu){var singleton$=this;return ($pv=($pu(singleton$.$p2)?singleton$:null),nn$($pv)?$pv:getEmpty());};singleton$.$_filter.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Singleton,a:{Element$Singleton:'Element$Singleton'}},{t:Empty}]},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','filter']};};singleton$.fold=function ($pw,$px,$$$mptypes){var singleton$=this;return $px($pw,singleton$.$p2);};singleton$.fold.$crtmm$=function(){return{mod:$CCMM$,$t:'Result$fold',$ps:[{$nm:'initial',$mt:'prm',$t:'Result$fold',$an:function(){return[];}},{$nm:'accumulating',$mt:'prm',$pt:'f',$t:'Result$fold',$an:function(){return[];}}],$cont:Singleton,$tp:{Result$fold:{}},$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','fold']};};singleton$.$_reduce=function ($py,$$$mptypes){var singleton$=this;return singleton$.$p2;};singleton$.$_reduce.$crtmm$=function(){return{mod:$CCMM$,$t:'Element$Singleton',$ps:[{$nm:'accumulating',$mt:'prm',$pt:'f',$t:'Result$reduce',$an:function(){return[];}}],$cont:Singleton,$tp:{Result$reduce:{}},$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','reduce']};};singleton$.collect=function ($pz,$$$mptypes){var singleton$=this;return Singleton($pz(singleton$.$p2),{Element$Singleton:$$$mptypes.Result$collect});};singleton$.collect.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Singleton,a:{Element$Singleton:'Result$collect'}},$ps:[{$nm:'collecting',$mt:'prm',$pt:'f',$t:'Result$collect',$an:function(){return[];}}],$cont:Singleton,$tp:{Result$collect:{}},$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','collect']};};singleton$.select=function ($q0){var singleton$=this;return ($q1=($q0(singleton$.$p2)?singleton$:null),nn$($q1)?$q1:getEmpty());};singleton$.select.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Singleton,a:{Element$Singleton:'Element$Singleton'}},{t:Empty}]},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','select']};};singleton$.find=function find($q2){var singleton$=this;if($q2(singleton$.$p2)){return singleton$.$p2;}return null;};singleton$.find.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$Singleton']},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','find']};};singleton$.findLast=function ($q3){var singleton$=this;return singleton$.find($q3);};singleton$.findLast.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$Singleton']},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[shared(),actual(),$_default()];},d:['$','Singleton','$m','findLast']};};singleton$.$_sort=function ($q4){var singleton$=this;return singleton$;};singleton$.$_sort.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Singleton,a:{Element$Singleton:'Element$Singleton'}},$ps:[{$nm:'comparing',$mt:'prm',$pt:'f',$t:{t:Comparison},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','sort']};};singleton$.any=function ($q5){var singleton$=this;return $q5(singleton$.$p2);};singleton$.any.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','any']};};singleton$.$_every=function ($q6){var singleton$=this;return $q6(singleton$.$p2);};singleton$.$_every.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','every']};};singleton$.skip=function ($q7){var singleton$=this;return ($q8=(($q7<1)?singleton$:null),nn$($q8)?$q8:getEmpty());};singleton$.skip.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Singleton,a:{Element$Singleton:'Element$Singleton'}},{t:Empty}]},$ps:[{$nm:'skipping',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','skip']};};singleton$.take=function ($q9){var singleton$=this;return ($qa=(($q9>0)?singleton$:null),nn$($qa)?$qa:getEmpty());};singleton$.take.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Singleton,a:{Element$Singleton:'Element$Singleton'}},{t:Empty}]},$ps:[{$nm:'taking',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','take']};};atr$(singleton$,'coalesced',function(){var singleton$=this;var $qb;if(($qb=singleton$.$p2)!==null){return Singleton($qb,{Element$Singleton:{t:'i',l:[singleton$.$$targs$$.Element$Singleton,{t:$_Object}]}});}else {return getEmpty();}},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Singleton,a:{Element$Singleton:{t:'i',l:['Element$Singleton',{t:$_Object}]}}},{t:Empty}]},$cont:Singleton,$an:function(){return[shared(),actual()];},d:['$','Singleton','$at','coalesced']};});singleton$.chain=function ($qc,$$$mptypes){var singleton$=this;return $qc.following(singleton$.$p2,{Other$following:singleton$.$$targs$$.Element$Singleton});};singleton$.chain.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:Nothing},Element$Iterable:{t:'u',l:['Element$Singleton','Other$chain']}}},$ps:[{$nm:'other',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:'OtherAbsent$chain',Element$Iterable:'Other$chain'}},$an:function(){return[];}}],$cont:Singleton,$tp:{Other$chain:{},OtherAbsent$chain:{'satisfies':[{t:Null}]}},$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','chain']};};atr$(singleton$,'$p2',function(){return this.$p2_;},undefined,function(){return{mod:$CCMM$,$t:'Element$Singleton',$cont:Singleton,d:['$','Singleton','$at','element$kjdnp3']};});})(Singleton.$$.prototype);}
return Singleton;}
ex$.$init$Singleton=$init$Singleton;$init$Singleton();var $p7,$p8,$pb,$pe,$pg,$pi,$pn,$po,$ps,$pv,$q1,$q8,$qa;function AssertionError($qd,assertionError$){$init$AssertionError();if(assertionError$===undefined)assertionError$=new AssertionError.$$;
assertionError$.$qd_=$qd;$_Error(assertionError$.$qd,undefined,assertionError$);return assertionError$;}
AssertionError.$crtmm$=function(){return{mod:$CCMM$,'super':{t:$_Error},$ps:[{$nm:'message',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$an:function(){return[doc($CCMM$['ceylon.language'].AssertionError.$an.doc[0]),shared()];},d:['$','AssertionError']};};
ex$.AssertionError=AssertionError;function $init$AssertionError(){if(AssertionError.$$===undefined){initTypeProto(AssertionError,'ceylon.language::AssertionError',$init$$_Error());
(function(assertionError$){atr$(assertionError$,'$qd',function(){return this.$qd_;},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:AssertionError,d:['$','AssertionError','$at','message$9g6fel']};});})(AssertionError.$$.prototype);}
return AssertionError;}
ex$.$init$AssertionError=$init$AssertionError;$init$AssertionError();function Map($$targs$$,map$){Collection({Element$Collection:{t:Entry,a:{Key$Entry:$$targs$$.Key$Map,Item$Entry:$$targs$$.Item$Map}}},map$);add_type_arg(map$,'Element$Collection',{t:Entry,a:{Key$Entry:map$.$$targs$$.Key$Map,Item$Entry:map$.$$targs$$.Item$Map}});Correspondence({Item$Correspondence:$$targs$$.Item$Map,Key$Correspondence:{t:$_Object}},map$);add_type_arg(map$,'Key$Correspondence',{t:$_Object});set_type_args(map$,$$targs$$);}
Map.$crtmm$=function(){return{mod:$CCMM$,$tp:{Key$Map:{'var':'out','satisfies':[{t:$_Object}]},Item$Map:{'var':'out','satisfies':[{t:$_Object}]}},satisfies:[{t:Collection,a:{Element$Collection:{t:Entry,a:{Key$Entry:'Key$Map',Item$Entry:'Item$Map'}}}},{t:Correspondence,a:{Item$Correspondence:'Item$Map',Key$Correspondence:{t:$_Object}}}],$an:function(){return[doc($CCMM$['ceylon.language'].Map.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Entry),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),forKey),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),forItem),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),byItem),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),byKey)].reifyCeylonType({t:'u',l:[{t:ClassDeclaration$meta$declaration},{t:FunctionDeclaration$meta$declaration}]})),shared()];},d:['$','Map']};};
ex$.Map=Map;function $init$Map(){if(Map.$$===undefined){initTypeProtoI(Map,'ceylon.language::Map',$init$Collection(),$init$Correspondence());
(function(map$){map$.contains=function contains($qe){var map$=this;var $qf;var $qg;if(is$(($qf=$qe),{t:Entry,a:{Key$Entry:map$.$$targs$$.Key$Map,Item$Entry:{t:$_Object}}})&&($qg=map$.$_get($qf.key))!==null){return $qg.equals($qf.item);}else {return false;}};map$.contains.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'entry',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:Map,$an:function(){return[shared(),actual(),$_default()];},d:['$','Map','$m','contains']};};map$.clone={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Map,a:{Key$Map:'Key$Map',Item$Map:'Item$Map'}},$ps:[],$cont:Map,$an:function(){return[shared(),actual(),formal()];},d:['$','Map','$m','clone']};}};map$.equals=function equals($qh){var map$=this;var $qi;if(is$(($qi=$qh),{t:Map,a:{Key$Map:{t:$_Object},Item$Map:{t:$_Object}}})&&($qi.size==map$.size)){var $qk;for(var $qj=map$.iterator();($qk=$qj.next())!==getFinished();){var $ql;if(($ql=$qi.$_get($qk.key))!==null&&$ql.equals($qk.item)){continue;}else {return false;}}
if(getFinished()===$qk){return true;}}else {return false;}};map$.equals.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'that',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:Map,$an:function(){return[doc($CCMM$['ceylon.language'].Map.$m.equals.$an.doc[0]),shared(),actual(),$_default()];},d:['$','Map','$m','equals']};};atr$(map$,'hash',function(){var map$=this;var $qm=(0);function set$qm($qn){return $qm=$qn;};$prop$get$qm={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:map$.$prop$getHash,$an:function(){return[variable()];},d:['$','Map','$at','hash','$at','hashCode$jglg2o']};}};$prop$get$qm.get=function(){return $qm};$prop$get$qm.set=set$qm;if(set$qm.$crtmm$===undefined)set$qm.$crtmm$=$prop$get$qm.$crtmm$;var $qp;for(var $qo=map$.iterator();($qp=$qo.next())!==getFinished();){($qm=$qm.plus($qp.hash));}return $qm;},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Map,$an:function(){return[shared(),actual(),$_default()];},d:['$','Map','$at','hash']};});atr$(map$,'keys',function(){var map$=this;function $qq($$targs$$){var $qq$=new $qq.$$;$qq$.outer$=map$;$qq$.$$targs$$=$$targs$$;Collection({Element$Collection:map$.$$targs$$.Key$Map},$qq$);return $qq$;
};$qq.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:map$.$prop$getKeys,satisfies:[{t:Collection,a:{Element$Collection:'Key$Map'}}],d:['$','Map','$at','keys','$o','keys$8un6dp']};};function $init$$qq(){if($qq.$$===undefined){initTypeProto($qq,'ceylon.language::Map.keys',Basic,$init$Collection());
(function($qq$){$qq$.contains=function ($qr){var $qq$=this;return map$.defines($qr);};$qq$.iterator=function (){var $qq$=this;return sarg$(function($qs){switch($qs){}return getFinished();},function(){return Comprehension(function(){var $qt=map$.iterator();var $qu,$qv;var next$qv=function(){var $qw;if(($qw=$qt.next())!==getFinished()){$qu=$qw.key;$qv=$qw.item;return $qw;}
$qv=undefined;return getFinished();}
next$qv();return function(){if($qv!==undefined){var $qx=$qu;var $qy=$qv;var $qz=$qx;next$qv();return $qz;}
return getFinished();}
},{Absent$Iterable:{t:Null},Element$Iterable:map$.$$targs$$.Key$Map});},{Element$Iterable:map$.$$targs$$.Key$Map,Absent$Iterable:{t:Null}}).iterator();};$qq$.clone=function (){var $qq$=this;return map$.clone().keys;};atr$($qq$,'size',function(){var $qq$=this;return map$.size;},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$qq,$an:function(){return[shared(),actual()];},d:['$','Map','$at','keys','$o','keys$8un6dp','$at','size']};});})($qq.$$.prototype);}
return $qq;}
$init$$qq();var $r0;function get$r0(){if($r0===undefined){$r0=$init$$qq()({Element$Collection:map$.$$targs$$.Key$Map});$r0.$crtmm$=get$r0.$crtmm$;}
return $r0;}
get$r0.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$qq},$cont:map$.$prop$getKeys,d:['$','Map','$at','keys','$o','keys$8un6do']};};$prop$get$r0={get:get$r0,$crtmm$:get$r0.$crtmm$};get$qq=get$r0;$prop$get$qq=get$r0;return get$r0();},undefined,function(){return{mod:$CCMM$,$t:{t:Collection,a:{Element$Collection:'Key$Map'}},$cont:Map,$an:function(){return[doc("A [[Collection]] containing the keys of this map."),actual(),shared(),$_default()];},d:['$','Map','$at','keys']};});atr$(map$,'values',function(){var map$=this;function $r1($$targs$$){var $r1$=new $r1.$$;$r1$.outer$=map$;$r1$.$$targs$$=$$targs$$;Collection({Element$Collection:map$.$$targs$$.Item$Map},$r1$);return $r1$;
};$r1.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:map$.$prop$getValues,satisfies:[{t:Collection,a:{Element$Collection:'Item$Map'}}],d:['$','Map','$at','values','$o','values$fpbbw1']};};function $init$$r1(){if($r1.$$===undefined){initTypeProto($r1,'ceylon.language::Map.values',Basic,$init$Collection());
(function($r1$){$r1$.contains=function contains($r2){var $r1$=this;var $r4;for(var $r3=map$.iterator();($r4=$r3.next())!==getFinished();){var $r5=$r4.key,$r6=$r4.item;if($r6.equals($r2)){return true;}}return false;};$r1$.contains.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'item',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:$r1,$an:function(){return[shared(),actual()];},d:['$','Map','$at','values','$o','values$fpbbw1','$m','contains']};};$r1$.iterator=function (){var $r1$=this;return sarg$(function($r7){switch($r7){}return getFinished();},function(){return Comprehension(function(){var $r8=map$.iterator();var $r9,$ra;var next$ra=function(){var $rb;if(($rb=$r8.next())!==getFinished()){$r9=$rb.key;$ra=$rb.item;return $rb;}
$ra=undefined;return getFinished();}
next$ra();return function(){if($ra!==undefined){var $rc=$r9;var $rd=$ra;var $re=$rd;next$ra();return $re;}
return getFinished();}
},{Absent$Iterable:{t:Null},Element$Iterable:map$.$$targs$$.Item$Map});},{Element$Iterable:map$.$$targs$$.Item$Map,Absent$Iterable:{t:Null}}).iterator();};$r1$.clone=function (){var $r1$=this;return map$.clone().values;};atr$($r1$,'size',function(){var $r1$=this;return map$.size;},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$r1,$an:function(){return[shared(),actual()];},d:['$','Map','$at','values','$o','values$fpbbw1','$at','size']};});})($r1.$$.prototype);}
return $r1;}
$init$$r1();var $rf;function get$rf(){if($rf===undefined){$rf=$init$$r1()({Element$Collection:map$.$$targs$$.Item$Map});$rf.$crtmm$=get$rf.$crtmm$;}
return $rf;}
get$rf.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$r1},$cont:map$.$prop$getValues,d:['$','Map','$at','values','$o','values$fpbbw0']};};$prop$get$rf={get:get$rf,$crtmm$:get$rf.$crtmm$};get$r1=get$rf;$prop$get$r1=get$rf;return get$rf();},undefined,function(){return{mod:$CCMM$,$t:{t:Collection,a:{Element$Collection:'Item$Map'}},$cont:Map,$an:function(){return[doc($CCMM$['ceylon.language'].Map.$at.values.$an.doc[0]),shared(),$_default()];},d:['$','Map','$at','values']};});map$.mapItems=function mapItems($rg,$$$mptypes){var map$=this;function $rh($$targs$$){var $rh$=new $rh.$$;$rh$.outer$=map$;$rh$.$$targs$$=$$targs$$;Map({Key$Map:map$.$$targs$$.Key$Map,Item$Map:$$$mptypes.Result$mapItems},$rh$);return $rh$;
};$rh.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:mapItems,satisfies:[{t:Map,a:{Key$Map:'Key$Map',Item$Map:'Result$mapItems'}}],d:['$','Map','$m','mapItems','$o','map$bgn2xh']};};function $init$$rh(){if($rh.$$===undefined){initTypeProto($rh,'ceylon.language::Map.map',Basic,$init$Map());
(function($rh$){$rh$.$_get=function $_get($ri){var $rh$=this;var $rj;var $rk;if(is$(($rj=$ri),map$.$$targs$$.Key$Map)&&($rk=map$.$_get($rj))!==null){return $rg($rj,$rk);}else {return null;}};$rh$.$_get.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Result$mapItems']},$ps:[{$nm:'key',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:$rh,$an:function(){return[shared(),actual()];},d:['$','Map','$m','mapItems','$o','map$bgn2xh','$m','get']};};$rh$.defines=function ($rl){var $rh$=this;return map$.defines($rl);};$rh$.iterator=function (){var $rh$=this;return map$.$_map($JsCallable((function ($rm){return Entry($rm.key,$rg($rm.key,$rm.item),{Key$Entry:map$.$$targs$$.Key$Map,Item$Entry:$$$mptypes.Result$mapItems});}),[{$nm:'entry',$mt:'prm',$t:{t:Entry,a:{Key$Entry:'Key$Map',Item$Entry:'Item$Map'}},$an:function(){return[];}}],{Return$Callable:{t:Entry,a:{Key$Entry:map$.$$targs$$.Key$Map,Item$Entry:$$$mptypes.Result$mapItems}},Arguments$Callable:{t:'T',l:[{t:Entry,a:{Key$Entry:map$.$$targs$$.Key$Map,Item$Entry:map$.$$targs$$.Item$Map}}]}}),{Result$map:{t:Entry,a:{Key$Entry:map$.$$targs$$.Key$Map,Item$Entry:$$$mptypes.Result$mapItems}}}).iterator();};atr$($rh$,'size',function(){var $rh$=this;return map$.size;},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$rh,$an:function(){return[shared(),actual()];},d:['$','Map','$m','mapItems','$o','map$bgn2xh','$at','size']};});$rh$.equals=function ($rn){var $rh$=this;return $rh$.getT$all()['ceylon.language::Map'].$$.prototype.equals.call(this,$rn);};atr$($rh$,'hash',function(){var $rh$=this;return attrGetter($rh$.getT$all()['ceylon.language::Map'],'hash').call(this);},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$rh,$an:function(){return[shared(),actual()];},d:['$','Map','$m','mapItems','$o','map$bgn2xh','$at','hash']};});$rh$.clone=function (){var $rh$=this;return map$.clone().mapItems($rg,{Result$mapItems:$$$mptypes.Result$mapItems});};})($rh.$$.prototype);}
return $rh;}
$init$$rh();var $ro;function get$ro(){if($ro===undefined){$ro=$init$$rh()({Item$Map:$$$mptypes.Result$mapItems,Key$Map:map$.$$targs$$.Key$Map});$ro.$crtmm$=get$ro.$crtmm$;}
return $ro;}
get$ro.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$rh},$cont:mapItems,d:['$','Map','$m','mapItems','$o','map$bgn2xg']};};$prop$get$ro={get:get$ro,$crtmm$:get$ro.$crtmm$};get$rh=get$ro;$prop$get$rh=get$ro;return get$ro();};map$.mapItems.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Map,a:{Key$Map:'Key$Map',Item$Map:'Result$mapItems'}},$ps:[{$nm:'mapping',$mt:'prm',$pt:'f',$t:'Result$mapItems',$an:function(){return[doc($CCMM$['ceylon.language'].Map.$m.mapItems.$m.mapping$g8tcs2.$an.doc[0])];}}],$cont:Map,$tp:{Result$mapItems:{'satisfies':[{t:$_Object}]}},$an:function(){return[doc($CCMM$['ceylon.language'].Map.$m.mapItems.$an.doc[0]),shared(),$_default()];},d:['$','Map','$m','mapItems']};};map$.filterKeys=function filterKeys($rp){var map$=this;function $rq($$targs$$){var $rq$=new $rq.$$;$rq$.outer$=map$;$rq$.$$targs$$=$$targs$$;Map({Key$Map:map$.$$targs$$.Key$Map,Item$Map:map$.$$targs$$.Item$Map},$rq$);return $rq$;
};$rq.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:filterKeys,satisfies:[{t:Map,a:{Key$Map:'Key$Map',Item$Map:'Item$Map'}}],d:['$','Map','$m','filterKeys','$o','map$9ho41f']};};function $init$$rq(){if($rq.$$===undefined){initTypeProto($rq,'ceylon.language::Map.map',Basic,$init$Map());
(function($rq$){$rq$.$_get=function $_get($rr){var $rq$=this;var $rs;if(is$(($rs=$rr),map$.$$targs$$.Key$Map)&&$rp($rs)){return map$.$_get($rs);}else {return null;}};$rq$.$_get.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Item$Map']},$ps:[{$nm:'key',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:$rq,$an:function(){return[shared(),actual()];},d:['$','Map','$m','filterKeys','$o','map$9ho41f','$m','get']};};$rq$.defines=function defines($rt){var $rq$=this;var $ru;if(is$(($ru=$rt),map$.$$targs$$.Key$Map)&&$rp($ru)){return map$.defines($ru);}else {return false;}};$rq$.defines.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'key',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:$rq,$an:function(){return[shared(),actual()];},d:['$','Map','$m','filterKeys','$o','map$9ho41f','$m','defines']};};$rq$.iterator=function (){var $rq$=this;return map$.$_filter($JsCallable((function ($rv){return $rp($rv.key);}),[{$nm:'entry',$mt:'prm',$t:{t:Entry,a:{Key$Entry:'Key$Map',Item$Entry:'Item$Map'}},$an:function(){return[];}}],{Return$Callable:{t:$_Boolean},Arguments$Callable:{t:'T',l:[{t:Entry,a:{Key$Entry:map$.$$targs$$.Key$Map,Item$Entry:map$.$$targs$$.Item$Map}}]}})).iterator();};$rq$.equals=function ($rw){var $rq$=this;return $rq$.getT$all()['ceylon.language::Map'].$$.prototype.equals.call(this,$rw);};atr$($rq$,'hash',function(){var $rq$=this;return attrGetter($rq$.getT$all()['ceylon.language::Map'],'hash').call(this);},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$rq,$an:function(){return[shared(),actual()];},d:['$','Map','$m','filterKeys','$o','map$9ho41f','$at','hash']};});$rq$.clone=function (){var $rq$=this;return map$.clone().filterKeys($rp);};})($rq.$$.prototype);}
return $rq;}
$init$$rq();var $rx;function get$rx(){if($rx===undefined){$rx=$init$$rq()({Item$Map:map$.$$targs$$.Item$Map,Key$Map:map$.$$targs$$.Key$Map});$rx.$crtmm$=get$rx.$crtmm$;}
return $rx;}
get$rx.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$rq},$cont:filterKeys,d:['$','Map','$m','filterKeys','$o','map$9ho41g']};};$prop$get$rx={get:get$rx,$crtmm$:get$rx.$crtmm$};get$rq=get$rx;$prop$get$rq=get$rx;return get$rx();};map$.filterKeys.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Map,a:{Key$Map:'Key$Map',Item$Map:'Item$Map'}},$ps:[{$nm:'filtering',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:Map,$an:function(){return[doc($CCMM$['ceylon.language'].Map.$m.filterKeys.$an.doc[0]),shared(),$_default()];},d:['$','Map','$m','filterKeys']};};})(Map.$$.prototype);}
return Map;}
ex$.$init$Map=$init$Map;$init$Map();function $ry($$targs$$){var emptyMap$=new $ry.$$;emptyMap$.$$targs$$=$$targs$$;$_Object(emptyMap$);Map({Key$Map:{t:Nothing},Item$Map:{t:Nothing}},emptyMap$);emptyMap$.$prop$getKeys={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Collection,a:{Element$Collection:{t:Nothing}}},$cont:$ry,$an:function(){return[shared(),actual()];},d:['$','emptyMap','$at','keys']};}};emptyMap$.$prop$getKeys.get=function(){return keys};emptyMap$.$prop$getValues={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Collection,a:{Element$Collection:{t:Nothing}}},$cont:$ry,$an:function(){return[shared(),actual()];},d:['$','emptyMap','$at','values']};}};emptyMap$.$prop$getValues.get=function(){return values};return emptyMap$;
};$ry.$crtmm$=function(){return{mod:$CCMM$,'super':{t:$_Object},satisfies:[{t:Map,a:{Key$Map:{t:Nothing},Item$Map:{t:Nothing}}}],$an:function(){return[doc("An immutable [[Map]] with no entries."),shared()];},d:['$','emptyMap']};};function $init$$ry(){if($ry.$$===undefined){initTypeProto($ry,'ceylon.language::emptyMap',$init$$_Object(),$init$Map());
(function(emptyMap$){emptyMap$.$_get=function ($rz){var emptyMap$=this;return null;};emptyMap$.$_get.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Null},$ps:[{$nm:'key',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:$ry,$an:function(){return[shared(),actual()];},d:['$','emptyMap','$m','get']};};atr$(emptyMap$,'keys',function(){var emptyMap$=this;return getEmptySet();},undefined,function(){return{mod:$CCMM$,$t:{t:Collection,a:{Element$Collection:{t:Nothing}}},$cont:$ry,$an:function(){return[shared(),actual()];},d:['$','emptyMap','$at','keys']};});atr$(emptyMap$,'values',function(){var emptyMap$=this;return getEmpty();},undefined,function(){return{mod:$CCMM$,$t:{t:Collection,a:{Element$Collection:{t:Nothing}}},$cont:$ry,$an:function(){return[shared(),actual()];},d:['$','emptyMap','$at','values']};});emptyMap$.clone=function (){var emptyMap$=this;return getEmptyMap();};emptyMap$.iterator=function (){var emptyMap$=this;return getEmptyIterator();};atr$(emptyMap$,'size',function(){var emptyMap$=this;return 0;},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$ry,$an:function(){return[shared(),actual()];},d:['$','emptyMap','$at','size']};});atr$(emptyMap$,'empty',function(){var emptyMap$=this;return true;},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:$ry,$an:function(){return[shared(),actual()];},d:['$','emptyMap','$at','empty']};});emptyMap$.defines=function ($s0){var emptyMap$=this;return false;};emptyMap$.contains=function ($s1){var emptyMap$=this;return false;};emptyMap$.containsAny=function ($s2){var emptyMap$=this;return false;};emptyMap$.containsEvery=function ($s3){var emptyMap$=this;return false;};emptyMap$.mapItems=function ($s4,$$$mptypes){var emptyMap$=this;return getEmptyMap();};emptyMap$.mapItems.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Map,a:{Key$Map:{t:Nothing},Item$Map:{t:Nothing}}},$ps:[{$nm:'mapping',$mt:'prm',$pt:'f',$t:'Result$mapItems',$an:function(){return[];}}],$cont:$ry,$tp:{Result$mapItems:{'satisfies':[{t:$_Object}]}},$an:function(){return[shared(),actual()];},d:['$','emptyMap','$m','mapItems']};};emptyMap$.count=function ($s5){return 0;};emptyMap$.count.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:$ry,$an:function(){return[shared(),actual()];},d:['$','emptyMap','$m','count']};};emptyMap$.$_map=function ($s6,$$$mptypes){return getEmpty();};emptyMap$.$_map.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'collecting',$mt:'prm',$pt:'f',$t:'Result$map',$an:function(){return[];}}],$cont:$ry,$tp:{Result$map:{}},$an:function(){return[shared(),actual()];},d:['$','emptyMap','$m','map']};};emptyMap$.$_filter=function ($s7){var emptyMap$=this;return getEmptyMap();};emptyMap$.$_filter.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Map,a:{Key$Map:{t:Nothing},Item$Map:{t:Nothing}}},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:$ry,$an:function(){return[shared(),actual()];},d:['$','emptyMap','$m','filter']};};emptyMap$.fold=function ($s8,$s9,$$$mptypes){var emptyMap$=this;return $s8;};emptyMap$.fold.$crtmm$=function(){return{mod:$CCMM$,$t:'Result$fold',$ps:[{$nm:'initial',$mt:'prm',$t:'Result$fold',$an:function(){return[];}},{$nm:'accumulating',$mt:'prm',$pt:'f',$t:'Result$fold',$an:function(){return[];}}],$cont:$ry,$tp:{Result$fold:{}},$an:function(){return[shared(),actual()];},d:['$','emptyMap','$m','fold']};};emptyMap$.find=function ($sa){var emptyMap$=this;return null;};emptyMap$.find.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Null},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:$ry,$an:function(){return[shared(),actual()];},d:['$','emptyMap','$m','find']};};emptyMap$.collect=function ($sb,$$$mptypes){return getEmpty();};emptyMap$.collect.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'collecting',$mt:'prm',$pt:'f',$t:'Result$collect',$an:function(){return[];}}],$cont:$ry,$tp:{Result$collect:{}},$an:function(){return[shared(),actual()];},d:['$','emptyMap','$m','collect']};};emptyMap$.select=function ($sc){return getEmpty();};emptyMap$.select.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:$ry,$an:function(){return[shared(),actual()];},d:['$','emptyMap','$m','select']};};emptyMap$.any=function ($sd){var emptyMap$=this;return false;};emptyMap$.any.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:$ry,$an:function(){return[shared(),actual()];},d:['$','emptyMap','$m','any']};};emptyMap$.$_every=function ($se){var emptyMap$=this;return true;};emptyMap$.$_every.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[];}}],$cont:$ry,$an:function(){return[shared(),actual()];},d:['$','emptyMap','$m','every']};};emptyMap$.skip=function ($sf){var emptyMap$=this;return getEmptyMap();};emptyMap$.take=function ($sg){var emptyMap$=this;return getEmptyMap();};emptyMap$.by=function ($sh){var emptyMap$=this;return getEmptyMap();};})($ry.$$.prototype);}
return $ry;}
ex$.$init$$ry=$init$$ry;$init$$ry();var $si;function getEmptyMap(){if($si===undefined){$si=$init$$ry()({Item$Map:{t:Nothing},Key$Map:{t:Nothing}});$si.$crtmm$=getEmptyMap.$crtmm$;}
return $si;}
ex$.getEmptyMap=getEmptyMap;getEmptyMap.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$ry},$an:function(){return[doc("An immutable [[Map]] with no entries."),shared()];},d:['$','emptyMap']};};$prop$getEmptyMap={get:getEmptyMap,$crtmm$:getEmptyMap.$crtmm$};get$ry=getEmptyMap;$prop$get$ry=getEmptyMap;ex$.$prop$getEmptyMap=$prop$getEmptyMap;function $_String(/*{Character*}*/value,size) {
if (value && value.getT$name && value.getT$name() == 'ceylon.language::String') {
//if it's already a String just return it
return value;
}
else if (typeof(value) === 'string') {
var that = new String(value);
that.codePoints = size;
return that;
}
var that = '';
var _iter = value.iterator();
var _c; while ((_c = _iter.next()) !== getFinished()) {
that += _c.string;
}
if (size !== undefined) that.codePoints=size;
return that;
}
$_String.$crtmm$=function(){return{mod:$CCMM$,'super':{t:$_Object},$ps:[{$nm:'characters',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:{t:Character}}},$an:function(){return[doc("The characters that form this string.")];}}],satisfies:[{t:List,a:{Element$List:{t:Character}}},{t:Comparable,a:{Other$Comparable:{t:$_String}}},{t:Summable,a:{Other$Summable:{t:$_String}}},{t:Ranged,a:{Span$Ranged:{t:$_String},Element$Ranged:{t:Character},Index$Ranged:{t:Integer}}}],$an:function(){return[doc($CCMM$['ceylon.language'].String.$an.doc[0]),by(["Gavin"].reifyCeylonType({t:$_String})),shared(),$_native(),$_final()];},d:['$','String']};};
ex$.$_String=$_String;function $init$$_String(){if($_String.$$===undefined){initExistingType($_String, String, 'ceylon.language::String', $_Object, $init$List(), $init$Comparable(),
$init$Ranged(), $init$Summable());
inheritProto($_String, $_Object, $init$Sequential(), $init$Comparable(), $init$Ranged(), $init$Summable());
var origStrToString = String.prototype.toString;
var str$proto = $_String.$$.prototype;
str$proto.$$targs$$={Element$Iterable:{t:Character}, Absent$Iterable:{t:Null},
Element$List:{t:Character}, Other$Summable:{t:$_String}, Other$Comparable:{t:$_String},
Index$Ranged:{t:Integer}, Element$Ranged:{t:Character}, Span$Ranged:{t:$_String},
Element$Collection:{t:Character}, Key$Correspondence:{t:Integer}, Item$Correspondence:{t:Character}};
str$proto.getT$name = function() {
return $_String.$$.T$name;
}
str$proto.getT$all = function() {
return $_String.$$.T$all;
}
str$proto.toString = origStrToString;

(function(string$){atr$(string$,'$sj',function(){return this.$sj_;},undefined,function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:{t:Character}}},$cont:$_String,$an:function(){return[doc("The characters that form this string.")];},d:['$','String','$at','characters$s4g2uj']};});atr$(string$,'lowercased',function(){return this.toLowerCase();
string$.lowercased.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$_String,$an:function(){return[doc("This string, with all characters in lowercase."),shared(),$_native()];},d:['$','String','$at','lowercased']};};},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$_String,$an:function(){return[doc("This string, with all characters in lowercase."),shared(),$_native()];},d:['$','String','$at','lowercased']};});atr$(string$,'uppercased',function(){return this.toUpperCase();
string$.uppercased.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$_String,$an:function(){return[doc("This string, with all characters in uppercase."),shared(),$_native()];},d:['$','String','$at','uppercased']};};},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$_String,$an:function(){return[doc("This string, with all characters in uppercase."),shared(),$_native()];},d:['$','String','$at','uppercased']};});string$.$_split=function(sep, discard, group) {
// shortcut for empty input
if (this.length === 0) {return Singleton(this, {Element$Singleton:{t:$_String}}); }
if (sep === undefined) {sep = function(c){return c.value in Character.WS$;}}
if (discard === undefined) {discard = true}
if (group === undefined) {group = true}
//TODO: return an iterable which determines the next token on demand
var tokens = [];
var tokenBegin = 0;
var tokenBeginCount = 0;
var count = 0;
var value = this;
var separator = true;
function pushToken(tokenEnd) {
tokens.push($_String(value.substring(tokenBegin, tokenEnd), count-tokenBeginCount));
}
if (is$(sep, {t:Iterable})) {
var sepChars = {}
var it = sep.iterator();
var c; while ((c=it.next()) !== getFinished()) {sepChars[c.value] = true}
for (var i=0; i<this.length;) {
var j = i;
var cp = this.charCodeAt(i++);
if ((cp&0xfc00)===0xd800 && i<this.length) {
cp = (cp<<10) + this.charCodeAt(i++) - 0x35fdc00;
}
if (cp in sepChars) {
if (!group) {
// ungrouped separator: store preceding token
pushToken(j);
if (!discard) {
// store separator as token
tokens.push($_String(this.substring(j, i), 1));
}
// next token begins after this character
tokenBegin = i;
tokenBeginCount = count + 1;
} else if (!separator || (j == 0)) {
// begin of grouped separator: store preceding token
pushToken(j);
// separator token begins at this character
tokenBegin = j;
tokenBeginCount = count;
}
separator = true;
} else if (separator) {
// first non-separator after separators or at beginning
if (!discard && (tokenBegin != j)) {
// store preceding grouped separator (if group=false then tokenBegin=j)
pushToken(j);
}
// non-separator token begins at this character
tokenBegin = j;
tokenBeginCount = count;
separator = false;
}
}
if (tokenBegin != i) {
pushToken(i);
}
} else {
for (var i=0; i<this.length; ++count) {
var j = i;
var cp = this.charCodeAt(i++);
if ((cp&0xfc00)===0xd800 && i<this.length) {
cp = (cp<<10) + this.charCodeAt(i++) - 0x35fdc00;
}
if (sep(Character(cp))) {
if (!group) {
// ungrouped separator: store preceding token
pushToken(j);
if (!discard) {
// store separator as token
tokens.push($_String(this.substring(j, i), 1));
}
// next token begins after this character
tokenBegin = i;
tokenBeginCount = count + 1;
} else if (!separator || (j == 0)) {
// begin of grouped separator: store preceding token
pushToken(j);
// separator token begins at this character
tokenBegin = j;
tokenBeginCount = count;
}
separator = true;
} else if (separator) {
// first non-separator after separators or at beginning
if (!discard && (tokenBegin != j)) {
// store preceding grouped separator (if group=false then tokenBegin=j)
pushToken(j);
}
// non-separator token begins at this character
tokenBegin = j;
tokenBeginCount = count;
separator = false;
}
}
if ((tokenBegin != i) && !(separator && discard)) {
// store preceding token (may be a grouped separator)
pushToken(i);
}
if (separator) {
// if last character was a separator then there's another empty token
tokens.push("");
}
}
this.codePoints = count;
return tokens.reifyCeylonType({t:$_String});
}
string$.$_split.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:{t:$_String}}},$ps:[{$nm:'splitting',$mt:'prm',$pt:'f',$def:1,$t:{t:$_Boolean},$an:function(){return[doc($CCMM$['ceylon.language'].String.$m.split.$m.splitting$5nlemj.$an.doc[0])];}},{$nm:'discardSeparators',$mt:'prm',$def:1,$t:{t:$_Boolean},$an:function(){return[doc($CCMM$['ceylon.language'].String.$m.split.$at.discardSeparators$2xsqte.$an.doc[0])];}},{$nm:'groupSeparators',$mt:'prm',$def:1,$t:{t:$_Boolean},$an:function(){return[doc($CCMM$['ceylon.language'].String.$m.split.$at.groupSeparators$5fnjcr.$an.doc[0])];}}],$cont:$_String,$an:function(){return[doc($CCMM$['ceylon.language'].String.$m.split.$an.doc[0]),shared(),$_native()];},d:['$','String','$m','split']};};atr$(string$,'rest',function(){return $_String(this.Rest$List(1));
string$.rest.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$_String,$an:function(){return[doc("The rest of the string, without the first element."),shared(),actual(),$_native()];},d:['$','String','$at','rest']};};},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$_String,$an:function(){return[doc("The rest of the string, without the first element."),shared(),actual(),$_native()];},d:['$','String','$at','rest']};});string$.$_get=function get(i){
return this.getFromFirst(i);
}
string$.$_get.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Character}]},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:$_String,$an:function(){return[doc($CCMM$['ceylon.language'].String.$m.get.$an.doc[0]),shared(),actual(),$_native()];},d:['$','String','$m','get']};};string$.getFromLast=function getFromLast(i){
return this.getFromFirst(this.length-1-i);
}
string$.getFromLast.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Character}]},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:$_String,$an:function(){return[doc($CCMM$['ceylon.language'].String.$m.getFromLast.$an.doc[0]),shared(),actual(),$_native()];},d:['$','String','$m','getFromLast']};};atr$(string$,'keys',function(){return this.size > 0 ? Range(0, this.size.predecessor, {Element$Range:{t:Integer}}) : getEmpty();
string$.keys.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Integer}}},$cont:$_String,$an:function(){return[doc("A sequence containing all indexes of this string."),shared(),actual(),$_native()];},d:['$','String','$at','keys']};};},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Integer}}},$cont:$_String,$an:function(){return[doc("A sequence containing all indexes of this string."),shared(),actual(),$_native()];},d:['$','String','$at','keys']};});string$.join=function(objects) {
var it = objects.iterator();
var obj = it.next();
if (obj === getFinished()) {return "";}
if (this.codePoints === undefined) {this.codePoints = countCodepoints(this)}
var str = obj.string;
var result = str;
var len = str.codePoints;
while ((obj = it.next()) !== getFinished()) {
result += this;
str = obj.string;
result += str;
len += this.codePoints + str.codePoints;
}
return $_String(result, isNaN(len)?undefined:len);
}
string$.join.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$ps:[{$nm:'objects',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:{t:$_Object}}},$an:function(){return[];}}],$cont:$_String,$an:function(){return[doc($CCMM$['ceylon.language'].String.$m.join.$an.doc[0]),shared(),$_native()];},d:['$','String','$m','join']};};atr$(string$,'lines',function(){return this.$_split(function(c){return c.value===10;}, true);
string$.lines.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:{t:$_String}}},$cont:$_String,$an:function(){return[doc("Split the string into lines of text."),shared(),$_native()];},d:['$','String','$at','lines']};};},undefined,function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:{t:$_String}}},$cont:$_String,$an:function(){return[doc("Split the string into lines of text."),shared(),$_native()];},d:['$','String','$at','lines']};});atr$(string$,'trimmed',function(){// make use of the fact that all WS characters are single UTF-16 code units
var from = 0;
while (from<this.length && (this.charCodeAt(from) in Character.WS$)) {++from}
var to = this.length;
if (from < to) {
do {--to} while (from<to && (this.charCodeAt(to) in Character.WS$));
++to;
}
if (from===0 && to===this.length) {return this;}
var result = this.substring(from, to);
if (this.codePoints !== undefined) {
result.codePoints = this.codePoints - from - this.length + to;
}
return result;
string$.trimmed.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$_String,$an:function(){return[doc($CCMM$['ceylon.language'].String.$at.trimmed.$an.doc[0]),shared(),$_native()];},d:['$','String','$at','trimmed']};};},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$_String,$an:function(){return[doc($CCMM$['ceylon.language'].String.$at.trimmed.$an.doc[0]),shared(),$_native()];},d:['$','String','$at','trimmed']};});string$.trim=function(/*Category*/chars) {
var from = 0;
while (from<this.length && chars(this.$_get(from))) {++from}
var to = this.length;
if (from < to) {
do {--to} while (from<to && chars(this.$_get(to)));
++to;
}
if (from===0 && to===this.length) {return this;}
var result = this.substring(from, to);
if (this.codePoints !== undefined) {
result.codePoints = this.codePoints - from - this.length + to;
}
return result;
}
string$.trim.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$ps:[{$nm:'trimming',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[doc($CCMM$['ceylon.language'].String.$m.trim.$m.trimming$klfzyu.$an.doc[0])];}}],$cont:$_String,$an:function(){return[doc($CCMM$['ceylon.language'].String.$m.trim.$an.doc[0]),shared(),actual(),$_native()];},d:['$','String','$m','trim']};};string$.trimLeading=function(/*Category*/chars) {
var from = 0;
while (from<this.length && chars(this.$_get(from))) {++from}
if (from===0) {return this;}
var result = this.substring(from, this.length);
if (this.codePoints !== undefined) {
result.codePoints = this.codePoints - from;
}
return result;
}
string$.trimLeading.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$ps:[{$nm:'trimming',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[doc("The predicate function that determines whether\na character should be trimmed")];}}],$cont:$_String,$an:function(){return[doc($CCMM$['ceylon.language'].String.$m.trimLeading.$an.doc[0]),shared(),actual(),$_native()];},d:['$','String','$m','trimLeading']};};string$.trimTrailing=function(/*Category*/chars) {
var to = this.length;
if (to > 0) {
do {--to} while (to>=0 && chars(this.$_get(to)));
++to;
}
if (to===this.length) {return this;}
else if (to===0) { return ""; }
var result = this.substring(0, to);
if (this.codePoints !== undefined) {
result.codePoints = this.codePoints - this.length + to;
}
return result;
}
string$.trimTrailing.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$ps:[{$nm:'trimming',$mt:'prm',$pt:'f',$t:{t:$_Boolean},$an:function(){return[doc("The predicate function that determines whether\na character should be trimmed")];}}],$cont:$_String,$an:function(){return[doc($CCMM$['ceylon.language'].String.$m.trimTrailing.$an.doc[0]),shared(),actual(),$_native()];},d:['$','String','$m','trimTrailing']};};atr$(string$,'normalized',function(){// make use of the fact that all WS characters are single UTF-16 code units
var result = "";
var len = 0;
var first = true;
var i1 = 0;
while (i1 < this.length) {
while (this.charCodeAt(i1) in Character.WS$) {
if (++i1 >= this.length) {return result;}
}
var i2 = i1;
var cc = this.charCodeAt(i2);
do {
++i2;
if ((cc&0xfc00) === 0xd800) {++i2}
++len;
cc = this.charCodeAt(i2);
} while (i2<this.length && !(cc in Character.WS$));
if (!first) {
result += " ";
++len;
}
first = false;
result += this.substring(i1, i2);
i1 = i2+1;
}
return $_String(result, len);
string$.normalized.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$_String,$an:function(){return[doc($CCMM$['ceylon.language'].String.$at.normalized.$an.doc[0]),shared(),$_native()];},d:['$','String','$at','normalized']};};},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$_String,$an:function(){return[doc($CCMM$['ceylon.language'].String.$at.normalized.$an.doc[0]),shared(),$_native()];},d:['$','String','$at','normalized']};});atr$(string$,'reversed',function(){var result = "";
for (var i=this.length; i>0;) {
var cc = this.charCodeAt(--i);
if ((cc&0xfc00)!==0xdc00 || i===0) {
result += this.charAt(i);
} else {
result += this.substr(--i, 2);
}
}
return result;
string$.reversed.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$_String,$an:function(){return[doc("This string, with the characters in reverse order."),shared(),$_native(),actual()];},d:['$','String','$at','reversed']};};},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$_String,$an:function(){return[doc("This string, with the characters in reverse order."),shared(),$_native(),actual()];},d:['$','String','$at','reversed']};});string$.defines=function(i) {
return i>=0 && i<this.size;
}
string$.defines.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:$_String,$an:function(){return[shared(),$_native(),actual()];},d:['$','String','$m','defines']};};string$.span=function(from, to) {
if (from > to) {
return this.segment(to, from-to+1).reversed;
}
return this.segment(from, to-from+1);
}
string$.span.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'to',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:$_String,$an:function(){return[doc($CCMM$['ceylon.language'].String.$m.span.$an.doc[0]),shared(),actual(),$_native()];},d:['$','String','$m','span']};};string$.spanFrom=function ($sk){var string$=this;return string$.span($sk,string$.size);};string$.spanFrom.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:$_String,$an:function(){return[shared(),actual()];},d:['$','String','$m','spanFrom']};};string$.spanTo=function ($sl){var string$=this;return ($sm=(($sl>=0)?string$.span(0,$sl):null),nn$($sm)?$sm:"");};string$.spanTo.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$ps:[{$nm:'to',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:$_String,$an:function(){return[shared(),actual()];},d:['$','String','$m','spanTo']};};string$.segment=function(from, len) {
var fromIndex = from;
var maxCount = len + fromIndex;
if (fromIndex < 0) {fromIndex = 0;}
var i1 = 0;
var count = 0;
for (; i1<this.length && count<fromIndex; ++i1, ++count) {
if ((this.charCodeAt(i1)&0xfc00) === 0xd800) {++i1}
}
var i2 = i1;
for (; i2<this.length && count<maxCount; ++i2, ++count) {
if ((this.charCodeAt(i2)&0xfc00) === 0xd800) {++i2}
}
if (i2 >= this.length) {
this.codePoints = count;
if (fromIndex === 0) {return this;}
}
return $_String(this.substring(i1, i2), count-fromIndex);
}
string$.segment.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:$_String,$an:function(){return[doc($CCMM$['ceylon.language'].String.$m.segment.$an.doc[0]),shared(),$_native(),actual()];},d:['$','String','$m','segment']};};string$.initial=function(length) {
if (length >= this.codePoints) {return this}
var count = 0;
var i = 0;
for (; i<this.length && count<length; ++i, ++count) {
if ((this.charCodeAt(i)&0xfc00) === 0xd800) {++i}
}
if (i >= this.length) {
this.codePoints = count;
return this;
}
return $_String(this.substr(0, i), count);
}
string$.initial.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$ps:[{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:$_String,$an:function(){return[doc($CCMM$['ceylon.language'].String.$m.initial.$an.doc[0]),shared(),$_native(),actual()];},d:['$','String','$m','initial']};};string$.terminal=function(length) {
if (length >= this.codePoints) {return this}
var count = 0;
var i = this.length;
for (; i>0 && count<length; ++count) {
if ((this.charCodeAt(--i)&0xfc00) === 0xdc00) {--i}
}
if (i <= 0) {
this.codePoints = count;
return this;
}
return $_String(this.substr(i), count);
}
string$.terminal.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$ps:[{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:$_String,$an:function(){return[doc($CCMM$['ceylon.language'].String.$m.terminal.$an.doc[0]),shared(),$_native(),actual()];},d:['$','String','$m','terminal']};};string$.$_slice=function(idx) {
var s1 = idx>0 ? this.segment(0,idx) : '';
if (idx<0)idx=0;
var s2 = idx<this.size ? this.segment(idx,this.size) : '';
return tpl$([s1,s2],{t:'T',l:[{t:$_String},{t:$_String}]});
}
string$.$_slice.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'T',l:[{$t:{t:$_String}},{$t:{t:$_String}}]},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:$_String,$an:function(){return[doc($CCMM$['ceylon.language'].String.$m.slice.$an.doc[0]),shared(),$_native()];},d:['$','String','$m','slice']};};atr$(string$,'size',function(){if (this.codePoints===undefined) {
this.codePoints = countCodepoints(this);
}
return this.codePoints;
string$.size.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$_String,$an:function(){return[doc($CCMM$['ceylon.language'].String.$at.size.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$$_String().$$.prototype.longerThan),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$$_String().$$.prototype.shorterThan)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared(),actual(),$_native()];},d:['$','String','$at','size']};};},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$_String,$an:function(){return[doc($CCMM$['ceylon.language'].String.$at.size.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$$_String().$$.prototype.longerThan),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$$_String().$$.prototype.shorterThan)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared(),actual(),$_native()];},d:['$','String','$at','size']};});atr$(string$,'lastIndex',function(){var string$=this;if((string$.size==0)){return null;}else {return string$.size.minus(1);}},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},$cont:$_String,$an:function(){return[doc($CCMM$['ceylon.language'].String.$at.lastIndex.$an.doc[0]),shared(),actual()];},d:['$','String','$at','lastIndex']};});string$.iterator=function(){
return this.length === 0 ? getEmptyIterator() : StringIterator(this);
}
string$.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:{t:Character}}},$ps:[],$cont:$_String,$an:function(){return[doc("An iterator for the characters of the string."),shared(),actual(),$_native()];},d:['$','String','$m','iterator']};};string$.getFromFirst=function(index){
if (index<0 || index>=this.length)
return null;
if (this._bumps===undefined)
this._bumps=[];
var cnt=0;
var mb=0;
for (var i=0;i<this._bumps.length;i++) {
mb=this._bumps[i];
if (mb<index)cnt++;
}
if (index<=this._maxidx) {
index+=cnt;
return Character(codepointFromString(this, index));
}
if (this._maxidx>mb)
mb=this._maxidx;
for (cnt=mb; cnt<index; cnt++) {
if ((this.charCodeAt(mb)&0xfc00) === 0xd800) {
this._bumps.push(mb);
++mb;
}
if (++mb >= this.length)
return getFinished();
}
if (this._maxidx===undefined || mb>this._maxidx)
this._maxidx=mb;
return Character(codepointFromString(this, mb));
}
string$.getFromFirst.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Character}]},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:$_String,$an:function(){return[doc($CCMM$['ceylon.language'].String.$m.getFromFirst.$an.doc[0]),shared(),actual(),$_native()];},d:['$','String','$m','getFromFirst']};};string$.contains=function(sub) {
var str;
if (sub.constructor === String) {str = sub}
else if (sub.constructor !== Character.$$) {return false}
else {str = codepointToString(sub.value)}
return this.indexOf(str) >= 0;
}
string$.contains.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'element',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:$_String,$an:function(){return[doc($CCMM$['ceylon.language'].String.$m.contains.$an.doc[0]),shared(),actual(),$_native()];},d:['$','String','$m','contains']};};string$.startsWith=function(str) {
if (str.length > this.length) {return false}
return cmpSubString(this, str, 0);
}
string$.startsWith.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'substring',$mt:'prm',$t:{t:List,a:{Element$List:{t:Anything}}},$an:function(){return[];}}],$cont:$_String,$an:function(){return[shared(),actual(),$_native()];},d:['$','String','$m','startsWith']};};string$.endsWith=function(str) {
var start = this.length - str.length
if (start < 0) {return false}
return cmpSubString(this, str, start);
}
string$.endsWith.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'substring',$mt:'prm',$t:{t:List,a:{Element$List:{t:Anything}}},$an:function(){return[];}}],$cont:$_String,$an:function(){return[shared(),actual(),$_native()];},d:['$','String','$m','endsWith']};};string$.plus=function(other) {
var size = this.codePoints + other.codePoints;
return $_String(this+other, isNaN(size)?undefined:size);
}
string$.plus.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$ps:[{$nm:'other',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:$_String,$an:function(){return[doc($CCMM$['ceylon.language'].String.$m.plus.$an.doc[0]),shared(),actual(),$_native()];},d:['$','String','$m','plus']};};string$.repeat=function(times) {
var sb = StringBuilder();
for (var i = 0; i < times; i++) {
sb.append(this);
}
return sb.string;
}
string$.repeat.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$ps:[{$nm:'times',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:$_String,$an:function(){return[doc($CCMM$['ceylon.language'].String.$m.repeat.$an.doc[0]),shared(),actual(),$_native()];},d:['$','String','$m','repeat']};};string$.$_replace=function(sub, repl) {
if (this.indexOf(sub) < 0) {
return this;
}
var ns = this.replace(sub, repl);
while (ns.indexOf(sub) >= 0) {
ns = ns.replace(sub, repl);
}
return ns;
}
string$.$_replace.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$ps:[{$nm:'substring',$mt:'prm',$t:{t:$_String},$an:function(){return[];}},{$nm:'replacement',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:$_String,$an:function(){return[doc($CCMM$['ceylon.language'].String.$m.replace.$an.doc[0]),shared(),$_native()];},d:['$','String','$m','replace']};};string$.replaceFirst=function(sub, repl) {
return this.replace(sub, repl);
}
string$.replaceFirst.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$ps:[{$nm:'substring',$mt:'prm',$t:{t:$_String},$an:function(){return[];}},{$nm:'replacement',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:$_String,$an:function(){return[doc($CCMM$['ceylon.language'].String.$m.replaceFirst.$an.doc[0]),shared(),$_native()];},d:['$','String','$m','replaceFirst']};};string$.compare=function(other) {
var cmp = this.localeCompare(other);
return cmp===0 ? getEqual() : (cmp<0 ? getSmaller():getLarger());
}
string$.compare.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Comparison},$ps:[{$nm:'other',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:$_String,$an:function(){return[doc($CCMM$['ceylon.language'].String.$m.compare.$an.doc[0]),shared(),actual(),$_native()];},d:['$','String','$m','compare']};};string$.longerThan=function(length) {
if (this.codePoints!==undefined) {return this.codePoints>length}
if (this.length <= length) {return false}
if (this.length<<1 > length) {return true}
this.codePoints = countCodepoints(this);
return this.codePoints>length;
}
string$.longerThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:$_String,$an:function(){return[doc($CCMM$['ceylon.language'].String.$m.longerThan.$an.doc[0]),see([$init$OpenValue()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$$_String().$$.prototype.$prop$getSize)].reifyCeylonType({t:ValueDeclaration$meta$declaration})),shared(),actual(),$_native()];},d:['$','String','$m','longerThan']};};string$.shorterThan=function(length) {
if (this.codePoints!==undefined) {return this.codePoints<length}
if (this.length < length) {return true}
if (this.length<<1 >= length) {return false}
this.codePoints = countCodepoints(this);
return this.codePoints<length;
}
string$.shorterThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:$_String,$an:function(){return[doc($CCMM$['ceylon.language'].String.$m.shorterThan.$an.doc[0]),see([$init$OpenValue()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$$_String().$$.prototype.$prop$getSize)].reifyCeylonType({t:ValueDeclaration$meta$declaration})),shared(),actual(),$_native()];},d:['$','String','$m','shorterThan']};};string$.equals=function(other) {
if (other.constructor===String) {
return other.valueOf()===this.valueOf();
} else if (is$(other, {t:$_String})) {
if (other.size===this.size) {
var oi=other.iterator();
var ti=this.iterator();
var oc=oi.next(); var tc;
while((tc=ti.next())!=getFinished()){
if (!tc.equals(oc))return false;
oc=oi.next();
}
return true;
}
}
return false;
}
string$.equals.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'that',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:$_String,$an:function(){return[doc($CCMM$['ceylon.language'].String.$m.equals.$an.doc[0]),shared(),actual(),$_native()];},d:['$','String','$m','equals']};};atr$(string$,'hash',function(){if (this._hash === undefined) {
var h=0;
for (var i = 0; i < this.length; i++) {
var c = this.charCodeAt(i);
h=(31*h+c)&0xffffffff;
}
this._hash=h;
}
return this._hash;
string$.hash.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$_String,$an:function(){return[shared(),actual(),$_native()];},d:['$','String','$at','hash']};};},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$_String,$an:function(){return[shared(),actual(),$_native()];},d:['$','String','$at','hash']};});atr$(string$,'string',function(){var string$=this;return string$;},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$_String,$an:function(){return[doc("This string."),shared(),actual()];},d:['$','String','$at','string']};});atr$(string$,'empty',function(){return this.length===0;
string$.empty.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:$_String,$an:function(){return[doc($CCMM$['ceylon.language'].String.$at.empty.$an.doc[0]),see([$init$OpenValue()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$$_String().$$.prototype.$prop$getSize)].reifyCeylonType({t:ValueDeclaration$meta$declaration})),shared(),actual(),$_native()];},d:['$','String','$at','empty']};};},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:$_String,$an:function(){return[doc($CCMM$['ceylon.language'].String.$at.empty.$an.doc[0]),see([$init$OpenValue()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$$_String().$$.prototype.$prop$getSize)].reifyCeylonType({t:ValueDeclaration$meta$declaration})),shared(),actual(),$_native()];},d:['$','String','$at','empty']};});atr$(string$,'coalesced',function(){var string$=this;return string$;},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$_String,$an:function(){return[doc("This string."),shared(),actual()];},d:['$','String','$at','coalesced']};});string$.clone=function (){var string$=this;return string$;};string$.clone.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$ps:[],$cont:$_String,$an:function(){return[doc("This string."),shared(),actual()];},d:['$','String','$m','clone']};};string$.largerThan=function(o){
return Comparable.$$.prototype.largerThan.call(this,o);
}
string$.largerThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'other',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:$_String,$an:function(){return[shared(),actual(),$_native()];},d:['$','String','$m','largerThan']};};string$.smallerThan=function(o){
return Comparable.$$.prototype.smallerThan.call(this,o);
}
string$.smallerThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'other',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:$_String,$an:function(){return[shared(),actual(),$_native()];},d:['$','String','$m','smallerThan']};};string$.notSmallerThan=function(o){
return Comparable.$$.prototype.notSmallerThan.call(this,o);
}
string$.notSmallerThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'other',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:$_String,$an:function(){return[shared(),actual(),$_native()];},d:['$','String','$m','notSmallerThan']};};string$.notLargerThan=function(o){
return Comparable.$$.prototype.notLargerThan.call(this,o);
}
string$.notLargerThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'other',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:$_String,$an:function(){return[shared(),actual(),$_native()];},d:['$','String','$m','notLargerThan']};};string$.by=function(step) {
var r = Iterable.$$.prototype.by.call(this, step);
return $_String(r);
}
string$.by.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:{t:Character}}},$ps:[{$nm:'step',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:$_String,$an:function(){return[shared(),actual(),$_native()];},d:['$','String','$m','by']};};string$.take=function(take) {
if (take==0) return getEmpty();
return this.segment(0, take);
}
string$.take.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$ps:[{$nm:'taking',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:$_String,$an:function(){return[shared(),actual(),$_native()];},d:['$','String','$m','take']};};string$.skip=function(skip) {
if (skip==0) return this;
return this.segment(skip, this.size);
}
string$.skip.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$ps:[{$nm:'skipping',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:$_String,$an:function(){return[shared(),actual(),$_native()];},d:['$','String','$m','skip']};};string$.firstOccurrence=function(subc) {
for (var i=0, count=0; i<this.length; count++) {
var cp = this.charCodeAt(i++);
if (((cp&0xfc00) === 0xd800) && i<this.length) {
cp = (cp<<10) + this.charCodeAt(i++) - 0x35fdc00;
}
if (cp === subc.value) {return count;}
}
this.codePoints = count;
return null;
}
string$.firstOccurrence.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},$ps:[{$nm:'element',$mt:'prm',$t:{t:Anything},$an:function(){return[];}}],$cont:$_String,$an:function(){return[shared(),actual(),$_native()];},d:['$','String','$m','firstOccurrence']};};string$.lastOccurrence=function(subc) {
for (var i=this.length-1, count=0; i>=0; count++) {
var cp = this.charCodeAt(i--);
if (((cp%0xfc00) === 0xdc00) && i>=0) {
cp = (this.charCodeAt(i--)<<10) + cp - 0x35fdc00;
}
if (cp === subc.value) {
if (this.codePoints === undefined) {this.codePoints = countCodepoints(this);}
return this.codePoints - count - 1;
}
}
this.codePoints = count;
return null;
}
string$.lastOccurrence.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},$ps:[{$nm:'element',$mt:'prm',$t:{t:Anything},$an:function(){return[];}}],$cont:$_String,$an:function(){return[shared(),actual(),$_native()];},d:['$','String','$m','lastOccurrence']};};})($_String.$$.prototype);}
return $_String;}
ex$.$init$$_String=$init$$_String;$init$$_String();var $sm;function cmpSubString(str, subStr, offset) {
for (var i=0; i<subStr.length; ++i) {
if (str.charCodeAt(offset+i)!==subStr.charCodeAt(i)) {return false}
}
return true;
}
function StringIterator(string) {
var that = new StringIterator.$$;
that.str = string;
that.index = 0;
return that;
}
StringIterator.$crtmm$=function(){return{$nm:'StringIterator',$mt:'c',$ps:[{$nm:'string',$t:{t:$_String}}],$an:function(){return[shared()];},mod:$CCMM$,d:['$','Iterator']}};
initTypeProto(StringIterator, 'ceylon.language::StringIterator', $init$Basic(), Iterator);
var StringIterator$proto = StringIterator.$$.prototype;
StringIterator$proto.$$targs$$={Element$Iterator:{t:Character}, Absent$Iterator:{t:Null}};
StringIterator$proto.next = function() {
if (this.index >= this.str.length) { return getFinished(); }
var first = this.str.charCodeAt(this.index++);
if ((first&0xfc00) !== 0xd800 || this.index >= this.str.length) {
return Character(first);
}
return Character((first<<10) + this.str.charCodeAt(this.index++) - 0x35fdc00);
}
function countCodepoints(str) {
var count = 0;
for (var i=0; i<str.length; ++i) {
++count;
if ((str.charCodeAt(i)&0xfc00) === 0xd800) {++i}
}
return count;
}
function codepointToString(cp) {
if (cp <= 0xffff) {
return String.fromCharCode(cp);
}
return String.fromCharCode((cp>>10)+0xd7c0, (cp&0x3ff)+0xdc00);
}
function codepointFromString(str, index) {
var first = str.charCodeAt(index);
if ((first&0xfc00) !== 0xd800) {return first}
var second = str.charCodeAt(index+1);
return isNaN(second) ? first : ((first<<10) + second - 0x35fdc00);
}
ex$.codepointFromString=codepointFromString;
var _cacheChr={};
function Character(value,cache) {
if (cache) {
var that = _cacheChr[value];
if (that === undefined) {
that = new Character.$$;
that.value = value;
_cacheChr[value] = that;
}
return that;
}
if (value && value.getT$name && value.getT$name() === 'ceylon.language::Character') {
return value;
}
var that = new Character.$$;
Comparable({Other$Comparable:{t:Character}},that);
Enumerable({Other$Enumerable:{t:Character}},that);
that.value = value;
return that;
}
Character.WS$={0x9:true, 0xa:true, 0xb:true, 0xc:true, 0xd:true, 0x20:true, 0x85:true,
0x1680:true, 0x180e:true, 0x2028:true, 0x2029:true, 0x205f:true, 0x3000:true,
0x1c:true, 0x1d:true, 0x1e:true, 0x1f:true};
for (var i=0x2000; i<0x2007; i++) { Character.WS$[i]=true; }
for (var i=0x2008; i<=0x200a; i++) { Character.WS$[i]=true; }
Character.dig$={0x30:true, 0x660:true, 0x6f0:true, 0x7c0:true, 0x966:true, 0x9e6:true, 0xa66:true,
0xae6:true, 0xb66:true, 0xbe6:true, 0xc66:true, 0xce6:true, 0xd66:true, 0xe50:true,
0xed0:true, 0xf20:true, 0x1040:true, 0x1090:true, 0x17e0:true, 0x1810:true, 0x1946:true,
0x19d0:true, 0x1a80:true, 0x1a90:true, 0x1b50:true, 0x1bb0:true, 0x1c40:true, 0x1c50:true,
0xa620:true, 0xa8d0:true, 0xa900:true, 0xa9d0:true, 0xaa50:true, 0xabf0:true, 0xff10:true,
0x104a0:true, 0x11066:true, 0x110f0:true, 0x11136:true, 0x111d0:true, 0x116c0:true}
Character.titlecase$={
0x1c5: [0x1c4, 0x1c6], 0x1c8: [0x1c7, 0x1c9], 0x1cb: [0x1ca, 0x1cc], 0x1f2: [0x1f1, 0x1f3],
0x1f88: [undefined, 0x1f80], 0x1f89: [undefined, 0x1f81], 0x1f8a: [undefined, 0x1f82],
0x1f8b: [undefined, 0x1f83], 0x1f8c: [undefined, 0x1f84], 0x1f8d: [undefined, 0x1f85],
0x1f8e: [undefined, 0x1f86], 0x1f8f: [undefined, 0x1f87], 0x1f98: [undefined, 0x1f90],
0x1f99: [undefined, 0x1f91], 0x1f9a: [undefined, 0x1f92], 0x1f9b: [undefined, 0x1f93],
0x1f9c: [undefined, 0x1f94], 0x1f9d: [undefined, 0x1f95], 0x1f9e: [undefined, 0x1f96],
0x1f9f: [undefined, 0x1f97], 0x1fa8: [undefined, 0x1fa0], 0x1fa9: [undefined, 0x1fa1],
0x1faa: [undefined, 0x1fa2], 0x1fab: [undefined, 0x1fa3], 0x1fac: [undefined, 0x1fa4],
0x1fad: [undefined, 0x1fa5], 0x1fae: [undefined, 0x1fa6], 0x1faf: [undefined, 0x1fa7],
0x1fbc: [undefined, 0x1fb3], 0x1fcc: [undefined, 0x1fc3], 0x1ffc: [undefined, 0x1ff3]
}
Character.toTitlecase$={
0x1c6:0x1c5, 0x1c7:0x1c8, 0x1ca:0x1cb, 0x1f1:0x1f2,
0x1c4:0x1c5, 0x1c9:0x1c8, 0x1cc:0x1cb, 0x1f3:0x1f2, 0x1f80:0x1f88, 0x1f81:0x1f89, 0x1f82:0x1f8a,
0x1f83:0x1f8b, 0x1f84:0x1f8c, 0x1f85:0x1f8d, 0x1f86:0x1f8e, 0x1f87:0x1f8f, 0x1f90:0x1f98,
0x1f91:0x1f99, 0x1f92:0x1f9a, 0x1f93:0x1f9b, 0x1f94:0x1f9c, 0x1f95:0x1f9d, 0x1f96:0x1f9e,
0x1f97:0x1f9f, 0x1fa0:0x1fa8, 0x1fa1:0x1fa9, 0x1fa2:0x1faa, 0x1fa3:0x1fab, 0x1fa4:0x1fac,
0x1fa5:0x1fad, 0x1fa6:0x1fae, 0x1fa7:0x1faf, 0x1fb3:0x1fbc, 0x1fc3:0x1fcc, 0x1ff3:0x1ffc
}
Character.$crtmm$=function(){return{mod:$CCMM$,'super':{t:$_Object},$ps:[{$nm:'character',$mt:'prm',$t:{t:Character},$an:function(){return[];}}],satisfies:[{t:Comparable,a:{Other$Comparable:{t:Character}}},{t:Enumerable,a:{Other$Enumerable:{t:Character}}}],$an:function(){return[doc($CCMM$['ceylon.language'].Character.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$_String)].reifyCeylonType({t:ClassDeclaration$meta$declaration})),by(["Gavin"].reifyCeylonType({t:$_String})),shared(),$_final(),$_native()];},d:['$','Character']};};
ex$.Character=Character;function $init$Character(){if(Character.$$===undefined){initTypeProto(Character,'ceylon.language::Character',$init$$_Object(),$init$Comparable(),$init$Enumerable());
(function(character$){atr$(character$,'string',function(){if (this._str===undefined) {
this._str=codepointToString(this.value);
}
return this._str;
character$.string.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Character,$an:function(){return[doc("A string containing just this character."),shared(),actual(),$_native()];},d:['$','Character','$at','string']};};},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Character,$an:function(){return[doc("A string containing just this character."),shared(),actual(),$_native()];},d:['$','Character','$at','string']};});atr$(character$,'lowercased',function(){var lcstr = codepointToString(this.value).toLowerCase();
return Character(codepointFromString(lcstr, 0));
character$.lowercased.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Character},$cont:Character,$an:function(){return[doc($CCMM$['ceylon.language'].Character.$at.lowercased.$an.doc[0]),shared(),$_native()];},d:['$','Character','$at','lowercased']};};},undefined,function(){return{mod:$CCMM$,$t:{t:Character},$cont:Character,$an:function(){return[doc($CCMM$['ceylon.language'].Character.$at.lowercased.$an.doc[0]),shared(),$_native()];},d:['$','Character','$at','lowercased']};});atr$(character$,'uppercased',function(){var ucstr = codepointToString(this.value).toUpperCase();
return Character(codepointFromString(ucstr, 0));
character$.uppercased.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Character},$cont:Character,$an:function(){return[doc($CCMM$['ceylon.language'].Character.$at.uppercased.$an.doc[0]),shared(),$_native()];},d:['$','Character','$at','uppercased']};};},undefined,function(){return{mod:$CCMM$,$t:{t:Character},$cont:Character,$an:function(){return[doc($CCMM$['ceylon.language'].Character.$at.uppercased.$an.doc[0]),shared(),$_native()];},d:['$','Character','$at','uppercased']};});atr$(character$,'titlecased',function(){var tc = Character.toTitlecase$[this.value];
return tc===undefined ? this.uppercased : Character(tc);
character$.titlecased.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Character},$cont:Character,$an:function(){return[doc("The title case representation of this character."),shared(),$_native()];},d:['$','Character','$at','titlecased']};};},undefined,function(){return{mod:$CCMM$,$t:{t:Character},$cont:Character,$an:function(){return[doc("The title case representation of this character."),shared(),$_native()];},d:['$','Character','$at','titlecased']};});atr$(character$,'lowercase',function(){var str = codepointToString(this.value);
return str.toUpperCase()!==str && !(this.value in Character.titlecase$);
character$.lowercase.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:Character,$an:function(){return[doc($CCMM$['ceylon.language'].Character.$at.lowercase.$an.doc[0]),shared(),$_native()];},d:['$','Character','$at','lowercase']};};},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:Character,$an:function(){return[doc($CCMM$['ceylon.language'].Character.$at.lowercase.$an.doc[0]),shared(),$_native()];},d:['$','Character','$at','lowercase']};});atr$(character$,'uppercase',function(){var str = codepointToString(this.value);
return str.toLowerCase()!==str && !(this.value in Character.titlecase$);
character$.uppercase.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:Character,$an:function(){return[doc($CCMM$['ceylon.language'].Character.$at.uppercase.$an.doc[0]),shared(),$_native()];},d:['$','Character','$at','uppercase']};};},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:Character,$an:function(){return[doc($CCMM$['ceylon.language'].Character.$at.uppercase.$an.doc[0]),shared(),$_native()];},d:['$','Character','$at','uppercase']};});atr$(character$,'titlecase',function(){return this.value in Character.titlecase$;
character$.titlecase.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:Character,$an:function(){return[doc($CCMM$['ceylon.language'].Character.$at.titlecase.$an.doc[0]),shared(),$_native()];},d:['$','Character','$at','titlecase']};};},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:Character,$an:function(){return[doc($CCMM$['ceylon.language'].Character.$at.titlecase.$an.doc[0]),shared(),$_native()];},d:['$','Character','$at','titlecase']};});atr$(character$,'digit',function(){var check = this.value & 0xfffffff0;
if (check in Character.dig$) {
return (this.value&0xf) <= 9;
}
if ((check|6) in Character.dig$) {
return (this.value&0xf) >= 6;
}
return this.value>=0x1d7ce && this.value<=0x1d7ff;
character$.digit.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:Character,$an:function(){return[doc($CCMM$['ceylon.language'].Character.$at.digit.$an.doc[0]),shared(),$_native()];},d:['$','Character','$at','digit']};};},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:Character,$an:function(){return[doc($CCMM$['ceylon.language'].Character.$at.digit.$an.doc[0]),shared(),$_native()];},d:['$','Character','$at','digit']};});atr$(character$,'letter',function(){//TODO: this captures only letters that have case
var str = codepointToString(this.value);
return str.toUpperCase()!==str || str.toLowerCase()!==str || (this.value in Character.titlecase$);
character$.letter.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:Character,$an:function(){return[doc($CCMM$['ceylon.language'].Character.$at.letter.$an.doc[0]),shared(),$_native()];},d:['$','Character','$at','letter']};};},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:Character,$an:function(){return[doc($CCMM$['ceylon.language'].Character.$at.letter.$an.doc[0]),shared(),$_native()];},d:['$','Character','$at','letter']};});atr$(character$,'whitespace',function(){return this.value in Character.WS$;
character$.whitespace.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:Character,$an:function(){return[doc($CCMM$['ceylon.language'].Character.$at.whitespace.$an.doc[0]),shared(),$_native()];},d:['$','Character','$at','whitespace']};};},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:Character,$an:function(){return[doc($CCMM$['ceylon.language'].Character.$at.whitespace.$an.doc[0]),shared(),$_native()];},d:['$','Character','$at','whitespace']};});atr$(character$,'control',function(){return this.value<32 || this.value===127;
character$.control.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:Character,$an:function(){return[doc("Determine if this character is an ISO control \ncharacter."),shared(),$_native()];},d:['$','Character','$at','control']};};},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:Character,$an:function(){return[doc("Determine if this character is an ISO control \ncharacter."),shared(),$_native()];},d:['$','Character','$at','control']};});atr$(character$,'integer',function(){return this.value;
character$.integer.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Character,$an:function(){return[doc("The code point of the character."),shared(),$_native()];},d:['$','Character','$at','integer']};};},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Character,$an:function(){return[doc("The code point of the character."),shared(),$_native()];},d:['$','Character','$at','integer']};});character$.compare=function(other) {
return this.value===other.value ? getEqual()
: (this.value<other.value ? getSmaller():getLarger());
}
character$.compare.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Comparison},$ps:[{$nm:'other',$mt:'prm',$t:{t:Character},$an:function(){return[];}}],$cont:Character,$an:function(){return[doc($CCMM$['ceylon.language'].Character.$m.compare.$an.doc[0]),shared(),actual(),$_native()];},d:['$','Character','$m','compare']};};character$.equals=function(other) {
return other.constructor===Character.$$ && other.value===this.value;
}
character$.equals.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'that',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:Character,$an:function(){return[doc($CCMM$['ceylon.language'].Character.$m.equals.$an.doc[0]),shared(),actual(),$_native()];},d:['$','Character','$m','equals']};};atr$(character$,'hash',function(){return this.value;
character$.hash.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Character,$an:function(){return[doc("The code point of the character."),shared(),actual(),$_native()];},d:['$','Character','$at','hash']};};},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Character,$an:function(){return[doc("The code point of the character."),shared(),actual(),$_native()];},d:['$','Character','$at','hash']};});atr$(character$,'predecessor',function(){var succ = this.value-1;
if ((succ&0xf800) === 0xd800) {return Character(0xd7ff)}
return Character((succ>=0) ? succ:0x10ffff);
character$.predecessor.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Character},$cont:Character,$an:function(){return[doc($CCMM$['ceylon.language'].Character.$at.predecessor.$an.doc[0]),shared(),actual(),$_native()];},d:['$','Character','$at','predecessor']};};},undefined,function(){return{mod:$CCMM$,$t:{t:Character},$cont:Character,$an:function(){return[doc($CCMM$['ceylon.language'].Character.$at.predecessor.$an.doc[0]),shared(),actual(),$_native()];},d:['$','Character','$at','predecessor']};});atr$(character$,'successor',function(){var succ = this.value+1;
if ((succ&0xf800) === 0xd800) {return Character(0xe000)}
return Character((succ<=0x10ffff) ? succ:0);
character$.successor.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Character},$cont:Character,$an:function(){return[doc($CCMM$['ceylon.language'].Character.$at.successor.$an.doc[0]),shared(),actual(),$_native()];},d:['$','Character','$at','successor']};};},undefined,function(){return{mod:$CCMM$,$t:{t:Character},$cont:Character,$an:function(){return[doc($CCMM$['ceylon.language'].Character.$at.successor.$an.doc[0]),shared(),actual(),$_native()];},d:['$','Character','$at','successor']};});atr$(character$,'integerValue',function(){return this.value;
character$.integerValue.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Character,$an:function(){return[doc("The code point of the character."),shared(),actual(),$_native()];},d:['$','Character','$at','integerValue']};};},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Character,$an:function(){return[doc("The code point of the character."),shared(),actual(),$_native()];},d:['$','Character','$at','integerValue']};});character$.neighbour=function(offset) {
return Character(this.value+offset);
}
character$.neighbour.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Character},$ps:[{$nm:'offset',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Character,$an:function(){return[shared(),actual(),$_native()];},d:['$','Character','$m','neighbour']};};character$.largerThan=function largerThan(other) {
return this.value>other.value;
}
character$.largerThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'other',$mt:'prm',$t:{t:Character},$an:function(){return[];}}],$cont:Character,$an:function(){return[shared(),actual(),$_native()];},d:['$','Character','$m','largerThan']};};character$.smallerThan=function smallerThan(other) {
return other.value>this.value;
}
character$.smallerThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'other',$mt:'prm',$t:{t:Character},$an:function(){return[];}}],$cont:Character,$an:function(){return[shared(),actual(),$_native()];},d:['$','Character','$m','smallerThan']};};character$.notSmallerThan=function notSmallerThan(other) {
return !this.smallerThan(other);
}
character$.notSmallerThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'other',$mt:'prm',$t:{t:Character},$an:function(){return[];}}],$cont:Character,$an:function(){return[shared(),actual(),$_native()];},d:['$','Character','$m','notSmallerThan']};};character$.notLargerThan=function notLargerThan(other) {
return !this.largerThan(other);
}
character$.notLargerThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'other',$mt:'prm',$t:{t:Character},$an:function(){return[];}}],$cont:Character,$an:function(){return[shared(),actual(),$_native()];},d:['$','Character','$m','notLargerThan']};};atr$(character$,'$sn',function(){return this.$sn_;},undefined,function(){return{mod:$CCMM$,$t:{t:Character},$cont:Character,d:['$','Character','$at','character$f3csq2']};});})(Character.$$.prototype);}
return Character;}
ex$.$init$Character=$init$Character;$init$Character();
function any($so){var $sq;for(var $sp=$so.iterator();($sq=$sp.next())!==getFinished();){if($sq){return true;}}return false;}
ex$.any=any;any.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'values',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:{t:$_Boolean}}},$an:function(){return[];}}],$an:function(){return[doc($CCMM$['ceylon.language'].any.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),every)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared()];},d:['$','any']};};var byDecreasing=function ($sr,$$$mptypes){return function($ss,$st){return $sr($st).compare($sr($ss));}}
;byDecreasing.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Comparison},$ps:[{$nm:'comparable',$mt:'prm',$pt:'f',$t:'Value$byDecreasing',$an:function(){return[];}}],$tp:{Element$byDecreasing:{},Value$byDecreasing:{'satisfies':[{t:Comparable,a:{Other$Comparable:'Value$byDecreasing'}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].byDecreasing.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),byIncreasing)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared()];},d:['$','byDecreasing']};};
ex$.byDecreasing=byDecreasing;var byIncreasing=function ($su,$$$mptypes){return function($sv,$sw){return $su($sv).compare($su($sw));}}
;byIncreasing.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Comparison},$ps:[{$nm:'comparable',$mt:'prm',$pt:'f',$t:'Value$byIncreasing',$an:function(){return[];}}],$tp:{Element$byIncreasing:{},Value$byIncreasing:{'satisfies':[{t:Comparable,a:{Other$Comparable:'Value$byIncreasing'}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].byIncreasing.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),byDecreasing)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared()];},d:['$','byIncreasing']};};
ex$.byIncreasing=byIncreasing;var byItem=function ($sx,$$$mptypes){return function($sy,$sz){return $sx($sy.item,$sz.item);}}
;byItem.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Comparison},$ps:[{$nm:'comparing',$mt:'prm',$pt:'f',$t:{t:Comparison},$an:function(){return[];}}],$tp:{Item$byItem:{'satisfies':[{t:$_Object}]}},$an:function(){return[doc($CCMM$['ceylon.language'].byItem.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),byKey)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared()];},d:['$','byItem']};};
ex$.byItem=byItem;var byKey=function ($t0,$$$mptypes){return function($t1,$t2){return $t0($t1.key,$t2.key);}}
;byKey.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Comparison},$ps:[{$nm:'comparing',$mt:'prm',$pt:'f',$t:{t:Comparison},$an:function(){return[];}}],$tp:{Key$byKey:{'satisfies':[{t:$_Object}]}},$an:function(){return[doc($CCMM$['ceylon.language'].byKey.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),byItem)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared()];},d:['$','byKey']};};
ex$.byKey=byKey;var coalesce=function ($t3,$$$mptypes){return $t3.coalesced;};coalesce.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:{t:'i',l:['Element$coalesce',{t:$_Object}]}}},$ps:[{$nm:'values',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Element$coalesce'}},$an:function(){return[doc("The values, some of which may be null.")];}}],$tp:{Element$coalesce:{}},$an:function(){return[doc($CCMM$['ceylon.language'].coalesce.$an.doc[0]),shared()];},d:['$','coalesce']};};
ex$.coalesce=coalesce;function count($t4){var $t5=(0);function set$t5($t6){return $t5=$t6;};var $t8;for(var $t7=$t4.iterator();($t8=$t7.next())!==getFinished();){if($t8){($t9=$t5,$t5=$t9.successor,$t9);var $t9;}}return $t5;}
ex$.count=count;count.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$ps:[{$nm:'values',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:{t:$_Boolean}}},$an:function(){return[];}}],$an:function(){return[doc($CCMM$['ceylon.language'].count.$an.doc[0]),shared()];},d:['$','count']};};function emptyOrSingleton($ta,$$$mptypes){var $tb;if(($tb=$ta)!==null){return tpl$([$tb],{t:'T',l:[$$$mptypes.Element$emptyOrSingleton]});}else {return getEmpty();}}
ex$.emptyOrSingleton=emptyOrSingleton;emptyOrSingleton.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'T',l:[{$t:'Element$emptyOrSingleton',$def:1}]},$ps:[{$nm:'element',$mt:'prm',$t:{t:'u',l:[{t:Null},'Element$emptyOrSingleton']},$an:function(){return[];}}],$tp:{Element$emptyOrSingleton:{'satisfies':[{t:$_Object}]}},$an:function(){return[doc($CCMM$['ceylon.language'].emptyOrSingleton.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Tuple),$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Empty)].reifyCeylonType({t:'u',l:[{t:ClassDeclaration$meta$declaration},{t:InterfaceDeclaration$meta$declaration}]})),shared()];},d:['$','emptyOrSingleton']};};var curry=function ($tc,$$$mptypes){return function($td){return flatten($JsCallable((function ($te){return unflatten($tc,{Return$unflatten:$$$mptypes.Return$curry,Args$unflatten:{t:'T',l:[$$$mptypes.First$curry,{t:Anything}]}})(Tuple($td,$te,{First$Tuple:$$$mptypes.First$curry,Rest$Tuple:$$$mptypes.Rest$curry,Element$Tuple:$$$mptypes.Argument$curry}));}),[{$nm:'args',$mt:'prm',$t:'Rest$curry',$an:function(){return[];}}],{Return$Callable:$$$mptypes.Return$curry,Arguments$Callable:{t:'T',l:[$$$mptypes.Rest$curry]}}),{Args$flatten:$$$mptypes.Rest$curry,Return$flatten:$$$mptypes.Return$curry});}}
;curry.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Callable,a:{Return$Callable:'Return$curry',Arguments$Callable:'Rest$curry'}},$ps:[{$nm:'f',$mt:'prm',$t:{t:Callable,a:{Return$Callable:'Return$curry',Arguments$Callable:{t:'T',l:[{$t:'First$curry'}]}}},$an:function(){return[];}}],$tp:{Return$curry:{},Argument$curry:{},First$curry:{'satisfies':['Argument$curry']},Rest$curry:{'satisfies':[{t:Sequential,a:{Element$Sequential:'Argument$curry'}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].curry.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),uncurry),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),compose)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared()];},d:['$','curry']};};
ex$.curry=curry;var uncurry=function ($tf,$$$mptypes){return flatten($JsCallable((function ($tg){return unflatten($JsCallable($tf($tg.first),[],{Return$Callable:$$$mptypes.Return$uncurry,Arguments$Callable:$$$mptypes.Rest$uncurry}),{Return$unflatten:$$$mptypes.Return$uncurry,Args$unflatten:$$$mptypes.Rest$uncurry})($tg.rest);}),[{$nm:'args',$mt:'prm',$t:{t:'T',l:[{$t:'First$uncurry'}]},$an:function(){return[];}}],{Return$Callable:$$$mptypes.Return$uncurry,Arguments$Callable:{t:'T',l:[{t:'T',l:[$$$mptypes.First$uncurry,{t:Anything}]}]}}),{Args$flatten:{t:'T',l:[$$$mptypes.First$uncurry,{t:Anything}]},Return$flatten:$$$mptypes.Return$uncurry});};uncurry.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Callable,a:{Return$Callable:'Return$uncurry',Arguments$Callable:{t:'T',l:[{$t:'First$uncurry'}]}}},$ps:[{$nm:'f',$mt:'prm',$pt:'f',$t:{t:Callable,a:{Return$Callable:'Return$uncurry',Arguments$Callable:'Rest$uncurry'}},$an:function(){return[];}}],$tp:{Return$uncurry:{},Argument$uncurry:{},First$uncurry:{'satisfies':['Argument$uncurry']},Rest$uncurry:{'satisfies':[{t:Sequential,a:{Element$Sequential:'Argument$uncurry'}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].uncurry.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),curry),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),compose)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared()];},d:['$','uncurry']};};
ex$.uncurry=uncurry;var entries=function ($th,$$$mptypes){return $th.indexed;};entries.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:'u',l:[{t:'i',l:['Element$entries',{t:Null}]},'Absent$entries']},Element$Iterable:{t:Entry,a:{Key$Entry:{t:Integer},Item$Entry:{t:'i',l:['Element$entries',{t:$_Object}]}}}}},$ps:[{$nm:'elements',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:'Absent$entries',Element$Iterable:'Element$entries'}},$an:function(){return[];}}],$tp:{Element$entries:{},Absent$entries:{'satisfies':[{t:Null}]}},$an:function(){return[doc($CCMM$['ceylon.language'].entries.$an.doc[0]),see([$init$OpenValue()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Iterable().$$.prototype.$prop$getIndexed)].reifyCeylonType({t:ValueDeclaration$meta$declaration})),shared()];},d:['$','entries']};};
ex$.entries=entries;var equalTo=function ($ti,$$$mptypes){return function($tj){return $tj.equals($ti);}}
;equalTo.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'val',$mt:'prm',$t:'Element$equalTo',$an:function(){return[];}}],$tp:{Element$equalTo:{'satisfies':[{t:$_Object}]}},$an:function(){return[doc($CCMM$['ceylon.language'].equalTo.$an.doc[0]),shared()];},d:['$','equalTo']};};
ex$.equalTo=equalTo;var $_apply=function ($tk,$tl,$$$mptypes){return unflatten($tk,{Return$unflatten:$$$mptypes.Return$apply,Args$unflatten:$$$mptypes.Args$apply})($tl);};$_apply.$crtmm$=function(){return{mod:$CCMM$,$t:'Return$apply',$ps:[{$nm:'f',$mt:'prm',$t:{t:Callable,a:{Return$Callable:'Return$apply',Arguments$Callable:'Args$apply'}},$an:function(){return[];}},{$nm:'args',$mt:'prm',$t:'Args$apply',$an:function(){return[];}}],$tp:{Return$apply:{},Args$apply:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].apply.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),unflatten)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared()];},d:['$','apply']};};
ex$.$_apply=$_apply;
function every($tm){var $to;for(var $tn=$tm.iterator();($to=$tn.next())!==getFinished();){if(!$to){return false;}}return true;}
ex$.every=every;every.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'values',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:{t:$_Boolean}}},$an:function(){return[];}}],$an:function(){return[doc($CCMM$['ceylon.language'].every.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),any)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared()];},d:['$','every']};};function first($tp,$$$mptypes){var $tq;var $tr;if(!is$(($tr=$tp.iterator().next()),{t:Finished})){$tq=$tr;}else {$tq=null;}//assert at first.ceylon (12:4-12:34)
var $ts;if(!(is$(($ts=$tq),{t:'u',l:[$$$mptypes.Absent$first,$$$mptypes.Value$first]}))) {throw wrapexc(AssertionError("Assertion failed: \'is Absent|Value first\' at first.ceylon (12:11-12:33)"),'12:4-12:34','first.ceylon'); }
return $ts;}
ex$.first=first;first.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Absent$first','Value$first']},$ps:[{$nm:'values',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:'Absent$first',Element$Iterable:'Value$first'}},$an:function(){return[];}}],$tp:{Value$first:{},Absent$first:{'satisfies':[{t:Null}]}},$an:function(){return[doc($CCMM$['ceylon.language'].first.$an.doc[0]),shared()];},d:['$','first']};};var forItem=function ($tt,$$$mptypes){return function($tu){return $tt($tu.item);}}
;forItem.$crtmm$=function(){return{mod:$CCMM$,$t:'Result$forItem',$ps:[{$nm:'resulting',$mt:'prm',$pt:'f',$t:'Result$forItem',$an:function(){return[];}}],$tp:{Item$forItem:{'satisfies':[{t:$_Object}]},Result$forItem:{}},$an:function(){return[doc($CCMM$['ceylon.language'].forItem.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),forKey)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared()];},d:['$','forItem']};};
ex$.forItem=forItem;var forKey=function ($tv,$$$mptypes){return function($tw){return $tv($tw.key);}}
;forKey.$crtmm$=function(){return{mod:$CCMM$,$t:'Result$forKey',$ps:[{$nm:'resulting',$mt:'prm',$pt:'f',$t:'Result$forKey',$an:function(){return[];}}],$tp:{Key$forKey:{'satisfies':[{t:$_Object}]},Result$forKey:{}},$an:function(){return[doc($CCMM$['ceylon.language'].forKey.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),forItem)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared()];},d:['$','forKey']};};
ex$.forKey=forKey;var greaterThan=function ($tx,$$$mptypes){return function($ty){return $ty.compare($tx).equals(getLarger());}}
;greaterThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'val',$mt:'prm',$t:'Element$greaterThan',$an:function(){return[];}}],$tp:{Element$greaterThan:{'satisfies':[{t:Comparable,a:{Other$Comparable:'Element$greaterThan'}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].greaterThan.$an.doc[0]),deprecated("use [[Comparable.smallerThan]]"),shared()];},d:['$','greaterThan']};};
ex$.greaterThan=greaterThan;var concatenate=function ($tz,$$$mptypes){if($tz===undefined){$tz=getEmpty();}
return tpl$([],undefined,Comprehension(function(){var $u0=$tz.iterator();var $u1=getFinished();var next$u1=function(){if(($u1=$u0.next())!==getFinished()){$u2=$u1.iterator();next$u3();return $u1;}
return getFinished();}
var $u2;var $u3=getFinished();var next$u3=function(){return $u3=$u2.next();}
next$u1();return function(){do{if($u3!==getFinished()){var $u4=$u3;var $u5=$u4;next$u3();return $u5;}
}while(next$u1()!==getFinished());return getFinished();}
},{Absent$Iterable:{t:Null},Element$Iterable:$$$mptypes.Element$concatenate}));};concatenate.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$concatenate'}},$ps:[{$nm:'iterables',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Element$concatenate'}}}},$an:function(){return[doc("The iterable objects to concatenate.")];}}],$tp:{Element$concatenate:{}},$an:function(){return[doc($CCMM$['ceylon.language'].concatenate.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),expand)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared()];},d:['$','concatenate']};};
ex$.concatenate=concatenate;var expand=function ($u6,$$$mptypes){return sarg$(function($u7){switch($u7){}return getFinished();},function(){return Comprehension(function(){var $u8=$u6.iterator();var $u9=getFinished();var next$u9=function(){if(($u9=$u8.next())!==getFinished()){$ua=$u9.iterator();next$ub();return $u9;}
return getFinished();}
var $ua;var $ub=getFinished();var next$ub=function(){return $ub=$ua.next();}
next$u9();return function(){do{if($ub!==getFinished()){var $uc=$ub;var $ud=$uc;next$ub();return $ud;}
}while(next$u9()!==getFinished());return getFinished();}
},{Absent$Iterable:{t:Null},Element$Iterable:$$$mptypes.Element$expand});},{Absent$Iterable:{t:'u',l:[$$$mptypes.InnerAbsent$expand,$$$mptypes.OuterAbsent$expand]},Element$Iterable:$$$mptypes.Element$expand});};expand.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:'u',l:['OuterAbsent$expand','InnerAbsent$expand']},Element$Iterable:'Element$expand'}},$ps:[{$nm:'iterables',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:'OuterAbsent$expand',Element$Iterable:{t:Iterable,a:{Absent$Iterable:'InnerAbsent$expand',Element$Iterable:'Element$expand'}}}},$an:function(){return[];}}],$tp:{Element$expand:{},OuterAbsent$expand:{'satisfies':[{t:Null}]},InnerAbsent$expand:{'satisfies':[{t:Null}]}},$an:function(){return[doc($CCMM$['ceylon.language'].expand.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),concatenate)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared()];},d:['$','expand']};};
ex$.expand=expand;var largest=function ($ue,$uf,$$$mptypes){return ($ug=($ue.compare($uf).equals(getLarger())?$ue:null),nn$($ug)?$ug:$uf);};largest.$crtmm$=function(){return{mod:$CCMM$,$t:'Element$largest',$ps:[{$nm:'x',$mt:'prm',$t:'Element$largest',$an:function(){return[];}},{$nm:'y',$mt:'prm',$t:'Element$largest',$an:function(){return[];}}],$tp:{Element$largest:{'satisfies':[{t:Comparable,a:{Other$Comparable:'Element$largest'}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].largest.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Comparable),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),smallest),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),max)].reifyCeylonType({t:'u',l:[{t:InterfaceDeclaration$meta$declaration},{t:FunctionDeclaration$meta$declaration}]})),shared()];},d:['$','largest']};};
ex$.largest=largest;var $ug;var lessThan=function ($uh,$$$mptypes){return function($ui){return $ui.compare($uh).equals(getSmaller());}}
;lessThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'val',$mt:'prm',$t:'Element$lessThan',$an:function(){return[];}}],$tp:{Element$lessThan:{'satisfies':[{t:Comparable,a:{Other$Comparable:'Element$lessThan'}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].lessThan.$an.doc[0]),deprecated("use [[Comparable.largerThan]]"),shared()];},d:['$','lessThan']};};
ex$.lessThan=lessThan;function max($uj,$$$mptypes){var $uk=$uj.iterator();var $ul;if(!is$(($ul=$uk.next()),{t:Finished})){var $um=$ul;function set$um($un){return $um=$un;};var $uo;while(!is$(($uo=$uk.next()),{t:Finished})){if($uo.compare($um).equals(getLarger())){$um=$uo;}}return $um;}else {//assert at max.ceylon (20:8-21:31)
var $up;if(!(is$(($up=null),$$$mptypes.Absent$max))) {throw wrapexc(AssertionError("iterable must be empty: \'is Absent null\' at max.ceylon (21:15-21:30)"),'20:8-21:31','max.ceylon'); }
return null;}}
ex$.max=max;max.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Absent$max','Value$max']},$ps:[{$nm:'values',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:'Absent$max',Element$Iterable:'Value$max'}},$an:function(){return[];}}],$tp:{Value$max:{'satisfies':[{t:Comparable,a:{Other$Comparable:'Value$max'}}]},Absent$max:{'satisfies':[{t:Null}]}},$an:function(){return[doc($CCMM$['ceylon.language'].max.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Comparable),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),min),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),largest)].reifyCeylonType({t:'u',l:[{t:InterfaceDeclaration$meta$declaration},{t:FunctionDeclaration$meta$declaration}]})),shared()];},d:['$','max']};};function min($uq,$$$mptypes){var $ur=$uq.iterator();var $us;if(!is$(($us=$ur.next()),{t:Finished})){var $ut=$us;function set$ut($uu){return $ut=$uu;};var $uv;while(!is$(($uv=$ur.next()),{t:Finished})){if($uv.compare($ut).equals(getSmaller())){$ut=$uv;}}return $ut;}else {//assert at min.ceylon (21:8-22:31)
var $uw;if(!(is$(($uw=null),$$$mptypes.Absent$min))) {throw wrapexc(AssertionError("iterable must be empty: \'is Absent null\' at min.ceylon (22:15-22:30)"),'21:8-22:31','min.ceylon'); }
return null;}}
ex$.min=min;min.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Absent$min','Value$min']},$ps:[{$nm:'values',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:'Absent$min',Element$Iterable:'Value$min'}},$an:function(){return[];}}],$tp:{Value$min:{'satisfies':[{t:Comparable,a:{Other$Comparable:'Value$min'}}]},Absent$min:{'satisfies':[{t:Null}]}},$an:function(){return[doc($CCMM$['ceylon.language'].min.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Comparable),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),max),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),smallest)].reifyCeylonType({t:'u',l:[{t:InterfaceDeclaration$meta$declaration},{t:FunctionDeclaration$meta$declaration}]})),shared()];},d:['$','min']};};var smallest=function ($ux,$uy,$$$mptypes){return ($uz=($ux.compare($uy).equals(getSmaller())?$ux:null),nn$($uz)?$uz:$uy);};smallest.$crtmm$=function(){return{mod:$CCMM$,$t:'Element$smallest',$ps:[{$nm:'x',$mt:'prm',$t:'Element$smallest',$an:function(){return[];}},{$nm:'y',$mt:'prm',$t:'Element$smallest',$an:function(){return[];}}],$tp:{Element$smallest:{'satisfies':[{t:Comparable,a:{Other$Comparable:'Element$smallest'}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].smallest.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Comparable),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),largest),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),min)].reifyCeylonType({t:'u',l:[{t:InterfaceDeclaration$meta$declaration},{t:FunctionDeclaration$meta$declaration}]})),shared()];},d:['$','smallest']};};
ex$.smallest=smallest;var $uz;function sum($v0,$$$mptypes){var $v1=$v0.iterator();//assert at sum.ceylon (7:4-7:43)
var $v2;if(!(!is$(($v2=$v1.next()),{t:Finished}))) {throw wrapexc(AssertionError("Assertion failed: \'!is Finished first = it.next()\' at sum.ceylon (7:11-7:42)"),'7:4-7:43','sum.ceylon'); }
var $v3=$v2;function set$v3($v4){return $v3=$v4;};var $v5;while(!is$(($v5=$v1.next()),{t:Finished})){($v3=$v3.plus($v5));}return $v3;}
ex$.sum=sum;sum.$crtmm$=function(){return{mod:$CCMM$,$t:'Value$sum',$ps:[{$nm:'values',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:{t:Nothing},Element$Iterable:'Value$sum'}},$an:function(){return[];}}],$tp:{Value$sum:{'satisfies':[{t:Summable,a:{Other$Summable:'Value$sum'}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].sum.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),product)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared()];},d:['$','sum']};};function product($v6,$$$mptypes){var $v7=$v6.first;function set$v7($v8){return $v7=$v8;};var $va;for(var $v9=$v6.rest.iterator();($va=$v9.next())!==getFinished();){($v7=$v7.times($va));}return $v7;}
ex$.product=product;product.$crtmm$=function(){return{mod:$CCMM$,$t:'Value$product',$ps:[{$nm:'values',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:{t:Nothing},Element$Iterable:'Value$product'}},$an:function(){return[];}}],$tp:{Value$product:{'satisfies':[{t:Numeric,a:{Other$Numeric:'Value$product'}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].product.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),sum)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared()];},d:['$','product']};};var zipEntries=function ($vb,$vc,$$$mptypes){return mapPairs(Entry,$vb,$vc,{FirstArgument$mapPairs:$$$mptypes.Key$zipEntries,Result$mapPairs:{t:Entry,a:{Key$Entry:$$$mptypes.Key$zipEntries,Item$Entry:$$$mptypes.Item$zipEntries}},FirstAbsent$mapPairs:$$$mptypes.KeyAbsent$zipEntries,SecondAbsent$mapPairs:$$$mptypes.ItemAbsent$zipEntries,SecondArgument$mapPairs:$$$mptypes.Item$zipEntries});};zipEntries.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:'u',l:['KeyAbsent$zipEntries','ItemAbsent$zipEntries']},Element$Iterable:{t:Entry,a:{Key$Entry:'Key$zipEntries',Item$Entry:'Item$zipEntries'}}}},$ps:[{$nm:'keys',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:'KeyAbsent$zipEntries',Element$Iterable:'Key$zipEntries'}},$an:function(){return[];}},{$nm:'items',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:'ItemAbsent$zipEntries',Element$Iterable:'Item$zipEntries'}},$an:function(){return[];}}],$tp:{Key$zipEntries:{'satisfies':[{t:$_Object}]},Item$zipEntries:{'satisfies':[{t:$_Object}]},KeyAbsent$zipEntries:{'satisfies':[{t:Null}]},ItemAbsent$zipEntries:{'satisfies':[{t:Null}]}},$an:function(){return[doc($CCMM$['ceylon.language'].zipEntries.$an.doc[0]),shared()];},d:['$','zipEntries']};};
ex$.zipEntries=zipEntries;var zipPairs=function ($vd,$ve,$$$mptypes){return mapPairs($JsCallable((function ($vf,$vg){return tpl$([$vf,$vg],{t:'T',l:[$$$mptypes.First$zipPairs,$$$mptypes.Second$zipPairs]});}),[{$nm:'first',$mt:'prm',$t:'First$zipPairs',$an:function(){return[];}},{$nm:'second',$mt:'prm',$t:'Second$zipPairs',$an:function(){return[];}}],{Return$Callable:{t:'T',l:[$$$mptypes.First$zipPairs,$$$mptypes.Second$zipPairs]},Arguments$Callable:{t:'T',l:[$$$mptypes.First$zipPairs,$$$mptypes.Second$zipPairs]}}),$vd,$ve,{FirstArgument$mapPairs:$$$mptypes.First$zipPairs,Result$mapPairs:{t:'T',l:[$$$mptypes.First$zipPairs,$$$mptypes.Second$zipPairs]},FirstAbsent$mapPairs:$$$mptypes.FirstAbsent$zipPairs,SecondAbsent$mapPairs:$$$mptypes.SecondAbsent$zipPairs,SecondArgument$mapPairs:$$$mptypes.Second$zipPairs});};zipPairs.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:'u',l:['FirstAbsent$zipPairs','SecondAbsent$zipPairs']},Element$Iterable:{t:'T',l:[{$t:'First$zipPairs'},{$t:'Second$zipPairs'}]}}},$ps:[{$nm:'firstElements',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:'FirstAbsent$zipPairs',Element$Iterable:'First$zipPairs'}},$an:function(){return[];}},{$nm:'secondElements',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:'SecondAbsent$zipPairs',Element$Iterable:'Second$zipPairs'}},$an:function(){return[];}}],$tp:{First$zipPairs:{},Second$zipPairs:{},FirstAbsent$zipPairs:{'satisfies':[{t:Null}]},SecondAbsent$zipPairs:{'satisfies':[{t:Null}]}},$an:function(){return[doc($CCMM$['ceylon.language'].zipPairs.$an.doc[0]),shared()];},d:['$','zipPairs']};};
ex$.zipPairs=zipPairs;var zip=function ($vh,$vi,$$$mptypes){return mapPairs(Tuple,$vh,$vi,{FirstArgument$mapPairs:$$$mptypes.Head$zip,Result$mapPairs:{t:'T',l:[$$$mptypes.Head$zip,{t:Anything}]},FirstAbsent$mapPairs:$$$mptypes.HeadAbsent$zip,SecondAbsent$mapPairs:$$$mptypes.TailAbsent$zip,SecondArgument$mapPairs:$$$mptypes.Tail$zip});};zip.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:'u',l:['HeadAbsent$zip','TailAbsent$zip']},Element$Iterable:{t:'T',l:[{$t:'Head$zip'}]}}},$ps:[{$nm:'heads',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:'HeadAbsent$zip',Element$Iterable:'Head$zip'}},$an:function(){return[];}},{$nm:'tails',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:'TailAbsent$zip',Element$Iterable:'Tail$zip'}},$an:function(){return[];}}],$tp:{Element$zip:{},Head$zip:{},Tail$zip:{'satisfies':[{t:Sequential,a:{Element$Sequential:'Element$zip'}}]},HeadAbsent$zip:{'satisfies':[{t:Null}]},TailAbsent$zip:{'satisfies':[{t:Null}]}},$an:function(){return[doc($CCMM$['ceylon.language'].zip.$an.doc[0]),shared()];},d:['$','zip']};};
ex$.zip=zip;var unzip=function ($vj,$$$mptypes){return tpl$([$vj.$_map($JsCallable((function ($vk){return $vk.first;}),[{$nm:'tuple',$mt:'prm',$t:{t:'T',l:[{$t:'Head$unzip'}]},$an:function(){return[];}}],{Return$Callable:$$$mptypes.Head$unzip,Arguments$Callable:{t:'T',l:[{t:'T',l:[$$$mptypes.Head$unzip,{t:Anything}]}]}}),{Result$map:$$$mptypes.Head$unzip}),$vj.$_map($JsCallable((function ($vl){return $vl.rest;}),[{$nm:'tuple',$mt:'prm',$t:{t:'T',l:[{$t:'Head$unzip'}]},$an:function(){return[];}}],{Return$Callable:$$$mptypes.Tail$unzip,Arguments$Callable:{t:'T',l:[{t:'T',l:[$$$mptypes.Head$unzip,{t:Anything}]}]}}),{Result$map:$$$mptypes.Tail$unzip})],{t:'T',l:[{t:Iterable,a:{Absent$Iterable:$$$mptypes.Absent$unzip,Element$Iterable:$$$mptypes.Head$unzip}},{t:Iterable,a:{Absent$Iterable:$$$mptypes.Absent$unzip,Element$Iterable:$$$mptypes.Tail$unzip}}]});};unzip.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'T',l:[{$t:{t:Iterable,a:{Absent$Iterable:'Absent$unzip',Element$Iterable:'Head$unzip'}}},{$t:{t:Iterable,a:{Absent$Iterable:'Absent$unzip',Element$Iterable:'Tail$unzip'}}}]},$ps:[{$nm:'tuples',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:'Absent$unzip',Element$Iterable:{t:'T',l:[{$t:'Head$unzip'}]}}},$an:function(){return[];}}],$tp:{Element$unzip:{},Head$unzip:{},Tail$unzip:{'satisfies':[{t:Sequential,a:{Element$Sequential:'Element$unzip'}}]},Absent$unzip:{'satisfies':[{t:Null}]}},$an:function(){return[doc($CCMM$['ceylon.language'].unzip.$an.doc[0]),shared()];},d:['$','unzip']};};
ex$.unzip=unzip;var unzipPairs=function ($vm,$$$mptypes){return tpl$([$vm.$_map($JsCallable((function ($vn){return $vn.$_get(0);}),[{$nm:'pair',$mt:'prm',$t:{t:'T',l:[{$t:'First$unzipPairs'},{$t:'Second$unzipPairs'}]},$an:function(){return[];}}],{Return$Callable:$$$mptypes.First$unzipPairs,Arguments$Callable:{t:'T',l:[{t:'T',l:[$$$mptypes.First$unzipPairs,$$$mptypes.Second$unzipPairs]}]}}),{Result$map:$$$mptypes.First$unzipPairs}),$vm.$_map($JsCallable((function ($vo){return $vo.$_get(1);}),[{$nm:'pair',$mt:'prm',$t:{t:'T',l:[{$t:'First$unzipPairs'},{$t:'Second$unzipPairs'}]},$an:function(){return[];}}],{Return$Callable:$$$mptypes.Second$unzipPairs,Arguments$Callable:{t:'T',l:[{t:'T',l:[$$$mptypes.First$unzipPairs,$$$mptypes.Second$unzipPairs]}]}}),{Result$map:$$$mptypes.Second$unzipPairs})],{t:'T',l:[{t:Iterable,a:{Absent$Iterable:$$$mptypes.Absent$unzipPairs,Element$Iterable:$$$mptypes.First$unzipPairs}},{t:Iterable,a:{Absent$Iterable:$$$mptypes.Absent$unzipPairs,Element$Iterable:$$$mptypes.Second$unzipPairs}}]});};unzipPairs.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'T',l:[{$t:{t:Iterable,a:{Absent$Iterable:'Absent$unzipPairs',Element$Iterable:'First$unzipPairs'}}},{$t:{t:Iterable,a:{Absent$Iterable:'Absent$unzipPairs',Element$Iterable:'Second$unzipPairs'}}}]},$ps:[{$nm:'pairs',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:'Absent$unzipPairs',Element$Iterable:{t:'T',l:[{$t:'First$unzipPairs'},{$t:'Second$unzipPairs'}]}}},$an:function(){return[];}}],$tp:{First$unzipPairs:{},Second$unzipPairs:{},Absent$unzipPairs:{'satisfies':[{t:Null}]}},$an:function(){return[doc($CCMM$['ceylon.language'].unzipPairs.$an.doc[0]),shared()];},d:['$','unzipPairs']};};
ex$.unzipPairs=unzipPairs;var unzipEntries=function ($vp,$$$mptypes){return tpl$([$vp.$_map($JsCallable(function($O$) {return $O$.key;},[],{Return$Callable:$$$mptypes.Key$unzipEntries,Arguments$Callable:{t:'T',l:[{t:Entry,a:{Key$Entry:$$$mptypes.Key$unzipEntries,Item$Entry:$$$mptypes.Item$unzipEntries}}]}}),{Result$map:$$$mptypes.Key$unzipEntries}),$vp.$_map($JsCallable(function($O$) {return $O$.item;},[],{Return$Callable:$$$mptypes.Item$unzipEntries,Arguments$Callable:{t:'T',l:[{t:Entry,a:{Key$Entry:$$$mptypes.Key$unzipEntries,Item$Entry:$$$mptypes.Item$unzipEntries}}]}}),{Result$map:$$$mptypes.Item$unzipEntries})],{t:'T',l:[{t:Iterable,a:{Absent$Iterable:$$$mptypes.Absent$unzipEntries,Element$Iterable:$$$mptypes.Key$unzipEntries}},{t:Iterable,a:{Absent$Iterable:$$$mptypes.Absent$unzipEntries,Element$Iterable:$$$mptypes.Item$unzipEntries}}]});};unzipEntries.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'T',l:[{$t:{t:Iterable,a:{Absent$Iterable:'Absent$unzipEntries',Element$Iterable:'Key$unzipEntries'}}},{$t:{t:Iterable,a:{Absent$Iterable:'Absent$unzipEntries',Element$Iterable:'Item$unzipEntries'}}}]},$ps:[{$nm:'entries',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:'Absent$unzipEntries',Element$Iterable:{t:Entry,a:{Key$Entry:'Key$unzipEntries',Item$Entry:'Item$unzipEntries'}}}},$an:function(){return[];}}],$tp:{Key$unzipEntries:{'satisfies':[{t:$_Object}]},Item$unzipEntries:{'satisfies':[{t:$_Object}]},Absent$unzipEntries:{'satisfies':[{t:Null}]}},$an:function(){return[doc($CCMM$['ceylon.language'].unzipEntries.$an.doc[0]),shared()];},d:['$','unzipEntries']};};
ex$.unzipEntries=unzipEntries;function mapPairs($vq,$vr,$vs,$$$mptypes){function $vt($$targs$$){var $vt$=new $vt.$$;$vt$.$$targs$$=$$targs$$;Iterable({Absent$Iterable:{t:'u',l:[$$$mptypes.FirstAbsent$mapPairs,$$$mptypes.SecondAbsent$mapPairs]},Element$Iterable:$$$mptypes.Result$mapPairs},$vt$);return $vt$;
};$vt.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:mapPairs,satisfies:[{t:Iterable,a:{Absent$Iterable:{t:'u',l:['FirstAbsent$mapPairs','SecondAbsent$mapPairs']},Element$Iterable:'Result$mapPairs'}}],d:['$','mapPairs','$o','iterable$x16jqt']};};function $init$$vt(){if($vt.$$===undefined){initTypeProto($vt,'ceylon.language::iterable',Basic,$init$Iterable());
(function($vt$){$vt$.iterator=function iterator(){var $vt$=this;var $vu=$vr.iterator();var $vv=$vs.iterator();function $vw($$targs$$){var $vw$=new $vw.$$;$vw$.outer$=$vt$;$vw$.$$targs$$=$$targs$$;Iterator({Element$Iterator:$$$mptypes.Result$mapPairs},$vw$);return $vw$;
};$vw.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:'Result$mapPairs'}}],d:['$','mapPairs','$o','iterable$x16jqt','$m','iterator','$o','iterator$5i9ypz']};};function $init$$vw(){if($vw.$$===undefined){initTypeProto($vw,'ceylon.language::iterable.iterator',Basic,$init$Iterator());
(function($vw$){$vw$.next=function next(){var $vw$=this;var $vx;var $vy;if(!is$(($vx=$vu.next()),{t:Finished})&&!is$(($vy=$vv.next()),{t:Finished})){return $vq($vx,$vy);}else {return getFinished();}};$vw$.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Result$mapPairs',{t:Finished}]},$ps:[],$cont:$vw,$an:function(){return[shared(),actual()];},d:['$','mapPairs','$o','iterable$x16jqt','$m','iterator','$o','iterator$5i9ypz','$m','next']};};})($vw.$$.prototype);}
return $vw;}
$init$$vw();var $vz;function get$vz(){if($vz===undefined){$vz=$init$$vw()({Element$Iterator:$$$mptypes.Result$mapPairs});$vz.$crtmm$=get$vz.$crtmm$;}
return $vz;}
get$vz.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$vw},$cont:iterator,d:['$','mapPairs','$o','iterable$x16jqt','$m','iterator','$o','iterator$5i9ypy']};};$prop$get$vz={get:get$vz,$crtmm$:get$vz.$crtmm$};get$vw=get$vz;$prop$get$vw=get$vz;return get$vz();};$vt$.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Result$mapPairs'}},$ps:[],$cont:$vt,$an:function(){return[shared(),actual()];},d:['$','mapPairs','$o','iterable$x16jqt','$m','iterator']};};})($vt.$$.prototype);}
return $vt;}
$init$$vt();var $w0;function get$w0(){if($w0===undefined){$w0=$init$$vt()({Absent$Iterable:{t:'u',l:[$$$mptypes.FirstAbsent$mapPairs,$$$mptypes.SecondAbsent$mapPairs]},Element$Iterable:$$$mptypes.Result$mapPairs});$w0.$crtmm$=get$w0.$crtmm$;}
return $w0;}
get$w0.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$vt},$cont:mapPairs,d:['$','mapPairs','$o','iterable$x16jqs']};};$prop$get$w0={get:get$w0,$crtmm$:get$w0.$crtmm$};get$vt=get$w0;$prop$get$vt=get$w0;return get$w0();}
ex$.mapPairs=mapPairs;mapPairs.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:'u',l:['FirstAbsent$mapPairs','SecondAbsent$mapPairs']},Element$Iterable:'Result$mapPairs'}},$ps:[{$nm:'collecting',$mt:'prm',$pt:'f',$t:'Result$mapPairs',$an:function(){return[];}},{$nm:'firstArguments',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:'FirstAbsent$mapPairs',Element$Iterable:'FirstArgument$mapPairs'}},$an:function(){return[];}},{$nm:'secondArguments',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:'SecondAbsent$mapPairs',Element$Iterable:'SecondArgument$mapPairs'}},$an:function(){return[];}}],$tp:{Result$mapPairs:{},FirstArgument$mapPairs:{},SecondArgument$mapPairs:{},FirstAbsent$mapPairs:{'satisfies':[{t:Null}]},SecondAbsent$mapPairs:{'satisfies':[{t:Null}]}},$an:function(){return[doc($CCMM$['ceylon.language'].mapPairs.$an.doc[0]),shared()];},d:['$','mapPairs']};};var print=function ($w1){return getProcess().writeLine(stringify($w1));};print.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'val',$mt:'prm',$t:{t:Anything},$an:function(){return[];}}],$an:function(){return[doc($CCMM$['ceylon.language'].print.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),getProcess().writeLine)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),by(["Gavin"].reifyCeylonType({t:$_String})),shared()];},d:['$','print']};};
ex$.print=print;function printAll($w2,$w3){if($w3===undefined){$w3=", ";}
var $w4;if(($w4=$w2.first)!==null){getProcess().write(stringify($w4));var $w6;for(var $w5=$w2.rest.iterator();($w6=$w5.next())!==getFinished();){getProcess().write($w3);getProcess().write(stringify($w6));}}getProcess().write(getOperatingSystem().newline);}
ex$.printAll=printAll;printAll.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'values',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:{t:Anything}}},$an:function(){return[];}},{$nm:'separator',$mt:'prm',$def:1,$t:{t:$_String},$an:function(){return[doc("A character sequence to use to separate the values")];}}],$an:function(){return[doc($CCMM$['ceylon.language'].printAll.$an.doc[0]),by(["Gavin"].reifyCeylonType({t:$_String})),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),getProcess().write)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared()];},d:['$','printAll']};};var stringify=function ($w7){return ($w8=($w9=$w7,nn$($w9)?$w9.string:null),nn$($w8)?$w8:"<null>");};stringify.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$ps:[{$nm:'val',$mt:'prm',$t:{t:Anything},$an:function(){return[];}}],d:['$','stringify']};};var $w8,$w9;function getNothing(){//assert at nothing.ceylon (10:4-11:18)
if(!(false)) {throw wrapexc(AssertionError("nothing may not be evaluated: \'false\' at nothing.ceylon (11:11-11:17)"),'10:4-11:18','nothing.ceylon'); }
}
getNothing.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Nothing},$an:function(){return[doc($CCMM$['ceylon.language'].nothing.$an.doc[0]),$_throws("AssertionError","when evaluated"),shared()];},d:['$','nothing']};}
ex$.getNothing=getNothing;var $prop$getNothing={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Nothing},$an:function(){return[doc($CCMM$['ceylon.language'].nothing.$an.doc[0]),$_throws($init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),AssertionError),"when evaluated"),shared()];},d:['$','nothing']};}};ex$.$prop$getNothing=$prop$getNothing;$prop$getNothing.get=getNothing;getNothing.$crtmm$=$prop$getNothing.$crtmm$;
var identical=function ($wa,$wb){return ($wa===$wb);};identical.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'x',$mt:'prm',$t:{t:Identifiable},$an:function(){return[doc("An object with well-defined identity.")];}},{$nm:'y',$mt:'prm',$t:{t:Identifiable},$an:function(){return[doc("A second object with well-defined identity.")];}}],$an:function(){return[doc($CCMM$['ceylon.language'].identical.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),identityHash)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared()];},d:['$','identical']};};
ex$.identical=identical;var compose=function ($wc,$wd,$$$mptypes){return flatten($JsCallable((function ($we){return $wc(unflatten($wd,{Return$unflatten:$$$mptypes.Y$compose,Args$unflatten:$$$mptypes.Args$compose})($we));}),[{$nm:'args',$mt:'prm',$t:'Args$compose',$an:function(){return[];}}],{Return$Callable:$$$mptypes.X$compose,Arguments$Callable:{t:'T',l:[$$$mptypes.Args$compose]}}),{Args$flatten:$$$mptypes.Args$compose,Return$flatten:$$$mptypes.X$compose});};compose.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Callable,a:{Return$Callable:'X$compose',Arguments$Callable:'Args$compose'}},$ps:[{$nm:'x',$mt:'prm',$t:{t:Callable,a:{Return$Callable:'X$compose',Arguments$Callable:{t:'T',l:[{$t:'Y$compose'}]}}},$an:function(){return[];}},{$nm:'y',$mt:'prm',$t:{t:Callable,a:{Return$Callable:'Y$compose',Arguments$Callable:'Args$compose'}},$an:function(){return[];}}],$tp:{X$compose:{},Y$compose:{},Args$compose:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].compose.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),curry),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),uncurry)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared()];},d:['$','compose']};};
ex$.compose=compose;var shuffle=function ($wf,$$$mptypes){return flatten($JsCallable((function ($wg){return flatten($JsCallable((function ($wh){return unflatten($JsCallable(unflatten($wf,{Return$unflatten:{t:Callable,a:{Return$Callable:$$$mptypes.Result$shuffle,Arguments$Callable:$$$mptypes.SecondArgs$shuffle}},Args$unflatten:$$$mptypes.FirstArgs$shuffle})($wh),[],{Return$Callable:$$$mptypes.Result$shuffle,Arguments$Callable:$$$mptypes.SecondArgs$shuffle}),{Return$unflatten:$$$mptypes.Result$shuffle,Args$unflatten:$$$mptypes.SecondArgs$shuffle})($wg);}),[{$nm:'firstArgs',$mt:'prm',$t:'FirstArgs$shuffle',$an:function(){return[];}}],{Return$Callable:$$$mptypes.Result$shuffle,Arguments$Callable:{t:'T',l:[$$$mptypes.FirstArgs$shuffle]}}),{Args$flatten:$$$mptypes.FirstArgs$shuffle,Return$flatten:$$$mptypes.Result$shuffle});}),[{$nm:'secondArgs',$mt:'prm',$t:'SecondArgs$shuffle',$an:function(){return[];}}],{Return$Callable:{t:Callable,a:{Return$Callable:$$$mptypes.Result$shuffle,Arguments$Callable:$$$mptypes.FirstArgs$shuffle}},Arguments$Callable:{t:'T',l:[$$$mptypes.SecondArgs$shuffle]}}),{Args$flatten:$$$mptypes.SecondArgs$shuffle,Return$flatten:{t:Callable,a:{Return$Callable:$$$mptypes.Result$shuffle,Arguments$Callable:$$$mptypes.FirstArgs$shuffle}}});};shuffle.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Callable,a:{Return$Callable:{t:Callable,a:{Return$Callable:'Result$shuffle',Arguments$Callable:'FirstArgs$shuffle'}},Arguments$Callable:'SecondArgs$shuffle'}},$ps:[{$nm:'f',$mt:'prm',$t:{t:Callable,a:{Return$Callable:{t:Callable,a:{Return$Callable:'Result$shuffle',Arguments$Callable:'SecondArgs$shuffle'}},Arguments$Callable:'FirstArgs$shuffle'}},$an:function(){return[];}}],$tp:{Result$shuffle:{},FirstArgs$shuffle:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}]},SecondArgs$shuffle:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].shuffle.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),curry)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared()];},d:['$','shuffle']};};
ex$.shuffle=shuffle;function flatten(tf, $$$mptypes) {
function rf() {
var argc = arguments.length;
var last = argc>0 ? arguments[argc-1] : undefined;
if (typeof(last) === 'object' && typeof(last.Args$flatten) === 'object' && (last.Args$flatten.t==='T'||typeof(last.Args$flatten.t) === 'function')) {
argc--;
}
var t = [];
for (var i=0;i<argc;i++) {
t.push(arguments[i]);
}
t=tpl$(t);
return tf(t, t.$$targs$$);
};
rf.$$targs$$={Return$Callable:$$$mptypes.Return$flatten,Arguments$Callable:$$$mptypes.Args$flatten};
return rf;
}
flatten.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Callable,a:{Return$Callable:'Return$flatten',Arguments$Callable:'Args$flatten'}},$ps:[{$nm:'tupleFunction',$mt:'prm',$pt:'f',$t:'Return$flatten',$an:function(){return[];}}],$tp:{Return$flatten:{},Args$flatten:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].flatten.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),unflatten)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared(),$_native()];},d:['$','flatten']};};
ex$.flatten=flatten;function unflatten(ff, $$$mptypes) {
if (getrtmm$$(ff) && ff.$crtmm$.$ps) {
var ru=function ru(seq,$mptypes) {
if (seq===undefined || seq.size === 0) { return ff(); }
var pmeta = ff.$crtmm$.$ps;
var _lim=Math.max(pmeta.length,seq.size);
var a = [];
for (var i = 0; i < _lim; i++) {
if (pmeta[i]&&pmeta[i]['seq']) {
a.push(seq.skip(i).sequence());
break;//we're done
} else if (seq.size > i) {
a.push(seq.$_get(i));
}
}
if ($mptypes && ff.$crtmm$.$tp)a.push($mptypes);
return ff.apply(ru, a);
}
} else {
var ru=function ru(seq) {
if (seq===undefined || seq.size === 0) { return ff(); }
var a = [];
for (var i = 0; i < seq.size; i++) {
a[i] = seq.$_get(i);
}
a[i]=ru.$$targs$$;
return ff.apply(ru, a);
}
}
ru.$$targs$$={Return$Callable:$$$mptypes.Return$unflatten,Arguments$Callable:{t:'T',l:[$$$mptypes.Args$unflatten]}};
return ru;
}
unflatten.$crtmm$=function(){return{mod:$CCMM$,$t:'Return$unflatten',$ps:[{$nm:'flatFunction',$mt:'prm',$t:{t:Callable,a:{Return$Callable:'Return$unflatten',Arguments$Callable:'Args$unflatten'}},$an:function(){return[];}}],$tp:{Return$unflatten:{},Args$unflatten:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].unflatten.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),flatten)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared(),$_native()];},d:['$','unflatten']};};
ex$.unflatten=unflatten;var plus=function ($wi,$wj,$$$mptypes){return $wi.plus($wj);};plus.$crtmm$=function(){return{mod:$CCMM$,$t:'Value$plus',$ps:[{$nm:'x',$mt:'prm',$t:'Value$plus',$an:function(){return[];}},{$nm:'y',$mt:'prm',$t:'Value$plus',$an:function(){return[];}}],$tp:{Value$plus:{'satisfies':[{t:Summable,a:{Other$Summable:'Value$plus'}}]}},$an:function(){return[doc("Add the given `Summable` values."),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),times),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),sum)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared()];},d:['$','plus']};};
ex$.plus=plus;var times=function ($wk,$wl,$$$mptypes){return $wk.times($wl);};times.$crtmm$=function(){return{mod:$CCMM$,$t:'Value$times',$ps:[{$nm:'x',$mt:'prm',$t:'Value$times',$an:function(){return[];}},{$nm:'y',$mt:'prm',$t:'Value$times',$an:function(){return[];}}],$tp:{Value$times:{'satisfies':[{t:Numeric,a:{Other$Numeric:'Value$times'}}]}},$an:function(){return[doc("Multiply the given `Numeric` values."),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),plus),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),product)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared()];},d:['$','times']};};
ex$.times=times;function internalSort($wm,$wn,$$$mptypes){var $wo=$_Array($wn,{Element$Array:$$$mptypes.Element$internalSort});if($wo.empty){return getEmpty();}$wo.sortInPlace($wm);return ArraySequence($wo,{Element$ArraySequence:$$$mptypes.Element$internalSort});};internalSort.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$internalSort'}},$ps:[{$nm:'comparing',$mt:'prm',$pt:'f',$t:{t:Comparison},$an:function(){return[];}},{$nm:'elements',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Element$internalSort'}},$an:function(){return[];}}],$tp:{Element$internalSort:{}},d:['$','internalSort']};};var sort=function ($wp,$$$mptypes){return internalSort($JsCallable(byIncreasing($JsCallable((function ($wq){return $wq;}),[{$nm:'e',$mt:'prm',$t:'Element$sort',$an:function(){return[];}}],{Return$Callable:$$$mptypes.Element$sort,Arguments$Callable:{t:'T',l:[$$$mptypes.Element$sort]}}),{Value$byIncreasing:$$$mptypes.Element$sort,Element$byIncreasing:$$$mptypes.Element$sort}),[{$nm:'p2',$mt:'prm',$t:'Element$sort'},{$nm:'p3',$mt:'prm',$t:'Element$sort'}],{Return$Callable:{t:Comparison},Arguments$Callable:{t:'T',l:[$$$mptypes.Element$sort,$$$mptypes.Element$sort]}}),$wp,{Element$internalSort:$$$mptypes.Element$sort});};sort.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$sort'}},$ps:[{$nm:'elements',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Element$sort'}},$an:function(){return[];}}],$tp:{Element$sort:{'satisfies':[{t:Comparable,a:{Other$Comparable:'Element$sort'}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].sort.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Comparable)].reifyCeylonType({t:InterfaceDeclaration$meta$declaration})),shared()];},d:['$','sort']};};
ex$.sort=sort;var and=function ($wr,$ws,$$$mptypes){return function($wt){return ($wr($wt)&&$ws($wt));}}
;and.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'p',$mt:'prm',$t:{t:Callable,a:{Return$Callable:{t:$_Boolean},Arguments$Callable:{t:'T',l:[{$t:'Value$and'}]}}},$an:function(){return[doc("The first predicate function")];}},{$nm:'q',$mt:'prm',$t:{t:Callable,a:{Return$Callable:{t:$_Boolean},Arguments$Callable:{t:'T',l:[{$t:'Value$and'}]}}},$an:function(){return[doc("The second predicate function")];}}],$tp:{Value$and:{'var':'in'}},$an:function(){return[doc($CCMM$['ceylon.language'].and.$an.doc[0]),shared()];},d:['$','and']};};
ex$.and=and;var or=function ($wu,$wv,$$$mptypes){return function($ww){return ($wu($ww)||$wv($ww));}}
;or.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'p',$mt:'prm',$t:{t:Callable,a:{Return$Callable:{t:$_Boolean},Arguments$Callable:{t:'T',l:[{$t:'Value$or'}]}}},$an:function(){return[doc("The first predicate function")];}},{$nm:'q',$mt:'prm',$t:{t:Callable,a:{Return$Callable:{t:$_Boolean},Arguments$Callable:{t:'T',l:[{$t:'Value$or'}]}}},$an:function(){return[doc("The second predicate function")];}}],$tp:{Value$or:{'var':'in'}},$an:function(){return[doc($CCMM$['ceylon.language'].or.$an.doc[0]),shared()];},d:['$','or']};};
ex$.or=or;var not=function ($wx,$$$mptypes){return function($wy){return !$wx($wy);}}
;not.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'p',$mt:'prm',$t:{t:Callable,a:{Return$Callable:{t:$_Boolean},Arguments$Callable:{t:'T',l:[{$t:'Value$not'}]}}},$an:function(){return[doc("The predicate function to negate")];}}],$tp:{Value$not:{'var':'in'}},$an:function(){return[doc($CCMM$['ceylon.language'].not.$an.doc[0]),shared()];},d:['$','not']};};
ex$.not=not;function arrayOfSize(size, elem, $$$mptypes) {
var elems = [];
if (size>0) {
for (var i=0; i<size; i++) {
elems.push(elem);
}
}
return elems.reifyCeylonType($$$mptypes.Element$arrayOfSize);
}
arrayOfSize.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Array,a:{Element$Array:'Element$arrayOfSize'}},$ps:[{$nm:'size',$mt:'prm',$t:{t:Integer},$an:function(){return[doc($CCMM$['ceylon.language'].arrayOfSize.$at.size$xj6s5y.$an.doc[0])];}},{$nm:'element',$mt:'prm',$t:'Element$arrayOfSize',$an:function(){return[doc($CCMM$['ceylon.language'].arrayOfSize.$at.element$r2y625.$an.doc[0])];}}],$tp:{Element$arrayOfSize:{}},$an:function(){return[doc($CCMM$['ceylon.language'].arrayOfSize.$an.doc[0]),$_throws($init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),AssertionError),"if `size<0` or `size>runtime.maxArraySize`"),shared(),$_native()];},d:['$','arrayOfSize']};};
ex$.arrayOfSize=arrayOfSize;
//#metamodel
function Annotated(annotated$){}
Annotated.$crtmm$=function(){return{mod:$CCMM$,$an:function(){return[doc("A program element that can\nbe annotated."),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Annotation)].reifyCeylonType({t:InterfaceDeclaration$meta$declaration})),shared()];},d:['$','Annotated']};};
ex$.Annotated=Annotated;function $init$Annotated(){if(Annotated.$$===undefined){initTypeProtoI(Annotated,'ceylon.language::Annotated');
}
return Annotated;}
ex$.$init$Annotated=$init$Annotated;$init$Annotated();function Annotation(annotation$){}
Annotation.$crtmm$=function(){return{mod:$CCMM$,of:[{t:ConstrainedAnnotation,a:{Values$ConstrainedAnnotation:{t:Anything},ProgramElement$ConstrainedAnnotation:{t:Nothing},Value$ConstrainedAnnotation:{t:Annotation}}}],$an:function(){return[doc($CCMM$['ceylon.language'].Annotation.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),OptionalAnnotation),$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),SequencedAnnotation),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language.meta'),annotations$meta),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language.meta'),optionalAnnotation$meta),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language.meta'),sequencedAnnotations$meta)].reifyCeylonType({t:'u',l:[{t:InterfaceDeclaration$meta$declaration},{t:FunctionDeclaration$meta$declaration}]})),shared()];},d:['$','Annotation']};};
ex$.Annotation=Annotation;function $init$Annotation(){if(Annotation.$$===undefined){initTypeProtoI(Annotation,'ceylon.language::Annotation');
}
return Annotation;}
ex$.$init$Annotation=$init$Annotation;$init$Annotation();function ConstrainedAnnotation($$targs$$,constrainedAnnotation$){Annotation(constrainedAnnotation$);set_type_args(constrainedAnnotation$,$$targs$$);}
ConstrainedAnnotation.$crtmm$=function(){return{mod:$CCMM$,$tp:{Value$ConstrainedAnnotation:{'var':'out','satisfies':[{t:Annotation}],'def':{t:Annotation}},Values$ConstrainedAnnotation:{'var':'out','def':{t:Anything}},ProgramElement$ConstrainedAnnotation:{'var':'in','satisfies':[{t:Annotated}],'def':{t:Nothing}}},satisfies:[{t:Annotation}],of:['Value$ConstrainedAnnotation'],$an:function(){return[doc($CCMM$['ceylon.language'].ConstrainedAnnotation.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Annotation)].reifyCeylonType({t:InterfaceDeclaration$meta$declaration})),shared()];},d:['$','ConstrainedAnnotation']};};
ex$.ConstrainedAnnotation=ConstrainedAnnotation;function $init$ConstrainedAnnotation(){if(ConstrainedAnnotation.$$===undefined){initTypeProtoI(ConstrainedAnnotation,'ceylon.language::ConstrainedAnnotation',$init$Annotation());
(function(constrainedAnnotation$){constrainedAnnotation$.occurs=function ($wz){var constrainedAnnotation$=this;return is$($wz,constrainedAnnotation$.$$targs$$.ProgramElement$ConstrainedAnnotation);};constrainedAnnotation$.occurs.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'programElement',$mt:'prm',$t:{t:Annotated},$an:function(){return[];}}],$cont:ConstrainedAnnotation,$an:function(){return[doc("Can this annotation occur on the given program \nelement?"),shared()];},d:['$','ConstrainedAnnotation','$m','occurs']};};})(ConstrainedAnnotation.$$.prototype);}
return ConstrainedAnnotation;}
ex$.$init$ConstrainedAnnotation=$init$ConstrainedAnnotation;$init$ConstrainedAnnotation();function OptionalAnnotation($$targs$$,optionalAnnotation$){ConstrainedAnnotation({Values$ConstrainedAnnotation:{t:'u',l:[{t:Null},$$targs$$.Value$OptionalAnnotation]},ProgramElement$ConstrainedAnnotation:$$targs$$.ProgramElement$OptionalAnnotation,Value$ConstrainedAnnotation:$$targs$$.Value$OptionalAnnotation},optionalAnnotation$);set_type_args(optionalAnnotation$,$$targs$$);}
OptionalAnnotation.$crtmm$=function(){return{mod:$CCMM$,$tp:{Value$OptionalAnnotation:{'var':'out','satisfies':[{t:OptionalAnnotation,a:{Value$OptionalAnnotation:'Value$OptionalAnnotation',ProgramElement$OptionalAnnotation:'ProgramElement$OptionalAnnotation'}}]},ProgramElement$OptionalAnnotation:{'var':'in','satisfies':[{t:Annotated}],'def':{t:Annotated}}},satisfies:[{t:ConstrainedAnnotation,a:{Values$ConstrainedAnnotation:{t:'u',l:[{t:Null},'Value$OptionalAnnotation']},ProgramElement$ConstrainedAnnotation:'ProgramElement$OptionalAnnotation',Value$ConstrainedAnnotation:'Value$OptionalAnnotation'}}],of:['Value$OptionalAnnotation'],$an:function(){return[doc($CCMM$['ceylon.language'].OptionalAnnotation.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Annotation)].reifyCeylonType({t:InterfaceDeclaration$meta$declaration})),shared()];},d:['$','OptionalAnnotation']};};
ex$.OptionalAnnotation=OptionalAnnotation;function $init$OptionalAnnotation(){if(OptionalAnnotation.$$===undefined){initTypeProtoI(OptionalAnnotation,'ceylon.language::OptionalAnnotation',$init$ConstrainedAnnotation());
}
return OptionalAnnotation;}
ex$.$init$OptionalAnnotation=$init$OptionalAnnotation;$init$OptionalAnnotation();function SequencedAnnotation($$targs$$,sequencedAnnotation$){ConstrainedAnnotation({Values$ConstrainedAnnotation:{t:Sequential,a:{Element$Sequential:$$targs$$.Value$SequencedAnnotation}},ProgramElement$ConstrainedAnnotation:$$targs$$.ProgramElement$SequencedAnnotation,Value$ConstrainedAnnotation:$$targs$$.Value$SequencedAnnotation},sequencedAnnotation$);add_type_arg(sequencedAnnotation$,'Values$ConstrainedAnnotation',{t:Sequential,a:{Element$Sequential:sequencedAnnotation$.$$targs$$.Value$SequencedAnnotation}});set_type_args(sequencedAnnotation$,$$targs$$);}
SequencedAnnotation.$crtmm$=function(){return{mod:$CCMM$,$tp:{Value$SequencedAnnotation:{'var':'out','satisfies':[{t:SequencedAnnotation,a:{Value$SequencedAnnotation:'Value$SequencedAnnotation',ProgramElement$SequencedAnnotation:'ProgramElement$SequencedAnnotation'}}]},ProgramElement$SequencedAnnotation:{'var':'in','satisfies':[{t:Annotated}],'def':{t:Annotated}}},satisfies:[{t:ConstrainedAnnotation,a:{Values$ConstrainedAnnotation:{t:Sequential,a:{Element$Sequential:'Value$SequencedAnnotation'}},ProgramElement$ConstrainedAnnotation:'ProgramElement$SequencedAnnotation',Value$ConstrainedAnnotation:'Value$SequencedAnnotation'}}],of:['Value$SequencedAnnotation'],$an:function(){return[doc($CCMM$['ceylon.language'].SequencedAnnotation.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Annotation)].reifyCeylonType({t:InterfaceDeclaration$meta$declaration})),shared()];},d:['$','SequencedAnnotation']};};
ex$.SequencedAnnotation=SequencedAnnotation;function $init$SequencedAnnotation(){if(SequencedAnnotation.$$===undefined){initTypeProtoI(SequencedAnnotation,'ceylon.language::SequencedAnnotation',$init$ConstrainedAnnotation());
}
return SequencedAnnotation;}
ex$.$init$SequencedAnnotation=$init$SequencedAnnotation;$init$SequencedAnnotation();
/*Native Implementation of annotations() */
function annotations$meta(anntype, progelem, $$$mptypes) {
if (progelem.tipo)progelem=progelem.tipo;
var mm = getrtmm$$(progelem);
if (progelem.$anns)mm={$an:typeof(progelem.$anns)==='function'?progelem.$anns():progelem.$anns};
if (mm && mm.$an) {
var anns=mm.$an;
if (typeof(anns) === 'function') {
anns=anns();
mm.$an=anns;
}
if (anntype.tipo.$$.T$all['ceylon.language::OptionalAnnotation'] !== undefined) {
//find the first one and return it
for (var i=0; i < anns.length; i++) {
if (is$(anns[i], {t:anntype.tipo}))return anns[i];
}
return null;
}
//gather all annotations of the required type and return them
var r=[];
for (var i=0; i < anns.length; i++) {
if (is$(anns[i], {t:anntype.tipo}))r.push(anns[i]);
}
return r.length==0?getEmpty():ArraySequence(r,{Element$ArraySequence:{t:ConstrainedAnnotation,
a:{Value$ConstrainedAnnotation:$$$mptypes.Value$annotations,Values$ConstrainedAnnotation:$$$mptypes.Values$annotations,
ProgramElement$ConstrainedAnnotation:$$$mptypes.ProgramElement$annotations}}});
}
return null;
}
annotations$meta.$crtmm$=function(){return{mod:$CCMM$,$t:'Values$annotations',$ps:[{$nm:'annotationType',$mt:'prm',$t:{t:Class$meta$model,a:{Type$Class:{t:ConstrainedAnnotation,a:{Values$ConstrainedAnnotation:'Values$annotations',ProgramElement$ConstrainedAnnotation:'ProgramElement$annotations',Value$ConstrainedAnnotation:'Value$annotations'}},Arguments$Class:{t:Nothing}}},$an:function(){return[];}},{$nm:'programElement',$mt:'prm',$t:'ProgramElement$annotations',$an:function(){return[];}}],$tp:{Value$annotations:{'satisfies':[{t:ConstrainedAnnotation,a:{Values$ConstrainedAnnotation:'Values$annotations',ProgramElement$ConstrainedAnnotation:'ProgramElement$annotations',Value$ConstrainedAnnotation:'Value$annotations'}}]},Values$annotations:{},ProgramElement$annotations:{'var':'in','satisfies':[{t:Annotated}]}},$an:function(){return[doc($CCMM$['ceylon.language.meta'].annotations.$an.doc[0]),shared(),$_native()];},d:['ceylon.language.meta','annotations']};};
ex$.annotations$meta=annotations$meta;function type$meta(x,$$targs$$) {
if (x === null || $$targs$$.Type$type.t===Nothing) {
return getNothingType$meta$model();
}
var mm=getrtmm$$(x);
var _t=$$targs$$.Type$type.t;
if (mm===undefined) {
if (x.getT$name && x.getT$all) {
var mmm=x.getT$all()[x.getT$name()];
if (mmm){mm=mmm.$crtmm$;_t=mmm;}
if (typeof(mm)==='function') {
mm=mm(); mmm.$crtmm$=mm;
}
}
}
if (mm===undefined&&x.reifyCeylonType)mm=$_Array.$crtmm$;
if (mm===undefined)throw new Error("Cannot retrieve metamodel for " + x);
if (mm.$t) { //it's a value
if (typeof(x)==='function') { //It's a callable
if (mm.$cont) {
return AppliedMethod(x,undefined,{Type$Method:mm.$t,Arguments$Method:{t:Nothing}});
}
return AppliedFunction(x,{Type$Function:mm.$t,Arguments$Function:{t:Nothing}});
}
return AppliedClass(mm.$t.t, {Type$Class:mm.$t,Arguments$Class:{t:Nothing}});
}
var c;
if ($$targs$$.Type$type.t==='T') {
var rt=retpl$($$targs$$.Type$type);
c=AppliedClass(Tuple,{Type$Class:$$targs$$.Type$type, Arguments$Class:{t:'T',l:[$$targs$$.Type$type.l[0],rt.Rest$Tuple]}});
} else {
var _ta={T:{t:x.getT$all()[x.getT$name()]}, A:{t:Sequential,a:{Element$Iterable:{t:Anything}}}};
if (x.$$targs$$)_ta.T.a=x.$$targs$$;
if (x.outer$) {
_ta.C={t:x.outer$.getT$all()[x.outer$.getT$name()]};
if (x.outer$.$$targs$$)_ta.C.a=x.outer$.$$targs$$;
}
if (mm.$cont) {
c=AppliedMemberClass(_t, {Type$MemberClass:_ta.T,Arguments$MemberClass:_ta.A,Container$MemberClass:_ta.C});
} else {
c=AppliedClass(_t, {Type$Class:_ta.T,Arguments$Class:_ta.A});
}
}
if ($$targs$$.Type$type.a)c.$targs=$$targs$$.Type$type.a;
return c;
}
type$meta.$crtmm$=function(){return{mod:$CCMM$,$t:{t:ClassModel$meta$model,a:{Arguments$ClassModel:{t:Nothing},Type$ClassModel:'Type$type'}},$ps:[{$nm:'instance',$mt:'prm',$t:'Type$type',$an:function(){return[];}}],$tp:{Type$type:{'var':'out','satisfies':[{t:Anything}]}},$an:function(){return[doc($CCMM$['ceylon.language.meta'].type.$an.doc[0]),shared(),$_native()];},d:['ceylon.language.meta','type']};};
ex$.type$meta=type$meta;function typeLiteral$meta($$targs$$) {
if ($$targs$$ === undefined || $$targs$$.Type$typeLiteral === undefined) {
throw new Error("Missing type argument 'Type' " + /*require('util').inspect(*/$$targs$$);
} else if ($$targs$$.Type$typeLiteral.$crtmm$ == undefined) {
//closed type
var t = $$targs$$.Type$typeLiteral.t
if (t === undefined) {
t = $$targs$$.Type$typeLiteral.setter;
if (t && t.$crtmm$) {
var mm = getrtmm$$(t);
var _mod = getModules$meta().find(mm.mod['$mod-name'],mm.mod['$mod-version']);
return OpenSetter(OpenValue(_mod.findPackage(mm.d[0]), t));
}
throw new Error("'Type' argument should be an open or closed type");
} else if (t === 'u' || t === 'i') {
return t === 'u' ? applyUnionType($$targs$$.Type$typeLiteral) : applyIntersectionType($$targs$$.Type$typeLiteral);
} else if (t === 'T') {
//TODO arguments
var _tt=retpl$($$targs$$.Type$typeLiteral);
return AppliedClass(Tuple,{Type$Class:$$targs$$.Type$typeLiteral,Arguments$Class:{t:'T',l:[_tt.a.First$Tuple,_tt.a.Rest$Tuple]}});
} else if (t.$crtmm$ === undefined) {
throw new Error("JS Interop not supported / incomplete metamodel for " + /*require('util').inspect(*/t);
} else {
var mm = getrtmm$$(t);
var mdl = get_model(mm);
if (mdl['$mt'] === 'c') {
//TODO tupleize Arguments
var r=AppliedClass(t,{Type$Class:$$targs$$.Type$typeLiteral,Arguments$Class:{t:Sequential,a:{Element$Iterable:{t:Anything}}}});
if ($$targs$$.Type$typeLiteral.a)r.$targs=$$targs$$.Type$typeLiteral.a;
return r;
} else if (mdl['$mt'] === 'i') {
var r=AppliedInterface(t,{Type$Interface:$$targs$$.Type$typeLiteral});
if ($$targs$$.Type$typeLiteral.a)r.$targs=$$targs$$.Type$typeLiteral.a;
return r;
} else if (mdl['$mt'] === 'm') {
return AppliedFunction(t,{Type$Function:$$targs$$.Type$typeLiteral,Arguments$Function:{t:Sequential,a:{Element$Iterable:{t:Anything}}}});
} else if (mdl['$mt'] === 'a' || mdl['$mt'] === 'g' || mdl['$mt'] === 'o'||mdl.$mt==='s') {
return AppliedValue(undefined,t,{Container$Value:{t:mm.$cont},Get$Value:mm.$t,Set$Value:mdl['var']?mm.$t:{t:Nothing}});
} else {
console.log("WTF is a metatype " + mdl['$mt'] + " on a closed type???????");
}
console.log("typeLiteral<" + t.getT$name() + "> (closed type)");
}
} else {
//open type
var t = $$targs$$.Type$typeLiteral;
var mm = getrtmm$$(t);
var mdl = get_model(mm);
//We need the module
var _mod = getModules$meta().find(mm.mod['$mod-name'],mm.mod['$mod-version']);
var _pkg = _mod.findPackage(mm.d[0]);
if (mdl.$mt==='c' || mdl.$mt==='o') {
return OpenClass(_pkg, t);
} else if (mdl['$mt'] === 'i') {
return OpenInterface(_pkg, t);
} else if (mdl['$mt'] === 'm') {
return OpenFunction(_pkg, t);
} else if (mdl['$mt'] === 'a' || mdl['$mt'] === 'g') {
return OpenValue(_pkg, t);
} else if (mdl.$mt==='s') {
return OpenSetter(OpenValue(_pkg, t));
} else {
console.log("WTF is a metatype " + mdl['$mt'] + " on an open type???????");
}
console.log("typeLiteral<" + t.getT$name() + "> (open type)");
}
throw new Error("typeLiteral UNIMPLEMENTED for " + /*require('util').inspect(*/$$targs$$);
}
typeLiteral$meta.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Type$meta$model,a:{Type$Type:'Type$typeLiteral'}},$ps:[],$tp:{Type$typeLiteral:{'var':'out','satisfies':[{t:Anything}]}},$an:function(){return[doc($CCMM$['ceylon.language.meta'].typeLiteral.$an.doc[0]),shared(),$_native()];},d:['ceylon.language.meta','typeLiteral']};};
ex$.typeLiteral$meta=typeLiteral$meta;function optionalAnnotation$meta($x0,$x1,$$$mptypes){return annotations$meta($x0,$x1,{ProgramElement$annotations:$$$mptypes.ProgramElement$optionalAnnotation,Values$annotations:{t:'u',l:[{t:Null},$$$mptypes.Value$optionalAnnotation]},Value$annotations:$$$mptypes.Value$optionalAnnotation});}
ex$.optionalAnnotation$meta=optionalAnnotation$meta;optionalAnnotation$meta.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Value$optionalAnnotation']},$ps:[{$nm:'annotationType',$mt:'prm',$t:{t:Class$meta$model,a:{Type$Class:{t:OptionalAnnotation,a:{Value$OptionalAnnotation:'Value$optionalAnnotation',ProgramElement$OptionalAnnotation:'ProgramElement$optionalAnnotation'}},Arguments$Class:{t:Nothing}}},$an:function(){return[];}},{$nm:'programElement',$mt:'prm',$t:'ProgramElement$optionalAnnotation',$an:function(){return[];}}],$tp:{Value$optionalAnnotation:{'satisfies':[{t:OptionalAnnotation,a:{Value$OptionalAnnotation:'Value$optionalAnnotation',ProgramElement$OptionalAnnotation:'ProgramElement$optionalAnnotation'}}]},ProgramElement$optionalAnnotation:{'var':'in','satisfies':[{t:Annotated}]}},$an:function(){return[doc($CCMM$['ceylon.language.meta'].optionalAnnotation.$an.doc[0]),shared()];},d:['ceylon.language.meta','optionalAnnotation']};};function sequencedAnnotations$meta($x2,$x3,$$$mptypes){return annotations$meta($x2,$x3,{ProgramElement$annotations:$$$mptypes.ProgramElement$sequencedAnnotations,Values$annotations:{t:Sequential,a:{Element$Sequential:$$$mptypes.Value$sequencedAnnotations}},Value$annotations:$$$mptypes.Value$sequencedAnnotations});}
ex$.sequencedAnnotations$meta=sequencedAnnotations$meta;sequencedAnnotations$meta.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Value$sequencedAnnotations'}},$ps:[{$nm:'annotationType',$mt:'prm',$t:{t:Class$meta$model,a:{Type$Class:{t:SequencedAnnotation,a:{Value$SequencedAnnotation:'Value$sequencedAnnotations',ProgramElement$SequencedAnnotation:'ProgramElement$sequencedAnnotations'}},Arguments$Class:{t:Nothing}}},$an:function(){return[];}},{$nm:'programElement',$mt:'prm',$t:'ProgramElement$sequencedAnnotations',$an:function(){return[];}}],$tp:{Value$sequencedAnnotations:{'satisfies':[{t:SequencedAnnotation,a:{Value$SequencedAnnotation:'Value$sequencedAnnotations',ProgramElement$SequencedAnnotation:'ProgramElement$sequencedAnnotations'}}]},ProgramElement$sequencedAnnotations:{'var':'in','satisfies':[{t:Annotated}]}},$an:function(){return[doc($CCMM$['ceylon.language.meta'].sequencedAnnotations.$an.doc[0]),shared()];},d:['ceylon.language.meta','sequencedAnnotations']};};/* Metamodel module and package objects */
var $loadedModules$={};
ex$.$loadedModules$=$loadedModules$;
function $addmod$(mod, modname) {
$loadedModules$[modname] = mod;
}
ex$.$addmod$=$addmod$;
function Modulo(meta, $$modulo){
$init$Modulo();
if ($$modulo===undefined)$$modulo=new Modulo.$$;
Module$meta$declaration($$modulo);
$$modulo.meta=meta;
$$modulo.$anns=meta.$mod$ans$;
var mm = meta.$CCMM$;
if (typeof(mm)==='function') {
mm=mm();meta.$CCMM$=mm;
}
var name=mm['$mod-name'];
atr$($$modulo,'name',function(){return name;},undefined,{mod:$CCMM$,$t:{t:$_String},$cont:Modulo,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Module','$at','name']});
atr$($$modulo,'qualifiedName',function(){return name;},undefined,{mod:$CCMM$,$t:{t:$_String},$cont:Modulo,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Module','$at','qualifiedName']});
var version=$_String(mm['$mod-version']);
atr$($$modulo,'version',function(){return version;},undefined,{mod:$CCMM$,$t:{t:$_String},$cont:Modulo,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Module','$at','version']});
atr$($$modulo,'members',function(){
if (mm['$pks$'] === undefined) {
mm['$pks$'] = {};
for (mem in this.meta.$CCMM$) {
if (typeof(mem) === 'string' && mem[0]!=='$') {
mm['$pks$'][mem] = Paquete(mem, this, mm[mem]);
}
}
}
var m = [];
for (mem in mm['$pks$']) {
if (typeof(mem) === 'string') {
m.push(mm['$pks$'][mem]);
}
}
return m.length===0?getEmpty():ArraySequence(m,{Element$ArraySequence:{t:Package$meta$declaration}});
},undefined,{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Package$meta$declaration}}},$cont:Modulo,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Module','$at','members']});
atr$($$modulo,'dependencies',function(){
if (typeof(meta.$mod$imps)==='function')meta.$mod$imps=meta.$mod$imps();
var deps=mm['$mod-deps']||getEmpty();
if (deps !== getEmpty()) {
var _d=[];
for (var d in meta.$mod$imps) {
var spos = d.lastIndexOf('/');
_d.push(Importa(d.substring(0,spos), d.substring(spos+1),this,meta.$mod$imps[d]));
}
deps = _d.length===0?getEmpty():ArraySequence(_d,{Element$ArraySequence:{t:Import$meta$declaration}});
mm['$mod-deps'] = deps;
}
return deps;
},undefined,{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Import$meta$declaration}}},$cont:Modulo,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Module','$at','dependencies']});
function findPackage(pknm){
if (mm['$pks$'] === undefined) this.members;
if (pknm==='$')pknm='ceylon.language';
var pk = mm['$pks$'][pknm];
return pk===undefined ? null : pk;
}
$$modulo.findPackage=findPackage;
findPackage.$crtmm$={mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:Package$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String}}],$cont:Modulo,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Module','$m','findPackage']};
function findImportedPackage(pknm){
var pk = this.findPackage(pknm);
if (pk) return pk;
if (pknm.match('^ceylon\\.language')) {
var clmod=getModules$meta().find('ceylon.language', $CCMM$['$mod-version']);
var deps=clmod.dependencies;
if (deps===getEmpty())deps=[];
deps.push(Importa('ceylon.language', $CCMM$['$mod-version']),clmod);
return clmod.findPackage(pknm);
}
var deps=this.dependencies;
for (var i=0; i < deps.length; i++) {
pk = deps[i].container.findImportedPackage(pknm);
if (pk)return pk;
}
return null;
}
$$modulo.findImportedPackage=findImportedPackage;
findImportedPackage.$crtmm$=function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:Package$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String}}],$cont:Modulo,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Module','$m','findImportedPackage']};};
function annotations($$$mptypes){
var anns = this.meta.$mod$ans$;
if (typeof(anns) === 'function') {
anns = anns();
this.meta.$mod$ans$=anns;
} else if (anns === undefined) {
anns = [];
}
var r = [];
for (var i=0; i < anns.length; i++) {
var an = anns[i];
if (is$(an, $$$mptypes.Annotation$annotations)) r.push(an);
}
return r.length===0?getEmpty():ArraySequence(r,{Element$ArraySequence:$$$mptypes.Annotation$annotations});
}
$$modulo.annotations=annotations;
atr$($$modulo,'string',function(){return "module " + this.name+"/" + this.version;},undefined,{$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['ceylon.language','Object','$at','string']});
annotations.$crtmm$={mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Annotation'}},$ps:[],$cont:Modulo,$tp:{Annotation:{'var':'out','satisfies':[{t:Annotation,a:{Value:'Annotation'}}]}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Module','$m','annotations']};
function resourceByPath(_path) {
var mpath;
var sep = getOperatingSystem().fileSeparator;
if ($$modulo.name === 'default' && $$modulo.version=='unversioned') {
mpath = $$modulo.name;
} else {
mpath = $$modulo.name.replace(/\./g,sep) + sep + $$modulo.version;
}
if (_path[0]===sep) {
mpath += _path;
} else {
mpath += sep + _path;
}
if (getRuntime().name === 'node.js') {
var _fr=require;//this is so that requirejs leaves us the fuck alone
var pm=_fr('path');
var mods=process.env.NODE_PATH.split(getOperatingSystem().pathSeparator);
var fs=_fr('fs');
for (var i=0; i<mods.length; i++) {
var fp = pm.resolve(mods[i], mpath);
if (fs.existsSync(fp)) {
var f = fs.statSync(fp);
if (f && f.isFile()) {
return JsResource('file:'+fp);
}
}
}
} else if (getRuntime().name === 'Browser') {
return JsResource(require.toUrl(mpath));
} else {
print("Resources unsupported in this environment.");
}
return null;
}
$$modulo.resourceByPath=resourceByPath;
resourceByPath.$crtmm$=function(){return {mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Resource}]},$ps:[{$nm:'path',$mt:'prm',$t:{t:$_String}}],$cont:Modulo,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Module','$m','resourceByPath']};};
return $$modulo;
}
Modulo.$crtmm$={mod:$CCMM$,'super':{t:Basic},satisfies:[{t:Module$meta$declaration}],$an:function(){return[shared()];},d:['ceylon.language.meta.declaration','Module']};
ex$.Modulo=Modulo;
function $init$Modulo(){
if (Modulo.$$===undefined){
initTypeProto(Modulo,'Modulo',Basic,$init$Module$meta$declaration());
}
return Modulo;
}
ex$.$init$Modulo=$init$Modulo;
$init$Modulo();
function Importa(name,version,mod,anns,$$importa){
$init$Importa();
if ($$importa===undefined)$$importa=new Importa.$$;
Import$meta$declaration($$importa);
$$importa.name=name;
$$importa.version=version;
$$importa._cont=mod;
$$importa.$anns=anns;
atr$($$importa,'name',function(){return name;},undefined,{mod:$CCMM$,$t:{t:$_String},$cont:Importa,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Import','$at','name']});
atr$($$importa,'version',function(){return version;},undefined,{mod:$CCMM$,$t:{t:$_String},$cont:Importa,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Import','$at','version']});
atr$($$importa,'shared',function(){
if (typeof(this.$anns)==='function')this.$anns=this.anns();
if (this.$anns)for (var i=0;i<this.$anns.length;i++) {
if (this.$anns[i]===shared)return true;
}
return false;},undefined,{mod:$CCMM$,$t:{t:$_Boolean},$cont:Importa,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Import','$at','shared']});
atr$($$importa,'optional',function(){
if (typeof(this.$anns)==='function')this.$anns=this.$anns();
if (this.$anns)for (var i=0;i<this.$anns.length;i++) {
if (this.$anns[i]===optional)return true;
}
return version;},undefined,{mod:$CCMM$,$t:{t:$_Boolean},$cont:Importa,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Import','$at','optional']});
atr$($$importa,'container',function(){
if (this._cont===undefined) {
this._cont = getModules$meta().find(this.name,this.version);
}
return this._cont;
},undefined,{mod:$CCMM$,$t:{t:Module$meta$declaration},$cont:Importa,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Import','$at','container']});
atr$($$importa,'string',function(){
return "import " + name + "/" + version;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Importa,d:['ceylon.language','Object','$at','string']};});
return $$importa;
}
Importa.$crtmm$={mod:$CCMM$,'super':{t:Basic},satisfies:[{t:Import$meta$declaration}],$an:function(){return[shared()];},d:['ceylon.language.meta.declaration','Import']};
ex$.Importa=Importa;
function $init$Importa(){
if (Importa.$$===undefined){
initTypeProto(Importa,'Importa',Basic,$init$Import$meta$declaration());
}
return Importa;
}
ex$.$init$Importa=$init$Importa;
$init$Importa();
function Paquete(name, container, pkg, $$paquete){
$init$Paquete();
if ($$paquete===undefined)$$paquete=new Paquete.$$;
Package$meta$declaration($$paquete);
$$paquete.pkg=pkg;
var name=name;
var suffix = '';
if (name!==container.name) {
var _s = name.substring(container.name.size);
suffix = _s.replace(/\./g, '$');
}
$$paquete.suffix=suffix;
atr$($$paquete,'name',function(){return name;},undefined,{mod:$CCMM$,$t:{t:$_String},$cont:Paquete,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Package','$at','name']});
atr$($$paquete,'qualifiedName',function(){return name;},undefined,{mod:$CCMM$,$t:{t:$_String},$cont:Paquete,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Package','$at','qualifiedName']});
var container=container;
atr$($$paquete,'container',function(){return container;},undefined,{mod:$CCMM$,$t:{t:Module$meta$declaration},$cont:Paquete,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Package','$at','container']});
function members($$$mptypes){
var filter=[];
if (extendsType({t:FunctionDeclaration$meta$declaration},$$$mptypes.Kind$members))filter.push('m');
if (extendsType({t:ValueDeclaration$meta$declaration},$$$mptypes.Kind$members))filter.push('a','g','o', 's');
if (extendsType({t:ClassDeclaration$meta$declaration},$$$mptypes.Kind$members))filter.push('c');
if (extendsType({t:InterfaceDeclaration$meta$declaration},$$$mptypes.Kind$members))filter.push('i');
if (extendsType({t:AliasDeclaration$meta$declaration},$$$mptypes.Kind$members))filter.push('als');
var r=[];
for (var mn in this.pkg) {
var m = this.pkg[mn];
var mt = m['$mt'];
if (filter.indexOf(mt)>=0 && m['$an'] && m['$an']['shared']) {
if (mt === 'm') {
r.push(OpenFunction(this, m));
} else if (mt==='c') {
r.push(OpenClass(this, m));
} else if (mt==='i') {
r.push(OpenInterface(this, m));
} else if (mt==='a'||mt==='g'||mt==='o') {
r.push(OpenValue(this, m));
} else if (mt==='s') {
r.push(OpenSetter(OpenValue(this, m)));
} else if (mt==='als') {
r.push(OpenAlias(_findTypeFromModel(this,m)));
}
}
}
return r.length===0?getEmpty():ArraySequence(r,{Element$ArraySequence:$$$mptypes.Kind$members});
}
$$paquete.members=members;
members.$crtmm$={mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Kind'}},$ps:[],$cont:Paquete,$tp:{Kind:{'satisfies':[{t:NestableDeclaration$meta$declaration}]}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Package','$m','members']};
function annotatedMembers($$$mptypes){
var ms=this.members({Kind$members:$$$mptypes.Kind$annotatedMembers});
if (ms.size>0) {
var rv=[];
for (var i=0; i < ms.size; i++) {
var _mem=ms.$_get(i);
if (_mem.tipo && _mem.tipo.$crtmm$) {
var mm=getrtmm$$(_mem.tipo);
var ans=mm.$an;
if (typeof(ans)==='function'){ans=ans();mm.$an=ans;}
if (ans) for (var j=0; j<ans.length;j++) {
if (is$(ans[j],$$$mptypes.Annotation$annotatedMembers)) {
rv.push(_mem);
break;
}
}
}
}
return rv.length===0?getEmpty():ArraySequence(rv,{Element$ArraySequence:$$$mptypes.Kind$annotatedMembers});
}
return getEmpty();
}
$$paquete.annotatedMembers=annotatedMembers;
annotatedMembers.$crtmm$={mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Kind'}},$ps:[],$cont:Paquete,$tp:{Kind:{'satisfies':[{t:NestableDeclaration$meta$declaration}]},Annotation:{}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Package','$m','annotatedMembers']};
function getMember(name$3,$$$mptypes){
var m = this.pkg[name$3];
if (m) {
var mt = m['$mt'];
if ((mt==='a'||mt==='g'||mt==='o'||mt==='s')&&extendsType({t:FunctionOrValueDeclaration$meta$declaration}, $$$mptypes.Kind$getMember)) {
return mt==='s'?OpenSetter(OpenValue(this, m)):OpenValue(this, m);
} else if (mt==='m'&&extendsType($$$mptypes.Kind$getMember,{t:FunctionOrValueDeclaration$meta$declaration})){
return OpenFunction(this, m);
} else if (mt==='c'&&extendsType($$$mptypes.Kind$getMember,{t:ClassOrInterfaceDeclaration$meta$declaration})){
return OpenClass(this, m);
} else if (mt==='i'&&extendsType($$$mptypes.Kind$getMember,{t:ClassOrInterfaceDeclaration$meta$declaration})){
return OpenInterface(this, m);
} else if (mt==='als'&&extendsType($$$mptypes.Kind$getMember,{t:AliasDeclaration$meta$declaration})){
return OpenAlias(_findTypeFromModel(this,m));
} else {
console.log("WTF do I do with this " + name$3 + " metatype " + mt + " Kind " + $$$mptypes.Kind$getMember);
}
}
return null;
}
$$paquete.getMember=getMember;
getMember.$crtmm$={mod:$CCMM$,$t:{ t:'u', l:[{t:Null},'Kind']},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String}}],$cont:Paquete,$tp:{Kind:{'satisfies':[{t:NestableDeclaration$meta$declaration}]}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Package','$m','getMember']};
function getValue(name$4) {
var m = this.pkg[name$4];
if (m && (m['$mt']==='a' || m['$mt']==='g' || m['$mt'] === 'o' ||m['$mt']==='s')) {
return OpenValue(this, m);
}
return null;
}
$$paquete.getValue=getValue;
getValue.$crtmm$={mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:ValueDeclaration$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String}}],$cont:Paquete,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Package','$m','getValue']};
function getClassOrInterface(name$5){
var ci = this.pkg[name$5];
if (ci && ci['$mt']==='c') {
return OpenClass(this, ci);
} else if (ci && ci['$mt']==='i') {
return OpenInterface(this, ci);
}
return null;
}
$$paquete.getClassOrInterface=getClassOrInterface;
getClassOrInterface.$crtmm$={mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:ClassOrInterfaceDeclaration$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String}}],$cont:Paquete,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Package','$m','getClassOrInterface']};
function getAlias(an) {
var al=this.pkg[an];
if (al && al.$mt==='als') {
var rta = _findTypeFromModel(this, al);
return OpenAlias(rta);
}
return null;
}
$$paquete.getAlias=getAlias;
getAlias.$crtmm$=function(){return{mod:$CCMM$,d:['ceylon.language.meta.declaration','Package','$m','getAlias']};};
function getFunction(name$6){
var f = this.pkg[name$6];
if (f && f['$mt']==='m') {
return OpenFunction(this, f);
}
return null;
}
$$paquete.getFunction=getFunction;
getFunction.$crtmm$={mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:FunctionDeclaration$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String}}],$cont:Paquete,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Package','$m','getFunction']};
function annotations($$$mptypes){
var _k = '$pkg$ans$' + this.name.replace(/\./g,'$');
var anns = this.container.meta[_k];
if (typeof(anns) === 'function') {
anns = anns();
this.container.meta[_k]=anns;
} else if (anns === undefined) {
anns = [];
}
var r = [];
for (var i=0; i < anns.length; i++) {
var an = anns[i];
if (is$(an, $$$mptypes.Annotation$annotations)) r.push(an);
}
return r.length===0?getEmpty():ArraySequence(r,{Element$ArraySequence:$$$mptypes.Annotation$annotations});
}
$$paquete.annotations=annotations;
annotations.$crtmm$={mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Annotation'}},$ps:[],$cont:Paquete,$tp:{Annotation:{'var':'out','satisfies':[{t:Annotation,a:{Value:'Annotation'}}]}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Package','$m','annotations']};
atr$($$paquete,'string',function(){return "package " + this.name;},undefined,{$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['ceylon.language','Object','$at','string']});
return $$paquete;
}
Paquete.$crtmm$={mod:$CCMM$,'super':{t:Basic},satisfies:[{t:Package$meta$declaration}],$an:function(){return[shared()];},d:['ceylon.language.meta.declaration','Package']};
ex$.Paquete=Paquete;
function $init$Paquete(){
if (Paquete.$$===undefined){
initTypeProto(Paquete,'Paquete',Basic,$init$Package$meta$declaration());
}
return Paquete;
}
ex$.$init$Paquete=$init$Paquete;
$init$Paquete();
function $x4$meta(){var modules$=new $x4$meta.$$;modules$.$prop$getList={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Module$meta$declaration}}},$cont:$x4$meta,$an:function(){return[doc($CCMM$['ceylon.language.meta'].modules.$at.list.$an.doc[0]),shared(),$_native()];},d:['ceylon.language.meta','modules','$at','list']};}};modules$.$prop$getDefault={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Module$meta$declaration}]},$cont:$x4$meta,$an:function(){return[doc($CCMM$['ceylon.language.meta'].modules.$at.default.$an.doc[0]),shared(),$_native()];},d:['ceylon.language.meta','modules','$at','default']};}};return modules$;
};$x4$meta.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$an:function(){return[doc($CCMM$['ceylon.language.meta'].modules.$an.doc[0]),shared(),$_native()];},d:['ceylon.language.meta','modules']};};function $init$$x4$meta(){if($x4$meta.$$===undefined){initTypeProto($x4$meta,'ceylon.language.meta::modules',Basic);
(function(modules$){atr$(modules$,'list',function(){var mods=[];
for (var m in $loadedModules$) {
var slashPos = m.lastIndexOf('/');
mods.push(this.find(m.substring(0,slashPos), m.substring(slashPos+1)));
}
return mods.length===0?getEmpty():ArraySequence(mods,{Element$ArraySequence:{t:Module$meta$declaration}});
modules$.list.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Module$meta$declaration}}},$cont:$x4$meta,$an:function(){return[doc($CCMM$['ceylon.language.meta'].modules.$at.list.$an.doc[0]),shared(),$_native()];},d:['ceylon.language.meta','modules','$at','list']};};},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Module$meta$declaration}}},$cont:$x4$meta,$an:function(){return[doc($CCMM$['ceylon.language.meta'].modules.$at.list.$an.doc[0]),shared(),$_native()];},d:['ceylon.language.meta','modules','$at','list']};});modules$.find=function find(name,version){
var modname = name + "/" + (version?version:"unversioned");
var lm = $loadedModules$[modname];
if (!lm) {
var mpath;
if (name === 'default' && version=='unversioned') {
mpath = name + "/" + name;
} else {
mpath = name.replace(/\./g,'/') + '/' + version + "/" + name + "-" + version;
}
try {lm = require(mpath);}catch(e){return null;}
}
if (lm && lm.$CCMM$) {
lm = Modulo(lm);
$loadedModules$[modname] = lm;
}
return lm === undefined ? null : lm;
}
modules$.find.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Module$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}},{$nm:'version',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:$x4$meta,$an:function(){return[doc($CCMM$['ceylon.language.meta'].modules.$m.find.$an.doc[0]),shared(),$_native()];},d:['ceylon.language.meta','modules','$m','find']};};atr$(modules$,'$_default',function(){if (this.defmod$===undefined) {
this.defmod$=this.find('default',"unversioned");
}
return this.defmod$;
modules$.$_default.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Module$meta$declaration}]},$cont:$x4$meta,$an:function(){return[doc($CCMM$['ceylon.language.meta'].modules.$at.default.$an.doc[0]),shared(),$_native()];},d:['ceylon.language.meta','modules','$at','default']};};},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Module$meta$declaration}]},$cont:$x4$meta,$an:function(){return[doc($CCMM$['ceylon.language.meta'].modules.$at.default.$an.doc[0]),shared(),$_native()];},d:['ceylon.language.meta','modules','$at','default']};});})($x4$meta.$$.prototype);}
return $x4$meta;}
ex$.$init$$x4$meta=$init$$x4$meta;$init$$x4$meta();var $x5$meta;function getModules$meta(){if($x5$meta===undefined){$x5$meta=$init$$x4$meta()();$x5$meta.$crtmm$=getModules$meta.$crtmm$;}
return $x5$meta;}
ex$.getModules$meta=getModules$meta;getModules$meta.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$x4$meta},$an:function(){return[doc($CCMM$['ceylon.language.meta'].modules.$an.doc[0]),shared(),$_native()];},d:['ceylon.language.meta','modules']};};$prop$getModules$meta={get:getModules$meta,$crtmm$:getModules$meta.$crtmm$};get$x4$meta=getModules$meta;$prop$get$x4$meta=getModules$meta;ex$.$prop$getModules$meta=$prop$getModules$meta;
function ValueModel$meta$model($$targs$$,valueModel$){Model$meta$model(valueModel$);set_type_args(valueModel$,$$targs$$);}
ValueModel$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Get$ValueModel:{'var':'out','def':{t:Anything}},Set$ValueModel:{'var':'in','def':{t:Nothing}}},satisfies:[{t:Model$meta$model}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].ValueModel.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','ValueModel']};};
ex$.ValueModel$meta$model=ValueModel$meta$model;function $init$ValueModel$meta$model(){if(ValueModel$meta$model.$$===undefined){initTypeProtoI(ValueModel$meta$model,'ceylon.language.meta.model::ValueModel',$init$Model$meta$model());
(function(valueModel$){valueModel$.$prop$getDeclaration={$crtmm$:function(){return{mod:$CCMM$,$t:{t:ValueDeclaration$meta$declaration},$cont:ValueModel$meta$model,$an:function(){return[doc("This value\'s declaration."),shared(),formal(),actual()];},d:['ceylon.language.meta.model','ValueModel','$at','declaration']};}};valueModel$.$prop$getType={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Type$meta$model,a:{Type$Type:'Get$ValueModel'}},$cont:ValueModel$meta$model,$an:function(){return[doc("This value\'s closed type."),shared(),formal()];},d:['ceylon.language.meta.model','ValueModel','$at','type']};}};})(ValueModel$meta$model.$$.prototype);}
return ValueModel$meta$model;}
ex$.$init$ValueModel$meta$model=$init$ValueModel$meta$model;$init$ValueModel$meta$model();function ClassOrInterface$meta$model($$targs$$,classOrInterface$){Model$meta$model(classOrInterface$);Generic$meta$model(classOrInterface$);Type$meta$model({Type$Type:$$targs$$.Type$ClassOrInterface},classOrInterface$);set_type_args(classOrInterface$,$$targs$$);}
ClassOrInterface$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Type$ClassOrInterface:{'var':'out','def':{t:Anything}}},satisfies:[{t:Model$meta$model},{t:Generic$meta$model},{t:Type$meta$model,a:{Type$Type:'Type$ClassOrInterface'}}],of:[{t:ClassModel$meta$model,a:{Arguments$ClassModel:{t:Nothing},Type$ClassModel:'Type$ClassOrInterface'}},{t:InterfaceModel$meta$model,a:{Type$InterfaceModel:'Type$ClassOrInterface'}}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].ClassOrInterface.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','ClassOrInterface']};};
ex$.ClassOrInterface$meta$model=ClassOrInterface$meta$model;function $init$ClassOrInterface$meta$model(){if(ClassOrInterface$meta$model.$$===undefined){initTypeProtoI(ClassOrInterface$meta$model,'ceylon.language.meta.model::ClassOrInterface',$init$Model$meta$model(),$init$Generic$meta$model(),$init$Type$meta$model());
(function(classOrInterface$){classOrInterface$.$prop$getDeclaration={$crtmm$:function(){return{mod:$CCMM$,$t:{t:ClassOrInterfaceDeclaration$meta$declaration},$cont:ClassOrInterface$meta$model,$an:function(){return[doc("The declaration for this class or interface."),shared(),formal(),actual()];},d:['ceylon.language.meta.model','ClassOrInterface','$at','declaration']};}};classOrInterface$.$prop$getExtendedType={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:ClassModel$meta$model,a:{Arguments$ClassModel:{t:Nothing},Type$ClassModel:{t:Anything}}}]},$cont:ClassOrInterface$meta$model,$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].ClassOrInterface.$at.extendedType.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$at','extendedType']};}};classOrInterface$.$prop$getSatisfiedTypes={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:InterfaceModel$meta$model,a:{Type$InterfaceModel:{t:Anything}}}}},$cont:ClassOrInterface$meta$model,$an:function(){return[doc("The list of closed types that this class or interface satisfies."),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$at','satisfiedTypes']};}};classOrInterface$.$prop$getCaseValues={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Type$ClassOrInterface'}},$cont:ClassOrInterface$meta$model,$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].ClassOrInterface.$at.caseValues.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$at','caseValues']};}};classOrInterface$.getClassOrInterface={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Member$meta$model,a:{Kind$Member:'Kind$getClassOrInterface',Container$Member:'Container$getClassOrInterface'}}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}},{$nm:'types',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getClassOrInterface:{'def':{t:Nothing}},Kind$getClassOrInterface:{'satisfies':[{t:ClassOrInterface$meta$model,a:{Type$ClassOrInterface:{t:Anything}}}],'def':{t:ClassOrInterface$meta$model,a:{Type$ClassOrInterface:{t:Anything}}}}},$an:function(){return[doc("Gets a member class or interface by name. Returns `null` if not found."),$_throws("IncompatibleTypeException","If the specified `Container` or `Kind` type arguments are not compatible with the actual result."),$_throws("TypeApplicationException","If the specified closed type argument values are not compatible with the actual result\'s type parameters."),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getClassOrInterface']};}};classOrInterface$.getDeclaredClassOrInterface={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Member$meta$model,a:{Kind$Member:'Kind$getDeclaredClassOrInterface',Container$Member:'Container$getDeclaredClassOrInterface'}}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}},{$nm:'types',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getDeclaredClassOrInterface:{'def':{t:Nothing}},Kind$getDeclaredClassOrInterface:{'satisfies':[{t:ClassOrInterface$meta$model,a:{Type$ClassOrInterface:{t:Anything}}}],'def':{t:ClassOrInterface$meta$model,a:{Type$ClassOrInterface:{t:Anything}}}}},$an:function(){return[doc("Gets a member class or interface by name. Returns `null` if not found."),$_throws("IncompatibleTypeException","If the specified `Container` or `Kind` type arguments are not compatible with the actual result."),$_throws("TypeApplicationException","If the specified closed type argument values are not compatible with the actual result\'s type parameters."),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getDeclaredClassOrInterface']};}};classOrInterface$.getClass={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:MemberClass$meta$model,a:{Arguments$MemberClass:'Arguments$getClass',Container$MemberClass:'Container$getClass',Type$MemberClass:'Type$getClass'}}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}},{$nm:'types',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getClass:{'def':{t:Nothing}},Type$getClass:{'def':{t:Anything}},Arguments$getClass:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},$an:function(){return[doc("Gets a member class by name. Returns `null` if not found."),$_throws("IncompatibleTypeException","If the specified `Container`, `Type` or `Arguments` type arguments are not compatible with the actual result, \nor if the corresponding member is not a `MemberClass`."),$_throws("TypeApplicationException","If the specified closed type argument values are not compatible with the actual result\'s type parameters."),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getClass']};}};classOrInterface$.getDeclaredClass={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:MemberClass$meta$model,a:{Arguments$MemberClass:'Arguments$getDeclaredClass',Container$MemberClass:'Container$getDeclaredClass',Type$MemberClass:'Type$getDeclaredClass'}}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}},{$nm:'types',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getDeclaredClass:{'def':{t:Nothing}},Type$getDeclaredClass:{'def':{t:Anything}},Arguments$getDeclaredClass:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},$an:function(){return[doc("Gets a member class by name. Returns `null` if not found."),$_throws("IncompatibleTypeException","If the specified `Container`, `Type` or `Arguments` type arguments are not compatible with the actual result, \nor if the corresponding member is not a `MemberClass`."),$_throws("TypeApplicationException","If the specified closed type argument values are not compatible with the actual result\'s type parameters."),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getDeclaredClass']};}};classOrInterface$.getInterface={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:MemberInterface$meta$model,a:{Container$MemberInterface:'Container$getInterface',Type$MemberInterface:'Type$getInterface'}}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}},{$nm:'types',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getInterface:{'def':{t:Nothing}},Type$getInterface:{'def':{t:Anything}}},$an:function(){return[doc("Gets a member interface by name. Returns `null` if not found."),$_throws("IncompatibleTypeException","If the specified `Container` or `Type` type arguments are not compatible with the actual result, \nor if the corresponding member is not a `MemberInterface`."),$_throws("TypeApplicationException","If the specified closed type argument values are not compatible with the actual result\'s type parameters."),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getInterface']};}};classOrInterface$.getDeclaredInterface={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:MemberInterface$meta$model,a:{Container$MemberInterface:'Container$getDeclaredInterface',Type$MemberInterface:'Type$getDeclaredInterface'}}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}},{$nm:'types',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getDeclaredInterface:{'def':{t:Nothing}},Type$getDeclaredInterface:{'def':{t:Anything}}},$an:function(){return[doc("Gets a member interface by name. Returns `null` if not found."),$_throws("IncompatibleTypeException","If the specified `Container` or `Type` type arguments are not compatible with the actual result, \nor if the corresponding member is not a `MemberInterface`."),$_throws("TypeApplicationException","If the specified closed type argument values are not compatible with the actual result\'s type parameters."),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getDeclaredInterface']};}};classOrInterface$.getMethod={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Method$meta$model,a:{Container$Method:'Container$getMethod',Arguments$Method:'Arguments$getMethod',Type$Method:'Type$getMethod'}}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}},{$nm:'types',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getMethod:{'def':{t:Nothing}},Type$getMethod:{'def':{t:Anything}},Arguments$getMethod:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},$an:function(){return[doc("Gets a method by name. Returns `null` if not found."),$_throws("IncompatibleTypeException","If the specified `Container`, `Type` or `Arguments` type arguments are not compatible with the actual result."),$_throws("TypeApplicationException","If the specified closed type argument values are not compatible with the actual result\'s type parameters."),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getMethod']};}};classOrInterface$.getDeclaredMethod={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Method$meta$model,a:{Container$Method:'Container$getDeclaredMethod',Arguments$Method:'Arguments$getDeclaredMethod',Type$Method:'Type$getDeclaredMethod'}}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}},{$nm:'types',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getDeclaredMethod:{'def':{t:Nothing}},Type$getDeclaredMethod:{'def':{t:Anything}},Arguments$getDeclaredMethod:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},$an:function(){return[doc("Gets a method by name. Returns `null` if not found."),$_throws("IncompatibleTypeException","If the specified `Container`, `Type` or `Arguments` type arguments are not compatible with the actual result."),$_throws("TypeApplicationException","If the specified closed type argument values are not compatible with the actual result\'s type parameters."),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getDeclaredMethod']};}};classOrInterface$.getAttribute={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Attribute$meta$model,a:{Set$Attribute:'Set$getAttribute',Container$Attribute:'Container$getAttribute',Get$Attribute:'Get$getAttribute'}}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getAttribute:{'def':{t:Nothing}},Get$getAttribute:{'def':{t:Anything}},Set$getAttribute:{'def':{t:Nothing}}},$an:function(){return[doc("Gets an attribute by name. Returns `null` if not found."),$_throws("IncompatibleTypeException","If the specified `Container`, `Get` or `Set` type arguments are not compatible with the actual result."),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getAttribute']};}};classOrInterface$.getDeclaredAttribute={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Attribute$meta$model,a:{Set$Attribute:'Set$getDeclaredAttribute',Container$Attribute:'Container$getDeclaredAttribute',Get$Attribute:'Get$getDeclaredAttribute'}}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getDeclaredAttribute:{'def':{t:Nothing}},Get$getDeclaredAttribute:{'def':{t:Anything}},Set$getDeclaredAttribute:{'def':{t:Nothing}}},$an:function(){return[doc("Gets an attribute by name. Returns `null` if not found."),$_throws("IncompatibleTypeException","If the specified `Container`, `Get` or `Set` type arguments are not compatible with the actual result."),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getDeclaredAttribute']};}};classOrInterface$.getDeclaredAttributes={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Attribute$meta$model,a:{Set$Attribute:'Set$getDeclaredAttributes',Container$Attribute:'Container$getDeclaredAttributes',Get$Attribute:'Get$getDeclaredAttributes'}}}},$ps:[{$nm:'annotationTypes',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Annotation}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getDeclaredAttributes:{'def':{t:Nothing}},Get$getDeclaredAttributes:{'def':{t:Anything}},Set$getDeclaredAttributes:{'def':{t:Nothing}}},$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].ClassOrInterface.$m.getDeclaredAttributes.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getDeclaredAttributes']};}};classOrInterface$.getAttributes={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Attribute$meta$model,a:{Set$Attribute:'Set$getAttributes',Container$Attribute:'Container$getAttributes',Get$Attribute:'Get$getAttributes'}}}},$ps:[{$nm:'annotationTypes',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Annotation}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getAttributes:{'def':{t:Nothing}},Get$getAttributes:{'def':{t:Anything}},Set$getAttributes:{'def':{t:Nothing}}},$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].ClassOrInterface.$m.getAttributes.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getAttributes']};}};classOrInterface$.getDeclaredMethods={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Method$meta$model,a:{Container$Method:'Container$getDeclaredMethods',Arguments$Method:'Arguments$getDeclaredMethods',Type$Method:'Type$getDeclaredMethods'}}}},$ps:[{$nm:'annotationTypes',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Annotation}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getDeclaredMethods:{'def':{t:Nothing}},Type$getDeclaredMethods:{'def':{t:Anything}},Arguments$getDeclaredMethods:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].ClassOrInterface.$m.getDeclaredMethods.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getDeclaredMethods']};}};classOrInterface$.getMethods={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Method$meta$model,a:{Container$Method:'Container$getMethods',Arguments$Method:'Arguments$getMethods',Type$Method:'Type$getMethods'}}}},$ps:[{$nm:'annotationTypes',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Annotation}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getMethods:{'def':{t:Nothing}},Type$getMethods:{'def':{t:Anything}},Arguments$getMethods:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].ClassOrInterface.$m.getMethods.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getMethods']};}};classOrInterface$.getDeclaredClasses={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:MemberClass$meta$model,a:{Arguments$MemberClass:'Arguments$getDeclaredClasses',Container$MemberClass:'Container$getDeclaredClasses',Type$MemberClass:'Type$getDeclaredClasses'}}}},$ps:[{$nm:'annotationTypes',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Annotation}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getDeclaredClasses:{'def':{t:Nothing}},Type$getDeclaredClasses:{'def':{t:Anything}},Arguments$getDeclaredClasses:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].ClassOrInterface.$m.getDeclaredClasses.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getDeclaredClasses']};}};classOrInterface$.getClasses={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:MemberClass$meta$model,a:{Arguments$MemberClass:'Arguments$getClasses',Container$MemberClass:'Container$getClasses',Type$MemberClass:'Type$getClasses'}}}},$ps:[{$nm:'annotationTypes',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Annotation}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getClasses:{'def':{t:Nothing}},Type$getClasses:{'def':{t:Anything}},Arguments$getClasses:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].ClassOrInterface.$m.getClasses.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getClasses']};}};classOrInterface$.getDeclaredInterfaces={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:MemberInterface$meta$model,a:{Container$MemberInterface:'Container$getDeclaredInterfaces',Type$MemberInterface:'Type$getDeclaredInterfaces'}}}},$ps:[{$nm:'annotationTypes',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Annotation}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getDeclaredInterfaces:{'def':{t:Nothing}},Type$getDeclaredInterfaces:{'def':{t:Anything}}},$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].ClassOrInterface.$m.getDeclaredInterfaces.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getDeclaredInterfaces']};}};classOrInterface$.getInterfaces={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:MemberInterface$meta$model,a:{Container$MemberInterface:'Container$getInterfaces',Type$MemberInterface:'Type$getInterfaces'}}}},$ps:[{$nm:'annotationTypes',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Annotation}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getInterfaces:{'def':{t:Nothing}},Type$getInterfaces:{'def':{t:Anything}}},$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].ClassOrInterface.$m.getInterfaces.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getInterfaces']};}};})(ClassOrInterface$meta$model.$$.prototype);}
return ClassOrInterface$meta$model;}
ex$.$init$ClassOrInterface$meta$model=$init$ClassOrInterface$meta$model;$init$ClassOrInterface$meta$model();atr$(ClassOrInterface$meta$model.$$.prototype,'satisfiedTypes',function(){
var ints = this.tipo.$crtmm$['satisfies'];
if (ints && ints.length) {
var rv = [];
function resolveTypeArguments(root,type) {
if (type.a) {
var t2 = {t:type.t, a:{}};
for (var targ in type.a) {
t2.a[targ]=typeof(type.a[targ])==='string' ?
t2.a[targ]=root.$$targs$$.Type$ClassOrInterface.a[type.a[targ]]
: t2.a[targ]=type.a[targ];
if (t2.a[targ] && t2.a[targ].a) {
t2.a[targ]=resolveTypeArguments(root,t2.a[targ]);
}
}
type=t2;
}
return type;
}
for (var i=0; i < ints.length; i++) {
var ifc = resolveTypeArguments(this,ints[i]);
var mm=getrtmm$$(ifc.t);
if (mm.$cont) {
rv.push(AppliedMemberInterface(ifc.t, {Type$MemberInterface:ifc}));
} else {
rv.push(AppliedInterface(ifc.t, {Type$Interface:ifc}));
}
}
return rv.reifyCeylonType({t:InterfaceModel$meta$model,a:{Type$InterfaceModel:{t:Anything}}});
}
return getEmpty();
},undefined,function(){
return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Iterable:{t:InterfaceModel$meta$model,a:{Type:{t:Anything}}}}},$cont:ClassOrInterface$meta$model,
$an:function(){return[shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$at','satisfiedTypes']};
});
ClassOrInterface$meta$model.$$.prototype.getMethod=function(name,types,$$$mptypes) {
if (!extendsType($$$mptypes.Container$getMethod,{t:this.tipo}))throw IncompatibleTypeException$meta$model("Incompatible Container type argument");
var fun = this.tipo[name];
if (!fun) fun = this.tipo.$$.prototype[name];
if (!fun) return null;
var mm=getrtmm$$(fun);
var _t=$$$mptypes.Type$getMethod;
var _a=$$$mptypes.Arguments$getMethod;
if (mm) {
if (mm.$t){
_t=mm.$t;
if (typeof(_t)==='string') {
var _ta;
if (this.$targs && this.$targs[_t])_t=this.$targs[_t];
else if ($$$mptypes.Container$getMethod && $$$mptypes.Container$getMethod.a && $$$mptypes.Container$getMethod.a[_t])_t=$$$mptypes.Container$getMethod.a[_t];
else if (mm.$tp && mm.$tp[_t])_ta=mm.$tp[_t];
else if (this.tipo.$crtmm$.$tp && this.tipo.$crtmm$.$tp[_t])_ta=this.tipo.$crtmm$.$tp[_t];
if (_ta && _ta.satisfies)_t=_ta.satisfies.length===1?_ta.satisfies[0]:{t:'i',l:_ta.satisfies};
if (typeof(_t)==='string')_t={t:Anything};
}
if (!extendsType(_t,$$$mptypes.Type$getMethod))throw IncompatibleTypeException$meta$model("Incompatible Type argument");
}
validate$params(mm.$ps,_a,"Wrong number of Arguments for getMethod");
_a=tupleize$params(mm.$ps);
}
return AppliedMethod(fun, types, {Container$Method:{t:this.tipo},Type$Method:_t,Arguments$Method:_a});
}
ClassOrInterface$meta$model.$$.prototype.getMethod.$crtmm$=function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:Method$meta$model,a:{Arguments:'Arguments',Type:'Type',Container:'Container'}}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}},{$nm:'types',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Iterable:{t:Type$meta$model,a:{Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container:{},Type:{},Arguments:{'satisfies':[{t:Sequential,a:{Element$Iterable:{t:Anything}}}]}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getMethod']};};
ClassOrInterface$meta$model.$$.prototype.getDeclaredMethod=function(name,types,$$$mptypes) {
var rv=this.getMethod(name,types,{Type$getMethod:$$$mptypes.Type$getDeclaredMethod,Arguments$getMethod:$$$mptypes.Arguments$getDeclaredMethod,
Container$getMethod:$$$mptypes.Container$getDeclaredMethod});
if (rv && rv.tipo) {
var mm=getrtmm$$(rv.tipo);
if (mm && mm.$cont!==this.tipo)return null;
}
return rv;
}
ClassOrInterface$meta$model.$$.prototype.getDeclaredMethod.$crtmm$=function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:Method$meta$model,a:{Arguments:'Arguments',Type:'Type',Container:'Container'}}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}},{$nm:'types',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Iterable:{t:Type$meta$model,a:{Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container:{},Type:{},Arguments:{'satisfies':[{t:Sequential,a:{Element$Iterable:{t:Anything}}}]}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getDeclaredMethod']};};
ClassOrInterface$meta$model.$$.prototype.getAttribute=function getAttribute(name$15,$$$mptypes){
if (!extendsType($$$mptypes.Container$getAttribute,{t:this.tipo}))throw IncompatibleTypeException$meta$model("Incompatible Container type argument");
var nom = '$prop$get' + name$15[0].toUpperCase() + name$15.substring(1);
var at = this.tipo.$$.prototype[nom];
if (!at) {
nom = '$prop$get$_' + name$15;
at = this.tipo.$$.prototype[nom];
if (!at)return null;
}
var mm=getrtmm$$(at);
var _t=$$$mptypes.Get$getAttribute;
if (mm && mm.$t) {
if (!extendsType(mm.$t,_t))throw IncompatibleTypeException$meta$model("Incompatible Get type argument");
if (!extendsType($$$mptypes.Set$getAttribute,at.set?mm.$t:{t:Nothing}))throw IncompatibleTypeException$meta$model("Incompatible Set type argument");
_t=mm.$t;
}
var rv=AppliedAttribute(name$15, at, {Get$Attribute:_t,Set$Attribute:at.set?_t:{t:Nothing}, Container$Attribute:{t:this.tipo}});
if (this.$targs)rv.$$targs$$.Container$Attribute.a=this.$targs;
rv.$parent=this;
return rv;
};
ClassOrInterface$meta$model.$$.prototype.getAttribute.$crtmm$=function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:Attribute$meta$model,a:{Get:'Get',Set:'Set',Container:'Container'}}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container:{},Type:{}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getAttribute']};};
ClassOrInterface$meta$model.$$.prototype.getDeclaredAttribute=function getDeclaredAttribute(name$15,$$$mptypes){
var rv=this.getAttribute(name$15,{Get$getAttribute:$$$mptypes.Get$getDeclaredAttribute,Set$getAttribute:$$$mptypes.Set$getDeclaredAttribute,
Container$getAttribute:$$$mptypes.Container$getDeclaredAttribute});
if (rv && rv.tipo) {
var mm=getrtmm$$(rv.tipo);
if (mm&&mm.$cont!==this.tipo)return null;
}
return rv;
};ClassOrInterface$meta$model.$$.prototype.getDeclaredAttribute.$crtmm$=function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:Attribute$meta$model,a:{Get:'Get',Set:'Set',Container:'Container'}}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container:{},Type:{}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getDeclaredAttribute']};};
atr$(ClassOrInterface$meta$model.$$.prototype,'container',function(){
if (this.$parent)return this.$parent;
var cont = this.tipo.$crtmm$.$cont;
if (cont === undefined)return null;
if (get_model(cont.$crtmm$).$mt === 'i')
return AppliedInterface(cont,{Type$Interface:{t:cont}});
return AppliedClass(cont,{Type$Class:{t:cont},Arguments$Class:{t:Sequential,a:{Element$Iterable:{t:Anything}}}});
},undefined,function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:Type$meta$model,a:{Type:{t:Anything}}}]},$cont:ClassOrInterface$meta$model,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Member','$at','container']};});
ClassOrInterface$meta$model.$$.prototype.getClassOrInterface=function getClassOrInterface(name$2,types$3,$$$mptypes,noInherit){
if (!extendsType($$$mptypes.Kind$getClassOrInterface, {t:ClassOrInterface$meta$model}))throw IncompatibleTypeException$meta$model("Kind must be ClassOrInterface");
if (!extendsType($$$mptypes.Container$getClassOrInterface,{t:this.tipo}))throw IncompatibleTypeException$meta$model("Incompatible type specified in Container");
var $$clase=this;
if(types$3===undefined){types$3=getEmpty();}
var mm = getrtmm$$($$clase.tipo);
var nom = name$2 + '$' + mm.d[mm.d.length-1];
var ic = $$clase.tipo.$$.prototype[nom];
if (!ic) {
if (noInherit)return null;
var pere=mm['super'];
while (!ic && pere) {
mm=getrtmm$$(pere.t);
nom=mm&&mm.d?name$2+'$'+mm.d[mm.d.length-1]:undefined;
if (nom)ic=$$clase.tipo.$$.prototype[nom];
if (!ic)pere=mm['super'];
}
}
if (ic) {
mm = getrtmm$$(ic);
var md = get_model(mm);
var rv;
var ict={t:ic};
var _cont={t:this.tipo};
if (this.$targs)_cont.a=this.$targs;
if (md.$mt==='i') {
if (!extendsType({t:Interface$meta$model},{t:$$$mptypes.Kind$getClassOrInterface.t}))throw IncompatibleTypeException$meta$model("Member " + name$2 + " is an interface");
validate$typeparams(ict,ic.$crtmm$.$tp,types$3);
rv=AppliedMemberInterface(ic, {Container$MemberInterface:_cont,Type$MemberInterface:ict});
} else if (md.$mt==='c'){
if (!extendsType({t:Class$meta$model},{t:$$$mptypes.Kind$getClassOrInterface.t}))throw IncompatibleTypeException$meta$model("Member " + name$2 + " is a class");
validate$typeparams(ict,ic.$crtmm$.$tp,types$3);
rv=AppliedMemberClass(ic, {Container$MemberClass:_cont,Type$MemberClass:ict, Arguments$MemberClass:$$$mptypes.Arguments$getClassOrInterface});
} else {
throw IncompatibleTypeException$meta$model("Member " + name$2 + " is not a class or interface");
}
if (ict.a)rv.$targs=ict.a;
rv.$parent=this;
return rv;
}
return null;
};ClassOrInterface$meta$model.$$.prototype.getClassOrInterface.$crtmm$=function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:Member$meta$model,a:{Type$Member:'Container$ClassOrInterface',Kind$Member:'Kind$ClassOrInterface'}}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}},{$nm:'types',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Iterable:{t:Type$meta$model,a:{Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$ClassOrInterface:{},Kind$ClassOrInterface:{'satisfies':[{t:ClassOrInterface$meta$model,a:{Type$ClassOrInterface:{t:Anything}}}]}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getClassOrInterface']};};
ClassOrInterface$meta$model.$$.prototype.getDeclaredClassOrInterface=function getDeclaredClassOrInterface(name$2,types$3,$$$mptypes){
return this.getClassOrInterface(name$2,types$3,{Kind$getClassOrInterface:$$$mptypes.Kind$getDeclaredClassOrInterface,
Arguments$getClassOrInterface:$$$mptypes.Arguments$getDeclaredClassOrInterface,
Container$getClassOrInterface:$$$mptypes.Container$getDeclaredClassOrInterface},1);
};ClassOrInterface$meta$model.$$.prototype.getDeclaredClassOrInterface.$crtmm$=function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:Member$meta$model,a:{Type$Member:'Container',Kind$Member:'Kind'}}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}},{$nm:'types',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Iterable:{t:Type$meta$model,a:{Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container:{},Kind:{'satisfies':[{t:ClassOrInterface$meta$model,a:{Type$ClassOrInterface:{t:Anything}}}]}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getDeclaredClassOrInterface']};};
ClassOrInterface$meta$model.$$.prototype.getClass=function getClass(name,types,$mptypes) {
var rv=this.getClassOrInterface(name,types,{Container$getClassOrInterface:$mptypes.Container$getClass,
Kind$getClassOrInterface:Class$meta$model});
if (rv && !is$(rv, {t:AppliedMemberClass})) {
throw IncompatibleTypeException$meta$model("Member " + name + " is not a class");
}
return rv;
};ClassOrInterface$meta$model.$$.prototype.getClass.$crtmm$=function(){return{mod:$CCMM$,$t:{t:MemberClass$meta$model},$ps:[],$cont:ClassOrInterface$meta$model,$tp:{Container:{},Type:{},Arguments:{satisfies:[{t:Sequential,a:{Element$Iterable:{t:Anything}}}]}},d:['ceylon.language.meta.model','ClassOrInterface','$m','getClass']};};
ClassOrInterface$meta$model.$$.prototype.getDeclaredClass=function getClass(name,types,$mptypes) {
var rv=this.getDeclaredClassOrInterface(name,types,{Container$getDeclaredClassOrInterface:$mptypes.Container$getClass,
Kind$getDeclaredClassOrInterface:Class$meta$model});
if (rv && !is$(rv, {t:AppliedMemberClass})) {
throw IncompatibleTypeException$meta$model("Member " + name + " is not a class");
}
return rv;
};ClassOrInterface$meta$model.$$.prototype.getDeclaredClass.$crtmm$=function(){return{mod:$CCMM$,$t:{t:MemberClass$meta$model},$ps:[],$cont:ClassOrInterface$meta$model,$tp:{Container:{},Type:{},Arguments:{satisfies:[{t:Sequential,a:{Element$Iterable:{t:Anything}}}]}},d:['ceylon.language.meta.model','ClassOrInterface','$m','getDeclaredClass']};};
ClassOrInterface$meta$model.$$.prototype.getInterface=function(name,types,$mptypes) {
var rv=this.getClassOrInterface(name,types,{Container$getClassOrInterface:$mptypes.Container$getInterface,
Kind$getClassOrInterface:Interface$meta$model});
if (rv && !is$(rv, {t:AppliedMemberInterface})) {
throw IncompatibleTypeException$meta$model("Member " + name + " is not an interface");
}
return rv;
};ClassOrInterface$meta$model.$$.prototype.getInterface.$crtmm$=function(){return{mod:$CCMM$,$t:{t:MemberInterface$meta$model},$ps:[],$cont:ClassOrInterface$meta$model,$tp:{Container:{},Type:{},Arguments:{satisfies:[{t:Sequential,a:{Element$Iterable:{t:Anything}}}]}},d:['ceylon.language.meta.model','ClassOrInterface','$m','getInterface']};};
ClassOrInterface$meta$model.$$.prototype.getDeclaredInterface=function(name,types,$mptypes) {
var rv=this.getDeclaredClassOrInterface(name,types,{Container$getDeclaredClassOrInterface:$mptypes.Container$getDeclaredInterface,
Kind$getDeclaredClassOrInterface:Interface$meta$model});
if (rv && !is$(rv, {t:AppliedMemberInterface})) {
throw IncompatibleTypeException$meta$model("Member " + name + " is not an interface");
}
return rv;
};ClassOrInterface$meta$model.$$.prototype.getDeclaredInterface.$crtmm$=function(){return{mod:$CCMM$,$t:{t:MemberInterface$meta$model},$ps:[],$cont:ClassOrInterface$meta$model,$tp:{Container:{},Type:{},Arguments:{satisfies:[{t:Sequential,a:{Element$Iterable:{t:Anything}}}]}},d:['ceylon.language.meta.model','ClassOrInterface','$m','getDeclaredInterface']};};
ClassOrInterface$meta$model.$$.prototype.typeOf=function typeOf(instance$8){
var _t={t:this.tipo};
if (this.$targs)_t.a=this.$targs;
return is$(instance$8,_t);
};
ClassOrInterface$meta$model.$$.prototype.typeOf.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'instance',$mt:'prm',$t:{t:Anything},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Type','$m','typeOf']};};
ClassOrInterface$meta$model.$$.prototype.supertypeOf=function supertypeOf(type$9){
return extendsType({t:type$9.tipo}, {t:this.tipo});
};
ClassOrInterface$meta$model.$$.prototype.supertypeOf.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'type',$mt:'prm',$t:{t:Type$meta$model,a:{Type:{t:Anything}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Type','$m','supertypeOf']};};
ClassOrInterface$meta$model.$$.prototype.exactly=function exactly(type$10){
return type$10.tipo && this.tipo === type$10.tipo;
};
ClassOrInterface$meta$model.$$.prototype.exactly.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'type',$mt:'prm',$t:{t:Type$meta$model,a:{Type:{t:Anything}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Type','$m','exactly']};};
atr$(ClassOrInterface$meta$model.$$.prototype,'typeArguments',function(){
var mm = getrtmm$$(this.tipo);
if (mm) {
if (mm.$tp) {
var targs={};
for (var tp in mm.$tp) {
var param = OpenTypeParam(this.tipo,tp);
var targ;
if (this.$$targs$$ && this.$$targs$$.Type$ClassOrInterface && this.$$targs$$.Type$ClassOrInterface.a
&& this.$$targs$$.Type$ClassOrInterface.a[tp]) {
var _targ=this.$$targs$$.Type$ClassOrInterface.a[tp];
if (typeof(_targ)==='string') {
console.log("TODO buscar " + tp + "->" + _targ + " para " + this.declaration.qualifiedName);
_targ={t:Anything};
}
targ=typeLiteral$meta({Type$typeLiteral:_targ});
} else {
targ=typeLiteral$meta({Type$typeLiteral:{t:Anything}});
}
targs[param]=targ;
}
return Mapita(targs,{K$Mapita:{t:TypeParameter$meta$declaration},V$Mapita:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}});
}
return getEmpty();
}
throw Exception("ClassOrInterface.typeArguments-we don't have a metamodel!");
},undefined,function(){return{mod:$CCMM$,$t:{t:Map,a:{Key:{t:TypeParameter$meta$declaration},Item:{t:Type$meta$model,a:{Type:{t:Anything}}}}},$cont:ClassOrInterface$meta$model,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Generic','$at','typeArguments']};});
atr$(ClassOrInterface$meta$model.$$.prototype,'string',function(){
var mm = getrtmm$$(this.tipo);
var qn=this.tipo.$$ && this.tipo.$$.prototype && this.tipo.$$.prototype.getT$name ? this.tipo.$$.prototype.getT$name() : $qname(mm);
if (mm.$tp) {
qn+="<";
var first=true;
for (var tp in mm.$tp) {
var targ;
if (this.$$targs$$ && this.$$targs$$.Type$ClassOrInterface && this.$$targs$$.Type$ClassOrInterface.a && this.$$targs$$.Type$ClassOrInterface.a[tp]) {
var _targ=this.$$targs$$.Type$ClassOrInterface.a[tp];
if (typeof(_targ)==='string') {
console.log("TODO buscar " + tp + "->" + _targ + " para " + this.declaration.qualifiedName);
_targ={t:Anything};
}
targ=typeLiteral$meta({Type$typeLiteral:_targ});
} else {
targ=typeLiteral$meta({Type$typeLiteral:{t:Anything}});
}
if (first)first=false; else qn+=",";
if (targ.declaration) {
qn+=targ.declaration.qualifiedName;
} else {
qn+=targ.string;
}
}
qn+=">";
}
return qn;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},d:['$','Object','$at','string']};});
atr$(ClassOrInterface$meta$model.$$.prototype,'hash',function(){
var mm = getrtmm$$(this.tipo);
var h=$qname(mm).hash;
if (mm.$tp) {
for (var tp in mm.$tp) {
var targ;
if (this.$$targs$$ && this.$$targs$$.Type$ClassOrInterface && this.$$targs$$.Type$ClassOrInterface.a && this.$$targs$$.Type$ClassOrInterface.a[tp]) {
var _targ=this.$$targs$$.Type$ClassOrInterface.a[tp];
if (typeof(_targ)==='string') {
console.log("TODO buscar " + tp + "->" + _targ + " para " + this.declaration.qualifiedName);
_targ={t:Anything};
}
targ=typeLiteral$meta({Type$typeLiteral:_targ});
} else {
targ=typeLiteral$meta({Type$typeLiteral:{t:Anything}});
}
h+=targ.hash;
}
}
if (this.$bound)h+=this.$bound.hash;
return h;
},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},d:['$','Object','$at','hash']};});
atr$(ClassOrInterface$meta$model.$$.prototype,'extendedType',function(){
var sc = this.tipo.$crtmm$['super'];
if (sc === undefined)return null;
var mm = getrtmm$$(sc.t);
var ac;
if (mm.$cont) {
ac=AppliedMemberClass(sc.t, {Type$MemberClass:sc,Arguments$MemberClass:{t:Sequential,a:{Element$Iterable:{t:Anything}}},Container$MemberClass:mm.$cont});
} else {
ac=AppliedClass(sc.t, {Type$Class:sc,Arguments$Class:{t:Sequential,a:{Element$Iterable:{t:Anything}}}});
}
if (sc.a)ac.$targs=sc.a;
return ac;
},undefined,function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:ClassModel$meta$model,a:{Arguments:{t:Nothing},Type:{t:Anything}}}]},$cont:AppliedClass,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Class','$at','extendedType']};});
atr$(ClassOrInterface$meta$model.$$.prototype,'caseValues',function(){
var cts = this.tipo.$crtmm$.of;
if (cts && cts.length > 0) {
var rv=[];
for (var i=0; i < cts.length; i++) {
if (typeof(cts[i])==='function') {
rv.push(cts[i]());
}
}
return rv.length===0?getEmpty():ArraySequence(rv,{Element$ArraySequence:{t:this.tipo}});
}
return getEmpty();
},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Type$ClassOrInterface'}},$cont:ClassOrInterface$meta$model,$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].ClassOrInterface.$at.caseValues.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$at','caseValues']};});
ClassOrInterface$meta$model.$$.prototype.getClasses=function getClasses(anntypes,$$$mptypes,noInherit){
var mems=[];
var ats=coi$get$anns(anntypes);
for (m in this.tipo.$$.prototype) {
var mem=this.tipo.$$.prototype[m];
if (mem && mem.$$) {
var mm=getrtmm$$(mem);
if (mm && mm.d && mm.d[mm.d.length-2]==='$c') {
if (noInherit && mm.$cont!==$$$mptypes.Container$getClasses.t)continue;
if (!extendsType({t:this.tipo},$$$mptypes.Container$getClasses))continue;
if (!extendsType({t:mem},$$$mptypes.Type$getClasses))continue;
var anns=mm.$an; if (typeof(anns)==='function'){anns=anns();mm.$an=anns;}
if (anns && coi$is$anns(anns,ats) && validate$params(mm.$ps,$$$mptypes.Arguments$getClasses,'',1)) {
mems.push(AppliedMemberClass(mem, {Container$MemberClass:this.tipo,Type$MemberClass:{t:mem}, Arguments$MemberClass:$$$mptypes.Arguments$getClasses}));
}
}
}
}
return mems.length===0?getEmpty():ArraySequence(mems,{Element$ArraySequence:{t:MemberClass$meta$model,a:{Arguments$MemberClass:$$$mptypes.Arguments$getClasses,Container$MemberClass:$$$mptypes.Container$getClasses,Type$MemberClass:$$$mptypes.Type$getClasses}}});
}
ClassOrInterface$meta$model.$$.prototype.getClasses.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:MemberClass$meta$model,a:{Arguments$MemberClass:'Arguments$getClasses',Container$MemberClass:'Container$getClasses',Type$MemberClass:'Type$getClasses'}}}},$ps:[{$nm:'annotationTypes',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Annotation}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getClasses:{'def':{t:Nothing}},Type$getClasses:{'def':{t:Anything}},Arguments$getClasses:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getClasses']};};
ClassOrInterface$meta$model.$$.prototype.getDeclaredClasses=function getDeclaredClasses(anntypes,$$$mptypes) {
return this.getClasses(anntypes,{Container$getClasses:$$$mptypes.Container$getDeclaredClasses,Type$getClasses:$$$mptypes.Type$getDeclaredClasses,Arguments$getClasses:$$$mptypes.Arguments$getDeclaredClasses},1);
}
ClassOrInterface$meta$model.$$.prototype.getDeclaredClasses.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:MemberClass$meta$model,a:{Arguments$MemberClass:'Arguments$getDeclaredClasses',Container$MemberClass:'Container$getDeclaredClasses',Type$MemberClass:'Type$getDeclaredClasses'}}}},$ps:[{$nm:'annotationTypes',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Annotation}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getDeclaredClasses:{'def':{t:Nothing}},Type$getDeclaredClasses:{'def':{t:Anything}},Arguments$getDeclaredClasses:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getDeclaredClasses']};};
ClassOrInterface$meta$model.$$.prototype.getInterfaces=function getInterfaces(anntypes,$$$mptypes,noInherit){
var mems=[];
var ats=coi$get$anns(anntypes);
for (m in this.tipo.$$.prototype) {
var mem=this.tipo.$$.prototype[m];
if (mem && mem.$$) {
var mm=getrtmm$$(mem);
if (mm && mm.d && mm.d[mm.d.length-2]==='$i') {
if (noInherit && mm.$cont!==$$$mptypes.Container$getInterfaces.t)continue;
if (!extendsType({t:this.tipo},$$$mptypes.Container$getInterfaces))continue;
if (!extendsType({t:mem},$$$mptypes.Type$getInterfaces))continue;
var anns=mm.$an; if (typeof(anns)==='function'){anns=anns();mm.$an=anns;}
if (anns && coi$is$anns(anns,ats)) {
mems.push(AppliedMemberInterface(mem, {Container$MemberInterface:this.tipo,Type$MemberInterface:{t:mem}}));
}
}
}
}
return mems.length===0?getEmpty():ArraySequence(mems,{Element$ArraySequence:{t:MemberInterface$meta$model,a:{Container$MemberInterface:$$$mptypes.Container$getInterfaces,Type$MemberInterface:$$$mptypes.Type$getInterfaces}}});
}
ClassOrInterface$meta$model.$$.prototype.getInterfaces.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:MemberInterface$meta$model,a:{Container$MemberInterface:'Container$getInterfaces',Type$MemberInterface:'Type$getInterfaces'}}}},$ps:[{$nm:'annotationTypes',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Annotation}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getInterfaces:{'def':{t:Nothing}},Type$getInterfaces:{'def':{t:Anything}}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getInterfaces']};};
ClassOrInterface$meta$model.$$.prototype.getDeclaredInterfaces=function getDeclaredInterfaces(anntypes,$$$mptypes){
return this.getInterfaces(anntypes,{Container$getInterfaces:$$$mptypes.Container$getDeclaredInterfaces,Type$getInterfaces:$$$mptypes.Type$getDeclaredInterfaces},1);
}
ClassOrInterface$meta$model.$$.prototype.getDeclaredInterfaces.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:MemberInterface$meta$model,a:{Container$MemberInterface:'Container$getDeclaredInterfaces',Type$MemberInterface:'Type$getDeclaredInterfaces'}}}},$ps:[{$nm:'annotationTypes',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Annotation}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getDeclaredInterfaces:{'def':{t:Nothing}},Type$getDeclaredInterfaces:{'def':{t:Anything}}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getDeclaredInterfaces']};};
ClassOrInterface$meta$model.$$.prototype.getAttributes=function getAttributes(anntypes,$$$mptypes,noInherit){
var mems=[];
var ats=coi$get$anns(anntypes);
for (m in this.tipo.$$.prototype) {
if (m.substring(0,6)==='$prop$') {
var mm=getrtmm$$(this.tipo.$$.prototype[m]);
if (mm) {
if (noInherit && mm.$cont!==this.tipo)continue;
if (!extendsType(mm.$t,$$$mptypes.Get$getAttributes))continue;
var setter=this.tipo.$$.prototype[m].set && extendsType($$$mptypes.Set$getAttributes,mm.$t);
if ($$$mptypes.Set$getAttributes.t!==Nothing && !setter)continue;
if (!extendsType({t:this.tipo},$$$mptypes.Container$getAttributes))continue;
var anns=mm.$an; if (typeof(anns)==='function'){anns=anns();mm.$an=anns;}
if (anns && coi$is$anns(anns,ats)) {
var atname=mm.d[mm.d.length-1];
if (atname.indexOf('$')>0)atname=atname.substring(0,atname.indexOf('$'));
mems.push(AppliedAttribute(atname,this.tipo.$$.prototype[m],{Container$Attribute:{t:mm.$cont},Get$Attribute:mm.$t,Set$Attribute:setter?mm.$t:{t:Nothing}}));
}
}
}
}
return mems.length==0?getEmpty():ArraySequence(mems,{Element$ArraySequence:{t:Attribute$meta$model,a:{Set$Attribute:$$$mptypes.Set$getAttributes,Container$Attribute:$$$mptypes.Container$getAttributes,Get$Attribute:$$$mptypes.Get$getAttributes}}});
}
ClassOrInterface$meta$model.$$.prototype.getAttributes.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Attribute$meta$model,a:{Set$Attribute:'Set$getAttributes',Container$Attribute:'Container$getAttributes',Get$Attribute:'Get$getAttributes'}}}},$ps:[{$nm:'annotationTypes',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Annotation}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getAttributes:{'def':{t:Nothing}},Get$getAttributes:{'def':{t:Anything}},Set$getAttributes:{'def':{t:Nothing}}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getAttributes']};};
ClassOrInterface$meta$model.$$.prototype.getDeclaredAttributes=function getDeclaredAttributes(anntypes,$$$mptypes) {
return this.getAttributes(anntypes,{Container$getAttributes:$$$mptypes.Container$getDeclaredAttributes,Get$getAttributes:$$$mptypes.Get$getDeclaredAttributes,Set$getAttributes:$$$mptypes.Set$getDeclaredAttributes},1);
}
ClassOrInterface$meta$model.$$.prototype.getDeclaredAttributes.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Attribute$meta$model,a:{Set$Attribute:'Set$getDeclaredAttributes',Container$Attribute:'Container$getDeclaredAttributes',Get$Attribute:'Get$getDeclaredAttributes'}}}},$ps:[{$nm:'annotationTypes',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Annotation}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getDeclaredAttributes:{'def':{t:Nothing}},Get$getDeclaredAttributes:{'def':{t:Anything}},Set$getDeclaredAttributes:{'def':{t:Nothing}}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getDeclaredAttributes']};};
ClassOrInterface$meta$model.$$.prototype.getMethods=function getMethods(anntypes,$$$mptypes,noInherit) {
var mems=[];
var ats=coi$get$anns(anntypes);
for (m in this.tipo.$$.prototype) {
var mem=this.tipo.$$.prototype[m];
if (mem && m.substring(0,6)!='$prop$' && mem.$$===undefined) {
var mm=getrtmm$$(mem);
if (mm && mm.d && mm.d[mm.d.length-2]=='$m') {
if (noInherit && mm.$cont!==$$$mptypes.Container$getMethods.t)continue;
if (!extendsType(mm.$t,$$$mptypes.Type$getMethods))continue;
var anns=mm.$an; if (typeof(anns)==='function'){anns=anns();mm.$an=anns;}
if (anns && coi$is$anns(anns,ats) && validate$params(mm.$ps,$$$mptypes.Arguments$getMethods,'',1)) {
var types=[].reifyCeylonType({t:Type$meta$model,a:{Type:{t:Anything}}});
if (mm.$ps) for (var i=0; i<mm.$ps.length;i++) {
types.push(typeLiteral$meta({Type$typeLiteral:mm.$ps[i].$t}));
}
mems.push(AppliedMethod(mem, types, {Container$Method:{t:this.tipo},Type$Method:mm.$t,Arguments$Method:$$$mptypes.Arguments$getMethods}));
}
}
}
}
return mems.length===0?getEmpty():ArraySequence(mems,{Element$ArraySequence:{t:Method$meta$model,a:{Container$Method:$$$mptypes.Container$getMethods,Arguments$Method:$$$mptypes.Arguments$getMethods,Type$Method:$$$mptypes.Type$getMethods}}});
}
ClassOrInterface$meta$model.$$.prototype.getMethods.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Method$meta$model,a:{Container$Method:'Container$getMethods',Arguments$Method:'Arguments$getMethods',Type$Method:'Type$getMethods'}}}},$ps:[{$nm:'annotationTypes',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Annotation}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getMethods:{'def':{t:Nothing}},Type$getMethods:{'def':{t:Anything}},Arguments$getMethods:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getMethods']};};
ClassOrInterface$meta$model.$$.prototype.getDeclaredMethods=function getDeclaredMethods(anntypes,$$$mptypes) {
return this.getMethods(anntypes,{Container$getMethods:$$$mptypes.Container$getDeclaredMethods,Type$getMethods:$$$mptypes.Type$getDeclaredMethods,Arguments$getMethods:$$$mptypes.Arguments$getDeclaredMethods},1);
}
ClassOrInterface$meta$model.$$.prototype.getDeclaredMethods.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Method$meta$model,a:{Container$Method:'Container$getDeclaredMethods',Arguments$Method:'Arguments$getDeclaredMethods',Type$Method:'Type$getDeclaredMethods'}}}},$ps:[{$nm:'annotationTypes',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Annotation}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getDeclaredMethods:{'def':{t:Nothing}},Type$getDeclaredMethods:{'def':{t:Anything}},Arguments$getDeclaredMethods:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getDeclaredMethods']};};
function coi$get$anns(anntypes) {
var ats=[];
var iter=anntypes.iterator();
var a;while((a=iter.next())!==getFinished()){
ats.push({t:a.tipo});
}
return ats;
}
function coi$is$anns(anns,ats) {
for (var i=0;i<ats.length;i++) {
var f=false;
for (var j=0;j<anns.length;j++) {
f|=(is$(anns[j],ats[i]));
}
if (!f)return false;
}
return true;
}
function ClassModel$meta$model($$targs$$,classModel$){ClassOrInterface$meta$model({Type$ClassOrInterface:$$targs$$.Type$ClassModel},classModel$);set_type_args(classModel$,$$targs$$);}
ClassModel$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Type$ClassModel:{'var':'out','def':{t:Anything}},Arguments$ClassModel:{'var':'in','satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},satisfies:[{t:ClassOrInterface$meta$model,a:{Type$ClassOrInterface:'Type$ClassModel'}}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].ClassModel.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','ClassModel']};};
ex$.ClassModel$meta$model=ClassModel$meta$model;function $init$ClassModel$meta$model(){if(ClassModel$meta$model.$$===undefined){initTypeProtoI(ClassModel$meta$model,'ceylon.language.meta.model::ClassModel',$init$ClassOrInterface$meta$model());
(function(classModel$){classModel$.$prop$getDeclaration={$crtmm$:function(){return{mod:$CCMM$,$t:{t:ClassDeclaration$meta$declaration},$cont:ClassModel$meta$model,$an:function(){return[shared(),formal(),actual()];},d:['ceylon.language.meta.model','ClassModel','$at','declaration']};}};classModel$.$prop$getParameterTypes={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$cont:ClassModel$meta$model,$an:function(){return[doc("This function\'s parameter closed types"),shared(),formal()];},d:['ceylon.language.meta.model','ClassModel','$at','parameterTypes']};}};})(ClassModel$meta$model.$$.prototype);}
return ClassModel$meta$model;}
ex$.$init$ClassModel$meta$model=$init$ClassModel$meta$model;$init$ClassModel$meta$model();atr$(ClassModel$meta$model.$$.prototype,'parameterTypes',function(){
var ps=this.tipo.$crtmm$.$ps;
if (!ps || ps.length==0)return getEmpty();
var r=[];
for (var i=0; i < ps.length; i++) {
var pt=ps[i].$t;
if (typeof(pt)==='string'){
if (!this.$targs)throw TypeApplicationException$meta$model("This class model needs type parameters");
pt=this.$targs[pt];
if (!pt)throw TypeApplicationException$meta$model("Class model is missing type argument for <" + ps[i].$t + ">");
}
r.push(typeLiteral$meta({Type$typeLiteral:pt}));
}
return r.length===0?getEmpty():ArraySequence(r,{Element$ArraySequence:{t:Type$meta$model,a:{t:Anything}}});
},undefined,function(){return{mod:$CCMM$,$cont:ClassModel$meta$model,d:['ceylon.language.meta.model','ClassModel','$at','parameterTypes'],$t:{t:Sequential,a:{ElementSequential:{t:Type$meta$model,a:{Type:{t:Anything}}},Absent:{t:Null}}}};});
atr$(ClassModel$meta$model.$$.prototype,'declaration',function(){
var $$clase=this;
if ($$clase._decl)return $$clase._decl;
var mm = getrtmm$$($$clase.tipo);
$$clase._decl = OpenClass(getModules$meta().find(mm.mod['$mod-name'],mm.mod['$mod-version']).findPackage(mm.d[0]), $$clase.tipo);
return $$clase._decl;
},undefined,function(){return{mod:$CCMM$,$t:{t:ClassDeclaration$meta$declaration},$cont:ClassModel$meta$model,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','ClassModel','$at','declaration']};});
ClassModel$meta$model.$$.prototype.equals=function(o){
return is$(o,{t:AppliedClass}) && o.tipo===this.tipo && this.typeArguments.equals(o.typeArguments);
};
ClassModel$meta$model.$$.prototype.equals.$crtmm$=function(){return{
mod:$CCMM$,d:['$','Object','$m','equals'],$t:{t:$_Boolean},$ps:[{$nm:'other',$t:{t:$_Object},$mt:'prm'}]
}};
function Class$meta$model($$targs$$,class$){ClassModel$meta$model({Arguments$ClassModel:$$targs$$.Arguments$Class,Type$ClassModel:$$targs$$.Type$Class},class$);Callable({Return$Callable:$$targs$$.Type$Class,Arguments$Callable:$$targs$$.Arguments$Class},class$);Applicable$meta$model({Type$Applicable:$$targs$$.Type$Class},class$);set_type_args(class$,$$targs$$);}
Class$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Type$Class:{'var':'out','def':{t:Anything}},Arguments$Class:{'var':'in','satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},satisfies:[{t:ClassModel$meta$model,a:{Arguments$ClassModel:'Arguments$Class',Type$ClassModel:'Type$Class'}},{t:Callable,a:{Return$Callable:'Type$Class',Arguments$Callable:'Arguments$Class'}},{t:Applicable$meta$model,a:{Type$Applicable:'Type$Class'}}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Class.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','Class']};};
ex$.Class$meta$model=Class$meta$model;function $init$Class$meta$model(){if(Class$meta$model.$$===undefined){initTypeProtoI(Class$meta$model,'ceylon.language.meta.model::Class',$init$ClassModel$meta$model(),$init$Callable(),$init$Applicable$meta$model());
}
return Class$meta$model;}
ex$.$init$Class$meta$model=$init$Class$meta$model;$init$Class$meta$model();function FunctionModel$meta$model($$targs$$,functionModel$){Model$meta$model(functionModel$);Generic$meta$model(functionModel$);set_type_args(functionModel$,$$targs$$);}
FunctionModel$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Type$FunctionModel:{'var':'out','def':{t:Anything}},Arguments$FunctionModel:{'var':'in','satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},satisfies:[{t:Model$meta$model},{t:Generic$meta$model}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].FunctionModel.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','FunctionModel']};};
ex$.FunctionModel$meta$model=FunctionModel$meta$model;function $init$FunctionModel$meta$model(){if(FunctionModel$meta$model.$$===undefined){initTypeProtoI(FunctionModel$meta$model,'ceylon.language.meta.model::FunctionModel',$init$Model$meta$model(),$init$Generic$meta$model());
(function(functionModel$){functionModel$.$prop$getDeclaration={$crtmm$:function(){return{mod:$CCMM$,$t:{t:FunctionDeclaration$meta$declaration},$cont:FunctionModel$meta$model,$an:function(){return[doc("This function\'s declaration."),shared(),formal(),actual()];},d:['ceylon.language.meta.model','FunctionModel','$at','declaration']};}};functionModel$.$prop$getType={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Type$meta$model,a:{Type$Type:'Type$FunctionModel'}},$cont:FunctionModel$meta$model,$an:function(){return[doc("This function\'s return closed type."),shared(),formal()];},d:['ceylon.language.meta.model','FunctionModel','$at','type']};}};functionModel$.$prop$getParameterTypes={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$cont:FunctionModel$meta$model,$an:function(){return[doc("This function\'s parameter closed types"),shared(),formal()];},d:['ceylon.language.meta.model','FunctionModel','$at','parameterTypes']};}};})(FunctionModel$meta$model.$$.prototype);}
return FunctionModel$meta$model;}
ex$.$init$FunctionModel$meta$model=$init$FunctionModel$meta$model;$init$FunctionModel$meta$model();atr$(FunctionModel$meta$model.$$.prototype,'parameterTypes',function(){
var ps=this.tipo.$crtmm$.$ps;
if (!ps || ps.length==0)return getEmpty();
var r=[];
for (var i=0; i < ps.length; i++) {
var pt=ps[i].$t;
if (typeof(pt)==='string'){
if (!this.$targs)throw TypeApplicationException$meta$model("This function model needs type parameters");
pt=this.$targs[pt];
if (!pt)throw TypeApplicationException$meta$model("Function model is missing type argument for <" + ps[i].$t + ">");
}
r.push(typeLiteral$meta({Type$typeLiteral:pt}));
}
return r.length===0?getEmpty():ArraySequence(r,{Element$ArraySequence:{t:Type$meta$model,a:{t:Anything}}});
},undefined,function(){return{mod:$CCMM$,$cont:FunctionModel$meta$model,d:['ceylon.language.meta.model','FunctionModel','$at','parameterTypes'],$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type:{t:Anything}}},Absent:{t:Null}}}};});
atr$(FunctionModel$meta$model.$$.prototype,'typeArguments',function(){
var mm = this.tipo.$crtmm$;
if (mm) {
if (mm.$tp) {
if (this.$targs===undefined)throw TypeApplicationException$meta$model("Missing type arguments for "+this.string);
var targs={};
for (var tp in mm.$tp) {
var param = OpenTypeParam(this.tipo,tp);
var targ = this.$targs[tp];
if (targ) {
targ=typeLiteral$meta({Type$typeLiteral:targ});
} else {
targ=typeLiteral$meta({Type$typeLiteral:{t:Anything}});
}
targs[param]=targ;
}
return Mapita(targs,{K$Mapita:{t:TypeParameter$meta$declaration},V$Mapita:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}});
}
return getEmpty();
}
throw Exception("FunctionModel.typeArguments-we don't have a metamodel!");
},undefined,function(){return{mod:$CCMM$,$t:{t:Map,a:{Key:{t:TypeParameter$meta$declaration},Item:{t:Type$meta$model,a:{Type:{t:Anything}}}}},$cont:FunctionModel$meta$model,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Generic','$at','typeArguments']};});
atr$(FunctionModel$meta$model.$$.prototype,'string',function(){
var mm=this.tipo.$crtmm$;
var qn;
if (mm.$cont) {
qn=$qname(mm.$cont);
if (mm.$cont.$crtmm$.$tp) {
var cnt=this.$$targs$$&&this.$$targs$$.Container$Function&&this.$$targs$$.Container$Function.a;
if (!cnt)cnt=this.$$targs$$&&this.$$targs$$.Container$Method&&this.$$targs$$.Container$Method.a;
qn+="<";var first=true;
for (var tp in mm.$cont.$crtmm$.$tp) {
if (first)first=false;else qn+=",";
var _ta=cnt&&cnt[tp];
qn+=$qname(_ta||Anything);
}
qn+=">";
}
qn+="."+mm.d[mm.d.length-1];
} else {
qn=$qname(mm);
}
if (mm.$tp) {
qn+="<";
var first=true;
for (var tp in mm.$tp) {
if (first)first=false; else qn+=",";
var targ=this.$targs[tp];
if (targ.t) {
var _m=getrtmm$$(targ.t);
qn+=$qname(_m);
} else {
qn+=tp;
}
}
qn+=">";
}
return qn;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},d:['$','Object','$at','string'],$cont:FunctionModel$meta$model};});
function Function$meta$model($$targs$$,function$){FunctionModel$meta$model({Arguments$FunctionModel:$$targs$$.Arguments$Function,Type$FunctionModel:$$targs$$.Type$Function},function$);Callable({Return$Callable:$$targs$$.Type$Function,Arguments$Callable:$$targs$$.Arguments$Function},function$);Applicable$meta$model({Type$Applicable:$$targs$$.Type$Function},function$);set_type_args(function$,$$targs$$);}
Function$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Type$Function:{'var':'out','def':{t:Anything}},Arguments$Function:{'var':'in','satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},satisfies:[{t:FunctionModel$meta$model,a:{Arguments$FunctionModel:'Arguments$Function',Type$FunctionModel:'Type$Function'}},{t:Callable,a:{Return$Callable:'Type$Function',Arguments$Callable:'Arguments$Function'}},{t:Applicable$meta$model,a:{Type$Applicable:'Type$Function'}}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Function.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','Function']};};
ex$.Function$meta$model=Function$meta$model;function $init$Function$meta$model(){if(Function$meta$model.$$===undefined){initTypeProtoI(Function$meta$model,'ceylon.language.meta.model::Function',$init$FunctionModel$meta$model(),$init$Callable(),$init$Applicable$meta$model());
}
return Function$meta$model;}
ex$.$init$Function$meta$model=$init$Function$meta$model;$init$Function$meta$model();function Method$meta$model($$targs$$,method$){FunctionModel$meta$model({Arguments$FunctionModel:$$targs$$.Arguments$Method,Type$FunctionModel:$$targs$$.Type$Method},method$);Member$meta$model({Kind$Member:{t:Function$meta$model,a:{Arguments$Function:$$targs$$.Arguments$Method,Type$Function:$$targs$$.Type$Method}},Container$Member:$$targs$$.Container$Method},method$);add_type_arg(method$,'Kind$Member',{t:Function$meta$model,a:{Arguments$Function:method$.$$targs$$.Arguments$Method,Type$Function:method$.$$targs$$.Type$Method}});set_type_args(method$,$$targs$$);}
Method$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Container$Method:{'var':'in'},Type$Method:{'var':'out','def':{t:Anything}},Arguments$Method:{'var':'in','satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},satisfies:[{t:FunctionModel$meta$model,a:{Arguments$FunctionModel:'Arguments$Method',Type$FunctionModel:'Type$Method'}},{t:Member$meta$model,a:{Kind$Member:{t:Function$meta$model,a:{Arguments$Function:'Arguments$Method',Type$Function:'Type$Method'}},Container$Member:'Container$Method'}}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Method.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','Method']};};
ex$.Method$meta$model=Method$meta$model;function $init$Method$meta$model(){if(Method$meta$model.$$===undefined){initTypeProtoI(Method$meta$model,'ceylon.language.meta.model::Method',$init$FunctionModel$meta$model(),$init$Member$meta$model());
(function(method$){method$.$_bind={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Function$meta$model,a:{Arguments$Function:'Arguments$Method',Type$Function:'Type$Method'}},$ps:[{$nm:'container',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:Method$meta$model,$an:function(){return[shared(),actual(),formal()];},d:['ceylon.language.meta.model','Method','$m','bind']};}};})(Method$meta$model.$$.prototype);}
return Method$meta$model;}
ex$.$init$Method$meta$model=$init$Method$meta$model;$init$Method$meta$model();function InterfaceModel$meta$model($$targs$$,interfaceModel$){ClassOrInterface$meta$model({Type$ClassOrInterface:$$targs$$.Type$InterfaceModel},interfaceModel$);set_type_args(interfaceModel$,$$targs$$);}
InterfaceModel$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Type$InterfaceModel:{'var':'out','def':{t:Anything}}},satisfies:[{t:ClassOrInterface$meta$model,a:{Type$ClassOrInterface:'Type$InterfaceModel'}}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].InterfaceModel.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','InterfaceModel']};};
ex$.InterfaceModel$meta$model=InterfaceModel$meta$model;function $init$InterfaceModel$meta$model(){if(InterfaceModel$meta$model.$$===undefined){initTypeProtoI(InterfaceModel$meta$model,'ceylon.language.meta.model::InterfaceModel',$init$ClassOrInterface$meta$model());
(function(interfaceModel$){interfaceModel$.$prop$getDeclaration={$crtmm$:function(){return{mod:$CCMM$,$t:{t:InterfaceDeclaration$meta$declaration},$cont:InterfaceModel$meta$model,$an:function(){return[shared(),formal(),actual()];},d:['ceylon.language.meta.model','InterfaceModel','$at','declaration']};}};})(InterfaceModel$meta$model.$$.prototype);}
return InterfaceModel$meta$model;}
ex$.$init$InterfaceModel$meta$model=$init$InterfaceModel$meta$model;$init$InterfaceModel$meta$model();atr$(InterfaceModel$meta$model.$$.prototype,'declaration',function(){
if (this._decl)return this._decl;
var mm = getrtmm$$(this.tipo);
this._decl = OpenInterface(getModules$meta().find(mm.mod['$mod-name'],mm.mod['$mod-version']).findPackage(mm.d[0]), this.tipo);
return this._decl;
},undefined,function(){return{mod:$CCMM$,$t:{t:InterfaceDeclaration$meta$declaration},$cont:InterfaceModel$meta$model,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','InterfaceModel','$at','declaration']};});
InterfaceModel$meta$model.$$.prototype.equals=function(o){
return is$(o,{t:AppliedInterface}) && (o.tipo$2||o.tipo)==this.tipo && this.typeArguments.equals(o.typeArguments);
};
InterfaceModel$meta$model.$$.prototype.equals.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},d:['$','Object','$m','equals'],$ps:[{$nm:'other',$t:{t:$_Object}}],$cont:InterfaceModel$meta$model};}
function Interface$meta$model($$targs$$,interface$){InterfaceModel$meta$model({Type$InterfaceModel:$$targs$$.Type$Interface},interface$);set_type_args(interface$,$$targs$$);}
Interface$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Type$Interface:{'var':'out','def':{t:Anything}}},satisfies:[{t:InterfaceModel$meta$model,a:{Type$InterfaceModel:'Type$Interface'}}],$an:function(){return[doc("An interface model that you can inspect."),shared()];},d:['ceylon.language.meta.model','Interface']};};
ex$.Interface$meta$model=Interface$meta$model;function $init$Interface$meta$model(){if(Interface$meta$model.$$===undefined){initTypeProtoI(Interface$meta$model,'ceylon.language.meta.model::Interface',$init$InterfaceModel$meta$model());
}
return Interface$meta$model;}
ex$.$init$Interface$meta$model=$init$Interface$meta$model;$init$Interface$meta$model();function IntersectionType$meta$model($$targs$$,intersectionType$){Type$meta$model({Type$Type:$$targs$$.Intersection$IntersectionType},intersectionType$);set_type_args(intersectionType$,$$targs$$);}
IntersectionType$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Intersection$IntersectionType:{'var':'out','def':{t:Anything}}},satisfies:[{t:Type$meta$model,a:{Type$Type:'Intersection$IntersectionType'}}],$an:function(){return[doc("A closed intersection type."),shared()];},d:['ceylon.language.meta.model','IntersectionType']};};
ex$.IntersectionType$meta$model=IntersectionType$meta$model;function $init$IntersectionType$meta$model(){if(IntersectionType$meta$model.$$===undefined){initTypeProtoI(IntersectionType$meta$model,'ceylon.language.meta.model::IntersectionType',$init$Type$meta$model());
(function(intersectionType$){intersectionType$.$prop$getSatisfiedTypes={$crtmm$:function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$cont:IntersectionType$meta$model,$an:function(){return[doc("The list of closed satisfied types of this intersection."),shared(),formal()];},d:['ceylon.language.meta.model','IntersectionType','$at','satisfiedTypes']};}};})(IntersectionType$meta$model.$$.prototype);}
return IntersectionType$meta$model;}
ex$.$init$IntersectionType$meta$model=$init$IntersectionType$meta$model;$init$IntersectionType$meta$model();function Member$meta$model($$targs$$,member$){Callable({Return$Callable:$$targs$$.Kind$Member,Arguments$Callable:{t:'T',l:[$$targs$$.Container$Member]}},member$);add_type_arg(member$,'Arguments$Callable',{t:'T',l:[member$.$$targs$$.Container$Member]});set_type_args(member$,$$targs$$);}
Member$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Container$Member:{'var':'in'},Kind$Member:{'var':'out','satisfies':[{t:Model$meta$model}]}},satisfies:[{t:Callable,a:{Return$Callable:'Kind$Member',Arguments$Callable:{t:'T',l:[{$t:'Container$Member'}]}}}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Member.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','Member']};};
ex$.Member$meta$model=Member$meta$model;function $init$Member$meta$model(){if(Member$meta$model.$$===undefined){initTypeProtoI(Member$meta$model,'ceylon.language.meta.model::Member',$init$Callable());
(function(member$){member$.$prop$getDeclaringType={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Type$meta$model,a:{Type$Type:{t:Anything}}},$cont:Member$meta$model,$an:function(){return[doc("The declaring closed type. This is the type that declared this member."),shared(),formal()];},d:['ceylon.language.meta.model','Member','$at','declaringType']};}};member$.$_bind={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Model$meta$model},$ps:[{$nm:'container',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:Member$meta$model,$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Member.$m.bind.$an.doc[0]),$_throws("IncompatibleTypeException","If the container is not assignable to this member\'s container"),shared(),formal()];},d:['ceylon.language.meta.model','Member','$m','bind']};}};})(Member$meta$model.$$.prototype);}
return Member$meta$model;}
ex$.$init$Member$meta$model=$init$Member$meta$model;$init$Member$meta$model();atr$(Member$meta$model.$$.prototype,'declaringType',function(){
var $$member=this;
var mm = getrtmm$$($$member.tipo);
var m2 = get_model(mm);
return (m2['$mt']==='c'?OpenClass:OpenInterface)(getModules$meta().find(mm.mod['$mod-name'],mm.mod['$mod-version']).findPackage(mm.d[0]), $$member.tipo);
},undefined,function(){return{mod:$CCMM$,$t:{t:Member$meta$model,a:{Type:{t:Anything}}},$cont:Member$meta$model,$an:function(){return[shared(),formal()];},d:['ceylon.language.meta.model','Member','$at','declaringType']};});
atr$(Member$meta$model.$$.prototype,'container',function(){
return this.declaringClassOrInterface;
},undefined,function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:Type$meta$model,a:{Type:{t:Anything}}}]},$cont:Member$meta$model,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Member','$at','container']};});
function MemberClass$meta$model($$targs$$,memberClass$){ClassModel$meta$model({Arguments$ClassModel:$$targs$$.Arguments$MemberClass,Type$ClassModel:$$targs$$.Type$MemberClass},memberClass$);Member$meta$model({Kind$Member:{t:Class$meta$model,a:{Type$Class:$$targs$$.Type$MemberClass,Arguments$Class:$$targs$$.Arguments$MemberClass}},Container$Member:$$targs$$.Container$MemberClass},memberClass$);add_type_arg(memberClass$,'Kind$Member',{t:Class$meta$model,a:{Type$Class:memberClass$.$$targs$$.Type$MemberClass,Arguments$Class:memberClass$.$$targs$$.Arguments$MemberClass}});set_type_args(memberClass$,$$targs$$);}
MemberClass$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Container$MemberClass:{'var':'in'},Type$MemberClass:{'var':'out','def':{t:Anything}},Arguments$MemberClass:{'var':'in','satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},satisfies:[{t:ClassModel$meta$model,a:{Arguments$ClassModel:'Arguments$MemberClass',Type$ClassModel:'Type$MemberClass'}},{t:Member$meta$model,a:{Kind$Member:{t:Class$meta$model,a:{Type$Class:'Type$MemberClass',Arguments$Class:'Arguments$MemberClass'}},Container$Member:'Container$MemberClass'}}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].MemberClass.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','MemberClass']};};
ex$.MemberClass$meta$model=MemberClass$meta$model;function $init$MemberClass$meta$model(){if(MemberClass$meta$model.$$===undefined){initTypeProtoI(MemberClass$meta$model,'ceylon.language.meta.model::MemberClass',$init$ClassModel$meta$model(),$init$Member$meta$model());
(function(memberClass$){memberClass$.$_bind={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Class$meta$model,a:{Type$Class:'Type$MemberClass',Arguments$Class:'Arguments$MemberClass'}},$ps:[{$nm:'container',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:MemberClass$meta$model,$an:function(){return[shared(),actual(),formal()];},d:['ceylon.language.meta.model','MemberClass','$m','bind']};}};})(MemberClass$meta$model.$$.prototype);}
return MemberClass$meta$model;}
ex$.$init$MemberClass$meta$model=$init$MemberClass$meta$model;$init$MemberClass$meta$model();function MemberInterface$meta$model($$targs$$,memberInterface$){InterfaceModel$meta$model({Type$InterfaceModel:$$targs$$.Type$MemberInterface},memberInterface$);Member$meta$model({Kind$Member:{t:Interface$meta$model,a:{Type$Interface:$$targs$$.Type$MemberInterface}},Container$Member:$$targs$$.Container$MemberInterface},memberInterface$);add_type_arg(memberInterface$,'Kind$Member',{t:Interface$meta$model,a:{Type$Interface:memberInterface$.$$targs$$.Type$MemberInterface}});set_type_args(memberInterface$,$$targs$$);}
MemberInterface$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Container$MemberInterface:{'var':'in'},Type$MemberInterface:{'var':'out','def':{t:Anything}}},satisfies:[{t:InterfaceModel$meta$model,a:{Type$InterfaceModel:'Type$MemberInterface'}},{t:Member$meta$model,a:{Kind$Member:{t:Interface$meta$model,a:{Type$Interface:'Type$MemberInterface'}},Container$Member:'Container$MemberInterface'}}],$an:function(){return[doc("A member interface model that you can inspect."),shared()];},d:['ceylon.language.meta.model','MemberInterface']};};
ex$.MemberInterface$meta$model=MemberInterface$meta$model;function $init$MemberInterface$meta$model(){if(MemberInterface$meta$model.$$===undefined){initTypeProtoI(MemberInterface$meta$model,'ceylon.language.meta.model::MemberInterface',$init$InterfaceModel$meta$model(),$init$Member$meta$model());
(function(memberInterface$){memberInterface$.$_bind={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Interface$meta$model,a:{Type$Interface:'Type$MemberInterface'}},$ps:[{$nm:'container',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:MemberInterface$meta$model,$an:function(){return[shared(),actual(),formal()];},d:['ceylon.language.meta.model','MemberInterface','$m','bind']};}};})(MemberInterface$meta$model.$$.prototype);}
return MemberInterface$meta$model;}
ex$.$init$MemberInterface$meta$model=$init$MemberInterface$meta$model;$init$MemberInterface$meta$model();function Attribute$meta$model($$targs$$,attribute$){ValueModel$meta$model({Get$ValueModel:$$targs$$.Get$Attribute,Set$ValueModel:$$targs$$.Set$Attribute},attribute$);Member$meta$model({Kind$Member:{t:Value$meta$model,a:{Get$Value:$$targs$$.Get$Attribute,Set$Value:$$targs$$.Set$Attribute}},Container$Member:$$targs$$.Container$Attribute},attribute$);add_type_arg(attribute$,'Kind$Member',{t:Value$meta$model,a:{Get$Value:attribute$.$$targs$$.Get$Attribute,Set$Value:attribute$.$$targs$$.Set$Attribute}});set_type_args(attribute$,$$targs$$);}
Attribute$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Container$Attribute:{'var':'in'},Get$Attribute:{'var':'out','def':{t:Anything}},Set$Attribute:{'var':'in','def':{t:Nothing}}},satisfies:[{t:ValueModel$meta$model,a:{Get$ValueModel:'Get$Attribute',Set$ValueModel:'Set$Attribute'}},{t:Member$meta$model,a:{Kind$Member:{t:Value$meta$model,a:{Get$Value:'Get$Attribute',Set$Value:'Set$Attribute'}},Container$Member:'Container$Attribute'}}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Attribute.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','Attribute']};};
ex$.Attribute$meta$model=Attribute$meta$model;function $init$Attribute$meta$model(){if(Attribute$meta$model.$$===undefined){initTypeProtoI(Attribute$meta$model,'ceylon.language.meta.model::Attribute',$init$ValueModel$meta$model(),$init$Member$meta$model());
(function(attribute$){attribute$.$_bind={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Value$meta$model,a:{Get$Value:'Get$Attribute',Set$Value:'Set$Attribute'}},$ps:[{$nm:'container',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:Attribute$meta$model,$an:function(){return[shared(),actual(),formal()];},d:['ceylon.language.meta.model','Attribute','$m','bind']};}};})(Attribute$meta$model.$$.prototype);}
return Attribute$meta$model;}
ex$.$init$Attribute$meta$model=$init$Attribute$meta$model;$init$Attribute$meta$model();function Model$meta$model(model$){}
Model$meta$model.$crtmm$=function(){return{mod:$CCMM$,of:[{t:ClassOrInterface$meta$model,a:{Type$ClassOrInterface:{t:Anything}}},{t:FunctionModel$meta$model,a:{Arguments$FunctionModel:{t:Nothing},Type$FunctionModel:{t:Anything}}},{t:ValueModel$meta$model,a:{Get$ValueModel:{t:Anything},Set$ValueModel:{t:Nothing}}}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Model.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','Model']};};
ex$.Model$meta$model=Model$meta$model;function $init$Model$meta$model(){if(Model$meta$model.$$===undefined){initTypeProtoI(Model$meta$model,'ceylon.language.meta.model::Model');
(function(model$){model$.$prop$getContainer={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Type$meta$model,a:{Type$Type:{t:Anything}}}]},$cont:Model$meta$model,$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Model.$at.container.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.model','Model','$at','container']};}};model$.$prop$getDeclaration={$crtmm$:function(){return{mod:$CCMM$,$t:{t:NestableDeclaration$meta$declaration},$cont:Model$meta$model,$an:function(){return[doc("The declaration for this model."),shared(),formal()];},d:['ceylon.language.meta.model','Model','$at','declaration']};}};})(Model$meta$model.$$.prototype);}
return Model$meta$model;}
ex$.$init$Model$meta$model=$init$Model$meta$model;$init$Model$meta$model();function Type$meta$model($$targs$$,type$){set_type_args(type$,$$targs$$);}
Type$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Type$Type:{'var':'out','def':{t:Anything}}},$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Type.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','Type']};};
ex$.Type$meta$model=Type$meta$model;function $init$Type$meta$model(){if(Type$meta$model.$$===undefined){initTypeProtoI(Type$meta$model,'ceylon.language.meta.model::Type');
(function(type$){type$.typeOf={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'instance',$mt:'prm',$t:{t:Anything},$an:function(){return[];}}],$cont:Type$meta$model,$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Type.$m.typeOf.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.model','Type','$m','typeOf']};}};type$.supertypeOf={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'type',$mt:'prm',$t:{t:Type$meta$model,a:{Type$Type:{t:Anything}}},$an:function(){return[];}}],$cont:Type$meta$model,$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Type.$m.supertypeOf.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.model','Type','$m','supertypeOf']};}};type$.subtypeOf=function ($x6){var type$=this;return $x6.supertypeOf(type$);};type$.subtypeOf.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'type',$mt:'prm',$t:{t:Type$meta$model,a:{Type$Type:{t:Anything}}},$an:function(){return[];}}],$cont:Type$meta$model,$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Type.$m.subtypeOf.$an.doc[0]),shared(),$_default()];},d:['ceylon.language.meta.model','Type','$m','subtypeOf']};};type$.exactly={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'type',$mt:'prm',$t:{t:Type$meta$model,a:{Type$Type:{t:Anything}}},$an:function(){return[];}}],$cont:Type$meta$model,$an:function(){return[doc("True if the given type is a exactly this type."),shared(),formal()];},d:['ceylon.language.meta.model','Type','$m','exactly']};}};})(Type$meta$model.$$.prototype);}
return Type$meta$model;}
ex$.$init$Type$meta$model=$init$Type$meta$model;$init$Type$meta$model();function UnionType$meta$model($$targs$$,unionType$){Type$meta$model({Type$Type:$$targs$$.Union$UnionType},unionType$);set_type_args(unionType$,$$targs$$);}
UnionType$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Union$UnionType:{'var':'out','def':{t:Anything}}},satisfies:[{t:Type$meta$model,a:{Type$Type:'Union$UnionType'}}],$an:function(){return[doc("A closed union type."),shared()];},d:['ceylon.language.meta.model','UnionType']};};
ex$.UnionType$meta$model=UnionType$meta$model;function $init$UnionType$meta$model(){if(UnionType$meta$model.$$===undefined){initTypeProtoI(UnionType$meta$model,'ceylon.language.meta.model::UnionType',$init$Type$meta$model());
(function(unionType$){unionType$.$prop$getCaseTypes={$crtmm$:function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:{t:Type$meta$model,a:{Type$Type:'Union$UnionType'}}}},$cont:UnionType$meta$model,$an:function(){return[doc("The list of closed case types of this union."),shared(),formal()];},d:['ceylon.language.meta.model','UnionType','$at','caseTypes']};}};})(UnionType$meta$model.$$.prototype);}
return UnionType$meta$model;}
ex$.$init$UnionType$meta$model=$init$UnionType$meta$model;$init$UnionType$meta$model();function Value$meta$model($$targs$$,value$){ValueModel$meta$model({Get$ValueModel:$$targs$$.Get$Value,Set$ValueModel:$$targs$$.Set$Value},value$);set_type_args(value$,$$targs$$);}
Value$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Get$Value:{'var':'out','def':{t:Anything}},Set$Value:{'var':'in','def':{t:Nothing}}},satisfies:[{t:ValueModel$meta$model,a:{Get$ValueModel:'Get$Value',Set$ValueModel:'Set$Value'}}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Value.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','Value']};};
ex$.Value$meta$model=Value$meta$model;function $init$Value$meta$model(){if(Value$meta$model.$$===undefined){initTypeProtoI(Value$meta$model,'ceylon.language.meta.model::Value',$init$ValueModel$meta$model());
(function(value$){value$.$_get={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Get$Value',$ps:[],$cont:Value$meta$model,$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Value.$m.get.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.model','Value','$m','get']};}};value$.set={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'newValue',$mt:'prm',$t:'Set$Value',$an:function(){return[];}}],$cont:Value$meta$model,$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Value.$m.set.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.model','Value','$m','set']};}};value$.setIfAssignable={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'newValue',$mt:'prm',$t:{t:Anything},$an:function(){return[];}}],$cont:Value$meta$model,$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Value.$m.setIfAssignable.$an.doc[0]),$_throws("IncompatibleTypeException","If the specified new value is not of a subtype of this variable\'s type"),$_throws("MutationException","If this value is not variable"),shared(),formal()];},d:['ceylon.language.meta.model','Value','$m','setIfAssignable']};}};})(Value$meta$model.$$.prototype);}
return Value$meta$model;}
ex$.$init$Value$meta$model=$init$Value$meta$model;$init$Value$meta$model();function $x7$meta$model($$targs$$){var nothingType$=new $x7$meta$model.$$;nothingType$.$$targs$$=$$targs$$;Type$meta$model({Type$Type:{t:Nothing}},nothingType$);return nothingType$;
};$x7$meta$model.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:Type$meta$model,a:{Type$Type:{t:Nothing}}}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].nothingType.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','nothingType']};};function $init$$x7$meta$model(){if($x7$meta$model.$$===undefined){initTypeProto($x7$meta$model,'ceylon.language.meta.model::nothingType',Basic,$init$Type$meta$model());
(function(nothingType$){atr$(nothingType$,'string',function(){var nothingType$=this;return "Nothing";},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$x7$meta$model,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','nothingType','$at','string']};});nothingType$.typeOf=function ($x8){return false;};nothingType$.exactly=function ($x9){var nothingType$=this;return $x9.equals(getNothingType$meta$model());};nothingType$.supertypeOf=function ($xa){var nothingType$=this;return nothingType$.exactly($xa);};nothingType$.subtypeOf=function ($xb){return true;};})($x7$meta$model.$$.prototype);}
return $x7$meta$model;}
ex$.$init$$x7$meta$model=$init$$x7$meta$model;$init$$x7$meta$model();var $xc$meta$model;function getNothingType$meta$model(){if($xc$meta$model===undefined){$xc$meta$model=$init$$x7$meta$model()({Type$Type:{t:Nothing}});$xc$meta$model.$crtmm$=getNothingType$meta$model.$crtmm$;}
return $xc$meta$model;}
ex$.getNothingType$meta$model=getNothingType$meta$model;getNothingType$meta$model.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$x7$meta$model},$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].nothingType.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','nothingType']};};$prop$getNothingType$meta$model={get:getNothingType$meta$model,$crtmm$:getNothingType$meta$model.$crtmm$};get$x7$meta$model=getNothingType$meta$model;$prop$get$x7$meta$model=getNothingType$meta$model;ex$.$prop$getNothingType$meta$model=$prop$getNothingType$meta$model;function TypeApplicationException$meta$model($xd,typeApplicationException$){$init$TypeApplicationException$meta$model();if(typeApplicationException$===undefined)typeApplicationException$=new TypeApplicationException$meta$model.$$;
typeApplicationException$.$xd_=$xd;Exception(typeApplicationException$.$xd,undefined,typeApplicationException$);return typeApplicationException$;}
TypeApplicationException$meta$model.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Exception},$ps:[{$nm:'message',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].TypeApplicationException.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','TypeApplicationException']};};
ex$.TypeApplicationException$meta$model=TypeApplicationException$meta$model;function $init$TypeApplicationException$meta$model(){if(TypeApplicationException$meta$model.$$===undefined){initTypeProto(TypeApplicationException$meta$model,'ceylon.language.meta.model::TypeApplicationException',$init$Exception());
(function(typeApplicationException$){atr$(typeApplicationException$,'$xd',function(){return this.$xd_;},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:TypeApplicationException$meta$model,d:['ceylon.language.meta.model','TypeApplicationException','$at','message$9tu43y']};});})(TypeApplicationException$meta$model.$$.prototype);}
return TypeApplicationException$meta$model;}
ex$.$init$TypeApplicationException$meta$model=$init$TypeApplicationException$meta$model;$init$TypeApplicationException$meta$model();function InvocationException$meta$model($xe,invocationException$){$init$InvocationException$meta$model();if(invocationException$===undefined)invocationException$=new InvocationException$meta$model.$$;
invocationException$.$xe_=$xe;Exception(invocationException$.$xe,undefined,invocationException$);return invocationException$;}
InvocationException$meta$model.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Exception},$ps:[{$nm:'message',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].InvocationException.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','InvocationException']};};
ex$.InvocationException$meta$model=InvocationException$meta$model;function $init$InvocationException$meta$model(){if(InvocationException$meta$model.$$===undefined){initTypeProto(InvocationException$meta$model,'ceylon.language.meta.model::InvocationException',$init$Exception());
(function(invocationException$){atr$(invocationException$,'$xe',function(){return this.$xe_;},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:InvocationException$meta$model,d:['ceylon.language.meta.model','InvocationException','$at','message$g4ihko']};});})(InvocationException$meta$model.$$.prototype);}
return InvocationException$meta$model;}
ex$.$init$InvocationException$meta$model=$init$InvocationException$meta$model;$init$InvocationException$meta$model();function MutationException$meta$model($xf,mutationException$){$init$MutationException$meta$model();if(mutationException$===undefined)mutationException$=new MutationException$meta$model.$$;
mutationException$.$xf_=$xf;Exception(mutationException$.$xf,undefined,mutationException$);return mutationException$;}
MutationException$meta$model.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Exception},$ps:[{$nm:'message',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$an:function(){return[doc("Thrown when you try to change the value of a non-variable value"),shared()];},d:['ceylon.language.meta.model','MutationException']};};
ex$.MutationException$meta$model=MutationException$meta$model;function $init$MutationException$meta$model(){if(MutationException$meta$model.$$===undefined){initTypeProto(MutationException$meta$model,'ceylon.language.meta.model::MutationException',$init$Exception());
(function(mutationException$){atr$(mutationException$,'$xf',function(){return this.$xf_;},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:MutationException$meta$model,d:['ceylon.language.meta.model','MutationException','$at','message$l7zqwp']};});})(MutationException$meta$model.$$.prototype);}
return MutationException$meta$model;}
ex$.$init$MutationException$meta$model=$init$MutationException$meta$model;$init$MutationException$meta$model();function IncompatibleTypeException$meta$model($xg,incompatibleTypeException$){$init$IncompatibleTypeException$meta$model();if(incompatibleTypeException$===undefined)incompatibleTypeException$=new IncompatibleTypeException$meta$model.$$;
incompatibleTypeException$.$xg_=$xg;Exception(incompatibleTypeException$.$xg,undefined,incompatibleTypeException$);return incompatibleTypeException$;}
IncompatibleTypeException$meta$model.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Exception},$ps:[{$nm:'message',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].IncompatibleTypeException.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','IncompatibleTypeException']};};
ex$.IncompatibleTypeException$meta$model=IncompatibleTypeException$meta$model;function $init$IncompatibleTypeException$meta$model(){if(IncompatibleTypeException$meta$model.$$===undefined){initTypeProto(IncompatibleTypeException$meta$model,'ceylon.language.meta.model::IncompatibleTypeException',$init$Exception());
(function(incompatibleTypeException$){atr$(incompatibleTypeException$,'$xg',function(){return this.$xg_;},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:IncompatibleTypeException$meta$model,d:['ceylon.language.meta.model','IncompatibleTypeException','$at','message$kubtzh']};});})(IncompatibleTypeException$meta$model.$$.prototype);}
return IncompatibleTypeException$meta$model;}
ex$.$init$IncompatibleTypeException$meta$model=$init$IncompatibleTypeException$meta$model;$init$IncompatibleTypeException$meta$model();function Generic$meta$model(generic$){}
Generic$meta$model.$crtmm$=function(){return{mod:$CCMM$,$an:function(){return[doc("A generic model which has closed type arguments."),shared()];},d:['ceylon.language.meta.model','Generic']};};
ex$.Generic$meta$model=Generic$meta$model;function $init$Generic$meta$model(){if(Generic$meta$model.$$===undefined){initTypeProtoI(Generic$meta$model,'ceylon.language.meta.model::Generic');
(function(generic$){generic$.$prop$getTypeArguments={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Map,a:{Key$Map:{t:TypeParameter$meta$declaration},Item$Map:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$cont:Generic$meta$model,$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Generic.$at.typeArguments.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.model','Generic','$at','typeArguments']};}};})(Generic$meta$model.$$.prototype);}
return Generic$meta$model;}
ex$.$init$Generic$meta$model=$init$Generic$meta$model;$init$Generic$meta$model();function Applicable$meta$model($$targs$$,applicable$){set_type_args(applicable$,$$targs$$);}
Applicable$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Type$Applicable:{'var':'out','def':{t:Anything}}},$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Applicable.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','Applicable']};};
ex$.Applicable$meta$model=Applicable$meta$model;function $init$Applicable$meta$model(){if(Applicable$meta$model.$$===undefined){initTypeProtoI(Applicable$meta$model,'ceylon.language.meta.model::Applicable');
(function(applicable$){applicable$.$_apply={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Type$Applicable',$ps:[{$nm:'arguments',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Anything}}},$an:function(){return[];}}],$cont:Applicable$meta$model,$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Applicable.$m.apply.$an.doc[0]),$_throws("IncompatibleTypeException","If any argument is not assignable to this applicable\'s corresponding parameter"),$_throws("InvocationException","If there are not enough or too many provided arguments"),shared(),formal()];},d:['ceylon.language.meta.model','Applicable','$m','apply']};}};applicable$.namedApply={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Type$Applicable',$ps:[{$nm:'arguments',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:{t:Entry,a:{Key$Entry:{t:$_String},Item$Entry:{t:$_Object}}}}},$an:function(){return[];}}],$cont:Applicable$meta$model,$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Applicable.$m.namedApply.$an.doc[0]),$_throws("IncompatibleTypeException","If any argument is not assignable to this applicable\'s corresponding parameter"),$_throws("InvocationException","If there are not enough or too many provided arguments, \nor if the target does not support named invocation"),shared(),formal()];},d:['ceylon.language.meta.model','Applicable','$m','namedApply']};}};})(Applicable$meta$model.$$.prototype);}
return Applicable$meta$model;}
ex$.$init$Applicable$meta$model=$init$Applicable$meta$model;$init$Applicable$meta$model();function $xh$meta$model(){var nullArgument$=new $xh$meta$model.$$;return nullArgument$;
};$xh$meta$model.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].nullArgument.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','nullArgument']};};function $init$$xh$meta$model(){if($xh$meta$model.$$===undefined){initTypeProto($xh$meta$model,'ceylon.language.meta.model::nullArgument',Basic);
}
return $xh$meta$model;}
ex$.$init$$xh$meta$model=$init$$xh$meta$model;$init$$xh$meta$model();var $xi$meta$model;function getNullArgument$meta$model(){if($xi$meta$model===undefined){$xi$meta$model=$init$$xh$meta$model()();$xi$meta$model.$crtmm$=getNullArgument$meta$model.$crtmm$;}
return $xi$meta$model;}
ex$.getNullArgument$meta$model=getNullArgument$meta$model;getNullArgument$meta$model.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$xh$meta$model},$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].nullArgument.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','nullArgument']};};$prop$getNullArgument$meta$model={get:getNullArgument$meta$model,$crtmm$:getNullArgument$meta$model.$crtmm$};get$xh$meta$model=getNullArgument$meta$model;$prop$get$xh$meta$model=getNullArgument$meta$model;ex$.$prop$getNullArgument$meta$model=$prop$getNullArgument$meta$model;
function Declaration$meta$declaration(declaration$){}
Declaration$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,of:[{t:AnnotatedDeclaration$meta$declaration},{t:TypeParameter$meta$declaration}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].Declaration.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','Declaration']};};
ex$.Declaration$meta$declaration=Declaration$meta$declaration;function $init$Declaration$meta$declaration(){if(Declaration$meta$declaration.$$===undefined){initTypeProtoI(Declaration$meta$declaration,'ceylon.language.meta.declaration::Declaration');
(function(declaration$){declaration$.$prop$getName={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Declaration$meta$declaration,$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].Declaration.$at.name.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','Declaration','$at','name']};}};declaration$.$prop$getQualifiedName={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Declaration$meta$declaration,$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].Declaration.$at.qualifiedName.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','Declaration','$at','qualifiedName']};}};})(Declaration$meta$declaration.$$.prototype);}
return Declaration$meta$declaration;}
ex$.$init$Declaration$meta$declaration=$init$Declaration$meta$declaration;$init$Declaration$meta$declaration();function AnnotatedDeclaration$meta$declaration(annotatedDeclaration$){Declaration$meta$declaration(annotatedDeclaration$);Annotated(annotatedDeclaration$);}
AnnotatedDeclaration$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:Declaration$meta$declaration},{t:Annotated}],of:[{t:NestableDeclaration$meta$declaration},{t:Module$meta$declaration},{t:Package$meta$declaration}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].AnnotatedDeclaration.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','AnnotatedDeclaration']};};
ex$.AnnotatedDeclaration$meta$declaration=AnnotatedDeclaration$meta$declaration;function $init$AnnotatedDeclaration$meta$declaration(){if(AnnotatedDeclaration$meta$declaration.$$===undefined){initTypeProtoI(AnnotatedDeclaration$meta$declaration,'ceylon.language.meta.declaration::AnnotatedDeclaration',$init$Declaration$meta$declaration(),$init$Annotated());
(function(annotatedDeclaration$){annotatedDeclaration$.annotations={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Annotation$annotations'}},$ps:[],$cont:AnnotatedDeclaration$meta$declaration,$tp:{Annotation$annotations:{'var':'out','satisfies':[{t:Annotation}]}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].AnnotatedDeclaration.$m.annotations.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','AnnotatedDeclaration','$m','annotations']};}};})(AnnotatedDeclaration$meta$declaration.$$.prototype);}
return AnnotatedDeclaration$meta$declaration;}
ex$.$init$AnnotatedDeclaration$meta$declaration=$init$AnnotatedDeclaration$meta$declaration;$init$AnnotatedDeclaration$meta$declaration();AnnotatedDeclaration$meta$declaration.$$.prototype.annotations=function ($$$mptypes) {
var ans = [];
var _mdl = getrtmm$$(this.tipo);
var _ans = _mdl.$an;
if (typeof(_ans)==='function') {
_ans = _ans();
_mdl.$an=_ans;
}
for (var i=0; i<_ans.length;i++) {
if (is$(_ans[i], $$$mptypes.Annotation$annotations)) {
ans.push(_ans[i]);
}
}
return ans.length == 0 ? getEmpty() : ArraySequence(ans,{Element$ArraySequence:$$$mptypes.Annotation$annotations});
};
AnnotatedDeclaration$meta$declaration.$$.prototype.annotations.$crtmm$=function(){return{mod:$CCMM$,
$t:{t:Sequential,a:{Element$Iterable:'Annotation'}},$ps:[],$cont:AnnotatedDeclaration$meta$declaration,$tp:{Annotation$annotations:{'var':'out','satisfies':[{t:Annotation,a:{Value$Annotation:'Annotation'}}]}},$an:function(){return[shared(),formal()];},d:['ceylon.language.meta.declaration','AnnotatedDeclaration','$m','annotations']};};
function NestableDeclaration$meta$declaration(nestableDeclaration$){AnnotatedDeclaration$meta$declaration(nestableDeclaration$);TypedDeclaration$meta$declaration(nestableDeclaration$);}
NestableDeclaration$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:AnnotatedDeclaration$meta$declaration},{t:TypedDeclaration$meta$declaration}],of:[{t:FunctionOrValueDeclaration$meta$declaration},{t:ClassOrInterfaceDeclaration$meta$declaration},{t:SetterDeclaration$meta$declaration},{t:AliasDeclaration$meta$declaration}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].NestableDeclaration.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','NestableDeclaration']};};
ex$.NestableDeclaration$meta$declaration=NestableDeclaration$meta$declaration;function $init$NestableDeclaration$meta$declaration(){if(NestableDeclaration$meta$declaration.$$===undefined){initTypeProtoI(NestableDeclaration$meta$declaration,'ceylon.language.meta.declaration::NestableDeclaration',$init$AnnotatedDeclaration$meta$declaration(),$init$TypedDeclaration$meta$declaration());
(function(nestableDeclaration$){nestableDeclaration$.$prop$getActual={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:NestableDeclaration$meta$declaration,$an:function(){return[doc("True if this declaration is annotated with [[actual|ceylon.language::actual]]."),shared(),formal()];},d:['ceylon.language.meta.declaration','NestableDeclaration','$at','actual']};}};nestableDeclaration$.$prop$getFormal={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:NestableDeclaration$meta$declaration,$an:function(){return[doc("True if this declaration is annotated with [[formal|ceylon.language::formal]]."),shared(),formal()];},d:['ceylon.language.meta.declaration','NestableDeclaration','$at','formal']};}};nestableDeclaration$.$prop$getDefault={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:NestableDeclaration$meta$declaration,$an:function(){return[doc("True if this declaration is annotated with [[default|ceylon.language::default]]."),shared(),formal()];},d:['ceylon.language.meta.declaration','NestableDeclaration','$at','default']};}};nestableDeclaration$.$prop$getShared={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:NestableDeclaration$meta$declaration,$an:function(){return[doc("True if this declaration is annotated with [[shared|ceylon.language::shared]]."),shared(),formal()];},d:['ceylon.language.meta.declaration','NestableDeclaration','$at','shared']};}};nestableDeclaration$.$prop$getContainingPackage={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Package$meta$declaration},$cont:NestableDeclaration$meta$declaration,$an:function(){return[doc("This declaration\'s package container."),shared(),formal()];},d:['ceylon.language.meta.declaration','NestableDeclaration','$at','containingPackage']};}};nestableDeclaration$.$prop$getContainingModule={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Module$meta$declaration},$cont:NestableDeclaration$meta$declaration,$an:function(){return[doc("This declaration\'s module container."),shared(),formal()];},d:['ceylon.language.meta.declaration','NestableDeclaration','$at','containingModule']};}};nestableDeclaration$.$prop$getContainer={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:NestableDeclaration$meta$declaration},{t:Package$meta$declaration}]},$cont:NestableDeclaration$meta$declaration,$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].NestableDeclaration.$at.container.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','NestableDeclaration','$at','container']};}};nestableDeclaration$.$prop$getToplevel={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:NestableDeclaration$meta$declaration,$an:function(){return[doc("True if this declaration is a toplevel declaration."),shared(),formal()];},d:['ceylon.language.meta.declaration','NestableDeclaration','$at','toplevel']};}};})(NestableDeclaration$meta$declaration.$$.prototype);}
return NestableDeclaration$meta$declaration;}
ex$.$init$NestableDeclaration$meta$declaration=$init$NestableDeclaration$meta$declaration;$init$NestableDeclaration$meta$declaration();atr$(NestableDeclaration$meta$declaration.$$.prototype,'actual',function(){
return find$ann(this.tipo,ActualAnnotation)!==null;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:NestableDeclaration$meta$declaration,d:['ceylon.language.meta.declaration','NestableDeclaration','$at','actual']};});
atr$(NestableDeclaration$meta$declaration.$$.prototype,'formal',function(){
return find$ann(this.tipo,FormalAnnotation)!==null;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:NestableDeclaration$meta$declaration,d:['ceylon.language.meta.declaration','NestableDeclaration','$at','formal']};});
atr$(NestableDeclaration$meta$declaration.$$.prototype,'$_default',function(){
return find$ann(this.tipo,DefaultAnnotation)!==null;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:NestableDeclaration$meta$declaration,d:['ceylon.language.meta.declaration','NestableDeclaration','$at','default']};});
atr$(NestableDeclaration$meta$declaration.$$.prototype,'shared',function(){
return find$ann(this.tipo,SharedAnnotation)!==null;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:NestableDeclaration$meta$declaration,d:['ceylon.language.meta.declaration','NestableDeclaration','$at','shared']};});
function GenericDeclaration$meta$declaration(genericDeclaration$){}
GenericDeclaration$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,$an:function(){return[doc("A declaration that can have type parameters."),shared()];},d:['ceylon.language.meta.declaration','GenericDeclaration']};};
ex$.GenericDeclaration$meta$declaration=GenericDeclaration$meta$declaration;function $init$GenericDeclaration$meta$declaration(){if(GenericDeclaration$meta$declaration.$$===undefined){initTypeProtoI(GenericDeclaration$meta$declaration,'ceylon.language.meta.declaration::GenericDeclaration');
(function(genericDeclaration$){genericDeclaration$.$prop$getTypeParameterDeclarations={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:TypeParameter$meta$declaration}}},$cont:GenericDeclaration$meta$declaration,$an:function(){return[doc("The list of type parameters declared on this generic declaration."),shared(),formal()];},d:['ceylon.language.meta.declaration','GenericDeclaration','$at','typeParameterDeclarations']};}};genericDeclaration$.getTypeParameterDeclaration={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:TypeParameter$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:GenericDeclaration$meta$declaration,$an:function(){return[doc("Finds a type parameter by name. Returns `null` if not found."),shared(),formal()];},d:['ceylon.language.meta.declaration','GenericDeclaration','$m','getTypeParameterDeclaration']};}};})(GenericDeclaration$meta$declaration.$$.prototype);}
return GenericDeclaration$meta$declaration;}
ex$.$init$GenericDeclaration$meta$declaration=$init$GenericDeclaration$meta$declaration;$init$GenericDeclaration$meta$declaration();atr$(GenericDeclaration$meta$declaration.$$.prototype,'typeParameterDeclarations',function(){
if (this.tipo) {
var mm=getrtmm$$(this.tipo);
var tps=mm.$tp;
if (tps) {
var rv=[];
for (var tp in tps) {
rv.push(OpenTypeParam(this.tipo,tp));
}
return rv.length===0?getEmpty():ArraySequence(rv,{Element$ArraySequence:{t:TypeParameter$meta$declaration}});
}
return getEmpty();
}
console.log("TODO GenericDeclaration.typeParameterDeclarations without a type");
return getEmpty();
},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:TypeParameter$meta$declaration}}},$cont:GenericDeclaration,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','GenericDeclaration','$at','typeParameterDeclarations']};});
GenericDeclaration$meta$declaration.$$.prototype.getTypeParameterDeclaration=function (name$14){
if (this.tipo) {
var mm=getrtmm$$(this.tipo);
var tps=mm.$tp;
if (tps) {
for (var tp in tps) {
var tpnm = tp;
if (tp.indexOf('$')>0)tpnm=tp.substring(0,tp.indexOf('$'));
if (name$14==tpnm) {
return OpenTypeParam(this.tipo,tp);
}
}
}
return null;
}
console.log("TODO GenericDeclaration.getTypeParameterDeclaration(" + name$14 + ") without a type");
return null;
};
GenericDeclaration$meta$declaration.$$.prototype.getTypeParameterDeclaration.$crtmm$=function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:TypeParameter$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String}}],$cont:GenericDeclaration,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','GenericDeclaration','$m','getTypeParameterDeclaration']};};
function ClassOrInterfaceDeclaration$meta$declaration(classOrInterfaceDeclaration$){NestableDeclaration$meta$declaration(classOrInterfaceDeclaration$);GenericDeclaration$meta$declaration(classOrInterfaceDeclaration$);}
ClassOrInterfaceDeclaration$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:NestableDeclaration$meta$declaration},{t:GenericDeclaration$meta$declaration}],of:[{t:ClassDeclaration$meta$declaration},{t:InterfaceDeclaration$meta$declaration}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ClassOrInterfaceDeclaration.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration']};};
ex$.ClassOrInterfaceDeclaration$meta$declaration=ClassOrInterfaceDeclaration$meta$declaration;function $init$ClassOrInterfaceDeclaration$meta$declaration(){if(ClassOrInterfaceDeclaration$meta$declaration.$$===undefined){initTypeProtoI(ClassOrInterfaceDeclaration$meta$declaration,'ceylon.language.meta.declaration::ClassOrInterfaceDeclaration',$init$NestableDeclaration$meta$declaration(),$init$GenericDeclaration$meta$declaration());
(function(classOrInterfaceDeclaration$){classOrInterfaceDeclaration$.$prop$getExtendedType={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:OpenClassType$meta$declaration}]},$cont:ClassOrInterfaceDeclaration$meta$declaration,$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ClassOrInterfaceDeclaration.$at.extendedType.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$at','extendedType']};}};classOrInterfaceDeclaration$.$prop$getSatisfiedTypes={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:OpenInterfaceType$meta$declaration}}},$cont:ClassOrInterfaceDeclaration$meta$declaration,$an:function(){return[doc("The list of types satisfied by this type."),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$at','satisfiedTypes']};}};classOrInterfaceDeclaration$.$prop$getCaseTypes={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:OpenType$meta$declaration}}},$cont:ClassOrInterfaceDeclaration$meta$declaration,$an:function(){return[doc("If this type has an `of` clause, this is the list of case types for the current type."),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$at','caseTypes']};}};classOrInterfaceDeclaration$.$prop$getIsAlias={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:ClassOrInterfaceDeclaration$meta$declaration,$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ClassOrInterfaceDeclaration.$at.isAlias.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$at','isAlias']};}};classOrInterfaceDeclaration$.memberDeclarations={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Kind$memberDeclarations'}},$ps:[],$cont:ClassOrInterfaceDeclaration$meta$declaration,$tp:{Kind$memberDeclarations:{'satisfies':[{t:NestableDeclaration$meta$declaration}]}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ClassOrInterfaceDeclaration.$m.memberDeclarations.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$m','memberDeclarations']};}};classOrInterfaceDeclaration$.declaredMemberDeclarations={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Kind$declaredMemberDeclarations'}},$ps:[],$cont:ClassOrInterfaceDeclaration$meta$declaration,$tp:{Kind$declaredMemberDeclarations:{'satisfies':[{t:NestableDeclaration$meta$declaration}]}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ClassOrInterfaceDeclaration.$m.declaredMemberDeclarations.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$m','declaredMemberDeclarations']};}};classOrInterfaceDeclaration$.annotatedMemberDeclarations={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Kind$annotatedMemberDeclarations'}},$ps:[],$cont:ClassOrInterfaceDeclaration$meta$declaration,$tp:{Kind$annotatedMemberDeclarations:{'satisfies':[{t:NestableDeclaration$meta$declaration}]},Annotation$annotatedMemberDeclarations:{'satisfies':[{t:Annotation}]}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ClassOrInterfaceDeclaration.$m.annotatedMemberDeclarations.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$m','annotatedMemberDeclarations']};}};classOrInterfaceDeclaration$.annotatedDeclaredMemberDeclarations={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Kind$annotatedDeclaredMemberDeclarations'}},$ps:[],$cont:ClassOrInterfaceDeclaration$meta$declaration,$tp:{Kind$annotatedDeclaredMemberDeclarations:{'satisfies':[{t:NestableDeclaration$meta$declaration}]},Annotation$annotatedDeclaredMemberDeclarations:{'satisfies':[{t:Annotation}]}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ClassOrInterfaceDeclaration.$m.annotatedDeclaredMemberDeclarations.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$m','annotatedDeclaredMemberDeclarations']};}};classOrInterfaceDeclaration$.getMemberDeclaration={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Kind$getMemberDeclaration']},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:ClassOrInterfaceDeclaration$meta$declaration,$tp:{Kind$getMemberDeclaration:{'satisfies':[{t:NestableDeclaration$meta$declaration}]}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ClassOrInterfaceDeclaration.$m.getMemberDeclaration.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$m','getMemberDeclaration']};}};classOrInterfaceDeclaration$.getDeclaredMemberDeclaration={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Kind$getDeclaredMemberDeclaration']},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:ClassOrInterfaceDeclaration$meta$declaration,$tp:{Kind$getDeclaredMemberDeclaration:{'satisfies':[{t:NestableDeclaration$meta$declaration}]}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ClassOrInterfaceDeclaration.$m.getDeclaredMemberDeclaration.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$m','getDeclaredMemberDeclaration']};}};classOrInterfaceDeclaration$.$_apply={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:ClassOrInterface$meta$model,a:{Type$ClassOrInterface:'Type$apply'}},$ps:[{$nm:'typeArguments',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:ClassOrInterfaceDeclaration$meta$declaration,$tp:{Type$apply:{'def':{t:Anything}}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ClassOrInterfaceDeclaration.$m.apply.$an.doc[0]),$_throws("IncompatibleTypeException","If the specified `Type` type argument is not compatible with the actual result."),$_throws("TypeApplicationException","If the specified closed type argument values are not compatible with the actual result\'s type parameters."),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$m','apply']};}};classOrInterfaceDeclaration$.memberApply={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'i',l:[{t:Member$meta$model,a:{Kind$Member:{t:ClassOrInterface$meta$model,a:{Type$ClassOrInterface:'Type$memberApply'}},Container$Member:'Container$memberApply'}},{t:ClassOrInterface$meta$model,a:{Type$ClassOrInterface:'Type$memberApply'}}]},$ps:[{$nm:'containerType',$mt:'prm',$t:{t:Type$meta$model,a:{Type$Type:'Container$memberApply'}},$an:function(){return[];}},{$nm:'typeArguments',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:ClassOrInterfaceDeclaration$meta$declaration,$tp:{Container$memberApply:{'def':{t:Nothing}},Type$memberApply:{'def':{t:Anything}}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ClassOrInterfaceDeclaration.$m.memberApply.$an.doc[0]),$_throws("IncompatibleTypeException","If the specified `Container` or `Type` type arguments are not compatible with the actual result."),$_throws("TypeApplicationException","If the specified closed container type or type argument values are not compatible with the actual result\'s container type or type parameters."),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$m','memberApply']};}};})(ClassOrInterfaceDeclaration$meta$declaration.$$.prototype);}
return ClassOrInterfaceDeclaration$meta$declaration;}
ex$.$init$ClassOrInterfaceDeclaration$meta$declaration=$init$ClassOrInterfaceDeclaration$meta$declaration;$init$ClassOrInterfaceDeclaration$meta$declaration();function FunctionalDeclaration$meta$declaration(functionalDeclaration$){}
FunctionalDeclaration$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].FunctionalDeclaration.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','FunctionalDeclaration']};};
ex$.FunctionalDeclaration$meta$declaration=FunctionalDeclaration$meta$declaration;function $init$FunctionalDeclaration$meta$declaration(){if(FunctionalDeclaration$meta$declaration.$$===undefined){initTypeProtoI(FunctionalDeclaration$meta$declaration,'ceylon.language.meta.declaration::FunctionalDeclaration');
(function(functionalDeclaration$){functionalDeclaration$.$prop$getAnnotation={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:FunctionalDeclaration$meta$declaration,$an:function(){return[doc("True if the current declaration is an annotation class or function."),shared(),formal()];},d:['ceylon.language.meta.declaration','FunctionalDeclaration','$at','annotation']};}};functionalDeclaration$.$prop$getParameterDeclarations={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:FunctionOrValueDeclaration$meta$declaration}}},$cont:FunctionalDeclaration$meta$declaration,$an:function(){return[doc("The list of parameter declarations for this functional declaration."),shared(),formal()];},d:['ceylon.language.meta.declaration','FunctionalDeclaration','$at','parameterDeclarations']};}};functionalDeclaration$.getParameterDeclaration={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:FunctionOrValueDeclaration$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:FunctionalDeclaration$meta$declaration,$an:function(){return[doc("Gets a parameter declaration by name. Returns `null` if no such parameter exists."),shared(),formal()];},d:['ceylon.language.meta.declaration','FunctionalDeclaration','$m','getParameterDeclaration']};}};})(FunctionalDeclaration$meta$declaration.$$.prototype);}
return FunctionalDeclaration$meta$declaration;}
ex$.$init$FunctionalDeclaration$meta$declaration=$init$FunctionalDeclaration$meta$declaration;$init$FunctionalDeclaration$meta$declaration();ClassOrInterfaceDeclaration$meta$declaration.$$.prototype.getMemberDeclaration=function(name$20,$$$mptypes,noInherit){
var _m=undefined;
if (extendsType($$$mptypes.Kind$getMemberDeclaration, {t:ValueDeclaration$meta$declaration})) {
var propname='$prop$get'+name$20[0].toUpperCase()+name$20.substring(1);
var _d = this.tipo.$$.prototype[propname];
if (_d){
if (noInherit) {
var mm=getrtmm$$(_d);
if (mm.$cont!==this.tipo)return null;
}
_m=OpenValue(this.containingPackage, _d);
}
}
if (!_m && extendsType($$$mptypes.Kind$getMemberDeclaration, {t:FunctionDeclaration$meta$declaration})) {
var nom=name$20;
if (this.tipo===$_String && ['split','replace','filter','every','map','sort','slice','reduce'].indexOf(nom)>=0)nom='$_'+nom;
var _d = this.tipo.$$.prototype[nom];
if (_d===undefined) {
for (var $k in this.tipo.$$.prototype) {
var propname='$prop$get'+$k[0].toUpperCase()+$k.substring(1);
if (!$k.startsWith("$prop$get") && this.tipo.$$.prototype[propname]===undefined && typeof(this.tipo.$$.prototype[$k])==='function') {
var lafun=this.tipo.$$.prototype[$k];
var mm=getrtmm$$(lafun);
var mod=mm&&get_model(mm);
if (mod && mod.$nm===nom) {
_d=lafun; break;
}
}
var m$ = this.tipo.$$.prototype[propname] ? undefined: this.tipo.$$.prototype[$k];
_d = typeof(m$)==='function' && m$.$$===undefined ? getrtmm$$(m$) : undefined;
if (_d && _d.d && _d.d[_d.d.length-1]===nom){
_d = this.tipo.$$.prototype[$k];
break;
}else _d=undefined;
}
}
if(_d){
if (noInherit) {
var mm=getrtmm$$(_d);
if (mm.$cont!==this.tipo)return null;
}
_m=OpenFunction(this.containingPackage, _d);
}
}
if (!_m && extendsType($$$mptypes.Kind$getMemberDeclaration, {t:ClassOrInterfaceDeclaration$meta$declaration})) {
var nom=name$20+'$'+this.name;
var _d = this.tipo.$$.prototype[nom];
if (_d===undefined) {
for (var $k in this.tipo.$$.prototype) {
var propname='$prop$get'+$k[0].toUpperCase()+$k.substring(1);
var m$ = this.tipo.$$.prototype[propname] ? undefined: this.tipo.$$.prototype[$k];
_d = typeof(m$)==='function' && m$.$$ ? getrtmm$$(m$) : undefined;
if (_d && _d.d && _d.d[_d.d.length-1]===nom){
_d = this.tipo.$$.prototype[$k];
break;
}else _d=undefined;
}
}
if (!_d) {
if (noInherit)return null;
var pere=this.tipo.$crtmm$['super'];
while (!_d && pere) {
var mm=getrtmm$$(pere.t);
nom=mm&&mm.d?name$20+'$'+mm.d[mm.d.length-1]:undefined;
if(nom)_d=this.tipo.$$.prototype[nom];
if (!_d)pere=mm['super'];
}
}
if(_d){
var wantsClass=extendsType($$$mptypes.Kind$getMemberDeclaration,{t:ClassDeclaration$meta$declaration});
var wantsIface=extendsType($$$mptypes.Kind$getMemberDeclaration,{t:InterfaceDeclaration$meta$declaration});
var _$m = getrtmm$$(_d);
var _mdl=get_model(_$m);
if ((wantsClass && _mdl.$mt!=='c') || (wantsIface && _mdl.$mt!=='i'))return null;
_m=(_mdl.$mt==='c'?OpenClass:OpenInterface)(this.containingPackage, _d);
}
}
if (_m) {
_m.$parent=this;
return _m;
}
return null;
};
ClassOrInterfaceDeclaration$meta$declaration.$$.prototype.getMemberDeclaration.$crtmm$=function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},'Kind']},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String}}],$cont:OpenClass,$tp:{Kind:{'satisfies':[{t:NestableDeclaration$meta$declaration}]}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$m','getMemberDeclaration']};};
ClassOrInterfaceDeclaration$meta$declaration.$$.prototype.getDeclaredMemberDeclaration=function(nm,$mptypes){
return this.getMemberDeclaration(nm,{Kind$getMemberDeclaration:$mptypes.Kind$getDeclaredMemberDeclaration},1);
}
ClassOrInterfaceDeclaration$meta$declaration.$$.prototype.getDeclaredMemberDeclaration.$crtmm$=function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},'Kind']},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String}}],$cont:OpenClass,$tp:{Kind:{'satisfies':[{t:NestableDeclaration$meta$declaration}]}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$m','getDeclaredMemberDeclaration']};};
atr$(FunctionalDeclaration$meta$declaration.$$.prototype,'parameterDeclarations',function(){
var that=this;
var parms = that.tipo.$crtmm$.$ps;
if (!parms || parms.length === 0)return getEmpty();
var rv = [];
for (var i=0; i<parms.length;i++) {
var p = parms[i];
if (p.$pt === 'f') {
rv.push(FunParamDecl(this,p));
} else {
rv.push(ValParamDecl(this,p));
}
}
return rv.length===0?getEmpty():ArraySequence(rv,{Element$ArraySequence:{t:FunctionOrValueDeclaration$meta$declaration},Absent$Iterable:{t:Null}});
},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:FunctionOrValueDeclaration$meta$declaration}}},$cont:FunctionalDeclaration$meta$declaration,$an:function(){return[shared(),formal()];},d:['ceylon.language.meta.declaration','FunctionalDeclaration','$at','parameterDeclarations']};});
ClassOrInterfaceDeclaration$meta$declaration.$$.prototype.memberDeclarations=function memberDeclarations($$$mptypes,inherited){
var defs=[];
var _prot=this.tipo && this.tipo.$$ && this.tipo.$$.prototype;
if (_prot) {
var props = Object.getOwnPropertyNames(_prot);
function isProp(mem) {
return _prot['$prop$get' + mem[0].toUpperCase() + mem.substring(1)]!==undefined;
}
for (var mem in _prot) {
if (isProp(mem))continue;
var _d = undefined;
var mm=getrtmm$$(_prot[mem]);
if (mm && inherited && mm.$cont!==this.tipo)continue;
if (mem.substring(0,9)==='$prop$get' && extendsType($$$mptypes.Kind$memberDeclarations,{t:ValueDeclaration$meta$declaration})) {
_d=this.getMemberDeclaration(mm.d[mm.d.length-1],{Kind$getMemberDeclaration:{t:ValueDeclaration$meta$declaration}});
} else if (_prot[mem].$$ && extendsType($$$mptypes.Kind$memberDeclarations,{t:ClassOrInterfaceDeclaration$meta$declaration})) {
var mt=mm.d[mm.d.length-2];
if ((mt==='$c' && !extendsType({t:ClassDeclaration$meta$declaration},$$$mptypes.Kind$memberDeclarations))
||(mt==='$i' && !extendsType({t:InterfaceDeclaration$meta$declaration},$$$mptypes.Kind$memberDeclarations)))continue;
_d=this.getMemberDeclaration(mm.d[mm.d.length-1],
{Kind$getMemberDeclaration:{t:ClassOrInterfaceDeclaration$meta$declaration}});
} else if(mm && mm.d) {
var mt=mm.d[mm.d.length-2];
if (mt === '$m' && extendsType({t:FunctionDeclaration$meta$declaration},$$$mptypes.Kind$memberDeclarations)) {
_d=this.getMemberDeclaration(mm.d[mm.d.length-1],{Kind$getMemberDeclaration:{t:FunctionDeclaration$meta$declaration}});
}
}
if (_d){_d.parent$=this;defs.push(_d);};
}
return defs.length?ArraySequence(defs,{Element$ArraySequence:$$$mptypes.Kind$memberDeclarations}):getEmpty();
}
if (extendsType({t:FunctionDeclaration$meta$declaration},$$$mptypes.Kind$memberDeclarations)) {
for (var df in this.meta['$m']) {
defs.push(this.meta['$m'][df]);
}
}
if (extendsType({t:ValueDeclaration$meta$declaration},$$$mptypes.Kind$memberDeclarations)) {
for (var df in this.meta['$at']) {
defs.push(this.meta['$at'][df]);
}
}
if (extendsType({t:InterfaceDeclaration$meta$declaration},$$$mptypes.Kind$memberDeclarations)) {
for (var df in this.meta['$i']) {
defs.push(this.meta['$i'][df]);
}
}
if (extendsType({t:ClassDeclaration$meta$declaration},$$$mptypes.Kind$memberDeclarations)) {
for (var df in this.meta['$c']) {
defs.push(this.meta['$c'][df]);
}
}
var pkg = this.containingPackage;
var r=[];
for (var i=0; i<defs.length; i++) {
var m=defs[i];
var mt = m['$mt'];
var _d;
if (mt === 'm') {
_d=this.getMemberDeclaration(m.$nm, {Kind$getMemberDeclaration:{t:FunctionDeclaration$meta$declaration}});
} else if (mt==='c') {
_d=this.getMemberDeclaration(m.$nm, {Kind$getMemberDeclaration:{t:ClassDeclaration$meta$declaration}});
} else if (mt==='i') {
_d=this.getMemberDeclaration(m.$nm, {Kind$getMemberDeclaration:{t:InterfaceDeclaration$meta$declaration}});
} else if (mt==='a'||mt==='g'||mt==='o'||mt==='s') {
_d=this.getMemberDeclaration(m.$nm, {Kind$getMemberDeclaration:{t:ValueDeclaration$meta$declaration}});
}
if (_d) {
_d.$parent=this;
r.push(_d);
}
}
return r.length===0?getEmpty():ArraySequence(r,{Element$ArraySequence:$$$mptypes.Kind$memberDeclarations});
};
ClassOrInterfaceDeclaration$meta$declaration.$$.prototype.memberDeclarations.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Kind'}},$ps:[],$cont:OpenInterface,$tp:{Kind:{'satisfies':[{t:NestableDeclaration$meta$declaration}]}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$m','memberDeclarations']};};
atr$(ClassOrInterfaceDeclaration$meta$declaration.$$.prototype,'caseTypes',function(){
var casos = this.tipo.$crtmm$.of;
if (casos && casos.length > 0) {
var ct=[]; var ta=[];
for (var i=0; i < casos.length; i++) {
if (typeof(casos[i])==='string') {
ct.push(OpenTvar(OpenTypeParam(this, casos[i])));
if (!ta.contains(OpenTypeVariable$meta$declaration))ta.push(OpenTypeVariable$meta$declaration);
} else {
var _t=casos[i];
if (typeof(_t)==='function')_t=getrtmm$$(_t).$t;
var ot=_openTypeFromTarg(_t);
ct.push(ot);
if (is$(ot,{t:OpenClassType$meta$declaration}) && !ta.contains(OpenClassType$meta$declaration))ta.push(OpenClassType$meta$declaration);
else if (is$(ot,{t:OpenInterfaceType$meta$declaration})&&!ta.contains(OpenInterfaceType$meta$declaration))ta.push(OpenInterfaceType$meta$declaration);
}
}
if (ta.length===0)ta={t:OpenType$meta$declaration};
else if (ta.length===1)ta={t:ta[0]};
else {
for (var i=0;i<ta.length;i++)ta[i]={t:ta[i]};
ta={t:'u',l:ta};
}
return ct.length===0?getEmpty():ArraySequence(ct,{Element$ArraySequence:ta});
}
return getEmpty();
},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:OpenType$meta$declaration}}},$cont:ClassOrInterfaceDeclaration$meta$declaration,$an:function(){return[shared(),formal()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$at','caseTypes']};});
ClassOrInterfaceDeclaration$meta$declaration.$$.prototype.$_apply=function(types,$mptypes){
var _t = {t:this.tipo};
var _m = getrtmm$$(this.tipo);
validate$typeparams(_t,_m.$tp,types);
if (!extendsType(_t, $mptypes.Type$apply))
throw IncompatibleTypeException$meta$model("Type argument for 'Type' must be a supertype of " + this);
var rv=this.meta.$mt==='i'?AppliedInterface(_t.t, {Type$Interface:$mptypes.Type$apply}):
AppliedClass(_t.t, {Type$Class:$mptypes.Type$apply,Arguments$Class:$mptypes.Arguments$apply});
if (_t.a)rv.$targs=_t.a;
return rv;
}
ClassOrInterfaceDeclaration$meta$declaration.$$.prototype.$_apply.$crtmm$=function(){return{mod:$CCMM$,d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$m','apply']};};
ClassOrInterfaceDeclaration$meta$declaration.$$.prototype.memberApply=function(cont, types,$mptypes) {
var mm=getrtmm$$(this.tipo);
if (!extendsType({t:cont.tipo},{t:mm.$cont}))throw IncompatibleTypeException$meta$model("Incompatible Container type");
var _t = {t:this.tipo};
validate$typeparams(_t,mm.$tp,types);
if (!extendsType(_t, $mptypes.Type$memberApply))
throw IncompatibleTypeException$meta$model("Type argument for 'Type' must be a supertype of " + this);
var rv=this.meta.$mt==='i'?AppliedMemberInterface(_t.t, {Container$MemberInterface:$mptypes.Container$memberApply, Type$MemberInterface:_t})
:AppliedMemberClass(_t.t, {Container$MemberClass:$mptypes.Container$memberApply, Type$MemberClass:_t, Arguments$MemberClass:$mptypes.Arguments$memberApply});
if (_t.a)rv.$targs=_t.a;
return rv;
};ClassOrInterfaceDeclaration$meta$declaration.$$.prototype.memberApply.$crtmm$=function(){return{mod:$CCMM$,d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$m','memberApply']};};
atr$(ClassOrInterfaceDeclaration$meta$declaration.$$.prototype,'container',function(){
if (this.$parent)return this.$parent;
var mm=getrtmm$$(this.tipo);
var _c=mm.$cont;
if (_c) {
if (_c.t === undefined && _c.get && _c.$crtmm$) {
return OpenValue(this.containingPackage, _c);
}
return typeLiteral$meta({Type$typeLiteral:_c});
}
return this.containingPackage;
},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:NestableDeclaration$meta$declaration},{t:Package$meta$declaration}]},d:['ceylon.language.meta.declaration.NestableDeclaration','$at','container']};});
ClassOrInterfaceDeclaration$meta$declaration.$$.prototype.annotatedMemberDeclarations=function($$$mptypes,inherited){
var list=this.memberDeclarations({Kind$memberDeclarations:$$$mptypes.Kind$annotatedMemberDeclarations},inherited);
if (list.size>0) {
var rv=[];
for (var i=0; i < list.size; i++) {
var mm = getrtmm$$(list.getFromFirst(i).tipo);
var anns = mm&&mm.$an;
if (typeof(anns)==='function'){anns=anns();mm.$an=anns;}
if (anns) for (var j=0; j<anns.length; j++) {
if (is$(anns[j],$$$mptypes.Annotation$annotatedMemberDeclarations)) {
rv.push(list.getFromFirst(i));
break;
}
}
}
if (rv.length)return ArraySequence(rv,{Element$ArraySequence:$$$mptypes.Kind$annotatedMemberDeclarations});
}
return getEmpty();
};
ClassOrInterfaceDeclaration$meta$declaration.$$.prototype.annotatedMemberDeclarations.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Kind'}},$ps:[],$cont:ClassOrInterfaceDeclaration$meta$declarationl,$tp:{Kind:{'satisfies':[{t:NestableDeclaration$meta$declaration}]},Annotation:{}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$m','annotatedMemberDeclarations']};};
ClassOrInterfaceDeclaration$meta$declaration.$$.prototype.annotatedDeclaredMemberDeclarations=function ($$$mptypes){
return this.annotatedMemberDeclarations({Kind$annotatedMemberDeclarations:$$$mptypes.Kind$annotatedDeclaredMemberDeclarations,
Annotation$annotatedMemberDeclarations:$$$mptypes.Annotation$annotatedDeclaredMemberDeclarations},1);
};
ClassOrInterfaceDeclaration$meta$declaration.$$.prototype.annotatedDeclaredMemberDeclarations.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Kind'}},$ps:[],$cont:ClassOrInterfaceDeclaration$meta$declarationl,$tp:{Kind:{'satisfies':[{t:NestableDeclaration$meta$declaration}]},Annotation:{}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$m','annotatedDeclaredMemberDeclarations']};};
function FunctionOrValueDeclaration$meta$declaration(functionOrValueDeclaration$){NestableDeclaration$meta$declaration(functionOrValueDeclaration$);}
FunctionOrValueDeclaration$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:NestableDeclaration$meta$declaration}],of:[{t:FunctionDeclaration$meta$declaration},{t:ValueDeclaration$meta$declaration}],$an:function(){return[doc("A function or value declaration."),shared()];},d:['ceylon.language.meta.declaration','FunctionOrValueDeclaration']};};
ex$.FunctionOrValueDeclaration$meta$declaration=FunctionOrValueDeclaration$meta$declaration;function $init$FunctionOrValueDeclaration$meta$declaration(){if(FunctionOrValueDeclaration$meta$declaration.$$===undefined){initTypeProtoI(FunctionOrValueDeclaration$meta$declaration,'ceylon.language.meta.declaration::FunctionOrValueDeclaration',$init$NestableDeclaration$meta$declaration());
(function(functionOrValueDeclaration$){functionOrValueDeclaration$.$prop$getParameter={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:FunctionOrValueDeclaration$meta$declaration,$an:function(){return[doc("True if this function or value is a parameter to a [[FunctionalDeclaration]]."),shared(),formal()];},d:['ceylon.language.meta.declaration','FunctionOrValueDeclaration','$at','parameter']};}};functionOrValueDeclaration$.$prop$getDefaulted={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:FunctionOrValueDeclaration$meta$declaration,$an:function(){return[doc("True if this function or value is a parameter and has a default value."),shared(),formal()];},d:['ceylon.language.meta.declaration','FunctionOrValueDeclaration','$at','defaulted']};}};functionOrValueDeclaration$.$prop$getVariadic={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:FunctionOrValueDeclaration$meta$declaration,$an:function(){return[doc("True if this function or value is a parameter and is variadic (accepts a list of values)."),shared(),formal()];},d:['ceylon.language.meta.declaration','FunctionOrValueDeclaration','$at','variadic']};}};})(FunctionOrValueDeclaration$meta$declaration.$$.prototype);}
return FunctionOrValueDeclaration$meta$declaration;}
ex$.$init$FunctionOrValueDeclaration$meta$declaration=$init$FunctionOrValueDeclaration$meta$declaration;$init$FunctionOrValueDeclaration$meta$declaration();function ValueDeclaration$meta$declaration(valueDeclaration$){FunctionOrValueDeclaration$meta$declaration(valueDeclaration$);}
ValueDeclaration$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:FunctionOrValueDeclaration$meta$declaration}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ValueDeclaration.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','ValueDeclaration']};};
ex$.ValueDeclaration$meta$declaration=ValueDeclaration$meta$declaration;function $init$ValueDeclaration$meta$declaration(){if(ValueDeclaration$meta$declaration.$$===undefined){initTypeProtoI(ValueDeclaration$meta$declaration,'ceylon.language.meta.declaration::ValueDeclaration',$init$FunctionOrValueDeclaration$meta$declaration());
(function(valueDeclaration$){valueDeclaration$.$prop$getVariable={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:ValueDeclaration$meta$declaration,$an:function(){return[doc("True if this declaration is annotated with [[variable|ceylon.language::variable]]."),shared(),formal()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','variable']};}};valueDeclaration$.$prop$getObjectValue={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:ValueDeclaration$meta$declaration,$an:function(){return[doc("True if this declaration is an `object` declaration, whose type is an anonymous class."),shared(),formal()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','objectValue']};}};valueDeclaration$.$prop$getObjectClass={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:ClassDeclaration$meta$declaration}]},$cont:ValueDeclaration$meta$declaration,$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ValueDeclaration.$at.objectClass.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','objectClass']};}};valueDeclaration$.$_apply={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Value$meta$model,a:{Get$Value:'Get$apply',Set$Value:'Set$apply'}},$ps:[],$cont:ValueDeclaration$meta$declaration,$tp:{Get$apply:{'def':{t:Anything}},Set$apply:{'def':{t:Nothing}}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ValueDeclaration.$m.apply.$an.doc[0]),$_throws("IncompatibleTypeException","If the specified `Get` or `Set` type arguments are not compatible with the actual result."),shared(),formal()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$m','apply']};}};valueDeclaration$.memberApply={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Attribute$meta$model,a:{Set$Attribute:'Set$memberApply',Container$Attribute:'Container$memberApply',Get$Attribute:'Get$memberApply'}},$ps:[{$nm:'containerType',$mt:'prm',$t:{t:Type$meta$model,a:{Type$Type:'Container$memberApply'}},$an:function(){return[];}}],$cont:ValueDeclaration$meta$declaration,$tp:{Container$memberApply:{'def':{t:Nothing}},Get$memberApply:{'def':{t:Anything}},Set$memberApply:{'def':{t:Nothing}}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ValueDeclaration.$m.memberApply.$an.doc[0]),$_throws("IncompatibleTypeException","If the specified `Container`, `Get` or `Set` type arguments are not compatible with the actual result."),shared(),formal()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$m','memberApply']};}};valueDeclaration$.$_get=function (){var valueDeclaration$=this;return valueDeclaration$.$_apply({Get$apply:{t:Anything},Set$apply:{t:Nothing}}).$_get();};valueDeclaration$.$_get.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[],$cont:ValueDeclaration$meta$declaration,$an:function(){return[doc("Reads the current value of this toplevel value."),shared(),$_default()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$m','get']};};valueDeclaration$.memberGet=function ($xj){var valueDeclaration$=this;return valueDeclaration$.memberApply(getNothingType$meta$model(),{Set$memberApply:{t:Nothing},Container$memberApply:{t:Nothing},Get$memberApply:{t:Anything}}).$_bind($xj).$_get();};valueDeclaration$.memberGet.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'container',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:ValueDeclaration$meta$declaration,$an:function(){return[doc("Reads the current value of this attribute on the given container instance."),$_throws($init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language.meta.model'),IncompatibleTypeException$meta$model),"If the specified container is not compatible with this attribute."),shared(),$_default()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$m','memberGet']};};valueDeclaration$.set=function ($xk){var valueDeclaration$=this;return valueDeclaration$.$_apply({Get$apply:{t:Anything},Set$apply:{t:Nothing}}).setIfAssignable($xk);};valueDeclaration$.set.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'newValue',$mt:'prm',$t:{t:Anything},$an:function(){return[];}}],$cont:ValueDeclaration$meta$declaration,$an:function(){return[doc("Sets the current value of this toplevel value."),shared(),$_default()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$m','set']};};valueDeclaration$.memberSet={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'container',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}},{$nm:'newValue',$mt:'prm',$t:{t:Anything},$an:function(){return[];}}],$cont:ValueDeclaration$meta$declaration,$an:function(){return[doc("Sets the current value of this attribute on the given container instance."),$_throws("IncompatibleTypeException","If the specified container or new value type is not compatible with this attribute."),shared(),formal()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$m','memberSet']};}};valueDeclaration$.$prop$getSetter={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:SetterDeclaration$meta$declaration}]},$cont:ValueDeclaration$meta$declaration,$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ValueDeclaration.$at.setter.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','setter']};}};})(ValueDeclaration$meta$declaration.$$.prototype);}
return ValueDeclaration$meta$declaration;}
ex$.$init$ValueDeclaration$meta$declaration=$init$ValueDeclaration$meta$declaration;$init$ValueDeclaration$meta$declaration();function ClassDeclaration$meta$declaration(classDeclaration$){ClassOrInterfaceDeclaration$meta$declaration(classDeclaration$);FunctionalDeclaration$meta$declaration(classDeclaration$);}
ClassDeclaration$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:ClassOrInterfaceDeclaration$meta$declaration},{t:FunctionalDeclaration$meta$declaration}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ClassDeclaration.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','ClassDeclaration']};};
ex$.ClassDeclaration$meta$declaration=ClassDeclaration$meta$declaration;function $init$ClassDeclaration$meta$declaration(){if(ClassDeclaration$meta$declaration.$$===undefined){initTypeProtoI(ClassDeclaration$meta$declaration,'ceylon.language.meta.declaration::ClassDeclaration',$init$ClassOrInterfaceDeclaration$meta$declaration(),$init$FunctionalDeclaration$meta$declaration());
(function(classDeclaration$){classDeclaration$.$prop$getAbstract={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:ClassDeclaration$meta$declaration,$an:function(){return[doc("True if the class has an [[abstract|ceylon.language::abstract]] annotation."),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$at','abstract']};}};classDeclaration$.$prop$getAnonymous={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:ClassDeclaration$meta$declaration,$an:function(){return[doc("True if the class is an object class."),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$at','anonymous']};}};classDeclaration$.$prop$getFinal={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:ClassDeclaration$meta$declaration,$an:function(){return[doc("True if the class has a [[final|ceylon.language::final]] annotation."),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$at','final']};}};classDeclaration$.classApply={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Class$meta$model,a:{Type$Class:'Type$classApply',Arguments$Class:'Arguments$classApply'}},$ps:[{$nm:'typeArguments',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:ClassDeclaration$meta$declaration,$tp:{Type$classApply:{'def':{t:Anything}},Arguments$classApply:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ClassDeclaration.$m.classApply.$an.doc[0]),$_throws("IncompatibleTypeException","If the specified `Type` or `Arguments` type arguments are not compatible with the actual result."),$_throws("TypeApplicationException","If the specified closed type argument values are not compatible with the actual result\'s type parameters."),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$m','classApply']};}};classDeclaration$.memberClassApply={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:MemberClass$meta$model,a:{Arguments$MemberClass:'Arguments$memberClassApply',Container$MemberClass:'Container$memberClassApply',Type$MemberClass:'Type$memberClassApply'}},$ps:[{$nm:'containerType',$mt:'prm',$t:{t:Type$meta$model,a:{Type$Type:'Container$memberClassApply'}},$an:function(){return[];}},{$nm:'typeArguments',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:ClassDeclaration$meta$declaration,$tp:{Container$memberClassApply:{'def':{t:Nothing}},Type$memberClassApply:{'def':{t:Anything}},Arguments$memberClassApply:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ClassDeclaration.$m.memberClassApply.$an.doc[0]),$_throws("IncompatibleTypeException","If the specified `Container`, `Type` or `Arguments` type arguments are not compatible with the actual result."),$_throws("TypeApplicationException","If the specified closed container type or type argument values are not compatible with the actual result\'s container type or type parameters."),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$m','memberClassApply']};}};classDeclaration$.instantiate$defs$typeArguments=function($xl,$xm){return getEmpty();};classDeclaration$.instantiate=function ($xl,$xm){var classDeclaration$=this;if($xl===undefined){$xl=classDeclaration$.instantiate$defs$typeArguments($xl,$xm);}
if($xm===undefined){$xm=getEmpty();}
return classDeclaration$.classApply($xl,{Arguments$classApply:{t:Nothing},Type$classApply:{t:Anything}}).$_apply($xm);};classDeclaration$.instantiate.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'typeArguments',$mt:'prm',$def:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}},{$nm:'arguments',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Anything}}},$an:function(){return[];}}],$cont:ClassDeclaration$meta$declaration,$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ClassDeclaration.$m.instantiate.$an.doc[0]),$_throws($init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language.meta.model'),IncompatibleTypeException$meta$model),"If the specified type or value arguments are not compatible with this toplevel class."),shared(),$_default()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$m','instantiate']};};classDeclaration$.memberInstantiate$defs$typeArguments=function($xn,$xo,$xp){return getEmpty();};classDeclaration$.memberInstantiate=function ($xn,$xo,$xp){var classDeclaration$=this;if($xo===undefined){$xo=classDeclaration$.memberInstantiate$defs$typeArguments($xn,$xo,$xp);}
if($xp===undefined){$xp=getEmpty();}
return classDeclaration$.memberClassApply(getNothingType$meta$model(),$xo,{Type$memberClassApply:{t:Anything},Container$memberClassApply:{t:Nothing},Arguments$memberClassApply:{t:Nothing}}).$_bind($xn).$_apply($xp);};classDeclaration$.memberInstantiate.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'container',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}},{$nm:'typeArguments',$mt:'prm',$def:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}},{$nm:'arguments',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Anything}}},$an:function(){return[];}}],$cont:ClassDeclaration$meta$declaration,$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ClassDeclaration.$m.memberInstantiate.$an.doc[0]),$_throws($init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language.meta.model'),IncompatibleTypeException$meta$model),"If the specified container, type or value arguments are not compatible with this method."),shared(),$_default()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$m','memberInstantiate']};};})(ClassDeclaration$meta$declaration.$$.prototype);}
return ClassDeclaration$meta$declaration;}
ex$.$init$ClassDeclaration$meta$declaration=$init$ClassDeclaration$meta$declaration;$init$ClassDeclaration$meta$declaration();function FunctionDeclaration$meta$declaration(functionDeclaration$){FunctionOrValueDeclaration$meta$declaration(functionDeclaration$);GenericDeclaration$meta$declaration(functionDeclaration$);FunctionalDeclaration$meta$declaration(functionDeclaration$);}
FunctionDeclaration$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:FunctionOrValueDeclaration$meta$declaration},{t:GenericDeclaration$meta$declaration},{t:FunctionalDeclaration$meta$declaration}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].FunctionDeclaration.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','FunctionDeclaration']};};
ex$.FunctionDeclaration$meta$declaration=FunctionDeclaration$meta$declaration;function $init$FunctionDeclaration$meta$declaration(){if(FunctionDeclaration$meta$declaration.$$===undefined){initTypeProtoI(FunctionDeclaration$meta$declaration,'ceylon.language.meta.declaration::FunctionDeclaration',$init$FunctionOrValueDeclaration$meta$declaration(),$init$GenericDeclaration$meta$declaration(),$init$FunctionalDeclaration$meta$declaration());
(function(functionDeclaration$){functionDeclaration$.$_apply={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Function$meta$model,a:{Arguments$Function:'Arguments$apply',Type$Function:'Return$apply'}},$ps:[{$nm:'typeArguments',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:FunctionDeclaration$meta$declaration,$tp:{Return$apply:{'def':{t:Anything}},Arguments$apply:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].FunctionDeclaration.$m.apply.$an.doc[0]),$_throws("IncompatibleTypeException","If the specified `Return` or `Arguments` type arguments are not compatible with the actual result."),$_throws("TypeApplicationException","If the specified closed type argument values are not compatible with the actual result\'s type parameters."),shared(),formal()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$m','apply']};}};functionDeclaration$.memberApply={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Method$meta$model,a:{Container$Method:'Container$memberApply',Arguments$Method:'Arguments$memberApply',Type$Method:'Return$memberApply'}},$ps:[{$nm:'containerType',$mt:'prm',$t:{t:Type$meta$model,a:{Type$Type:'Container$memberApply'}},$an:function(){return[];}},{$nm:'typeArguments',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:FunctionDeclaration$meta$declaration,$tp:{Container$memberApply:{'def':{t:Nothing}},Return$memberApply:{'def':{t:Anything}},Arguments$memberApply:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].FunctionDeclaration.$m.memberApply.$an.doc[0]),$_throws("IncompatibleTypeException","If the specified `Container`, `Return` or `Arguments` type arguments are not compatible with the actual result."),$_throws("TypeApplicationException","If the specified closed container type or type argument values are not compatible with the actual result\'s container type or type parameters."),shared(),formal()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$m','memberApply']};}};functionDeclaration$.invoke$defs$typeArguments=function($xq,$xr){return getEmpty();};functionDeclaration$.invoke=function ($xq,$xr){var functionDeclaration$=this;if($xq===undefined){$xq=functionDeclaration$.invoke$defs$typeArguments($xq,$xr);}
if($xr===undefined){$xr=getEmpty();}
return functionDeclaration$.$_apply($xq,{Arguments$apply:{t:Nothing},Return$apply:{t:Anything}}).$_apply($xr);};functionDeclaration$.invoke.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'typeArguments',$mt:'prm',$def:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}},{$nm:'arguments',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Anything}}},$an:function(){return[];}}],$cont:FunctionDeclaration$meta$declaration,$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].FunctionDeclaration.$m.invoke.$an.doc[0]),$_throws($init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language.meta.model'),IncompatibleTypeException$meta$model),"If the specified type or value arguments are not compatible with this toplevel function."),shared(),$_default()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$m','invoke']};};functionDeclaration$.memberInvoke$defs$typeArguments=function($xs,$xt,$xu){return getEmpty();};functionDeclaration$.memberInvoke=function ($xs,$xt,$xu){var functionDeclaration$=this;if($xt===undefined){$xt=functionDeclaration$.memberInvoke$defs$typeArguments($xs,$xt,$xu);}
if($xu===undefined){$xu=getEmpty();}
return functionDeclaration$.memberApply(getNothingType$meta$model(),$xt,{Arguments$memberApply:{t:Nothing},Return$memberApply:{t:Anything},Container$memberApply:{t:Nothing}}).$_bind($xs).$_apply($xu);};functionDeclaration$.memberInvoke.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'container',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}},{$nm:'typeArguments',$mt:'prm',$def:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}},{$nm:'arguments',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Anything}}},$an:function(){return[];}}],$cont:FunctionDeclaration$meta$declaration,$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].FunctionDeclaration.$m.memberInvoke.$an.doc[0]),$_throws($init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language.meta.model'),IncompatibleTypeException$meta$model),"If the specified container, type or value arguments are not compatible with this method."),shared(),$_default()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$m','memberInvoke']};};})(FunctionDeclaration$meta$declaration.$$.prototype);}
return FunctionDeclaration$meta$declaration;}
ex$.$init$FunctionDeclaration$meta$declaration=$init$FunctionDeclaration$meta$declaration;$init$FunctionDeclaration$meta$declaration();function InterfaceDeclaration$meta$declaration(interfaceDeclaration$){ClassOrInterfaceDeclaration$meta$declaration(interfaceDeclaration$);}
InterfaceDeclaration$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:ClassOrInterfaceDeclaration$meta$declaration}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].InterfaceDeclaration.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','InterfaceDeclaration']};};
ex$.InterfaceDeclaration$meta$declaration=InterfaceDeclaration$meta$declaration;function $init$InterfaceDeclaration$meta$declaration(){if(InterfaceDeclaration$meta$declaration.$$===undefined){initTypeProtoI(InterfaceDeclaration$meta$declaration,'ceylon.language.meta.declaration::InterfaceDeclaration',$init$ClassOrInterfaceDeclaration$meta$declaration());
(function(interfaceDeclaration$){interfaceDeclaration$.interfaceApply={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Interface$meta$model,a:{Type$Interface:'Type$interfaceApply'}},$ps:[{$nm:'typeArguments',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:InterfaceDeclaration$meta$declaration,$tp:{Type$interfaceApply:{'def':{t:Anything}}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].InterfaceDeclaration.$m.interfaceApply.$an.doc[0]),$_throws("IncompatibleTypeException","If the specified `Type` type argument is not compatible with the actual result."),$_throws("TypeApplicationException","If the specified closed type argument values are not compatible with the actual result\'s type parameters."),shared(),formal()];},d:['ceylon.language.meta.declaration','InterfaceDeclaration','$m','interfaceApply']};}};interfaceDeclaration$.memberInterfaceApply={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:MemberInterface$meta$model,a:{Container$MemberInterface:'Container$memberInterfaceApply',Type$MemberInterface:'Type$memberInterfaceApply'}},$ps:[{$nm:'containerType',$mt:'prm',$t:{t:Type$meta$model,a:{Type$Type:'Container$memberInterfaceApply'}},$an:function(){return[];}},{$nm:'typeArguments',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:InterfaceDeclaration$meta$declaration,$tp:{Container$memberInterfaceApply:{'def':{t:Nothing}},Type$memberInterfaceApply:{'def':{t:Anything}}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].InterfaceDeclaration.$m.memberInterfaceApply.$an.doc[0]),$_throws("IncompatibleTypeException","If the specified `Container` or `Type` type arguments are not compatible with the actual result."),$_throws("TypeApplicationException","If the specified closed container type or type argument values are not compatible with the actual result\'s container type or type parameters."),shared(),formal()];},d:['ceylon.language.meta.declaration','InterfaceDeclaration','$m','memberInterfaceApply']};}};})(InterfaceDeclaration$meta$declaration.$$.prototype);}
return InterfaceDeclaration$meta$declaration;}
ex$.$init$InterfaceDeclaration$meta$declaration=$init$InterfaceDeclaration$meta$declaration;$init$InterfaceDeclaration$meta$declaration();function Module$meta$declaration(module$){Identifiable(module$);AnnotatedDeclaration$meta$declaration(module$);}
Module$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:Identifiable},{t:AnnotatedDeclaration$meta$declaration}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].Module.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','Module']};};
ex$.Module$meta$declaration=Module$meta$declaration;function $init$Module$meta$declaration(){if(Module$meta$declaration.$$===undefined){initTypeProtoI(Module$meta$declaration,'ceylon.language.meta.declaration::Module',$init$Identifiable(),$init$AnnotatedDeclaration$meta$declaration());
(function(module$){module$.$prop$getVersion={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Module$meta$declaration,$an:function(){return[doc("The module version."),shared(),formal()];},d:['ceylon.language.meta.declaration','Module','$at','version']};}};module$.$prop$getMembers={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Package$meta$declaration}}},$cont:Module$meta$declaration,$an:function(){return[doc("The package members of the module."),shared(),formal()];},d:['ceylon.language.meta.declaration','Module','$at','members']};}};module$.$prop$getDependencies={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Import$meta$declaration}}},$cont:Module$meta$declaration,$an:function(){return[doc("The modules this module depends on."),shared(),formal()];},d:['ceylon.language.meta.declaration','Module','$at','dependencies']};}};module$.findPackage={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Package$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:Module$meta$declaration,$an:function(){return[doc("Finds a package by name. Returns `null` if not found."),shared(),formal()];},d:['ceylon.language.meta.declaration','Module','$m','findPackage']};}};module$.findImportedPackage={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Package$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:Module$meta$declaration,$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].Module.$m.findImportedPackage.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','Module','$m','findImportedPackage']};}};module$.resourceByPath={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Resource}]},$ps:[{$nm:'path',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:Module$meta$declaration,$an:function(){return[doc("Searches for a resource by its path inside the module."),shared(),formal()];},d:['ceylon.language.meta.declaration','Module','$m','resourceByPath']};}};})(Module$meta$declaration.$$.prototype);}
return Module$meta$declaration;}
ex$.$init$Module$meta$declaration=$init$Module$meta$declaration;$init$Module$meta$declaration();function Import$meta$declaration(import$){Identifiable(import$);Annotated(import$);}
Import$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:Identifiable},{t:Annotated}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].Import.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','Import']};};
ex$.Import$meta$declaration=Import$meta$declaration;function $init$Import$meta$declaration(){if(Import$meta$declaration.$$===undefined){initTypeProtoI(Import$meta$declaration,'ceylon.language.meta.declaration::Import',$init$Identifiable(),$init$Annotated());
(function(import$){import$.$prop$getName={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Import$meta$declaration,$an:function(){return[doc("The name of the imported module."),shared(),formal()];},d:['ceylon.language.meta.declaration','Import','$at','name']};}};import$.$prop$getVersion={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_String},$cont:Import$meta$declaration,$an:function(){return[doc("The compile-time version of the imported module."),shared(),formal()];},d:['ceylon.language.meta.declaration','Import','$at','version']};}};import$.$prop$getShared={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:Import$meta$declaration,$an:function(){return[doc("True if this imported module is shared."),shared(),formal()];},d:['ceylon.language.meta.declaration','Import','$at','shared']};}};import$.$prop$getOptional={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:Import$meta$declaration,$an:function(){return[doc("True if this imported module is optional."),shared(),formal()];},d:['ceylon.language.meta.declaration','Import','$at','optional']};}};import$.$prop$getContainer={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Module$meta$declaration},$cont:Import$meta$declaration,$an:function(){return[doc("The containing module."),shared(),formal()];},d:['ceylon.language.meta.declaration','Import','$at','container']};}};})(Import$meta$declaration.$$.prototype);}
return Import$meta$declaration;}
ex$.$init$Import$meta$declaration=$init$Import$meta$declaration;$init$Import$meta$declaration();function Package$meta$declaration(package$){Identifiable(package$);AnnotatedDeclaration$meta$declaration(package$);}
Package$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:Identifiable},{t:AnnotatedDeclaration$meta$declaration}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].Package.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','Package']};};
ex$.Package$meta$declaration=Package$meta$declaration;function $init$Package$meta$declaration(){if(Package$meta$declaration.$$===undefined){initTypeProtoI(Package$meta$declaration,'ceylon.language.meta.declaration::Package',$init$Identifiable(),$init$AnnotatedDeclaration$meta$declaration());
(function(package$){package$.$prop$getContainer={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Module$meta$declaration},$cont:Package$meta$declaration,$an:function(){return[doc("The module this package belongs to."),shared(),formal()];},d:['ceylon.language.meta.declaration','Package','$at','container']};}};package$.$prop$getShared={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:Package$meta$declaration,$an:function(){return[doc("True if this package is shared."),shared(),formal()];},d:['ceylon.language.meta.declaration','Package','$at','shared']};}};package$.members={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Kind$members'}},$ps:[],$cont:Package$meta$declaration,$tp:{Kind$members:{'satisfies':[{t:NestableDeclaration$meta$declaration}]}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].Package.$m.members.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','Package','$m','members']};}};package$.annotatedMembers={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Kind$annotatedMembers'}},$ps:[],$cont:Package$meta$declaration,$tp:{Kind$annotatedMembers:{'satisfies':[{t:NestableDeclaration$meta$declaration}]},Annotation$annotatedMembers:{'satisfies':[{t:Annotation}]}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].Package.$m.annotatedMembers.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','Package','$m','annotatedMembers']};}};package$.getMember={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Kind$getMember']},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:Package$meta$declaration,$tp:{Kind$getMember:{'satisfies':[{t:NestableDeclaration$meta$declaration}]}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].Package.$m.getMember.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','Package','$m','getMember']};}};package$.getValue={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:ValueDeclaration$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:Package$meta$declaration,$an:function(){return[doc("The value with the given name. Returns `null` if not found."),shared(),formal()];},d:['ceylon.language.meta.declaration','Package','$m','getValue']};}};package$.getClassOrInterface={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:ClassOrInterfaceDeclaration$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:Package$meta$declaration,$an:function(){return[doc("The class or interface with the given name. Returns `null` if not found."),shared(),formal()];},d:['ceylon.language.meta.declaration','Package','$m','getClassOrInterface']};}};package$.getFunction={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:FunctionDeclaration$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:Package$meta$declaration,$an:function(){return[doc("The function with the given name. Returns `null` if not found."),shared(),formal()];},d:['ceylon.language.meta.declaration','Package','$m','getFunction']};}};package$.getAlias={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:AliasDeclaration$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:Package$meta$declaration,$an:function(){return[doc("The type alias with the given name. Returns `null` if not found."),shared(),formal()];},d:['ceylon.language.meta.declaration','Package','$m','getAlias']};}};})(Package$meta$declaration.$$.prototype);}
return Package$meta$declaration;}
ex$.$init$Package$meta$declaration=$init$Package$meta$declaration;$init$Package$meta$declaration();function OpenIntersection$meta$declaration(openIntersection$){OpenType$meta$declaration(openIntersection$);}
OpenIntersection$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:OpenType$meta$declaration}],$an:function(){return[doc("An open intersection type."),shared()];},d:['ceylon.language.meta.declaration','OpenIntersection']};};
ex$.OpenIntersection$meta$declaration=OpenIntersection$meta$declaration;function $init$OpenIntersection$meta$declaration(){if(OpenIntersection$meta$declaration.$$===undefined){initTypeProtoI(OpenIntersection$meta$declaration,'ceylon.language.meta.declaration::OpenIntersection',$init$OpenType$meta$declaration());
(function(openIntersection$){openIntersection$.$prop$getSatisfiedTypes={$crtmm$:function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:{t:OpenType$meta$declaration}}},$cont:OpenIntersection$meta$declaration,$an:function(){return[doc("This intersection\'s list of satisfied open types."),shared(),formal()];},d:['ceylon.language.meta.declaration','OpenIntersection','$at','satisfiedTypes']};}};})(OpenIntersection$meta$declaration.$$.prototype);}
return OpenIntersection$meta$declaration;}
ex$.$init$OpenIntersection$meta$declaration=$init$OpenIntersection$meta$declaration;$init$OpenIntersection$meta$declaration();function OpenClassOrInterfaceType$meta$declaration(openClassOrInterfaceType$){OpenType$meta$declaration(openClassOrInterfaceType$);}
OpenClassOrInterfaceType$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:OpenType$meta$declaration}],of:[{t:OpenClassType$meta$declaration},{t:OpenInterfaceType$meta$declaration}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].OpenClassOrInterfaceType.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','OpenClassOrInterfaceType']};};
ex$.OpenClassOrInterfaceType$meta$declaration=OpenClassOrInterfaceType$meta$declaration;function $init$OpenClassOrInterfaceType$meta$declaration(){if(OpenClassOrInterfaceType$meta$declaration.$$===undefined){initTypeProtoI(OpenClassOrInterfaceType$meta$declaration,'ceylon.language.meta.declaration::OpenClassOrInterfaceType',$init$OpenType$meta$declaration());
(function(openClassOrInterfaceType$){openClassOrInterfaceType$.$prop$getDeclaration={$crtmm$:function(){return{mod:$CCMM$,$t:{t:ClassOrInterfaceDeclaration$meta$declaration},$cont:OpenClassOrInterfaceType$meta$declaration,$an:function(){return[doc("The class or interface declaration for this open type."),shared(),formal()];},d:['ceylon.language.meta.declaration','OpenClassOrInterfaceType','$at','declaration']};}};openClassOrInterfaceType$.$prop$getExtendedType={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:OpenClassType$meta$declaration}]},$cont:OpenClassOrInterfaceType$meta$declaration,$an:function(){return[doc("The extended type of this open type."),shared(),formal()];},d:['ceylon.language.meta.declaration','OpenClassOrInterfaceType','$at','extendedType']};}};openClassOrInterfaceType$.$prop$getSatisfiedTypes={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:OpenInterfaceType$meta$declaration}}},$cont:OpenClassOrInterfaceType$meta$declaration,$an:function(){return[doc("The satisfied types of this open type."),shared(),formal()];},d:['ceylon.language.meta.declaration','OpenClassOrInterfaceType','$at','satisfiedTypes']};}};openClassOrInterfaceType$.$prop$getTypeArguments={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Map,a:{Key$Map:{t:TypeParameter$meta$declaration},Item$Map:{t:OpenType$meta$declaration}}},$cont:OpenClassOrInterfaceType$meta$declaration,$an:function(){return[doc("The set of open type arguments."),shared(),formal()];},d:['ceylon.language.meta.declaration','OpenClassOrInterfaceType','$at','typeArguments']};}};})(OpenClassOrInterfaceType$meta$declaration.$$.prototype);}
return OpenClassOrInterfaceType$meta$declaration;}
ex$.$init$OpenClassOrInterfaceType$meta$declaration=$init$OpenClassOrInterfaceType$meta$declaration;$init$OpenClassOrInterfaceType$meta$declaration();atr$(OpenClassOrInterfaceType$meta$declaration.$$.prototype,'typeArguments',function(){
var tps=this.declaration.tipo.$crtmm$.$tp;
if (tps) {
var rtps = this.declaration._targs;
var targs={};
for (var tpn in tps) {
var rtp=rtps&&rtps[tpn];
var otp=OpenTypeParam(this.declaration.tipo,tpn);
var targ;
if (rtp===undefined) {
targ = OpenTvar(otp);
} else if (typeof(rtp)==='string') {
targ = OpenTvar(OpenTypeParam(this.declaration.tipo,rtp));
} else {
if (rtp.t==='i'||rtp.t==='u') {
var nrtp={t:rtp.t,l:[]};
for (var i=0;i<rtp.l.length;i++) {
var _ct=rtp.l[i];
nrtp.l.push(typeof(_ct)==='string'?OpenTvar(OpenTypeParam(this.declaration.tipo,_ct)):_ct);
}
rtp=nrtp;
}
targ = _openTypeFromTarg(rtp);
}
targs[otp]=targ;
}
return Mapita(targs,{K$Mapita:{t:TypeParameter$meta$declaration},V$Mapita:{t:OpenType$meta$declaration}});
}
return getEmpty();
},undefined,function(){return{mod:$CCMM$,$t:{t:Map,a:{Key:{t:TypeParameter$meta$declaration},Item:{t:OpenType$meta$declaration}}},$cont:OpenClassOrInterfaceType,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','OpenClassOrInterfaceType','$at','typeArguments']};});
atr$(OpenClassOrInterfaceType$meta$declaration.$$.prototype,'extendedType',function(){
return this.declaration.extendedType;
},undefined,function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:OpenClassType$meta$declaration}]},$cont:OpenClassOrInterfaceType,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','OpenClassOrInterfaceType','$at','extendedType']};});
atr$(OpenClassOrInterfaceType$meta$declaration.$$.prototype,'declaration',function(){return this._decl;},undefined,function(){return{mod:$CCMM$,$t:{t:ClassDeclaration$meta$declaration},$cont:OpenClassOrInterfaceType,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','OpenClassOrInterfaceType','$at','declaration']};});
atr$(OpenClassOrInterfaceType$meta$declaration.$$.prototype,'satisfiedTypes',function(){
return this.declaration.satisfiedTypes;
},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:OpenInterfaceType$meta$declaration}}},$cont:OpenClassOrInterfaceType$meta$declaration,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','OpenClassOrInterfaceType','$at','satisfiedTypes']};});
atr$(OpenClassOrInterfaceType$meta$declaration.$$.prototype,'string',function(){
var s=this.declaration.qualifiedName;
var tps=this.declaration.tipo.$crtmm$.$tp;
if (tps) {
var rtps=this.declaration._targs;
s+="<";
var first=true;
for (var t in tps) {
var rtp=rtps&&rtps[t];
if (first)first=false;else s+=",";
if (rtp===undefined||typeof(rtp)==='string') {
if(typeof(rtp)==='string')t=rtp;
if (t.indexOf('$')>0)t=t.substring(0,t.indexOf('$'));
s+=t;
} else {
s+=_openTypeFromTarg(rtp).string;
}
}
s+=">";
}
return s;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},d:['$','Object','$at','string']};});
function OpenClassType$meta$declaration(openClassType$){OpenClassOrInterfaceType$meta$declaration(openClassType$);}
OpenClassType$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:OpenClassOrInterfaceType$meta$declaration}],$an:function(){return[doc("An open class type."),shared()];},d:['ceylon.language.meta.declaration','OpenClassType']};};
ex$.OpenClassType$meta$declaration=OpenClassType$meta$declaration;function $init$OpenClassType$meta$declaration(){if(OpenClassType$meta$declaration.$$===undefined){initTypeProtoI(OpenClassType$meta$declaration,'ceylon.language.meta.declaration::OpenClassType',$init$OpenClassOrInterfaceType$meta$declaration());
(function(openClassType$){openClassType$.$prop$getDeclaration={$crtmm$:function(){return{mod:$CCMM$,$t:{t:ClassDeclaration$meta$declaration},$cont:OpenClassType$meta$declaration,$an:function(){return[doc("This class declaration."),shared(),actual(),formal()];},d:['ceylon.language.meta.declaration','OpenClassType','$at','declaration']};}};})(OpenClassType$meta$declaration.$$.prototype);}
return OpenClassType$meta$declaration;}
ex$.$init$OpenClassType$meta$declaration=$init$OpenClassType$meta$declaration;$init$OpenClassType$meta$declaration();function OpenInterfaceType$meta$declaration(openInterfaceType$){OpenClassOrInterfaceType$meta$declaration(openInterfaceType$);}
OpenInterfaceType$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:OpenClassOrInterfaceType$meta$declaration}],$an:function(){return[doc("An open interface type."),shared()];},d:['ceylon.language.meta.declaration','OpenInterfaceType']};};
ex$.OpenInterfaceType$meta$declaration=OpenInterfaceType$meta$declaration;function $init$OpenInterfaceType$meta$declaration(){if(OpenInterfaceType$meta$declaration.$$===undefined){initTypeProtoI(OpenInterfaceType$meta$declaration,'ceylon.language.meta.declaration::OpenInterfaceType',$init$OpenClassOrInterfaceType$meta$declaration());
(function(openInterfaceType$){openInterfaceType$.$prop$getDeclaration={$crtmm$:function(){return{mod:$CCMM$,$t:{t:InterfaceDeclaration$meta$declaration},$cont:OpenInterfaceType$meta$declaration,$an:function(){return[doc("This declaration\'s package container."),shared(),actual(),formal()];},d:['ceylon.language.meta.declaration','OpenInterfaceType','$at','declaration']};}};})(OpenInterfaceType$meta$declaration.$$.prototype);}
return OpenInterfaceType$meta$declaration;}
ex$.$init$OpenInterfaceType$meta$declaration=$init$OpenInterfaceType$meta$declaration;$init$OpenInterfaceType$meta$declaration();function OpenType$meta$declaration(openType$){}
OpenType$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,of:[$prop$get$xv$meta$declaration,{t:OpenClassOrInterfaceType$meta$declaration},{t:OpenTypeVariable$meta$declaration},{t:OpenUnion$meta$declaration},{t:OpenIntersection$meta$declaration}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].OpenType.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','OpenType']};};
ex$.OpenType$meta$declaration=OpenType$meta$declaration;function $init$OpenType$meta$declaration(){if(OpenType$meta$declaration.$$===undefined){initTypeProtoI(OpenType$meta$declaration,'ceylon.language.meta.declaration::OpenType');
}
return OpenType$meta$declaration;}
ex$.$init$OpenType$meta$declaration=$init$OpenType$meta$declaration;$init$OpenType$meta$declaration();function OpenTypeVariable$meta$declaration(openTypeVariable$){OpenType$meta$declaration(openTypeVariable$);}
OpenTypeVariable$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:OpenType$meta$declaration}],$an:function(){return[doc("An open type variable."),shared()];},d:['ceylon.language.meta.declaration','OpenTypeVariable']};};
ex$.OpenTypeVariable$meta$declaration=OpenTypeVariable$meta$declaration;function $init$OpenTypeVariable$meta$declaration(){if(OpenTypeVariable$meta$declaration.$$===undefined){initTypeProtoI(OpenTypeVariable$meta$declaration,'ceylon.language.meta.declaration::OpenTypeVariable',$init$OpenType$meta$declaration());
(function(openTypeVariable$){openTypeVariable$.$prop$getDeclaration={$crtmm$:function(){return{mod:$CCMM$,$t:{t:TypeParameter$meta$declaration},$cont:OpenTypeVariable$meta$declaration,$an:function(){return[doc("This type variable\'s type parameter declaration."),shared(),formal()];},d:['ceylon.language.meta.declaration','OpenTypeVariable','$at','declaration']};}};})(OpenTypeVariable$meta$declaration.$$.prototype);}
return OpenTypeVariable$meta$declaration;}
ex$.$init$OpenTypeVariable$meta$declaration=$init$OpenTypeVariable$meta$declaration;$init$OpenTypeVariable$meta$declaration();function OpenUnion$meta$declaration(openUnion$){OpenType$meta$declaration(openUnion$);}
OpenUnion$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:OpenType$meta$declaration}],$an:function(){return[doc("An open union type."),shared()];},d:['ceylon.language.meta.declaration','OpenUnion']};};
ex$.OpenUnion$meta$declaration=OpenUnion$meta$declaration;function $init$OpenUnion$meta$declaration(){if(OpenUnion$meta$declaration.$$===undefined){initTypeProtoI(OpenUnion$meta$declaration,'ceylon.language.meta.declaration::OpenUnion',$init$OpenType$meta$declaration());
(function(openUnion$){openUnion$.$prop$getCaseTypes={$crtmm$:function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:{t:OpenType$meta$declaration}}},$cont:OpenUnion$meta$declaration,$an:function(){return[doc("The list of case types for this open union type."),shared(),formal()];},d:['ceylon.language.meta.declaration','OpenUnion','$at','caseTypes']};}};})(OpenUnion$meta$declaration.$$.prototype);}
return OpenUnion$meta$declaration;}
ex$.$init$OpenUnion$meta$declaration=$init$OpenUnion$meta$declaration;$init$OpenUnion$meta$declaration();function SetterDeclaration$meta$declaration(setterDeclaration$){NestableDeclaration$meta$declaration(setterDeclaration$);}
SetterDeclaration$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:NestableDeclaration$meta$declaration}],$an:function(){return[doc("A setter declaration for a variable `ValueDeclaration`."),shared()];},d:['ceylon.language.meta.declaration','SetterDeclaration']};};
ex$.SetterDeclaration$meta$declaration=SetterDeclaration$meta$declaration;function $init$SetterDeclaration$meta$declaration(){if(SetterDeclaration$meta$declaration.$$===undefined){initTypeProtoI(SetterDeclaration$meta$declaration,'ceylon.language.meta.declaration::SetterDeclaration',$init$NestableDeclaration$meta$declaration());
(function(setterDeclaration$){setterDeclaration$.$prop$getVariable={$crtmm$:function(){return{mod:$CCMM$,$t:{t:ValueDeclaration$meta$declaration},$cont:SetterDeclaration$meta$declaration,$an:function(){return[doc("The variable value this setter is for."),shared(),formal()];},d:['ceylon.language.meta.declaration','SetterDeclaration','$at','variable']};}};atr$(setterDeclaration$,'actual',function(){var setterDeclaration$=this;return setterDeclaration$.variable.actual;},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:SetterDeclaration$meta$declaration,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','SetterDeclaration','$at','actual']};});atr$(setterDeclaration$,'formal',function(){var setterDeclaration$=this;return setterDeclaration$.variable.formal;},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:SetterDeclaration$meta$declaration,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','SetterDeclaration','$at','formal']};});atr$(setterDeclaration$,'$_default',function(){var setterDeclaration$=this;return setterDeclaration$.variable.$_default;},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:SetterDeclaration$meta$declaration,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','SetterDeclaration','$at','default']};});atr$(setterDeclaration$,'shared',function(){var setterDeclaration$=this;return setterDeclaration$.variable.shared;},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:SetterDeclaration$meta$declaration,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','SetterDeclaration','$at','shared']};});atr$(setterDeclaration$,'containingPackage',function(){var setterDeclaration$=this;return setterDeclaration$.variable.containingPackage;},undefined,function(){return{mod:$CCMM$,$t:{t:Package$meta$declaration},$cont:SetterDeclaration$meta$declaration,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','SetterDeclaration','$at','containingPackage']};});atr$(setterDeclaration$,'containingModule',function(){var setterDeclaration$=this;return setterDeclaration$.variable.containingModule;},undefined,function(){return{mod:$CCMM$,$t:{t:Module$meta$declaration},$cont:SetterDeclaration$meta$declaration,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','SetterDeclaration','$at','containingModule']};});atr$(setterDeclaration$,'container',function(){var setterDeclaration$=this;return setterDeclaration$.variable.container;},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:NestableDeclaration$meta$declaration},{t:Package$meta$declaration}]},$cont:SetterDeclaration$meta$declaration,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','SetterDeclaration','$at','container']};});atr$(setterDeclaration$,'toplevel',function(){var setterDeclaration$=this;return setterDeclaration$.variable.toplevel;},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:SetterDeclaration$meta$declaration,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','SetterDeclaration','$at','toplevel']};});})(SetterDeclaration$meta$declaration.$$.prototype);}
return SetterDeclaration$meta$declaration;}
ex$.$init$SetterDeclaration$meta$declaration=$init$SetterDeclaration$meta$declaration;$init$SetterDeclaration$meta$declaration();function TypeParameter$meta$declaration(typeParameter$){Declaration$meta$declaration(typeParameter$);}
TypeParameter$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:Declaration$meta$declaration}],$an:function(){return[doc("A type parameter declaration."),shared()];},d:['ceylon.language.meta.declaration','TypeParameter']};};
ex$.TypeParameter$meta$declaration=TypeParameter$meta$declaration;function $init$TypeParameter$meta$declaration(){if(TypeParameter$meta$declaration.$$===undefined){initTypeProtoI(TypeParameter$meta$declaration,'ceylon.language.meta.declaration::TypeParameter',$init$Declaration$meta$declaration());
(function(typeParameter$){typeParameter$.$prop$getContainer={$crtmm$:function(){return{mod:$CCMM$,$t:{t:NestableDeclaration$meta$declaration},$cont:TypeParameter$meta$declaration,$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].TypeParameter.$at.container.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','TypeParameter','$at','container']};}};typeParameter$.$prop$getDefaulted={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:TypeParameter$meta$declaration,$an:function(){return[doc("True if this type parameter has a default type argument and can be omitted."),shared(),formal()];},d:['ceylon.language.meta.declaration','TypeParameter','$at','defaulted']};}};typeParameter$.$prop$getDefaultTypeArgument={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:OpenType$meta$declaration}]},$cont:TypeParameter$meta$declaration,$an:function(){return[doc("This type parameter\'s default type argument, if it has one."),shared(),formal()];},d:['ceylon.language.meta.declaration','TypeParameter','$at','defaultTypeArgument']};}};typeParameter$.$prop$getVariance={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Variance$meta$declaration},$cont:TypeParameter$meta$declaration,$an:function(){return[doc("This type parameter\'s variance, as defined by `in` or `out` keywords."),shared(),formal()];},d:['ceylon.language.meta.declaration','TypeParameter','$at','variance']};}};typeParameter$.$prop$getSatisfiedTypes={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:OpenType$meta$declaration}}},$cont:TypeParameter$meta$declaration,$an:function(){return[doc("The `satisfies` upper bounds for this type parameter."),shared(),formal()];},d:['ceylon.language.meta.declaration','TypeParameter','$at','satisfiedTypes']};}};typeParameter$.$prop$getCaseTypes={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:OpenType$meta$declaration}}},$cont:TypeParameter$meta$declaration,$an:function(){return[doc("The `of` enumerated bounds for this type parameter."),shared(),formal()];},d:['ceylon.language.meta.declaration','TypeParameter','$at','caseTypes']};}};})(TypeParameter$meta$declaration.$$.prototype);}
return TypeParameter$meta$declaration;}
ex$.$init$TypeParameter$meta$declaration=$init$TypeParameter$meta$declaration;$init$TypeParameter$meta$declaration();function TypedDeclaration$meta$declaration(typedDeclaration$){}
TypedDeclaration$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,$an:function(){return[doc("Declaration which has an open type."),shared()];},d:['ceylon.language.meta.declaration','TypedDeclaration']};};
ex$.TypedDeclaration$meta$declaration=TypedDeclaration$meta$declaration;function $init$TypedDeclaration$meta$declaration(){if(TypedDeclaration$meta$declaration.$$===undefined){initTypeProtoI(TypedDeclaration$meta$declaration,'ceylon.language.meta.declaration::TypedDeclaration');
(function(typedDeclaration$){typedDeclaration$.$prop$getOpenType={$crtmm$:function(){return{mod:$CCMM$,$t:{t:OpenType$meta$declaration},$cont:TypedDeclaration$meta$declaration,$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].TypedDeclaration.$at.openType.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','TypedDeclaration','$at','openType']};}};})(TypedDeclaration$meta$declaration.$$.prototype);}
return TypedDeclaration$meta$declaration;}
ex$.$init$TypedDeclaration$meta$declaration=$init$TypedDeclaration$meta$declaration;$init$TypedDeclaration$meta$declaration();function $xv$meta$declaration(){var nothingType$=new $xv$meta$declaration.$$;OpenType$meta$declaration(nothingType$);return nothingType$;
};$xv$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:OpenType$meta$declaration}],$an:function(){return[doc("The singleton open type for [[Nothing|ceylon.language::nothing]]."),shared()];},d:['ceylon.language.meta.declaration','nothingType']};};function $init$$xv$meta$declaration(){if($xv$meta$declaration.$$===undefined){initTypeProto($xv$meta$declaration,'ceylon.language.meta.declaration::nothingType',Basic,$init$OpenType$meta$declaration());
(function(nothingType$){atr$(nothingType$,'string',function(){var nothingType$=this;return "Nothing";},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$xv$meta$declaration,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','nothingType','$at','string']};});})($xv$meta$declaration.$$.prototype);}
return $xv$meta$declaration;}
ex$.$init$$xv$meta$declaration=$init$$xv$meta$declaration;$init$$xv$meta$declaration();var $xw$meta$declaration;function getNothingType$meta$declaration(){if($xw$meta$declaration===undefined){$xw$meta$declaration=$init$$xv$meta$declaration()();$xw$meta$declaration.$crtmm$=getNothingType$meta$declaration.$crtmm$;}
return $xw$meta$declaration;}
ex$.getNothingType$meta$declaration=getNothingType$meta$declaration;getNothingType$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$xv$meta$declaration},$an:function(){return[doc("The singleton open type for [[Nothing|ceylon.language::nothing]]."),shared()];},d:['ceylon.language.meta.declaration','nothingType']};};$prop$getNothingType$meta$declaration={get:getNothingType$meta$declaration,$crtmm$:getNothingType$meta$declaration.$crtmm$};get$xv$meta$declaration=getNothingType$meta$declaration;$prop$get$xv$meta$declaration=getNothingType$meta$declaration;ex$.$prop$getNothingType$meta$declaration=$prop$getNothingType$meta$declaration;function AliasDeclaration$meta$declaration(aliasDeclaration$){NestableDeclaration$meta$declaration(aliasDeclaration$);GenericDeclaration$meta$declaration(aliasDeclaration$);}
AliasDeclaration$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:NestableDeclaration$meta$declaration},{t:GenericDeclaration$meta$declaration}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].AliasDeclaration.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','AliasDeclaration']};};
ex$.AliasDeclaration$meta$declaration=AliasDeclaration$meta$declaration;function $init$AliasDeclaration$meta$declaration(){if(AliasDeclaration$meta$declaration.$$===undefined){initTypeProtoI(AliasDeclaration$meta$declaration,'ceylon.language.meta.declaration::AliasDeclaration',$init$NestableDeclaration$meta$declaration(),$init$GenericDeclaration$meta$declaration());
(function(aliasDeclaration$){aliasDeclaration$.$prop$getExtendedType={$crtmm$:function(){return{mod:$CCMM$,$t:{t:OpenType$meta$declaration},$cont:AliasDeclaration$meta$declaration,$an:function(){return[doc("The open type that is substituted by this type alias."),shared(),formal()];},d:['ceylon.language.meta.declaration','AliasDeclaration','$at','extendedType']};}};})(AliasDeclaration$meta$declaration.$$.prototype);}
return AliasDeclaration$meta$declaration;}
ex$.$init$AliasDeclaration$meta$declaration=$init$AliasDeclaration$meta$declaration;$init$AliasDeclaration$meta$declaration();function Variance$meta$declaration(variance$){}
Variance$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,of:[$prop$get$xx$meta$declaration,$prop$get$xy$meta$declaration,$prop$get$xz$meta$declaration],$an:function(){return[doc("Variance information."),shared()];},d:['ceylon.language.meta.declaration','Variance']};};
ex$.Variance$meta$declaration=Variance$meta$declaration;function $init$Variance$meta$declaration(){if(Variance$meta$declaration.$$===undefined){initTypeProtoI(Variance$meta$declaration,'ceylon.language.meta.declaration::Variance');
}
return Variance$meta$declaration;}
ex$.$init$Variance$meta$declaration=$init$Variance$meta$declaration;$init$Variance$meta$declaration();function $xx$meta$declaration(){var invariant$=new $xx$meta$declaration.$$;Variance$meta$declaration(invariant$);return invariant$;
};$xx$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:Variance$meta$declaration}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].invariant.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','invariant']};};function $init$$xx$meta$declaration(){if($xx$meta$declaration.$$===undefined){initTypeProto($xx$meta$declaration,'ceylon.language.meta.declaration::invariant',Basic,$init$Variance$meta$declaration());
(function(invariant$){atr$(invariant$,'string',function(){var invariant$=this;return "Invariant";},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$xx$meta$declaration,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','invariant','$at','string']};});})($xx$meta$declaration.$$.prototype);}
return $xx$meta$declaration;}
ex$.$init$$xx$meta$declaration=$init$$xx$meta$declaration;$init$$xx$meta$declaration();var $y0$meta$declaration;function getInvariant$meta$declaration(){if($y0$meta$declaration===undefined){$y0$meta$declaration=$init$$xx$meta$declaration()();$y0$meta$declaration.$crtmm$=getInvariant$meta$declaration.$crtmm$;}
return $y0$meta$declaration;}
ex$.getInvariant$meta$declaration=getInvariant$meta$declaration;getInvariant$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$xx$meta$declaration},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].invariant.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','invariant']};};$prop$getInvariant$meta$declaration={get:getInvariant$meta$declaration,$crtmm$:getInvariant$meta$declaration.$crtmm$};get$xx$meta$declaration=getInvariant$meta$declaration;$prop$get$xx$meta$declaration=getInvariant$meta$declaration;ex$.$prop$getInvariant$meta$declaration=$prop$getInvariant$meta$declaration;function $xy$meta$declaration(){var covariant$=new $xy$meta$declaration.$$;Variance$meta$declaration(covariant$);return covariant$;
};$xy$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:Variance$meta$declaration}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].covariant.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','covariant']};};function $init$$xy$meta$declaration(){if($xy$meta$declaration.$$===undefined){initTypeProto($xy$meta$declaration,'ceylon.language.meta.declaration::covariant',Basic,$init$Variance$meta$declaration());
(function(covariant$){atr$(covariant$,'string',function(){var covariant$=this;return "Covariant";},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$xy$meta$declaration,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','covariant','$at','string']};});})($xy$meta$declaration.$$.prototype);}
return $xy$meta$declaration;}
ex$.$init$$xy$meta$declaration=$init$$xy$meta$declaration;$init$$xy$meta$declaration();var $y1$meta$declaration;function getCovariant$meta$declaration(){if($y1$meta$declaration===undefined){$y1$meta$declaration=$init$$xy$meta$declaration()();$y1$meta$declaration.$crtmm$=getCovariant$meta$declaration.$crtmm$;}
return $y1$meta$declaration;}
ex$.getCovariant$meta$declaration=getCovariant$meta$declaration;getCovariant$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$xy$meta$declaration},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].covariant.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','covariant']};};$prop$getCovariant$meta$declaration={get:getCovariant$meta$declaration,$crtmm$:getCovariant$meta$declaration.$crtmm$};get$xy$meta$declaration=getCovariant$meta$declaration;$prop$get$xy$meta$declaration=getCovariant$meta$declaration;ex$.$prop$getCovariant$meta$declaration=$prop$getCovariant$meta$declaration;function $xz$meta$declaration(){var contravariant$=new $xz$meta$declaration.$$;Variance$meta$declaration(contravariant$);return contravariant$;
};$xz$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:Variance$meta$declaration}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].contravariant.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','contravariant']};};function $init$$xz$meta$declaration(){if($xz$meta$declaration.$$===undefined){initTypeProto($xz$meta$declaration,'ceylon.language.meta.declaration::contravariant',Basic,$init$Variance$meta$declaration());
(function(contravariant$){atr$(contravariant$,'string',function(){var contravariant$=this;return "Contravariant";},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$xz$meta$declaration,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','contravariant','$at','string']};});})($xz$meta$declaration.$$.prototype);}
return $xz$meta$declaration;}
ex$.$init$$xz$meta$declaration=$init$$xz$meta$declaration;$init$$xz$meta$declaration();var $y2$meta$declaration;function getContravariant$meta$declaration(){if($y2$meta$declaration===undefined){$y2$meta$declaration=$init$$xz$meta$declaration()();$y2$meta$declaration.$crtmm$=getContravariant$meta$declaration.$crtmm$;}
return $y2$meta$declaration;}
ex$.getContravariant$meta$declaration=getContravariant$meta$declaration;getContravariant$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$xz$meta$declaration},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].contravariant.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','contravariant']};};$prop$getContravariant$meta$declaration={get:getContravariant$meta$declaration,$crtmm$:getContravariant$meta$declaration.$crtmm$};get$xz$meta$declaration=getContravariant$meta$declaration;$prop$get$xz$meta$declaration=getContravariant$meta$declaration;ex$.$prop$getContravariant$meta$declaration=$prop$getContravariant$meta$declaration;function ModelError$meta$declaration($y3,$y4,modelError$){$init$ModelError$meta$declaration();if(modelError$===undefined)modelError$=new ModelError$meta$declaration.$$;
if($y3===undefined){$y3=null;}
modelError$.$y3_=$y3;if($y4===undefined){$y4=null;}
modelError$.$y4_=$y4;$_Error(modelError$.$y3,modelError$.$y4,modelError$);return modelError$;}
ModelError$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,'super':{t:$_Error},$ps:[{$nm:'description',$mt:'prm',$def:1,$t:{t:'u',l:[{t:Null},{t:$_String}]},$an:function(){return[];}},{$nm:'cause',$mt:'prm',$def:1,$t:{t:'u',l:[{t:Null},{t:Throwable}]},$an:function(){return[];}}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ModelError.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','ModelError']};};
ex$.ModelError$meta$declaration=ModelError$meta$declaration;function $init$ModelError$meta$declaration(){if(ModelError$meta$declaration.$$===undefined){initTypeProto(ModelError$meta$declaration,'ceylon.language.meta.declaration::ModelError',$init$$_Error());
(function(modelError$){atr$(modelError$,'$y3',function(){return this.$y3_;},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:$_String}]},$cont:ModelError$meta$declaration,d:['ceylon.language.meta.declaration','ModelError','$at','description$30i5d2']};});atr$(modelError$,'$y4',function(){return this.$y4_;},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Throwable}]},$cont:ModelError$meta$declaration,d:['ceylon.language.meta.declaration','ModelError','$at','cause$bteyyd']};});})(ModelError$meta$declaration.$$.prototype);}
return ModelError$meta$declaration;}
ex$.$init$ModelError$meta$declaration=$init$ModelError$meta$declaration;$init$ModelError$meta$declaration();
function AnnotationAnnotation(annotationAnnotation$){$init$AnnotationAnnotation();if(annotationAnnotation$===undefined)annotationAnnotation$=new AnnotationAnnotation.$$;
annotationAnnotation$.$$targs$$={Value$OptionalAnnotation:{t:AnnotationAnnotation},ProgramElement$OptionalAnnotation:{t:'u',l:[{t:ClassDeclaration$meta$declaration},{t:FunctionDeclaration$meta$declaration}]}};OptionalAnnotation({Value$OptionalAnnotation:{t:AnnotationAnnotation},ProgramElement$OptionalAnnotation:{t:'u',l:[{t:ClassDeclaration$meta$declaration},{t:FunctionDeclaration$meta$declaration}]}},annotationAnnotation$);add_type_arg(annotationAnnotation$,'Value$OptionalAnnotation',{t:AnnotationAnnotation});return annotationAnnotation$;}
AnnotationAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],satisfies:[{t:OptionalAnnotation,a:{Value$OptionalAnnotation:{t:AnnotationAnnotation},ProgramElement$OptionalAnnotation:{t:'u',l:[{t:ClassDeclaration$meta$declaration},{t:FunctionDeclaration$meta$declaration}]}}}],$an:function(){return[doc("The annotation class for [[annotation]]."),shared(),$_final(),annotation()];},d:['$','AnnotationAnnotation']};};
ex$.AnnotationAnnotation=AnnotationAnnotation;function $init$AnnotationAnnotation(){if(AnnotationAnnotation.$$===undefined){initTypeProto(AnnotationAnnotation,'ceylon.language::AnnotationAnnotation',Basic,$init$OptionalAnnotation());
}
return AnnotationAnnotation;}
ex$.$init$AnnotationAnnotation=$init$AnnotationAnnotation;$init$AnnotationAnnotation();var annotation=function (){return AnnotationAnnotation();};annotation.$crtmm$=function(){return{mod:$CCMM$,$t:{t:AnnotationAnnotation},$ps:[],$an:function(){return[doc($CCMM$['ceylon.language'].annotation.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Annotation)].reifyCeylonType({t:InterfaceDeclaration$meta$declaration})),shared(),annotation()];},d:['$','annotation']};};
ex$.annotation=annotation;function SharedAnnotation(sharedAnnotation$){$init$SharedAnnotation();if(sharedAnnotation$===undefined)sharedAnnotation$=new SharedAnnotation.$$;
sharedAnnotation$.$$targs$$={Value$OptionalAnnotation:{t:SharedAnnotation},ProgramElement$OptionalAnnotation:{t:'u',l:[{t:FunctionOrValueDeclaration$meta$declaration},{t:ClassOrInterfaceDeclaration$meta$declaration},{t:Package$meta$declaration},{t:Import$meta$declaration}]}};OptionalAnnotation({Value$OptionalAnnotation:{t:SharedAnnotation},ProgramElement$OptionalAnnotation:{t:'u',l:[{t:FunctionOrValueDeclaration$meta$declaration},{t:ClassOrInterfaceDeclaration$meta$declaration},{t:Package$meta$declaration},{t:Import$meta$declaration}]}},sharedAnnotation$);add_type_arg(sharedAnnotation$,'Value$OptionalAnnotation',{t:SharedAnnotation});return sharedAnnotation$;}
SharedAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],satisfies:[{t:OptionalAnnotation,a:{Value$OptionalAnnotation:{t:SharedAnnotation},ProgramElement$OptionalAnnotation:{t:'u',l:[{t:FunctionOrValueDeclaration$meta$declaration},{t:ClassOrInterfaceDeclaration$meta$declaration},{t:Package$meta$declaration},{t:Import$meta$declaration}]}}}],$an:function(){return[doc("The annotation class for [[shared]]."),shared(),$_final(),annotation()];},d:['$','SharedAnnotation']};};
ex$.SharedAnnotation=SharedAnnotation;function $init$SharedAnnotation(){if(SharedAnnotation.$$===undefined){initTypeProto(SharedAnnotation,'ceylon.language::SharedAnnotation',Basic,$init$OptionalAnnotation());
}
return SharedAnnotation;}
ex$.$init$SharedAnnotation=$init$SharedAnnotation;$init$SharedAnnotation();var shared=function (){return SharedAnnotation();};shared.$crtmm$=function(){return{mod:$CCMM$,$t:{t:SharedAnnotation},$ps:[],$an:function(){return[doc($CCMM$['ceylon.language'].shared.$an.doc[0]),shared(),annotation()];},d:['$','shared']};};
ex$.shared=shared;function VariableAnnotation(variableAnnotation$){$init$VariableAnnotation();if(variableAnnotation$===undefined)variableAnnotation$=new VariableAnnotation.$$;
variableAnnotation$.$$targs$$={Value$OptionalAnnotation:{t:VariableAnnotation},ProgramElement$OptionalAnnotation:{t:ValueDeclaration$meta$declaration}};OptionalAnnotation({Value$OptionalAnnotation:{t:VariableAnnotation},ProgramElement$OptionalAnnotation:{t:ValueDeclaration$meta$declaration}},variableAnnotation$);add_type_arg(variableAnnotation$,'Value$OptionalAnnotation',{t:VariableAnnotation});add_type_arg(variableAnnotation$,'ProgramElement$OptionalAnnotation',{t:ValueDeclaration$meta$declaration});return variableAnnotation$;}
VariableAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],satisfies:[{t:OptionalAnnotation,a:{Value$OptionalAnnotation:{t:VariableAnnotation},ProgramElement$OptionalAnnotation:{t:ValueDeclaration$meta$declaration}}}],$an:function(){return[doc("The annotation class for [[variable]]."),shared(),$_final(),annotation()];},d:['$','VariableAnnotation']};};
ex$.VariableAnnotation=VariableAnnotation;function $init$VariableAnnotation(){if(VariableAnnotation.$$===undefined){initTypeProto(VariableAnnotation,'ceylon.language::VariableAnnotation',Basic,$init$OptionalAnnotation());
}
return VariableAnnotation;}
ex$.$init$VariableAnnotation=$init$VariableAnnotation;$init$VariableAnnotation();var variable=function (){return VariableAnnotation();};variable.$crtmm$=function(){return{mod:$CCMM$,$t:{t:VariableAnnotation},$ps:[],$an:function(){return[doc($CCMM$['ceylon.language'].variable.$an.doc[0]),shared(),annotation()];},d:['$','variable']};};
ex$.variable=variable;function AbstractAnnotation(abstractAnnotation$){$init$AbstractAnnotation();if(abstractAnnotation$===undefined)abstractAnnotation$=new AbstractAnnotation.$$;
abstractAnnotation$.$$targs$$={Value$OptionalAnnotation:{t:AbstractAnnotation},ProgramElement$OptionalAnnotation:{t:ClassDeclaration$meta$declaration}};OptionalAnnotation({Value$OptionalAnnotation:{t:AbstractAnnotation},ProgramElement$OptionalAnnotation:{t:ClassDeclaration$meta$declaration}},abstractAnnotation$);add_type_arg(abstractAnnotation$,'Value$OptionalAnnotation',{t:AbstractAnnotation});add_type_arg(abstractAnnotation$,'ProgramElement$OptionalAnnotation',{t:ClassDeclaration$meta$declaration});return abstractAnnotation$;}
AbstractAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],satisfies:[{t:OptionalAnnotation,a:{Value$OptionalAnnotation:{t:AbstractAnnotation},ProgramElement$OptionalAnnotation:{t:ClassDeclaration$meta$declaration}}}],$an:function(){return[doc("The annotation class for [[abstract]]."),shared(),$_final(),annotation()];},d:['$','AbstractAnnotation']};};
ex$.AbstractAnnotation=AbstractAnnotation;function $init$AbstractAnnotation(){if(AbstractAnnotation.$$===undefined){initTypeProto(AbstractAnnotation,'ceylon.language::AbstractAnnotation',Basic,$init$OptionalAnnotation());
}
return AbstractAnnotation;}
ex$.$init$AbstractAnnotation=$init$AbstractAnnotation;$init$AbstractAnnotation();var abstract=function (){return AbstractAnnotation();};abstract.$crtmm$=function(){return{mod:$CCMM$,$t:{t:AbstractAnnotation},$ps:[],$an:function(){return[doc($CCMM$['ceylon.language'].abstract.$an.doc[0]),shared(),annotation()];},d:['$','abstract']};};
ex$.abstract=abstract;function FinalAnnotation(finalAnnotation$){$init$FinalAnnotation();if(finalAnnotation$===undefined)finalAnnotation$=new FinalAnnotation.$$;
finalAnnotation$.$$targs$$={Value$OptionalAnnotation:{t:FinalAnnotation},ProgramElement$OptionalAnnotation:{t:ClassDeclaration$meta$declaration}};OptionalAnnotation({Value$OptionalAnnotation:{t:FinalAnnotation},ProgramElement$OptionalAnnotation:{t:ClassDeclaration$meta$declaration}},finalAnnotation$);add_type_arg(finalAnnotation$,'Value$OptionalAnnotation',{t:FinalAnnotation});add_type_arg(finalAnnotation$,'ProgramElement$OptionalAnnotation',{t:ClassDeclaration$meta$declaration});return finalAnnotation$;}
FinalAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],satisfies:[{t:OptionalAnnotation,a:{Value$OptionalAnnotation:{t:FinalAnnotation},ProgramElement$OptionalAnnotation:{t:ClassDeclaration$meta$declaration}}}],$an:function(){return[doc("The annotation class for [[final]]."),shared(),$_final(),annotation()];},d:['$','FinalAnnotation']};};
ex$.FinalAnnotation=FinalAnnotation;function $init$FinalAnnotation(){if(FinalAnnotation.$$===undefined){initTypeProto(FinalAnnotation,'ceylon.language::FinalAnnotation',Basic,$init$OptionalAnnotation());
}
return FinalAnnotation;}
ex$.$init$FinalAnnotation=$init$FinalAnnotation;$init$FinalAnnotation();var $_final=function (){return FinalAnnotation();};$_final.$crtmm$=function(){return{mod:$CCMM$,$t:{t:FinalAnnotation},$ps:[],$an:function(){return[doc($CCMM$['ceylon.language'].final.$an.doc[0]),shared(),annotation()];},d:['$','final']};};
ex$.$_final=$_final;function ActualAnnotation(actualAnnotation$){$init$ActualAnnotation();if(actualAnnotation$===undefined)actualAnnotation$=new ActualAnnotation.$$;
actualAnnotation$.$$targs$$={Value$OptionalAnnotation:{t:ActualAnnotation},ProgramElement$OptionalAnnotation:{t:'u',l:[{t:FunctionOrValueDeclaration$meta$declaration},{t:ClassOrInterfaceDeclaration$meta$declaration}]}};OptionalAnnotation({Value$OptionalAnnotation:{t:ActualAnnotation},ProgramElement$OptionalAnnotation:{t:'u',l:[{t:FunctionOrValueDeclaration$meta$declaration},{t:ClassOrInterfaceDeclaration$meta$declaration}]}},actualAnnotation$);add_type_arg(actualAnnotation$,'Value$OptionalAnnotation',{t:ActualAnnotation});return actualAnnotation$;}
ActualAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],satisfies:[{t:OptionalAnnotation,a:{Value$OptionalAnnotation:{t:ActualAnnotation},ProgramElement$OptionalAnnotation:{t:'u',l:[{t:FunctionOrValueDeclaration$meta$declaration},{t:ClassOrInterfaceDeclaration$meta$declaration}]}}}],$an:function(){return[doc("The annotation class for [[actual]]."),shared(),$_final(),annotation()];},d:['$','ActualAnnotation']};};
ex$.ActualAnnotation=ActualAnnotation;function $init$ActualAnnotation(){if(ActualAnnotation.$$===undefined){initTypeProto(ActualAnnotation,'ceylon.language::ActualAnnotation',Basic,$init$OptionalAnnotation());
}
return ActualAnnotation;}
ex$.$init$ActualAnnotation=$init$ActualAnnotation;$init$ActualAnnotation();var actual=function (){return ActualAnnotation();};actual.$crtmm$=function(){return{mod:$CCMM$,$t:{t:ActualAnnotation},$ps:[],$an:function(){return[doc($CCMM$['ceylon.language'].actual.$an.doc[0]),shared(),annotation()];},d:['$','actual']};};
ex$.actual=actual;function FormalAnnotation(formalAnnotation$){$init$FormalAnnotation();if(formalAnnotation$===undefined)formalAnnotation$=new FormalAnnotation.$$;
formalAnnotation$.$$targs$$={Value$OptionalAnnotation:{t:FormalAnnotation},ProgramElement$OptionalAnnotation:{t:'u',l:[{t:FunctionOrValueDeclaration$meta$declaration},{t:ClassOrInterfaceDeclaration$meta$declaration}]}};OptionalAnnotation({Value$OptionalAnnotation:{t:FormalAnnotation},ProgramElement$OptionalAnnotation:{t:'u',l:[{t:FunctionOrValueDeclaration$meta$declaration},{t:ClassOrInterfaceDeclaration$meta$declaration}]}},formalAnnotation$);add_type_arg(formalAnnotation$,'Value$OptionalAnnotation',{t:FormalAnnotation});return formalAnnotation$;}
FormalAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],satisfies:[{t:OptionalAnnotation,a:{Value$OptionalAnnotation:{t:FormalAnnotation},ProgramElement$OptionalAnnotation:{t:'u',l:[{t:FunctionOrValueDeclaration$meta$declaration},{t:ClassOrInterfaceDeclaration$meta$declaration}]}}}],$an:function(){return[doc("The annotation class for [[formal]]."),shared(),$_final(),annotation()];},d:['$','FormalAnnotation']};};
ex$.FormalAnnotation=FormalAnnotation;function $init$FormalAnnotation(){if(FormalAnnotation.$$===undefined){initTypeProto(FormalAnnotation,'ceylon.language::FormalAnnotation',Basic,$init$OptionalAnnotation());
}
return FormalAnnotation;}
ex$.$init$FormalAnnotation=$init$FormalAnnotation;$init$FormalAnnotation();var formal=function (){return FormalAnnotation();};formal.$crtmm$=function(){return{mod:$CCMM$,$t:{t:FormalAnnotation},$ps:[],$an:function(){return[doc($CCMM$['ceylon.language'].formal.$an.doc[0]),shared(),annotation()];},d:['$','formal']};};
ex$.formal=formal;function DefaultAnnotation(defaultAnnotation$){$init$DefaultAnnotation();if(defaultAnnotation$===undefined)defaultAnnotation$=new DefaultAnnotation.$$;
defaultAnnotation$.$$targs$$={Value$OptionalAnnotation:{t:DefaultAnnotation},ProgramElement$OptionalAnnotation:{t:'u',l:[{t:FunctionOrValueDeclaration$meta$declaration},{t:ClassOrInterfaceDeclaration$meta$declaration}]}};OptionalAnnotation({Value$OptionalAnnotation:{t:DefaultAnnotation},ProgramElement$OptionalAnnotation:{t:'u',l:[{t:FunctionOrValueDeclaration$meta$declaration},{t:ClassOrInterfaceDeclaration$meta$declaration}]}},defaultAnnotation$);add_type_arg(defaultAnnotation$,'Value$OptionalAnnotation',{t:DefaultAnnotation});return defaultAnnotation$;}
DefaultAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],satisfies:[{t:OptionalAnnotation,a:{Value$OptionalAnnotation:{t:DefaultAnnotation},ProgramElement$OptionalAnnotation:{t:'u',l:[{t:FunctionOrValueDeclaration$meta$declaration},{t:ClassOrInterfaceDeclaration$meta$declaration}]}}}],$an:function(){return[doc("The annotation class for [[default]]."),shared(),$_final(),annotation()];},d:['$','DefaultAnnotation']};};
ex$.DefaultAnnotation=DefaultAnnotation;function $init$DefaultAnnotation(){if(DefaultAnnotation.$$===undefined){initTypeProto(DefaultAnnotation,'ceylon.language::DefaultAnnotation',Basic,$init$OptionalAnnotation());
}
return DefaultAnnotation;}
ex$.$init$DefaultAnnotation=$init$DefaultAnnotation;$init$DefaultAnnotation();var $_default=function (){return DefaultAnnotation();};$_default.$crtmm$=function(){return{mod:$CCMM$,$t:{t:DefaultAnnotation},$ps:[],$an:function(){return[doc($CCMM$['ceylon.language'].default.$an.doc[0]),shared(),annotation()];},d:['$','default']};};
ex$.$_default=$_default;function LateAnnotation(lateAnnotation$){$init$LateAnnotation();if(lateAnnotation$===undefined)lateAnnotation$=new LateAnnotation.$$;
lateAnnotation$.$$targs$$={Value$OptionalAnnotation:{t:LateAnnotation},ProgramElement$OptionalAnnotation:{t:ValueDeclaration$meta$declaration}};OptionalAnnotation({Value$OptionalAnnotation:{t:LateAnnotation},ProgramElement$OptionalAnnotation:{t:ValueDeclaration$meta$declaration}},lateAnnotation$);add_type_arg(lateAnnotation$,'Value$OptionalAnnotation',{t:LateAnnotation});add_type_arg(lateAnnotation$,'ProgramElement$OptionalAnnotation',{t:ValueDeclaration$meta$declaration});return lateAnnotation$;}
LateAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],satisfies:[{t:OptionalAnnotation,a:{Value$OptionalAnnotation:{t:LateAnnotation},ProgramElement$OptionalAnnotation:{t:ValueDeclaration$meta$declaration}}}],$an:function(){return[doc("The annotation class for [[late]]."),shared(),$_final(),annotation()];},d:['$','LateAnnotation']};};
ex$.LateAnnotation=LateAnnotation;function $init$LateAnnotation(){if(LateAnnotation.$$===undefined){initTypeProto(LateAnnotation,'ceylon.language::LateAnnotation',Basic,$init$OptionalAnnotation());
}
return LateAnnotation;}
ex$.$init$LateAnnotation=$init$LateAnnotation;$init$LateAnnotation();var late=function (){return LateAnnotation();};late.$crtmm$=function(){return{mod:$CCMM$,$t:{t:LateAnnotation},$ps:[],$an:function(){return[doc($CCMM$['ceylon.language'].late.$an.doc[0]),shared(),annotation()];},d:['$','late']};};
ex$.late=late;function NativeAnnotation(nativeAnnotation$){$init$NativeAnnotation();if(nativeAnnotation$===undefined)nativeAnnotation$=new NativeAnnotation.$$;
nativeAnnotation$.$$targs$$={Value$OptionalAnnotation:{t:NativeAnnotation},ProgramElement$OptionalAnnotation:{t:Annotated}};OptionalAnnotation({Value$OptionalAnnotation:{t:NativeAnnotation},ProgramElement$OptionalAnnotation:{t:Annotated}},nativeAnnotation$);add_type_arg(nativeAnnotation$,'Value$OptionalAnnotation',{t:NativeAnnotation});add_type_arg(nativeAnnotation$,'ProgramElement$OptionalAnnotation',{t:Annotated});return nativeAnnotation$;}
NativeAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],satisfies:[{t:OptionalAnnotation,a:{Value$OptionalAnnotation:{t:NativeAnnotation},ProgramElement$OptionalAnnotation:{t:Annotated}}}],$an:function(){return[doc("The annotation class for [[native]]."),shared(),$_final(),annotation()];},d:['$','NativeAnnotation']};};
ex$.NativeAnnotation=NativeAnnotation;function $init$NativeAnnotation(){if(NativeAnnotation.$$===undefined){initTypeProto(NativeAnnotation,'ceylon.language::NativeAnnotation',Basic,$init$OptionalAnnotation());
}
return NativeAnnotation;}
ex$.$init$NativeAnnotation=$init$NativeAnnotation;$init$NativeAnnotation();var $_native=function (){return NativeAnnotation();};$_native.$crtmm$=function(){return{mod:$CCMM$,$t:{t:NativeAnnotation},$ps:[],$an:function(){return[doc($CCMM$['ceylon.language'].native.$an.doc[0]),shared(),annotation()];},d:['$','native']};};
ex$.$_native=$_native;function DocAnnotation(description,docAnnotation$){$init$DocAnnotation();if(docAnnotation$===undefined)docAnnotation$=new DocAnnotation.$$;
docAnnotation$.$$targs$$={Value$OptionalAnnotation:{t:DocAnnotation},ProgramElement$OptionalAnnotation:{t:Annotated}};docAnnotation$.description_=description;OptionalAnnotation({Value$OptionalAnnotation:{t:DocAnnotation},ProgramElement$OptionalAnnotation:{t:Annotated}},docAnnotation$);add_type_arg(docAnnotation$,'Value$OptionalAnnotation',{t:DocAnnotation});add_type_arg(docAnnotation$,'ProgramElement$OptionalAnnotation',{t:Annotated});return docAnnotation$;}
DocAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[{$nm:'description',$mt:'prm',$t:{t:$_String},$an:function(){return[doc("Documentation, in Markdown syntax, about the annotated element"),shared()];}}],satisfies:[{t:OptionalAnnotation,a:{Value$OptionalAnnotation:{t:DocAnnotation},ProgramElement$OptionalAnnotation:{t:Annotated}}}],$an:function(){return[doc("The annotation class for the [[doc]] annotation."),shared(),$_final(),annotation()];},d:['$','DocAnnotation']};};
ex$.DocAnnotation=DocAnnotation;function $init$DocAnnotation(){if(DocAnnotation.$$===undefined){initTypeProto(DocAnnotation,'ceylon.language::DocAnnotation',Basic,$init$OptionalAnnotation());
(function(docAnnotation$){atr$(docAnnotation$,'description',function(){return this.description_;},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:DocAnnotation,$an:function(){return[doc("Documentation, in Markdown syntax, about the annotated element"),shared()];},d:['$','DocAnnotation','$at','description']};});})(DocAnnotation.$$.prototype);}
return DocAnnotation;}
ex$.$init$DocAnnotation=$init$DocAnnotation;$init$DocAnnotation();var doc=function ($y5){return DocAnnotation($y5);};doc.$crtmm$=function(){return{mod:$CCMM$,$t:{t:DocAnnotation},$ps:[{$nm:'description',$mt:'prm',$t:{t:$_String},$an:function(){return[doc("Documentation, in Markdown syntax, about the annotated element")];}}],$an:function(){return[doc($CCMM$['ceylon.language'].doc.$an.doc[0]),shared(),annotation()];},d:['$','doc']};};
ex$.doc=doc;function SeeAnnotation(programElements,seeAnnotation$){$init$SeeAnnotation();if(seeAnnotation$===undefined)seeAnnotation$=new SeeAnnotation.$$;
seeAnnotation$.$$targs$$={Value$SequencedAnnotation:{t:SeeAnnotation},ProgramElement$SequencedAnnotation:{t:Annotated}};if(programElements===undefined){programElements=getEmpty();}
seeAnnotation$.programElements_=programElements;SequencedAnnotation({Value$SequencedAnnotation:{t:SeeAnnotation},ProgramElement$SequencedAnnotation:{t:Annotated}},seeAnnotation$);add_type_arg(seeAnnotation$,'Value$SequencedAnnotation',{t:SeeAnnotation});add_type_arg(seeAnnotation$,'ProgramElement$SequencedAnnotation',{t:Annotated});return seeAnnotation$;}
SeeAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[{$nm:'programElements',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Declaration$meta$declaration}}},$an:function(){return[doc("The program elements being referred to."),shared()];}}],satisfies:[{t:SequencedAnnotation,a:{Value$SequencedAnnotation:{t:SeeAnnotation},ProgramElement$SequencedAnnotation:{t:Annotated}}}],$an:function(){return[doc("The annotation class for [[see]]."),shared(),$_final(),annotation()];},d:['$','SeeAnnotation']};};
ex$.SeeAnnotation=SeeAnnotation;function $init$SeeAnnotation(){if(SeeAnnotation.$$===undefined){initTypeProto(SeeAnnotation,'ceylon.language::SeeAnnotation',Basic,$init$SequencedAnnotation());
(function(seeAnnotation$){atr$(seeAnnotation$,'programElements',function(){return this.programElements_;},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Declaration$meta$declaration}}},$cont:SeeAnnotation,$an:function(){return[doc("The program elements being referred to."),shared()];},d:['$','SeeAnnotation','$at','programElements']};});})(SeeAnnotation.$$.prototype);}
return SeeAnnotation;}
ex$.$init$SeeAnnotation=$init$SeeAnnotation;$init$SeeAnnotation();var see=function ($y6){if($y6===undefined){$y6=getEmpty();}
return SeeAnnotation($y6);};see.$crtmm$=function(){return{mod:$CCMM$,$t:{t:SeeAnnotation},$ps:[{$nm:'programElements',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Declaration$meta$declaration}}},$an:function(){return[doc("The program elements being referred to.")];}}],$an:function(){return[doc($CCMM$['ceylon.language'].see.$an.doc[0]),shared(),annotation()];},d:['$','see']};};
ex$.see=see;function AuthorsAnnotation(authors,authorsAnnotation$){$init$AuthorsAnnotation();if(authorsAnnotation$===undefined)authorsAnnotation$=new AuthorsAnnotation.$$;
authorsAnnotation$.$$targs$$={Value$OptionalAnnotation:{t:AuthorsAnnotation},ProgramElement$OptionalAnnotation:{t:Annotated}};if(authors===undefined){authors=getEmpty();}
authorsAnnotation$.authors_=authors;OptionalAnnotation({Value$OptionalAnnotation:{t:AuthorsAnnotation},ProgramElement$OptionalAnnotation:{t:Annotated}},authorsAnnotation$);add_type_arg(authorsAnnotation$,'Value$OptionalAnnotation',{t:AuthorsAnnotation});add_type_arg(authorsAnnotation$,'ProgramElement$OptionalAnnotation',{t:Annotated});return authorsAnnotation$;}
AuthorsAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[{$nm:'authors',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:$_String}}},$an:function(){return[doc("The authors, in Markdown syntax, of the annotated element"),shared()];}}],satisfies:[{t:OptionalAnnotation,a:{Value$OptionalAnnotation:{t:AuthorsAnnotation},ProgramElement$OptionalAnnotation:{t:Annotated}}}],$an:function(){return[doc("The annotation class for [[by]]."),shared(),$_final(),annotation()];},d:['$','AuthorsAnnotation']};};
ex$.AuthorsAnnotation=AuthorsAnnotation;function $init$AuthorsAnnotation(){if(AuthorsAnnotation.$$===undefined){initTypeProto(AuthorsAnnotation,'ceylon.language::AuthorsAnnotation',Basic,$init$OptionalAnnotation());
(function(authorsAnnotation$){atr$(authorsAnnotation$,'authors',function(){return this.authors_;},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:$_String}}},$cont:AuthorsAnnotation,$an:function(){return[doc("The authors, in Markdown syntax, of the annotated element"),shared()];},d:['$','AuthorsAnnotation','$at','authors']};});})(AuthorsAnnotation.$$.prototype);}
return AuthorsAnnotation;}
ex$.$init$AuthorsAnnotation=$init$AuthorsAnnotation;$init$AuthorsAnnotation();var by=function ($y7){if($y7===undefined){$y7=getEmpty();}
return AuthorsAnnotation($y7);};by.$crtmm$=function(){return{mod:$CCMM$,$t:{t:AuthorsAnnotation},$ps:[{$nm:'authors',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:$_String}}},$an:function(){return[doc("The authors, in Markdown syntax, of the annotated element")];}}],$an:function(){return[doc("Annotation to specify API authors."),shared(),annotation()];},d:['$','by']};};
ex$.by=by;function ThrownExceptionAnnotation(type,when,thrownExceptionAnnotation$){$init$ThrownExceptionAnnotation();if(thrownExceptionAnnotation$===undefined)thrownExceptionAnnotation$=new ThrownExceptionAnnotation.$$;
thrownExceptionAnnotation$.$$targs$$={Value$SequencedAnnotation:{t:ThrownExceptionAnnotation},ProgramElement$SequencedAnnotation:{t:'u',l:[{t:FunctionOrValueDeclaration$meta$declaration},{t:ClassDeclaration$meta$declaration}]}};thrownExceptionAnnotation$.type_=type;thrownExceptionAnnotation$.when_=when;SequencedAnnotation({Value$SequencedAnnotation:{t:ThrownExceptionAnnotation},ProgramElement$SequencedAnnotation:{t:'u',l:[{t:FunctionOrValueDeclaration$meta$declaration},{t:ClassDeclaration$meta$declaration}]}},thrownExceptionAnnotation$);add_type_arg(thrownExceptionAnnotation$,'Value$SequencedAnnotation',{t:ThrownExceptionAnnotation});return thrownExceptionAnnotation$;}
ThrownExceptionAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[{$nm:'type',$mt:'prm',$t:{t:Declaration$meta$declaration},$an:function(){return[doc("The [[Exception]] type that this thrown."),shared()];}},{$nm:'when',$mt:'prm',$t:{t:$_String},$an:function(){return[doc($CCMM$['ceylon.language'].ThrownExceptionAnnotation.$at.when.$an.doc[0]),shared()];}}],satisfies:[{t:SequencedAnnotation,a:{Value$SequencedAnnotation:{t:ThrownExceptionAnnotation},ProgramElement$SequencedAnnotation:{t:'u',l:[{t:FunctionOrValueDeclaration$meta$declaration},{t:ClassDeclaration$meta$declaration}]}}}],$an:function(){return[doc("The annotation class for [[throws]]."),shared(),$_final(),annotation()];},d:['$','ThrownExceptionAnnotation']};};
ex$.ThrownExceptionAnnotation=ThrownExceptionAnnotation;function $init$ThrownExceptionAnnotation(){if(ThrownExceptionAnnotation.$$===undefined){initTypeProto(ThrownExceptionAnnotation,'ceylon.language::ThrownExceptionAnnotation',Basic,$init$SequencedAnnotation());
(function(thrownExceptionAnnotation$){atr$(thrownExceptionAnnotation$,'type',function(){return this.type_;},undefined,function(){return{mod:$CCMM$,$t:{t:Declaration$meta$declaration},$cont:ThrownExceptionAnnotation,$an:function(){return[doc("The [[Exception]] type that this thrown."),shared()];},d:['$','ThrownExceptionAnnotation','$at','type']};});atr$(thrownExceptionAnnotation$,'when',function(){return this.when_;},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:ThrownExceptionAnnotation,$an:function(){return[doc($CCMM$['ceylon.language'].ThrownExceptionAnnotation.$at.when.$an.doc[0]),shared()];},d:['$','ThrownExceptionAnnotation','$at','when']};});})(ThrownExceptionAnnotation.$$.prototype);}
return ThrownExceptionAnnotation;}
ex$.$init$ThrownExceptionAnnotation=$init$ThrownExceptionAnnotation;$init$ThrownExceptionAnnotation();var $_throws=function ($y8,$y9){if($y9===undefined){$y9="";}
return ThrownExceptionAnnotation($y8,$y9);};$_throws.$crtmm$=function(){return{mod:$CCMM$,$t:{t:ThrownExceptionAnnotation},$ps:[{$nm:'type',$mt:'prm',$t:{t:Declaration$meta$declaration},$an:function(){return[doc("The [[Exception]] type that this thrown.")];}},{$nm:'when',$mt:'prm',$def:1,$t:{t:$_String},$an:function(){return[doc($CCMM$['ceylon.language'].throws.$at.when$lz1dft.$an.doc[0])];}}],$an:function(){return[doc($CCMM$['ceylon.language'].throws.$an.doc[0]),shared(),annotation()];},d:['$','throws']};};
ex$.$_throws=$_throws;function DeprecationAnnotation(description,deprecationAnnotation$){$init$DeprecationAnnotation();if(deprecationAnnotation$===undefined)deprecationAnnotation$=new DeprecationAnnotation.$$;
deprecationAnnotation$.$$targs$$={Value$OptionalAnnotation:{t:DeprecationAnnotation},ProgramElement$OptionalAnnotation:{t:Annotated}};deprecationAnnotation$.description_=description;OptionalAnnotation({Value$OptionalAnnotation:{t:DeprecationAnnotation},ProgramElement$OptionalAnnotation:{t:Annotated}},deprecationAnnotation$);add_type_arg(deprecationAnnotation$,'Value$OptionalAnnotation',{t:DeprecationAnnotation});add_type_arg(deprecationAnnotation$,'ProgramElement$OptionalAnnotation',{t:Annotated});deprecationAnnotation$.$prop$getReason={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:$_String}]},$cont:DeprecationAnnotation,$an:function(){return[doc($CCMM$['ceylon.language'].DeprecationAnnotation.$at.reason.$an.doc[0]),shared()];},d:['$','DeprecationAnnotation','$at','reason']};}};deprecationAnnotation$.$prop$getReason.get=function(){return reason};return deprecationAnnotation$;}
DeprecationAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[{$nm:'description',$mt:'prm',$t:{t:$_String},$an:function(){return[doc($CCMM$['ceylon.language'].DeprecationAnnotation.$at.description.$an.doc[0]),shared()];}}],satisfies:[{t:OptionalAnnotation,a:{Value$OptionalAnnotation:{t:DeprecationAnnotation},ProgramElement$OptionalAnnotation:{t:Annotated}}}],$an:function(){return[doc("The annotation class for [[deprecated]]."),shared(),$_final(),annotation()];},d:['$','DeprecationAnnotation']};};
ex$.DeprecationAnnotation=DeprecationAnnotation;function $init$DeprecationAnnotation(){if(DeprecationAnnotation.$$===undefined){initTypeProto(DeprecationAnnotation,'ceylon.language::DeprecationAnnotation',Basic,$init$OptionalAnnotation());
(function(deprecationAnnotation$){atr$(deprecationAnnotation$,'reason',function(){var deprecationAnnotation$=this;return (!deprecationAnnotation$.description.empty?deprecationAnnotation$.description:null);},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:$_String}]},$cont:DeprecationAnnotation,$an:function(){return[doc($CCMM$['ceylon.language'].DeprecationAnnotation.$at.reason.$an.doc[0]),shared()];},d:['$','DeprecationAnnotation','$at','reason']};});atr$(deprecationAnnotation$,'description',function(){return this.description_;},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:DeprecationAnnotation,$an:function(){return[doc($CCMM$['ceylon.language'].DeprecationAnnotation.$at.description.$an.doc[0]),shared()];},d:['$','DeprecationAnnotation','$at','description']};});})(DeprecationAnnotation.$$.prototype);}
return DeprecationAnnotation;}
ex$.$init$DeprecationAnnotation=$init$DeprecationAnnotation;$init$DeprecationAnnotation();var deprecated=function ($ya){if($ya===undefined){$ya="";}
return DeprecationAnnotation($ya);};deprecated.$crtmm$=function(){return{mod:$CCMM$,$t:{t:DeprecationAnnotation},$ps:[{$nm:'reason',$mt:'prm',$def:1,$t:{t:$_String},$an:function(){return[doc($CCMM$['ceylon.language'].deprecated.$at.reason$jdwksn.$an.doc[0])];}}],$an:function(){return[doc($CCMM$['ceylon.language'].deprecated.$an.doc[0]),shared(),annotation()];},d:['$','deprecated']};};
ex$.deprecated=deprecated;function TagsAnnotation(tags,tagsAnnotation$){$init$TagsAnnotation();if(tagsAnnotation$===undefined)tagsAnnotation$=new TagsAnnotation.$$;
tagsAnnotation$.$$targs$$={Value$OptionalAnnotation:{t:TagsAnnotation},ProgramElement$OptionalAnnotation:{t:Annotated}};if(tags===undefined){tags=getEmpty();}
tagsAnnotation$.tags_=tags;OptionalAnnotation({Value$OptionalAnnotation:{t:TagsAnnotation},ProgramElement$OptionalAnnotation:{t:Annotated}},tagsAnnotation$);add_type_arg(tagsAnnotation$,'Value$OptionalAnnotation',{t:TagsAnnotation});add_type_arg(tagsAnnotation$,'ProgramElement$OptionalAnnotation',{t:Annotated});return tagsAnnotation$;}
TagsAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[{$nm:'tags',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:$_String}}},$an:function(){return[doc("The tags, in plain text."),shared()];}}],satisfies:[{t:OptionalAnnotation,a:{Value$OptionalAnnotation:{t:TagsAnnotation},ProgramElement$OptionalAnnotation:{t:Annotated}}}],$an:function(){return[doc("The annotation class for [[tagged]]."),shared(),$_final(),annotation()];},d:['$','TagsAnnotation']};};
ex$.TagsAnnotation=TagsAnnotation;function $init$TagsAnnotation(){if(TagsAnnotation.$$===undefined){initTypeProto(TagsAnnotation,'ceylon.language::TagsAnnotation',Basic,$init$OptionalAnnotation());
(function(tagsAnnotation$){atr$(tagsAnnotation$,'tags',function(){return this.tags_;},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:$_String}}},$cont:TagsAnnotation,$an:function(){return[doc("The tags, in plain text."),shared()];},d:['$','TagsAnnotation','$at','tags']};});})(TagsAnnotation.$$.prototype);}
return TagsAnnotation;}
ex$.$init$TagsAnnotation=$init$TagsAnnotation;$init$TagsAnnotation();var tagged=function ($yb){if($yb===undefined){$yb=getEmpty();}
return TagsAnnotation($yb);};tagged.$crtmm$=function(){return{mod:$CCMM$,$t:{t:TagsAnnotation},$ps:[{$nm:'tags',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:$_String}}},$an:function(){return[doc("The tags, in plain text.")];}}],$an:function(){return[doc("Annotation to categorize the API by tag."),shared(),annotation()];},d:['$','tagged']};};
ex$.tagged=tagged;function LicenseAnnotation(description,licenseAnnotation$){$init$LicenseAnnotation();if(licenseAnnotation$===undefined)licenseAnnotation$=new LicenseAnnotation.$$;
licenseAnnotation$.$$targs$$={Value$OptionalAnnotation:{t:LicenseAnnotation},ProgramElement$OptionalAnnotation:{t:Module$meta$declaration}};licenseAnnotation$.description_=description;OptionalAnnotation({Value$OptionalAnnotation:{t:LicenseAnnotation},ProgramElement$OptionalAnnotation:{t:Module$meta$declaration}},licenseAnnotation$);add_type_arg(licenseAnnotation$,'Value$OptionalAnnotation',{t:LicenseAnnotation});add_type_arg(licenseAnnotation$,'ProgramElement$OptionalAnnotation',{t:Module$meta$declaration});return licenseAnnotation$;}
LicenseAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[{$nm:'description',$mt:'prm',$t:{t:$_String},$an:function(){return[doc("The name, text, or URL of the license."),shared()];}}],satisfies:[{t:OptionalAnnotation,a:{Value$OptionalAnnotation:{t:LicenseAnnotation},ProgramElement$OptionalAnnotation:{t:Module$meta$declaration}}}],$an:function(){return[doc("The annotation class for [[license]]."),shared(),$_final(),annotation()];},d:['$','LicenseAnnotation']};};
ex$.LicenseAnnotation=LicenseAnnotation;function $init$LicenseAnnotation(){if(LicenseAnnotation.$$===undefined){initTypeProto(LicenseAnnotation,'ceylon.language::LicenseAnnotation',Basic,$init$OptionalAnnotation());
(function(licenseAnnotation$){atr$(licenseAnnotation$,'description',function(){return this.description_;},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:LicenseAnnotation,$an:function(){return[doc("The name, text, or URL of the license."),shared()];},d:['$','LicenseAnnotation','$at','description']};});})(LicenseAnnotation.$$.prototype);}
return LicenseAnnotation;}
ex$.$init$LicenseAnnotation=$init$LicenseAnnotation;$init$LicenseAnnotation();var license=function ($yc){return LicenseAnnotation($yc);};license.$crtmm$=function(){return{mod:$CCMM$,$t:{t:LicenseAnnotation},$ps:[{$nm:'description',$mt:'prm',$t:{t:$_String},$an:function(){return[doc("The name, text, or URL of the license.")];}}],$an:function(){return[doc($CCMM$['ceylon.language'].license.$an.doc[0]),shared(),annotation()];},d:['$','license']};};
ex$.license=license;function OptionalImportAnnotation(optionalImportAnnotation$){$init$OptionalImportAnnotation();if(optionalImportAnnotation$===undefined)optionalImportAnnotation$=new OptionalImportAnnotation.$$;
optionalImportAnnotation$.$$targs$$={Value$OptionalAnnotation:{t:OptionalImportAnnotation},ProgramElement$OptionalAnnotation:{t:Import$meta$declaration}};OptionalAnnotation({Value$OptionalAnnotation:{t:OptionalImportAnnotation},ProgramElement$OptionalAnnotation:{t:Import$meta$declaration}},optionalImportAnnotation$);add_type_arg(optionalImportAnnotation$,'Value$OptionalAnnotation',{t:OptionalImportAnnotation});add_type_arg(optionalImportAnnotation$,'ProgramElement$OptionalAnnotation',{t:Import$meta$declaration});return optionalImportAnnotation$;}
OptionalImportAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],satisfies:[{t:OptionalAnnotation,a:{Value$OptionalAnnotation:{t:OptionalImportAnnotation},ProgramElement$OptionalAnnotation:{t:Import$meta$declaration}}}],$an:function(){return[doc("The annotation class for [[optional]]."),shared(),$_final(),annotation()];},d:['$','OptionalImportAnnotation']};};
ex$.OptionalImportAnnotation=OptionalImportAnnotation;function $init$OptionalImportAnnotation(){if(OptionalImportAnnotation.$$===undefined){initTypeProto(OptionalImportAnnotation,'ceylon.language::OptionalImportAnnotation',Basic,$init$OptionalAnnotation());
}
return OptionalImportAnnotation;}
ex$.$init$OptionalImportAnnotation=$init$OptionalImportAnnotation;$init$OptionalImportAnnotation();var optional=function (){return OptionalImportAnnotation();};optional.$crtmm$=function(){return{mod:$CCMM$,$t:{t:OptionalImportAnnotation},$ps:[],$an:function(){return[doc($CCMM$['ceylon.language'].optional.$an.doc[0]),shared(),annotation()];},d:['$','optional']};};
ex$.optional=optional;
function $_Number($$targs$$,number$){Numeric({Other$Numeric:$$targs$$.Other$Number},number$);Comparable({Other$Comparable:$$targs$$.Other$Number},number$);set_type_args(number$,$$targs$$);number$.$prop$getMagnitude={$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Number',$cont:$_Number,$an:function(){return[doc($CCMM$['ceylon.language'].Number.$at.magnitude.$an.doc[0]),shared(),$_default()];},d:['$','Number','$at','magnitude']};}};number$.$prop$getMagnitude.get=function(){return magnitude};}
$_Number.$crtmm$=function(){return{mod:$CCMM$,$tp:{Other$Number:{'satisfies':[{t:$_Number,a:{Other$Number:'Other$Number'}}]}},satisfies:[{t:Numeric,a:{Other$Numeric:'Other$Number'}},{t:Comparable,a:{Other$Comparable:'Other$Number'}}],of:['Other$Number'],$an:function(){return[doc($CCMM$['ceylon.language'].Number.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Integer),$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Float)].reifyCeylonType({t:ClassDeclaration$meta$declaration})),by(["Gavin"].reifyCeylonType({t:$_String})),shared()];},d:['$','Number']};};
ex$.$_Number=$_Number;function $init$$_Number(){if($_Number.$$===undefined){initTypeProtoI($_Number,'ceylon.language::Number',$init$Numeric(),$init$Comparable());
(function(number$){atr$(number$,'magnitude',function(){var number$=this;return ($yd=(number$.negative?number$.negated:null),nn$($yd)?$yd:number$);},undefined,function(){return{mod:$CCMM$,$t:'Other$Number',$cont:$_Number,$an:function(){return[doc($CCMM$['ceylon.language'].Number.$at.magnitude.$an.doc[0]),shared(),$_default()];},d:['$','Number','$at','magnitude']};});atr$(number$,'sign',function(){var number$=this;if(number$.positive){return 1}else {if(number$.negative){return (-1);}else {return 0}}},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$_Number,$an:function(){return[doc($CCMM$['ceylon.language'].Number.$at.sign.$an.doc[0]),shared(),$_default()];},d:['$','Number','$at','sign']};});number$.$prop$getPositive={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:$_Number,$an:function(){return[doc($CCMM$['ceylon.language'].Number.$at.positive.$an.doc[0]),shared(),formal()];},d:['$','Number','$at','positive']};}};number$.$prop$getNegative={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:$_Number,$an:function(){return[doc($CCMM$['ceylon.language'].Number.$at.negative.$an.doc[0]),shared(),formal()];},d:['$','Number','$at','negative']};}};number$.$prop$getFractionalPart={$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Number',$cont:$_Number,$an:function(){return[doc($CCMM$['ceylon.language'].Number.$at.fractionalPart.$an.doc[0]),shared(),formal()];},d:['$','Number','$at','fractionalPart']};}};number$.$prop$getWholePart={$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Number',$cont:$_Number,$an:function(){return[doc($CCMM$['ceylon.language'].Number.$at.wholePart.$an.doc[0]),shared(),formal()];},d:['$','Number','$at','wholePart']};}};number$.timesInteger={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Number',$ps:[{$nm:'integer',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:$_Number,$an:function(){return[doc($CCMM$['ceylon.language'].Number.$m.timesInteger.$an.doc[0]),shared(),formal()];},d:['$','Number','$m','timesInteger']};}};number$.plusInteger={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Number',$ps:[{$nm:'integer',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:$_Number,$an:function(){return[doc($CCMM$['ceylon.language'].Number.$m.plusInteger.$an.doc[0]),shared(),formal()];},d:['$','Number','$m','plusInteger']};}};number$.powerOfInteger={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Number',$ps:[{$nm:'integer',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:$_Number,$an:function(){return[doc($CCMM$['ceylon.language'].Number.$m.powerOfInteger.$an.doc[0]),$_throws("AssertionError","if the exponent is a negative power and this is \nan integral numeric type"),shared(),formal()];},d:['$','Number','$m','powerOfInteger']};}};})($_Number.$$.prototype);}
return $_Number;}
ex$.$init$$_Number=$init$$_Number;$init$$_Number();var $yd;var toInt = function(float) {
return (float >= 0) ? Math.floor(float) : Math.ceil(float);
}
function JSNumber(value) {
if (value===parseInt(value)) {
return Integer(value);
}
return Float(value);
}
initExistingType(JSNumber, Number, 'ceylon.language::JSNumber');
JSNumber.$crtmm$=function(){return{$nm:'JSNumber',$mt:'c',$an:function(){return[shared()];},
mod:$CCMM$,d:['$','Number']};}
var origNumToString = Number.prototype.toString;
inheritProto(JSNumber, $_Object, $_Number, $init$Integral(), Exponentiable);
function Integer(value) {
if (value && value.getT$name && value.getT$name() === 'ceylon.language::Integer') {
return value;
}
var that=Number(value);
$_Number({Other$Number:{t:Integer}},that);
return that;
}
initTypeProto(Integer, 'ceylon.language::Integer', $_Object,$_Number,
$init$Integral(), Exponentiable, Binary);
Integer.$crtmm$=function(){return{$an:function(){return[shared(),$_native(),$_final()];},mod:$CCMM$,d:['$','Integer']};}
function Float(value) {
if (value && value.getT$name && value.getT$name() === 'ceylon.language::Float') {
return value;
}
var that = new Number(value);
$_Number({Other$Number:{t:Float}},that);
that.float$ = true;
return that;
}
initTypeProto(Float, 'ceylon.language::Float', $_Object,$_Number,Exponentiable);
Float.$crtmm$=function(){return{$an:function(){return[shared(),$_native(),$_final()];},mod:$CCMM$,d:['$','Float']};}
var JSNum$proto = Number.prototype;
JSNum$proto.getT$all = function() {
return (this.float$ ? Float : Integer).$$.T$all;
}
JSNum$proto.getT$name = function() {
return (this.float$ ? Float : Integer).$$.T$name;
}
JSNum$proto.toString = origNumToString;
atr$(JSNum$proto, 'string', function(){ return this.toString(); },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:$_Object,d:['$','Object','$at','string']};});
JSNum$proto.plus = function(other) {
return (this.float$||other.float$) ? Float(this+other) : (this+other);
}
JSNum$proto.plusInteger = function(other) {
return this.float$ ? Float(this+other) : (this+other);
}
JSNum$proto.minus = function(other) {
return (this.float$||other.float$) ? Float(this-other) : (this-other);
}
JSNum$proto.times = function(other) {
return (this.float$||other.float$) ? Float(this*other) : (this*other);
}
JSNum$proto.timesInteger = function(other) {
return this.float$ ? Float(this*other) : (this*other);
}
JSNum$proto.divided = function(other) {
if (this.float$||other.float$) { return Float(this/other); }
if (other == 0) {
throw Exception("Division by Zero");
}
return toInt(this/other);
}
JSNum$proto.remainder = function(other) { return this%other; }
JSNum$proto.power = function(exp) {
if (this.float$||exp.float$) { return Float(Math.pow(this, exp)); }
if (exp<0 && this!=1 && this!=-1) {
throw AssertionError("Negative exponent");
}
return toInt(Math.pow(this, exp));
}
atr$(JSNum$proto, 'negated', function() {
return this.float$ ? Float(-this) : -this;
},undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Invertable,d:['$','Invertable','$at','negated']};});
atr$(JSNum$proto, 'negative', function(){
return this.float$ ? this < 0.0 : this.valueOf() < 0;
},undefined,function(){return{$t:{t:$_Boolean},$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:$_Number,d:['$','Number','$at','negative']};});
atr$(JSNum$proto, 'positive', function(){
return this.float$ ? this > 0.0 : this.valueOf() > 0;
},undefined,function(){return{$t:{t:$_Boolean},$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:$_Number,d:['$','Number','$at','positive']};});
JSNum$proto.equals = function(other) { return (typeof(other)==='number' || other.constructor===Number) && other==this.valueOf(); }
JSNum$proto.compare = function(other) {
var value = this.valueOf();
return value==other ? getEqual() : (value<other ? getSmaller():getLarger());
}
JSNum$proto.smallerThan=function(o) {
return Comparable.$$.prototype.smallerThan.call(this,o);
}
JSNum$proto.largerThan=function(o) {
return Comparable.$$.prototype.largerThan.call(this,o);
}
JSNum$proto.notSmallerThan=function(o) {
return Comparable.$$.prototype.notSmallerThan.call(this,o);
}
JSNum$proto.notLargerThan=function(o) {
return Comparable.$$.prototype.notLargerThan.call(this,o);
}
atr$(JSNum$proto, '$_float', function(){ return Float(this.valueOf()); },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:$_Number,d:['$','Number','$at','float']};});
atr$(JSNum$proto, 'integer', function(){ return toInt(this); },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:$_Number,d:['$','Number','$at','integer']};});
atr$(JSNum$proto, 'integerValue', function(){ return toInt(this); },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Ordinal,d:['$','Ordinal','$at','integerValue']};});
atr$(JSNum$proto, 'character', function(){ return Character(this.valueOf()); },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Integer,d:['$','Integer','$at','character']};});
atr$(JSNum$proto, 'successor', function(){ return this+1; },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Ordinal,d:['$','Ordinal','$at','successor']};});
atr$(JSNum$proto, 'predecessor', function(){ return this-1; },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Ordinal,d:['$','Ordinal','$at','predecessor']};});
atr$(JSNum$proto, 'unit', function(){ return this == 1; },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Integral,d:['$','Integral','$at','unit']};});
atr$(JSNum$proto, 'zero', function(){ return this == 0; },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Integral,d:['$','Integral','$at','zero']};});
atr$(JSNum$proto, 'fractionalPart', function() {
if (!this.float$) { return 0; }
return Float(this - (this>=0 ? Math.floor(this) : Math.ceil(this)));
},undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:$_Number,d:['$','Number','$at','fractionalPart']};});
atr$(JSNum$proto, 'wholePart', function() {
if (!this.float$) { return this.valueOf(); }
return Float(this>=0 ? Math.floor(this) : Math.ceil(this));
},undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:$_Number,d:['$','Number','$at','wholePart']};});
atr$(JSNum$proto, 'sign', function(){ return this > 0 ? 1 : this < 0 ? -1 : 0; },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:$_Number,d:['$','Number','$at','sign']};});
atr$(JSNum$proto, 'hash', function() {
return this.float$ ? $_String(this.toPrecision()).hash : this.valueOf();
},undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:$_Object,d:['$','Object','$at','hash']};});
JSNum$proto.distanceFrom = function(other) {
return (this.float$ ? this.wholePart : this) - other;
}
atr$(JSNum$proto, 'not', function(){ return ~this; },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Binary,d:['$','Binary','$at','not']};});
JSNum$proto.leftLogicalShift = function(i) { return this << i; }
JSNum$proto.rightLogicalShift = function(i) { return this >> i; }
JSNum$proto.rightArithmeticShift = function(i) { return this >>> i; }
JSNum$proto.and = function(x) { return this & x; }
JSNum$proto.or = function(x) { return this | x; }
JSNum$proto.xor = function(x) { return this ^ x; }
JSNum$proto.$_get = function(idx) {
if (idx < 0 || idx >31) {
return false;
}
var mask = 1 << idx;
return (this & mask) != 0 ? true : false;
}
JSNum$proto.set = function(idx,bit) {
if (idx < 0 || idx >31) {
return this;
}
if (bit === undefined) { bit = true; }
var mask = idx > 1 ? 1 << idx : 1;
return (bit === true) ? this | mask : this & ~mask;
}
JSNum$proto.flip = function(idx) {
if (idx < 0 || idx >31) {
return this;
}
var mask = 1 << idx;
return this ^ mask;
}
JSNum$proto.clear = function(index) {
return this.set(index, false);
}
JSNum$proto.neighbour=function(offset) {
return this+offset;
}
atr$(JSNum$proto, 'magnitude', function(){ return Math.abs(this); },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:$_Number,d:['$','Number','$at','magnitude']};});
atr$(JSNum$proto, 'undefined', function(){ return isNaN(this); },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Float,d:['$','Float','$at','undefined']};});
atr$(JSNum$proto, 'finite', function(){ return this!=Infinity && this!=-Infinity && !isNaN(this); },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Float,d:['$','Float','$at','finite']};});
atr$(JSNum$proto, 'infinite', function(){ return this==Infinity || this==-Infinity; },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Float,d:['$','Float','$at','infinite']};});
atr$(JSNum$proto, 'strictlyPositive', function(){ return this>0 || (this==0 && (1/this==Infinity)); },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Float,d:['$','Float','$at','strictlyPositive']};});
atr$(JSNum$proto, 'strictlyNegative', function() { return this<0 || (this==0 && (1/this==-Infinity)); },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Float,d:['$','Float','$at','strictlyNegative']};});
var $infinity = Float(Infinity);
function getInfinity() { return $infinity; }
ex$.$prop$getInfinity={get:getInfinity,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Float},d:['$','infinity']};}};
ex$.Integer=Integer;
ex$.Float=Float;
ex$.getInfinity=getInfinity;
function $_Boolean(value) {return Boolean(value)}
initExistingTypeProto($_Boolean, Boolean, 'ceylon.language::Boolean');
$_Boolean.$crtmm$={$ps:[],$an:function(){return[shared(),abstract()]},mod:$CCMM$,d:['$','Boolean']};
ex$.$_Boolean=$_Boolean;
function trueClass() {}
initType(trueClass, "ceylon.language::true", $_Boolean);
function falseClass() {}
initType(falseClass, "ceylon.language::false", $_Boolean);
Boolean.prototype.getT$name = function() {
return (this.valueOf()?trueClass:falseClass).$$.T$name;
}
Boolean.prototype.getT$all = function() {
return (this.valueOf()?trueClass:falseClass).$$.T$all;
}
Boolean.prototype.equals = function(other) {return other.constructor===Boolean && other==this;}
atr$(Boolean.prototype, 'hash', function(){ return this.valueOf()?1:0; },
undefined,{$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','Object','$at','hash']});
atr$(Boolean.prototype, 'string', function(){ return this.valueOf()?"true":"false"; },
undefined,{$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','Object','$at','string']});
atr$(Boolean.prototype, 'not', function(){ return !this.valueOf(); },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Binary,d:['$','Binary','$at','not']};});
Boolean.prototype.leftLogicalShift = function(i) { return this.valueOf(); }
Boolean.prototype.rightLogicalShift = function(i) { return this.valueOf(); }
Boolean.prototype.rightArithmeticShift = function(i) { return this.valueOf(); }
Boolean.prototype.and = function(x) { return this.valueOf() && x.valueOf(); }
Boolean.prototype.or = function(x) { return this.valueOf() || x.valueOf(); }
Boolean.prototype.xor = function(x) { return this.valueOf()?!x.valueOf():x.valueOf(); }
Boolean.prototype.$_get = function(idx) {
return idx === 0 ? this.valueOf() : false;
}
Boolean.prototype.set = function(idx,bit) {
if (bit === undefined) { bit = true; }
return idx === 0 ? bit.valueOf() : this.valueOf();
}
Boolean.prototype.flip = function(idx) {
return idx === 0 ? !this.valueOf() : this.valueOf();
}
Boolean.prototype.clear = function(index) {
return index === 0 ? false : this.valueOf();
}
function getTrue() {return true;}
function getFalse() {return false;}
ex$.$prop$getTrue={get:getTrue,$crtmm$:function(){return{mod:$CCMM$,d:['$','true'],$t:{t:$_Boolean}};}};
ex$.$prop$getFalse={get:getFalse,$crtmm$:function(){return{mod:$CCMM$,d:['$','false'],$t:{t:$_Boolean}};}};
function Mapita(o,$$targs$$,$$mapita){
$init$Mapita();
if($$mapita===undefined)$$mapita=new Mapita.$$;
set_type_args($$mapita,$$targs$$);
Map({Item$Map:$$targs$$.V$Mapita,Key$Map:$$targs$$.K$Mapita},$$mapita);
$$mapita.o=o;
$$mapita.$prop$getHash={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Mapita,$an:function(){return[shared(),actual()];},d:['$','Map','$at','hash']};}};
$$mapita.$prop$getHash.get=function(){return hash};
return $$mapita;
}
Mapita.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],$tp:{K$Mapita:{'var':'out','satisfies':[{t:$_Object}]},V$Mapita:{'var':'out','satisfies':[{t:$_Object}]}},satisfies:[{t:Map,a:{Item$Map:'V$Mapita',Key$Map:'K$Mapita'}}],$an:function(){return[shared()];},d:['','Mapita']};};
ex$.Mapita=Mapita;
function $init$Mapita(){
if(Mapita.$$===undefined){
initTypeProto(Mapita,'Mapita',Basic,$init$Map());
(function($$mapita){
$$mapita.equals=function (other$2){
var $$mapita=this;
return $$mapita.getT$all()['ceylon.language::Map'].$$.prototype.equals.call(this,other$2);
};
$$mapita.equals.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'other',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:Mapita,$an:function(){return[shared(),actual()];},d:['$','Map','$m','equals']};};
atr$($$mapita,'hash',function(){
var $$mapita=this;
return attrGetter($$mapita.getT$all()['ceylon.language::Map'],'hash').call(this);
},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Mapita,$an:function(){return[shared(),actual()];},d:['$','Map','$at','hash']};});
$$mapita.clone=function (){
return this;
};
$$mapita.clone.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Mapita,a:{V$Mapita:'V$Mapita',K$Mapita:'K$Mapita'}},$ps:[],$cont:Mapita,$an:function(){return[shared(),actual()];},d:['','Mapita','$m','clone']};};
$$mapita.iterator=function iterator(){
var $$mapita=this;
function miter$3($$targs$$){
var $$miter$3=new miter$3.$$;
$$miter$3.$$targs$$=$$targs$$;
Iterator({Element$Iterator:{t:Entry,a:{Item$Entry:$$targs$$.V$Mapita,Key$Entry:$$targs$$.K$Mapita}}},$$miter$3);
add_type_arg($$miter$3,'Element$Iterator',{t:Entry,a:{Item$Entry:$$mapita.$$targs$$.V$Mapita,Key$Entry:$$mapita.$$targs$$.K$Mapita}});
$$miter$3.keys=[];
for (var k in $$mapita.o) $$miter$3.keys.push(k);
$$miter$3.idx=-1;
return $$miter$3;
};miter$3.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:Iterator,a:{Element$Iterator:{t:Entry,a:{Item$Entry:'V$Mapita',Key$Entry:'K$Mapita'}}}}],d:['','Mapita','$m','iterator','$o','miter']};};
function $init$miter$3(){
if(miter$3.$$===undefined){
initTypeProto(miter$3,'Mapita.iterator.miter',Basic,Iterator);
(function($$miter$3){
$$miter$3.next=function next(){
var $$miter=this;
$$miter.idx++;
if ($$miter.idx>=$$miter.keys.length)return getFinished();
var k$8=$$miter.keys[$$miter.idx];
var v$8=$$mapita.o[k$8]||null;
return Entry(k$8,v$8,{Key$Entry:$$mapita.$$targs$$.K$Mapita,Item$Entry:$$mapita.$$targs$$.V$mapita});
};$$miter$3.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u', l:[{t:Entry,a:{Item$Entry:'V$Mapita',Key$Entry:'K$Mapita'}},{t:Finished}]},$ps:[],$cont:miter$3,$an:function(){return[shared(),actual()];},d:['','Mapita','$m','iterator','$o','miter','$m','next']};};
})(miter$3.$$.prototype);
}
return miter$3;
}
$init$miter$3();
var miter$9;
function getMiter$9(){
if(miter$9===undefined){miter$9=$init$miter$3()({Element$Iterator:{t:Entry,a:{Item$Entry:$$mapita.$$targs$$.V$Mapita,Key$Entry:$$mapita.$$targs$$.K$Mapita}}});miter$9.$crtmm$=getMiter$9.$crtmm$;}
return miter$9;
}
getMiter$9.$crtmm$=function(){return{mod:$CCMM$,$t:{t:miter$3},d:['','Mapita','$m','iterator','$o','miter']};};
$prop$getMiter$9={get:getMiter$9,$crtmm$:getMiter$9.$crtmm$};
return getMiter$9();
};$$mapita.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:{t:Entry,a:{Item$Entry:'V$Mapita',Key$Entry:'K$Mapita'}}}},$ps:[],$cont:Mapita,$an:function(){return[shared(),actual()];},d:['','Mapita','$m','iterator']};};
$$mapita.$_get=function $_get(k$3){
var v=this.o[k$3];
return v||null;
};$$mapita.$_get.$crtmm$=function(){return{mod:$CCMM$,$t:'V$Mapita',$ps:[{$nm:'k',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:Mapita,$an:function(){return[shared(),actual()];},d:['','Mapita','$m','get']};};
})(Mapita.$$.prototype);
}
return Mapita;
}
ex$.$init$Mapita=$init$Mapita;
$init$Mapita();
function nonempty(value){
return value!==null&&value!==undefined&&is$(value,{t:Sequence});
}
function is$(obj,type){
if(type && type.t){
if(type.t==='i'||type.t==='u'){
return isOfTypes(obj, type);
}
if(obj===null||obj===undefined){
return type.t===Null||type.t===Anything;
}
if(obj.getT$all===undefined){
if(obj.$crtmm$){
var _mm=getrtmm$$(obj);
if(_mm.d['$mt']==='m'){
if(type.t===Callable){
if(type.a&&type.a.Return$Callable&&_mm['$t']){
if(extendsType(_mm['$t'],type.a.Return$Callable)){
if(type.a.Arguments$Callable&&_mm['$ps']!==undefined){
var metaparams=_mm['$ps'];
if(metaparams.length==0){
return type.a.Arguments$Callable.t === Empty;
}else{
var comptype=type.a.Arguments$Callable;
for(var i=0;i<metaparams.length;i++){
if(comptype.t!==Tuple||!extendsType(metaparams[i]['$t'],comptype.a.First$Tuple)){
return false;
}
comptype=comptype.a.Rest$Tuple;
}
}
}
return true;
}
}
}
}
}
return false;
}
if (type.t==='T') {
if (is$(obj,{t:Tuple})) {
if (obj.$$targs$$ && obj.$$targs$$.t==='T') {
if (type.l.length===obj.$$targs$$.l.length) {
for (var i=0;i<type.l.length;i++) {
if (!extendsType(obj.$$targs$$.l[i],type.l[i]))return false;
}
return true;
console.log("vamos bien");
} else {
return false;
}
} else {
type=retpl$(type);
}
} else {
return false;
}
}
if(type.t.$$.T$name in obj.getT$all()){
if(type.t==Callable&&!(obj.$$targs$$ && obj.$$targs$$.Return$Callable && obj.$$targs$$.Arguments$Callable)
&& getrtmm$$(obj)&&obj.$crtmm$.$t && obj.$crtmm$.$ps!==undefined){
add_type_arg(obj,'Return$Callable',obj.$crtmm$.$t);
add_type_arg(obj,'Arguments$Callable',{t:'T',l:[]});
for(var i=0;i<obj.$crtmm$.$ps.length;i++){
obj.$$targs$$.Arguments$Callable.l.push(obj.$crtmm$.$ps[i].$t);
}
if (obj.$$targs$$.Arguments$Callable.l.length===0)obj.$$targs$$.Arguments$Callable={t:Empty};
}
if(type.a && obj.$$targs$$) {
for(var i in type.a) {
var cmptype=type.a[i];
var tmpobj=obj;
var iance=null;
var _mm=getrtmm$$(type.t);
if(_mm&&_mm.$tp&&_mm.$tp[i])iance=_mm.$tp[i]['var'];
if(iance===null) {
while(iance===null&&tmpobj.outer$!==undefined){
tmpobj=tmpobj.outer$;
var _tmpf = tmpobj.constructor.T$all[tmpobj.constructor.T$name];
var _mmf = getrtmm$$(_tmpf);
if(_mmf&&_mmf.$tp&&_mmf.$tp[i]){
iance=_mmf.$tp[i]['var'];
}
if(iance===null&&_mmf&&_mmf['super']){
var smm=getrtmm$$(_mmf['super'].t);
if(smm&&smm.$tp&&smm.$tp[i])iance=smm.$tp[i]['var'];
}
if(iance===null&&_mmf&&_mmf['satisfies']){
var sats=_mmf['satisfies'];
for(var s=0;iance===null&&s<sats.length;s++){
var smm=getrtmm$$(sats[s].t);
if (smm&&smm.$tp&&smm.$tp[i])iance=smm.$tp[i]['var'];
}
}
}
}
if(iance===null) {
var _omm=_mm;
while(iance===null&&_omm) {
if(_omm.$tp&&_omm.$tp[i]!==undefined){
iance=_omm.$tp[i]['var'];
tmpobj=obj;
}
if(iance===null)_omm=getrtmm$$(_omm.$cont);
}
}
if (iance === 'out') {
if (!extendsType(tmpobj.$$targs$$[i], cmptype,true)) {
return false;
}
} else if (iance === 'in') {
if (!extendsType(cmptype, tmpobj.$$targs$$[i],true)) {
return false;
}
} else if (iance === undefined) {
var _targ=tmpobj.$$targs$$[i];
if (!(_targ && _targ.t && (_targ.t.$$ || _targ.t==='i' || _targ.t==='u')))return false;
if (_targ.t.$$) {
if (cmptype && cmptype.t && cmptype.t.$$) {
if (!(cmptype.t.$$.T$name && _targ.t.$$.T$name === cmptype.t.$$.T$name))return false;
} else if (cmptype && cmptype.t && cmptype.t==='i') {
if (cmptype.t!==_targ.t || !cmptype.l || cmptype.l.length!==_targ.l.length)return false;
for (var i=0; i<_targ.l.length;i++) {
if (!extendsType(_targ.l[i],cmptype,true))return false;
}
} else if (cmptype && cmptype.t && cmptype.t==='u') {
if (cmptype.t!==_targ.t || !cmptype.l || cmptype.l.length!==_targ.l.length)return false;
for (var i=0; i<_targ.l.length;i++) {
if (!extendsType(_targ.l[i],cmptype,true))return false;
}
}
} else {
if (cmptype.t!==_targ.t || !cmptype.l || cmptype.l.length!==_targ.l.length)return false;
for (var i=0; i<_targ.l.length;i++) {
if (!extendsType(_targ.l[i],cmptype,true))return false;
}
}
} else if (iance === null) {
console.log("Possible missing metamodel for " + type.t.$$.T$name + "<" + i + ">");
} else {
console.log("Don't know what to do about variance '" + iance + "'");
}
}
}
return true;
}
}
return false;
}
function isOfTypes(obj, types) {
if (obj===null) {
for (var i=0; i < types.l.length; i++) {
if(types.l[i].t===Null || types.l[i].t===Anything) return true;
else if (types.l[i].t==='u') {
if (isOfTypes(null, types.l[i])) return true;
}
}
return false;
}
if (obj === undefined || obj.getT$all === undefined) { return false; }
var unions = false;
var inters = true;
var _ints=false;
var objTypes = obj.getT$all();
for (var i = 0; i < types.l.length; i++) {
var t = types.l[i];
var partial = is$(obj, t);
if (types.t==='u') {
unions = partial || unions;
} else {
inters = partial && inters;
_ints=true;
}
}
return _ints ? inters||unions : unions;
}
function extendsType(t1, t2,tparm) { //true if t1 is subtype of t2
if (t1 === undefined || t1.t === undefined || t1.t === Nothing || t2 === undefined || t2.t === undefined) {
return true;//t2 === undefined;
} else if (t2 && t2.t === Anything) {
return true;
} else if (t1 === null) {
return t2.t === Null || t2.t === Anything;
}
if (t1.t === 'u' || t1.t === 'i') {
if (t1.t==='i')removeSupertypes(t1.l);
var unions = false;
var inters = true;
var _ints = false;
for (var i = 0; i < t1.l.length; i++) {
var partial = extendsType(t1.l[i],t2,tparm);
if (t1.t==='u'&&!tparm) {
unions = partial||unions;
} else {
inters = partial&&inters;
_ints=true;
}
}
return _ints ? inters||unions : unions;
}
if (t2.t === 'u' || t2.t === 'i') {
if (t2.t==='i')removeSupertypes(t2.l);
var unions = false;
var inters = true;
var _ints = false;
for (var i = 0; i < t2.l.length; i++) {
var partial = extendsType(t1, t2.l[i],tparm);
if (t2.t==='u') {
unions = partial||unions;
} else {
inters = partial&&inters;
_ints=true;
}
}
return _ints ? inters||unions : unions;
}
if (t1.t==='T') {
if (t2.t==='T') {
if (t1.l.length>=t2.l.length) {
for (var i=0; i < t2.l.length;i++) {
if (!extendsType(t1.l[i],t2.l[i],tparm))return false;
}
return true;
} else return false;
} else {
t1=retpl$(t1);
}
} else if (t2.t==='T') {
t2=retpl$(t2);
}
for (t in t1.t.$$.T$all) {
if (t === t2.t.$$.T$name || t === 'ceylon.language::Nothing') {
if (t1.a && t2.a) {
for (ta in t1.a) {
if (!extendsType(t1.a[ta], t2.a[ta],tparm)) return false;
}
}
return true;
}
}
return false;
}
function removeSupertypes(list) {
for (var i=0; i < list.length; i++) {
for (var j=i; i < list.length; i++) {
if (i!==j) {
if (extendsType(list[i],list[j])) {
list[j]=list[i];
} else if (extendsType(list[j],list[i])) {
list[i]=list[j];
}
}
}
}
}
function set_type_args(obj, targs) {
if (obj===undefined)return;
if (obj.$$targs$$ === undefined) {
obj.$$targs$$={};
}
for (x in targs) {
obj.$$targs$$[x] = targs[x];
}
}
function add_type_arg(obj, name, type) {
if (obj===undefined)return;
if (obj.$$targs$$ === undefined) {
obj.$$targs$$={};
}
obj.$$targs$$[name]=type;
}
function wrapexc(e,loc,file) {
if (loc !== undefined) e.$loc=loc;
if (file !== undefined) e.$file=file;
return e;
}
function throwexc(e,loc,file) {
if (loc !== undefined) e.$loc=loc;
if (file !== undefined) e.$file=file;
throw e;
}
function nn$(e) {
return e!==null&&e!==undefined;
}
ex$.set_type_args=set_type_args;
ex$.add_type_arg=add_type_arg;
ex$.nonempty=nonempty;
ex$.is$=is$;
ex$.throwexc=throwexc;
ex$.wrapexc=wrapexc;
ex$.nn$=nn$;
function tpl$(elems,types,spread){
if (spread!==undefined) {
var iter=spread.iterator();
for (var e=iter.next();e!==getFinished();e=iter.next()) {
elems.push(e);
}
}
if (elems.size===0)return getEmpty();
if (types===undefined || types.t!=='T') {
types=[];
for (var i=0; i < elems.size; i++){
if (elems[i]===null) {
types.push({t:Null});
} else if (elems[i].getT$all && elems[i].getT$name) {
types.push({t:elems[i].getT$all()[elems[i].getT$name()]});
} else {
console.log("WTF do I use for the type of " + elems[i]);
types.push({t:Anything});
}
}
types={t:'T',l:types};
}
$init$Tuple();
var that=new Tuple.$$;
that.$$targs$$=types;
that.$opt=1;
$_Object(that);
var _t={t:'u',l:types.l};
Sequence({Element$Sequence:_t},that);
elems.$$targs$$={Element$Iterable:_t,Element$Sequential:_t,Element$List:_t,Element$Array:_t,Element$Sequence:_t,Absent$Iterable:{t:Nothing},
Element$Collection:_t,Key$Correspondence:{t:Integer},Item$Correspondence:_t};
set_type_args(that,elems.$$targs$$);
that.$elems=elems;
that.first_=elems[0];
that.getFromFirst=function(i){
var e=elems[i]
return e===undefined?getFinished():e;
};
that.getFromFirst.$crtmm$=Tuple.$$.prototype.getFromFirst.$crtmm$;
that.iterator=function(){ return elems.iterator(); }
that.iterator.$crtmm$=Tuple.$$.prototype.iterator.$crtmm$;
that.contains=function(i) { return elems.contains(i); }
that.contains.$crtmm$=Tuple.$$.prototype.contains.$crtmm$;
that.withLeading=function(a,b){
var e2 = elems.slice(0); e2.unshift(a);
var t2 = _t.l.slice(0); t2.unshift(b.Other$withLeading);
return tpl$(e2,{t:'T',l:t2});
}
that.withLeading.$crtmm$=Tuple.$$.prototype.withLeading.$crtmm$;
that.span=function(a,b){
var r=elems.span(a,b);
return r.size===0?getEmpty():ArraySequence(r,{Element$ArraySequence:_t});
}
that.span.$crtmm$=Tuple.$$.prototype.span.$crtmm$;
that.spanTo=function(x){
var r=elems.spanTo(x);
return r.size===0?getEmpty():ArraySequence(r,{Element$ArraySequence:_t});
}
that.spanTo.$crtmm$=Tuple.$$.prototype.spanTo.$crtmm$;
that.spanFrom=function(x){
var r=elems.spanFrom(x);
return r.size===0?getEmpty():ArraySequence(r,{Element$ArraySequence:_t});
}
that.spanFrom.$crtmm$=Tuple.$$.prototype.spanFrom.$crtmm$;
that.segment=function(a,b){
var r=elems.segment(a,b);
return r.size===0?getEmpty():ArraySequence(r,{Element$ArraySequence:_t});
}
that.segment.$crtmm$=Tuple.$$.prototype.segment.$crtmm$;
that.equals=function(o){return elems.equals(o);}
that.equals.$crtmm$=List.$$.prototype.equals.$crtmm$;
that.withTrailing=function(a,b){
var e2=elems.slice(0);e2.push(a);
var t2=_t.l.slice(0);t2.push(b.Other$withTrailing);
return tpl$(e2,{t:'T',l:t2});
}
that.withTrailing.$crtmm$=List.$$.prototype.withTrailing.$crtmm$;
that.chain=function(a,b){return elems.chain(a,b);}
that.chain.$crtmm$=Iterable.$$.prototype.chain.$crtmm$;
that.longerThan=function(i){return elems.longerThan(i);}
that.longerThan.$crtmm$=Iterable.$$.prototype.longerThan.$crtmm$;
that.shorterThan=function(i){return elems.shorterThan(i);}
that.shorterThan.$crtmm$=Iterable.$$.prototype.shorterThan.$crtmm$;
atr$(that,'hash',function(){
return elems.hash;
},undefined,List.$$.prototype.$prop$getHash.$crtmm$);
atr$(that,'rest',function(){
return elems.size===1?getEmpty():tpl$(elems.slice(1),{t:'T',l:_t.l.slice(1)});
},undefined,Tuple.$$.prototype.$prop$getRest.$crtmm$);
atr$(that,'size',function(){
return elems.size;
},undefined,Tuple.$$.prototype.$prop$getSize.$crtmm$);
atr$(that,'lastIndex',function(){
return elems.size-1;
},undefined,Tuple.$$.prototype.$prop$getLastIndex.$crtmm$);
atr$(that,'last',function(){
return elems[elems.size-1];
},undefined,Tuple.$$.prototype.$prop$getLast.$crtmm$);
atr$(that,'reversed',function(){
return ArraySequence(elems.reversed,{Element$ArraySequence:_t});
},undefined,Tuple.$$.prototype.$prop$getReversed.$crtmm$);
return that;
}
ex$.tpl$=tpl$;
function retpl$(t) { //receives {t:'T',l:[...]}
if (t.t!=='T')return t;
var e;
var r={t:Empty};
for (var i=t.l.length-1;i>=0;i--){
var f=retpl$(t.l[i]);
var e=(r.a&&r.a.Element$Tuple)||f;
if (r.a&&r.a.Element$Tuple){
if (e.l) {
var l2=[];for(var j=0;j<e.l.length;j++)l2.push(e.l[j]);
l2.unshift(f);
e={t:'u',l:l2};
} else {
e = {t:'u',l:[f,e]};
}
}
r={t:Tuple,a:{First$Tuple:f,Element$Tuple:e,Rest$Tuple:r}};
}
return r;
}
function validate$params(ps,t,msg,nothrow) {
if (t.t===Nothing)return;
if (!ps || ps.length==0) {
if (t.t===Empty)return true;
} else if (t.t==='T') {
if (ps.length==t.l.length) {
for (var i=0;i<ps.length;i++)
if (!extendsType(t.l[i],ps[i].$t))throw IncompatibleTypeException$meta$model(msg);
return true;
}
} else { //it's already a tuple, navigate it
console.log("TODO!!!! validate$params with Tuple type");
}
if (nothrow)return false;
throw IncompatibleTypeException$meta$model(msg);
}
function validate$typeparams(t,tparms,types) {
if (tparms) {
if (types===undefined||types.size<1)
throw TypeApplicationException$meta$model("Missing type arguments");
var i=0;
t.a={};
for (var tp in tparms) {
var _type=types.$_get(i);
if (_type===undefined)
throw TypeApplicationException$meta$model("Missing type argument for " + tp);
var _tp = tparms[tp];
var _ta = _type.tipo;
t.a[tp]= _ta.t ? _ta : {t:_type.tipo};
if ((_tp.satisfies && _tp.satisfies.length>0) || (_tp.of && _tp.of.length > 0)) {
var restraints=(_tp.satisfies && _tp.satisfies.length>0)?_tp.satisfies:_tp.of;
for (var j=0; j<restraints.length;j++) {
var _r=restraints[j];if(typeof(_r)==='function')_r=getrtmm$$(_r).$t;
if (!extendsType(t.a[tp],_r))
throw TypeApplicationException$meta$model("Type argument for " + tp + " violates type parameter constraints");
}
}
i++;
}
}
}
function tupleize$params(ps,aux) {
if (!ps || ps.length==0)return {t:Empty};
var tupa={t:'T',l:[]};
for (var i=ps.length-1; i>=ps.length;i--) {
var e=ps[i].$t;
if (typeof(e)==='string'&&aux&&aux[e])e=aux[e];
if (tupa.t==='T') {//tuple
tupa.l.unshift(e);
} else { //union
tupa={t:'T',l:[e,tupa]};
}
if (ps[i].$def) {
tupa={t:'u',l:[{t:Empty},tupa]};
}
}
return tupa;
}
function $qname(mm) {
if (mm.t) {
mm=mm.t;
}
if (mm.$crtmm$)mm=getrtmm$$(mm);
if (!mm.d)return "[unnamed type]";
var qn=mm.d[0];
if (qn==='$')qn='ceylon.language';
for (var i=1; i<mm.d.length; i++){
var n=mm.d[i];
var p=n.indexOf('$');
if(p!==0)qn+=(i==1?"::":".")+(p>0?n.substring(0,p):n);
}
return qn;
}
function resolve$typearg(ta,mm) {
var r=mm.$tp?mm.$tp[ta]:undefined;
while (!r && mm.$cont) {
mm=mm.$cont;
if (mm.$tp)r=mm.$tp[ta];
}
if (r) {
if (r.satisfies)
return r.satisfies.length==1?r.satisfies[0]:{t:'i',l:r.satisfies};
return {t:Anything};
}
console.log("MISSING definition of type argument " + ta + " in " + $qname(mm));
return {t:Anything};
}
function convert$params(mm,a) {
var ps=mm.$ps;
if (ps===undefined || ps.length===0){
if (a && a.size>0)
throw InvocationException$meta$model("Passing parameters to no-args callable");
return [];
}
if (a===undefined)a=[];
var fa=[];
var sarg;
for (var i=0; i<ps.length;i++) { //check def/seq params
var p=ps[i];
var val_t=sarg?sarg.$$targs$$.a.Element$Iterable:p.$t,mm;
if (typeof(val_t)==='string')val_t=resolve$typearg(val_t,mm);
if (a[i]===undefined) {
if (p.$def||p.seq)fa.push(undefined);
else {
throw InvocationException$meta$model("Wrong number of arguments (should be " + ps.length + ")");
}
} else if (sarg) {
sarg.push(a[i]);
} else if (p.seq) {
for (var eta in p.$t.a)if(eta.startsWith("Element$"))val_t=p.$t.a[eta];
if (typeof(val_t)==='string')val_t=resolve$typearg(val_t,mm);
sarg=[].reifyCeylonType(val_t); fa.push(sarg);
for (var j=i; j<a.size;j++){
if (!is$(a[j],val_t))throw IncompatibleTypeException$meta$model("Wrong type for argument " + j + ", expected " + typeLiteral$meta({Type$typeLiteral:val_t}).string + " got " + className(a[j]));
sarg.push(a[j]);
}
i=j;
} else {
fa.push(a[i]);
}
if (a[i]!==undefined && !is$(a[i],val_t))throw IncompatibleTypeException$meta$model("Wrong type for argument " + i + ", expected " + typeLiteral$meta({Type$typeLiteral:val_t}).string + " got " + className(a[i]));
}
if (a.size>i)throw InvocationException$meta$model("Too many arguments");
a = fa;
return a;
}
function getrtmm$$(x) {
if (x===undefined||x===null)return undefined;
if (typeof(x.$crtmm$)==='function')x.$crtmm$=x.$crtmm$();
return x.$crtmm$;
}
ex$.getrtmm$$=getrtmm$$;
function JsResource(uri,$$jsResource){
$init$JsResource();
if($$jsResource===undefined)$$jsResource=new JsResource.$$;
$$jsResource.uri_=uri;
Resource($$jsResource);
$$jsResource.$prop$getUri={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_String},$cont:JsResource,$an:function(){return[shared(),actual()];},d:['$','Resource','$at','uri']};}};
$$jsResource.$prop$getUri.get=function(){return uri};
$$jsResource.$prop$getSize={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:JsResource,$an:function(){return[shared(),actual()];},d:['$','Resource','$at','size']};}};
$$jsResource.$prop$getSize.get=function(){return size};
return $$jsResource;
}
JsResource.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[{$nm:'uri',$mt:'prm',$t:{t:$_String},$an:function(){return[shared(),actual()];}}],satisfies:[{t:Resource}],d:['$','Resource']};};
function $init$JsResource(){
if(JsResource.$$===undefined){
initTypeProto(JsResource,'JsResource',Basic,Resource);
(function($$jsResource){
atr$($$jsResource,'uri',function(){return this.uri_;},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:JsResource,$an:function(){return[shared(),actual()];},d:['$','Resource','$at','uri']};});
atr$($$jsResource,'size',function(){
var $elf=this;
if (getRuntime().name === 'node.js') {
var _fr=require;
var _fp=$elf.uri;
if (_fp.substring(0,5)==='file:')_fp=_fp.substring(_fp.indexOf(':')+1);
return _fr('fs').statSync(_fp).size;
} else if (getRuntime().name === 'Browser') {
alert('Resource.size not implemented yet');
} else {
print("Resource handling unsupported in this JS platform.");
}
return -1;
},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:JsResource,$an:function(){return[shared(),actual()];},d:['$','Resource','$at','size']};});
$$jsResource.textContent=function textContent(encoding$2){
var $elf=this;
if(encoding$2===undefined){encoding$2=$elf.textContent$defs$encoding(encoding$2);}
if (getRuntime().name === 'node.js') {
var _fr=require;
var fs=_fr('fs');
encoding$2=encoding$2.toLowerCase();
if(encoding$2.initial(4)==="utf-")encoding$2='utf'+encoding$2.substring(4);
var _fp=$elf.uri;
if (_fp.substring(0,5)==='file:')_fp=_fp.substring(_fp.indexOf(':')+1);
var t = fs.readFileSync(_fp, encoding$2);
return $_String(t);
} else if (getRuntime().name === 'Browser') {
alert("Resource.textContent() not implemented yet");
} else {
throw Error("Resource handling unsupported in this JS platform");
}
};$$jsResource.textContent.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$ps:[{$nm:'encoding',$mt:'prm',$def:1,$t:{t:$_String},$an:function(){return[];}}],$cont:JsResource,$an:function(){return[shared(),actual()];},d:['$','Resource','$m','textContent']};};
})(JsResource.$$.prototype);
}
return JsResource;
}
$init$JsResource();
function AppliedClass(tipo,$$targs$$,that,classTargs){
$init$AppliedClass();
if (that===undefined){
var mm = getrtmm$$(tipo);
if (mm && mm.$cont) {
that=function(x){/*Class*/
if (that.$targs) {
var _a=[];
for (var i=0;i<arguments.length;i++)_a.push(arguments[i]);
_a.push(that.$targs);
return tipo.apply(x,_a);
}
return tipo.apply(x,arguments);
}
} else {
that=function(){
if (that.$targs) {
var _a=[];
for (var i=0;i<arguments.length;i++)_a.push(arguments[i]);
_a.push(that.$targs);
return tipo.apply(undefined,_a);
}
return tipo.apply(undefined,arguments);
}
}
that.$crtmm$=mm;
var dummy = new AppliedClass.$$;
that.$$=AppliedClass.$$;
that.getT$all=function(){return dummy.getT$all();};
that.getT$name=function(){return dummy.getT$name();};
that.equals=function(o){
var eq=is$(o,{t:AppliedClass}) && o.tipo===tipo;
return eq;
};
that.$_apply=function(x){return AppliedClass.$$.prototype.$_apply.call(that,x);};
that.$_apply.$crtmm$=AppliedClass.$$.prototype.$_apply.$crtmm$;
that.namedApply=function(x){return AppliedClass.$$.prototype.namedApply.call(that,x);};
that.namedApply.$crtmm$=AppliedClass.$$.prototype.namedApply.$crtmm$;
}
that.$targs=classTargs;
atr$(that,'satisfiedTypes',function(){
return ClassOrInterface$meta$model.$$.prototype.$prop$getSatisfiedTypes.get.call(that);
},undefined,ClassOrInterface$meta$model.$$.prototype.$prop$getExtendedType.$crtmm$);
atr$(that,'container',function(){
return ClassOrInterface$meta$model.$$.prototype.$prop$getContainer.get.call(that);
},undefined,ClassOrInterface$meta$model.$$.prototype.$prop$getContainer.$crtmm$);
atr$(that,'string',function(){
return ClassOrInterface$meta$model.$$.prototype.$prop$getString.get.call(that);
},undefined,ClassOrInterface$meta$model.$$.prototype.$prop$getString.$crtmm$);
atr$(that,'hash',function(){
return ClassOrInterface$meta$model.$$.prototype.$prop$getHash.get.call(that);
},undefined,ClassOrInterface$meta$model.$$.prototype.$prop$getHash.$crtmm$);
atr$(that,'typeArguments',function(){
return ClassOrInterface$meta$model.$$.prototype.$prop$getTypeArguments.get.call(that);
},undefined,ClassOrInterface$meta$model.$$.prototype.$prop$getTypeArguments.$crtmm$);
atr$(that,'extendedType',function(){
return ClassOrInterface$meta$model.$$.prototype.$prop$getExtendedType.get.call(that);
},undefined,ClassOrInterface$meta$model.$$.prototype.$prop$getExtendedType.$crtmm$);
atr$(that,'declaration',function(){
return ClassModel$meta$model.$$.prototype.$prop$getDeclaration.get.call(that);
},undefined,ClassModel$meta$model.$$.prototype.$prop$getDeclaration.$crtmm$);
atr$(that,'parameterTypes',function(){
return ClassModel$meta$model.$$.prototype.$prop$getParameterTypes.get.call(that);
},undefined,ClassModel$meta$model.$$.prototype.$prop$getParameterTypes.$crtmm$);
atr$(that,'declaration',function(){
return ClassModel$meta$model.$$.prototype.$prop$getDeclaration.get.call(that);
},undefined,ClassModel$meta$model.$$.prototype.$prop$getDeclaration.$crtmm$);
atr$(that,'caseValues',function(){
return ClassOrInterface$meta$model.$$.prototype.$prop$getCaseValues.get.call(that);
},undefined,ClassOrInterface$meta$model.$$.prototype.$prop$getCaseValues.$crtmm$);
that.getMethod=ClassOrInterface$meta$model.$$.prototype.getMethod;
that.getDeclaredMethod=ClassOrInterface$meta$model.$$.prototype.getDeclaredMethod;
that.getMethods=ClassOrInterface$meta$model.$$.prototype.getMethods;
that.getDeclaredMethods=ClassOrInterface$meta$model.$$.prototype.getDeclaredMethods;
that.getAttribute=ClassOrInterface$meta$model.$$.prototype.getAttribute;
that.getDeclaredAttribute=ClassOrInterface$meta$model.$$.prototype.getDeclaredAttribute;
that.getAttributes=ClassOrInterface$meta$model.$$.prototype.getAttributes;
that.getDeclaredAttributes=ClassOrInterface$meta$model.$$.prototype.getDeclaredAttributes;
that.getClassOrInterface=ClassOrInterface$meta$model.$$.prototype.getClassOrInterface;
that.getDeclaredClassOrInterface=ClassOrInterface$meta$model.$$.prototype.getDeclaredClassOrInterface;
that.getClass=ClassOrInterface$meta$model.$$.prototype.getClass;
that.getDeclaredClass=ClassOrInterface$meta$model.$$.prototype.getDeclaredClass;
that.getClasses=ClassOrInterface$meta$model.$$.prototype.getClasses;
that.getDeclaredClasses=ClassOrInterface$meta$model.$$.prototype.getDeclaredClasses;
that.getInterface=ClassOrInterface$meta$model.$$.prototype.getInterface;
that.getDeclaredInterface=ClassOrInterface$meta$model.$$.prototype.getDeclaredInterface;
that.getInterfaces=ClassOrInterface$meta$model.$$.prototype.getInterfaces;
that.getDeclaredInterfaces=ClassOrInterface$meta$model.$$.prototype.getDeclaredInterfaces;
that.equals=ClassModel$meta$model.$$.prototype.equals;
that.typeOf=ClassOrInterface$meta$model.$$.prototype.typeOf;
that.supertypeOf=ClassOrInterface$meta$model.$$.prototype.supertypeOf;
that.subtypeOf=ClassOrInterface$meta$model.$$.prototype.subtypeOf;
that.exactly=ClassOrInterface$meta$model.$$.prototype.exactly;
set_type_args(that,$$targs$$);
Class$meta$model(that.$$targs$$===undefined?$$targs$$:{Arguments$Class:that.$$targs$$.Arguments$Class,Type$Class:that.$$targs$$.Type$Class},that);
that.tipo=tipo;
return that;
}
AppliedClass.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$tp:{Type$Class:{'var':'out','def':{t:Anything}},Arguments$Class:{'var':'in','satisfies':[{t:Sequential,a:{Element$Iterable:{t:Anything}}}],'def':{t:Nothing}}},satisfies:[{t:Class$meta$model,a:{Arguments$Class:'Arguments$Class',Type$Class:'Type$Class'}}],$an:function(){return[shared()];},d:['ceylon.language.meta.model','Class']};};
function $init$AppliedClass(){
if (AppliedClass.$$===undefined){
initTypeProto(AppliedClass,'ceylon.language.meta.model::AppliedClass',Basic,Class$meta$model);
(function($$clase){
$$clase.$_apply=function(a){
var mdl=get_model(this.tipo.$crtmm$);
if (mdl&&mdl.$mt==='o')throw InvocationException$meta$model("Cannot instantiate anonymous class");
a=convert$params(this.tipo.$crtmm$,a);
if (this.$targs)a.push(this.$targs);
return this.tipo.apply(undefined,a);
};$$clase.$_apply.$crtmm$=function(){return{mod:$CCMM$,$t:'Type$Applicable',$ps:[{$nm:'arguments',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Anything}}},$an:function(){return[];}}],$cont:Applicable$meta$model,$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Applicable.$m.apply.$an.doc[0]),$throws("IncompatibleTypeException",""),$throws("InvocationException",""),shared(),formal()];},d:['ceylon.language.meta.model','Applicable','$m','apply']};};
$$clase.namedApply=function(args){
var mdl=get_model(this.tipo.$crtmm$);
if (mdl&&mdl.$mt==='o')throw InvocationException$meta$model("Cannot instantiate anonymous class");
var mm=getrtmm$$(this.tipo);
if (mm.$ps===undefined)throw InvocationException$meta$model("Applied function does not have metamodel parameter info for named args call");
var mapped={};
var iter=args.iterator();var a;while((a=iter.next())!==getFinished()) {
mapped[a.key]=a.item===getNullArgument$meta$model()?null:a.item;
}
var ordered=[];
for (var i=0; i<mm.$ps.length; i++) {
var p=mm.$ps[i];
var v=mapped[p.$nm];
if (v===undefined && p.$def===undefined) {
throw InvocationException$meta$model("Required argument " + p.$nm + " missing in named-argument invocation");
} else if (v!==undefined) {
var t=p.$t;
if(typeof(t)==='string'&&this.$targs)t=this.$targs[t];
if (t&&!is$(v,t))throw IncompatibleTypeException$meta$model("Argument " + p.$nm + "="+v+" is not of the expected type.");
}
delete mapped[p.$nm];
ordered.push(v);
}
if (Object.keys(mapped).length>0)throw new InvocationException$meta$model("No arguments with names " + Object.keys(mapped));
if (this.$targs) {
ordered.push(this.$targs);
}
return this.tipo.apply(undefined,ordered);
};$$clase.namedApply.$crtmm$=function(){return{mod:$CCMM$,$t:'Type$Applicable',$ps:[{$nm:'arguments',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:{t:Entry,a:{Item$Entry:{t:$Object},Key$Entry:{t:$_String}}},Absent$Iterable:{t:Null}}},$an:function(){return[];}}],$cont:Applicable$meta$model,$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Applicable.$m.namedApply.$an.doc[0]),$throws("IncompatibleTypeException",""),$throws("InvocationException",""),shared(),formal()];},d:['ceylon.language.meta.model','Applicable','$m','namedApply']};};
})(AppliedClass.$$.prototype);
}
return AppliedClass;
}
ex$.$init$AppliedClass$meta$model=$init$AppliedClass;
$init$AppliedClass();
function AppliedMemberClass(tipo,$$targs$$,that,myTargs){
$init$AppliedMemberClass();
if (that===undefined) {
var mm = getrtmm$$(tipo);
if (mm && mm.$cont) {
that=function(x){
var rv=tipo.bind(x);
rv.$crtmm$=tipo.$crtmm$;
var nt={t:tipo};
if (x.$$targs$$) {
nt.a={};
for (var nta in x.$$targs$$)nt.a[nta]=x.$$targs$$[nta];
}
if (that.$targs) {
if (!nt.a)nt.a={};
for (var nta in that.$targs)nt.a[nta]=that.$targs[nta];
}
rv=AppliedClass(rv,{Type$Class:nt,Arguments$Class:{t:Sequential,a:{Element$Iterable:{t:Anything},Absent$Iterable:{t:Null}}}});//TODO generate metamodel for Arguments
if (nt.a)rv.$targs=nt.a;
rv.$bound=x;
return rv;
}
} else {
throw IncompatibleTypeException$meta$model("Invalid metamodel data for MemberClass");
}
}
AppliedClass(tipo,$$targs$$,that);
var dummy = new AppliedMemberClass.$$;
that.$$=AppliedMemberClass.$$;
that.getT$all=function(){return dummy.getT$all();};
that.getT$name=function(){return dummy.getT$name();};
that.equals=function(o){
var eq=is$(o,{t:AppliedMemberClass}) && o.tipo===tipo;
if (that.$bound)eq=eq && o.$bound && o.$bound.equals(that.$bound);else eq=eq && o.$bound===undefined;
return eq;
};
that.$targs=myTargs;
atr$(that,'parameterTypes',function(){
return ClassModel$meta$model.$$.prototype.$prop$getParameterTypes.get.call(that);
},undefined,ClassModel$meta$model.$$.prototype.$prop$getParameterTypes.$crtmm$);
atr$(that,'extendedType',function(){
return ClassOrInterface$meta$model.$$.prototype.$prop$getExtendedType.get.call(that);
},undefined,ClassOrInterface$meta$model.$$.prototype.$prop$getExtendedType.$crtmm$);
atr$(that,'satisfiedTypes',function(){
return ClassOrInterface$meta$model.$$.prototype.$prop$getSatisfiedTypes.get.call(that);
},undefined,ClassOrInterface$meta$model.$$.prototype.$prop$getExtendedType.$crtmm$);
atr$(that,'caseValues',function(){
return ClassOrInterface$meta$model.$$.prototype.$prop$getCaseValues.get.call(that);
},undefined,ClassOrInterface$meta$model.$$.prototype.$prop$getCaseValues.$crtmm$);
atr$(that,'declaration',function(){
return ClassModel$meta$model.$$.prototype.$prop$getDeclaration.get.call(that);
},undefined,ClassModel$meta$model.$$.prototype.$prop$getDeclaration.$crtmm$);
that.$_bind=function(){return AppliedMemberClass.$$.prototype.$_bind.apply(that,arguments);}
atr$(that,'string',function(){
return $qname(mm);
},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},d:['$','Object','$at','string']};});
set_type_args(that,$$targs$$);
MemberClass$meta$model(that.$$targs$$===undefined?$$targs$$:{Arguments$MemberClass:that.$$targs$$.Arguments$MemberClass,Type$MemberClass:that.$$targs$$.Type$MemberClass,Container$MemberClass:that.$$targs$$.Container$MemberClass},that);
that.tipo=tipo;
return that;
}
AppliedMemberClass.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],$tp:{Container$MemberClass:{'var':'in'},Type$MemberClass:{'var':'out','def':{t:Anything}},Arguments$MemberClass:{'var':'in','satisfies':[{t:Sequential,a:{Element$Iterable:{t:Anything}}}],'def':{t:Nothing}}},satisfies:[{t:MemberClass$meta$model,a:{Arguments$MemberClass:'Arguments$MemberClass',Type$MemberClass:'Type$MemberClass',Container$MemberClass:'Container$MemberClass'}}],$an:function(){return[shared(),abstract()];},d:['','AppliedMemberClass']};};
ex$.AppliedMemberClass=AppliedMemberClass;
function $init$AppliedMemberClass(){
if (AppliedMemberClass.$$===undefined){
initTypeProto(AppliedMemberClass,'ceylon.language.meta.model::AppliedMemberClass',Basic,MemberClass$meta$model);
(function($$amc){
$$amc.$_bind=function $_bind(cont){
var ot=cont.getT$name ? cont.getT$all()[cont.getT$name()]:throwexc(IncompatibleTypeException$meta$model("Container does not appear to be a Ceylon object"));
if (!ot)throw IncompatibleTypeException$meta$model("Incompatible Container (has no metamodel information");
var omm=getrtmm$$(ot);
var mm=getrtmm$$(this.tipo);
if (!extendsType({t:ot},{t:mm.$cont}))throw IncompatibleTypeException$meta$model("Incompatible container type");
return this(cont);
};$$amc.$_bind.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Class$meta$model,a:{Arguments$Class:'Arguments',Type$Class:'Type'}},$ps:[{$nm:'container',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:MemberClass$meta$model,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','MemberClass','$m','bind']};};
})(AppliedMemberClass.$$.prototype);
}
return AppliedMemberClass;
}
ex$.$init$AppliedMemberClass$meta$model=$init$AppliedMemberClass;
$init$AppliedMemberClass();
function AppliedInterface(tipo,$$targs$$,that,myTargs) {
$init$AppliedInterface();
if (that===undefined){
var mm = getrtmm$$(tipo);
if (mm && mm.$cont) {
that=function(x){
that.tipo=function(){return tipo.apply(x,arguments);};
that.$bound=x;
return that;
}
that.tipo$2=tipo;
} else {
that=new AppliedInterface.$$;
}
}
set_type_args(that,$$targs$$);
Interface$meta$model($$targs$$,that);
that.$targs=myTargs;
that.getMethod=ClassOrInterface$meta$model.$$.prototype.getMethod;
that.getDeclaredMethod=ClassOrInterface$meta$model.$$.prototype.getDeclaredMethod;
that.getAttribute=ClassOrInterface$meta$model.$$.prototype.getAttribute;
that.getDeclaredAttribute=ClassOrInterface$meta$model.$$.prototype.getDeclaredAttribute;
that.getClassOrInterface=ClassOrInterface$meta$model.$$.prototype.getClassOrInterface;
that.getDeclaredClassOrInterface=ClassOrInterface$meta$model.$$.prototype.getDeclaredClassOrInterface;
that.getClass=ClassOrInterface$meta$model.$$.prototype.getClass;
that.getDeclaredClass=ClassOrInterface$meta$model.$$.prototype.getDeclaredClass;
that.getInterface=ClassOrInterface$meta$model.$$.prototype.getInterface;
that.getDeclaredInterface=ClassOrInterface$meta$model.$$.prototype.getDeclaredInterface;
that.equals=ClassModel$meta$model.$$.prototype.equals;
that.typeOf=ClassOrInterface$meta$model.$$.prototype.typeOf;
that.supertypeOf=ClassOrInterface$meta$model.$$.prototype.supertypeOf;
that.subtypeOf=ClassOrInterface$meta$model.$$.prototype.subtypeOf;
that.exactly=ClassOrInterface$meta$model.$$.prototype.exactly;
var dummy = new AppliedInterface.$$;
that.$$=AppliedInterface.$$;
that.getT$all=function(){return dummy.getT$all();};
that.getT$name=function(){return dummy.getT$name();};
that.equals=function(o){
var eq=is$(o,{t:AppliedInterface}) && (o.tipo$2||o.tipo)==tipo;
if (that.$bound)eq=eq && o.$bound && o.$bound.equals(that.$bound);else eq=eq && o.$bound===undefined;
return eq;
};
atr$(that,'string',function(){
return $qname(mm);
},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},d:['$','Object','$at','string']};});
atr$(that,'declaration',function(){
return InterfaceModel$meta$model.$$.prototype.$prop$getDeclaration.get.call(that);
},undefined,InterfaceModel$meta$model.$$.prototype.$prop$getDeclaration.$crtmm$);
that.tipo=tipo;
return that;
}
AppliedInterface.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$tp:{Type$Interface:{'var':'out','def':{t:Anything}}},satisfies:[{t:Interface$meta$model,a:{Type$Interface:'Type$Interface'}}],$an:function(){return[shared()];},d:['ceylon.language.meta.model','Interface']};};
ex$.AppliedInterface=AppliedInterface;
function $init$AppliedInterface(){
if (AppliedInterface.$$===undefined){
initTypeProto(AppliedInterface,'ceylon.language.meta.model::AppliedInterface',Basic,Interface$meta$model);
(function($$appliedInterface){
})(AppliedInterface.$$.prototype);
}
return AppliedInterface;
}
ex$.$init$AppliedInterface$meta$model=$init$AppliedInterface;
$init$AppliedInterface();
function AppliedMemberInterface(tipo,$$targs$$,that,myTargs){
$init$AppliedMemberInterface();
if (that===undefined){
var mm = getrtmm$$(tipo);
if (mm && mm.$cont) {
that=function(x){
var rv=tipo.bind(x);
rv.$crtmm$=tipo.$crtmm$;
var nt={t:tipo};
if (x.$$targs$$) {
nt.a={};
for (var nta in x.$$targs$$)nt.a[nta]=x.$$targs$$[nta];
}
if (that.$targs) {
if (!nt.a)nt.a={};
for (var nta in that.$targs)nt.a[nta]=that.$targs[nta];
}
rv=AppliedInterface(rv,{Type$Interface:nt});
if (nt.a)rv.$targs=nt.a;
rv.$bound=x;
return rv;
}
that.tipo$2=tipo;
} else {
that=new AppliedMemberInterface.$$;
}
}
set_type_args(that,$$targs$$);
MemberInterface$meta$model(that.$$targs$$===undefined?$$targs$$:{Type$MemberInterface:that.$$targs$$.Type$MemberInterface,
Container$MemberInterface:that.$$targs$$.Container$MemberInterface},that);
that.$targs=myTargs;
that.getMethod=ClassOrInterface$meta$model.$$.prototype.getMethod;
that.getDeclaredMethod=ClassOrInterface$meta$model.$$.prototype.getDeclaredMethod;
that.getAttribute=ClassOrInterface$meta$model.$$.prototype.getAttribute;
that.getDeclaredAttribute=ClassOrInterface$meta$model.$$.prototype.getDeclaredAttribute;
that.getClassOrInterface=ClassOrInterface$meta$model.$$.prototype.getClassOrInterface;
that.getDeclaredClassOrInterface=ClassOrInterface$meta$model.$$.prototype.getDeclaredClassOrInterface;
that.getClass=ClassOrInterface$meta$model.$$.prototype.getClass;
that.getDeclaredClass=ClassOrInterface$meta$model.$$.prototype.getDeclaredClass;
that.getInterface=ClassOrInterface$meta$model.$$.prototype.getInterface;
that.getDeclaredInterface=ClassOrInterface$meta$model.$$.prototype.getDeclaredInterface;
that.equals=ClassModel$meta$model.$$.prototype.equals;
that.typeOf=ClassOrInterface$meta$model.$$.prototype.typeOf;
that.supertypeOf=ClassOrInterface$meta$model.$$.prototype.supertypeOf;
that.subtypeOf=ClassOrInterface$meta$model.$$.prototype.subtypeOf;
that.exactly=ClassOrInterface$meta$model.$$.prototype.exactly;
that.tipo=tipo;
var dummy = new AppliedMemberInterface.$$;
that.$$=AppliedMemberInterface.$$;
that.getT$all=function(){return dummy.getT$all();};
that.getT$name=function(){return dummy.getT$name();};
that.equals=function(o){
var eq=is$(o,{t:AppliedMemberInterface}) && (o.tipo$2||o.tipo)==tipo;
if (that.$bound)eq=eq && o.$bound && o.$bound.equals(that.$bound);else eq=eq && o.$bound===undefined;
return eq;
};
atr$(that,'string',function(){
return $qname(mm);
},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},d:['$','Object','$at','string']};});
atr$(that,'declaration',function(){
return InterfaceModel$meta$model.$$.prototype.$prop$getDeclaration.get.call(that);
},undefined,InterfaceModel$meta$model.$$.prototype.$prop$getDeclaration.$crtmm$);
that.$_bind=function(x){return AppliedMemberInterface.$$.prototype.$_bind.call(that,x);}
return that;
}
AppliedMemberInterface.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],$tp:{Container$MemberInterface:{'var':'in'},Type$MemberInterface:{'var':'out','def':{t:Anything}}},satisfies:[{t:MemberInterface$meta$model,a:{Type$MemberInterface:'Type$MemberInterface',Container$MemberInterface:'Container$MemberInterface'}}],$an:function(){return[shared(),abstract()];},d:['ceylon.language.meta.model','MemberInterface']};};
ex$.AppliedMemberInterface=AppliedMemberInterface;
function $init$AppliedMemberInterface(){
if (AppliedMemberInterface.$$===undefined){
initTypeProto(AppliedMemberInterface,'ceylon.language.meta.model::AppliedMemberInterface',Basic,MemberInterface$meta$model);
(function($$appliedMemberInterface){
$$appliedMemberInterface.$_bind=function $_bind(container$2){
var $$appliedMemberInterface=this;
throw Exception("IMPL MemberInterface.bind");
};$$appliedMemberInterface.$_bind.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Interface$meta$model,a:{Type$Interface:'Type$Interface'}},$ps:[{$nm:'container',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$cont:MemberInterface,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','MemberInterface','$m','bind']};};
})(AppliedMemberInterface.$$.prototype);
}
return AppliedMemberInterface;
}
ex$.$init$AppliedMemberInterface$meta$model=$init$AppliedMemberInterface;
$init$AppliedMemberInterface();
function AppliedUnionType(tipo,types$2, $$targs$$, that) {
$init$AppliedUnionType();
if (that===undefined)that=new AppliedUnionType.$$;
set_type_args(that,$$targs$$);
UnionType$meta$model(that.$$targs$$===undefined?$$targs$$:{Union$UnionType:that.$$targs$$.Union$UnionType},that);
that.tipo=tipo;
that._types=types$2;
return that;
}
AppliedUnionType.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$tp:{Union:{'var':'out','def':{t:Anything}}},satisfies:[{t:UnionType$meta$model,a:{Union:'Union'}}],$an:function(){return[shared()];},d:['ceylon.language.meta.model','UnionType']};};
function $init$AppliedUnionType(){
if (AppliedUnionType.$$===undefined){
initTypeProto(AppliedUnionType,'ceylon.language.meta.model::AppliedUnionType',Basic,UnionType$meta$model);
(function($$appliedUnionType){
atr$($$appliedUnionType,'string',function(){
var qn="";
var first=true;
for (var i=0;i<this._types.length;i++) {
if (first)first=false;else qn+="|";
qn+=this._types[i].string;
}
return qn;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},d:['$','Object','$at','string']};});
atr$($$appliedUnionType,'hash',function(){
var h=this._types.length;
for (var i=0; i<this._types.length;i++) {
h+=this._types[i].hash;
}
return h;
},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},d:['$','Object','$at','hash']};});
$$appliedUnionType.equals=function(u) {
if(is$(u,{t:AppliedUnionType})) {
var mine=this._types;
var his=u.caseTypes;
if (mine.size==his.size) {
for (var i=0;i<mine.length;i++) {
if (!his.contains(mine[i]))return false;
}
return true;
}
}
return false;
}
atr$($$appliedUnionType,'caseTypes',function(){
var $$appliedUnionType=this;
return $$appliedUnionType._types; //TODO type
},undefined,function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:{t:Type$meta$model,a:{Type$Type:'Union$UnionType'}}}},$cont:AppliedUnionType,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','UnionType','$at','caseTypes']};});
$$appliedUnionType.typeOf=function typeOf(instance$20){
var tipos=[];
for (var i=0; i < this._types.length;i++) {
var _t = this._types[i];
if (_t.tipo) {
_t={t:_t.tipo};
} else if (_t.t===undefined) {
_t={t:_t};
}
tipos.push(_t);
}
return is$(instance$20,{t:'u',l:tipos});
};$$appliedUnionType.typeOf.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Boolean},$ps:[{$nm:'instance',$mt:'prm',$t:{t:Anything},$an:function(){return[];}}],$cont:AppliedUnionType,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','UnionType','$m','typeOf']};};
$$appliedUnionType.supertypeOf=function supertypeOf(type$21){
var $$appliedUnionType=this;
throw Exception("IMPL AppliedUnionType.supertypeOf");
};$$appliedUnionType.supertypeOf.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Boolean},$ps:[{$nm:'type',$mt:'prm',$t:{t:Type$meta$model,a:{Type$Type:{t:Anything}}},$an:function(){return[];}}],$cont:AppliedUnionType,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','UnionType','$m','supertypeOf']};};
$$appliedUnionType.exactly=function exactly(type$22){
if (is$(type$25, {t:AppliedUnionType})) {
for (var i=0; i<this._types.length;i++) {
var myt = this._types[i];
var was=false;
for (var j=0; j<type$25._types.length;j++) {
was |= myt.exactly(type$25._types[j]);
}
if (!was)return false;
}
for (var i=0; i<type$25._types.length;i++) {
var myt = type$25._types[i];
var was=false;
for (var j=0; j<this._types.length;j++) {
was |= myt.exactly(this._types[j]);
}
if (!was)return false;
}
return true;
}
return false;
};$$appliedUnionType.exactly.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Boolean},$ps:[{$nm:'type',$mt:'prm',$t:{t:Type$meta$model,a:{Type$Type:{t:Anything}}},$an:function(){return[];}}],$cont:AppliedUnionType,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','UnionType','$m','exactly']};};
})(AppliedUnionType.$$.prototype);
}
return AppliedUnionType;
}
ex$.$init$AppliedUnionType$meta$model=$init$AppliedUnionType;
$init$AppliedUnionType();
function AppliedIntersectionType(tipo,types$3, $$targs$$, that) {
$init$AppliedIntersectionType();
if (that===undefined)that=new AppliedIntersectionType.$$;
set_type_args(that,$$targs$$);
that._types=types$3;
IntersectionType$meta$model(that.$$targs$$===undefined?$$targs$$:{Intersection$IntersectionType:that.$$targs$$.Intersection$IntersectionType},that);
that.tipo=tipo;
return that;
}
AppliedIntersectionType.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$tp:{Intersection$IntersectionType:{'var':'out','def':{t:Anything}}},satisfies:[{t:IntersectionType$meta$model,a:{Intersection$IntersectionType:'Intersection$IntersectionType'}}],$an:function(){return[shared()];},d:['ceylon.language.meta.model','IntersectionType']};};
function $init$AppliedIntersectionType(){
if (AppliedIntersectionType.$$===undefined){
initTypeProto(AppliedIntersectionType,'ceylon.language.meta.model::AppliedIntersectionType',Basic,IntersectionType$meta$model);
(function($$appliedIntersectionType){
atr$($$appliedIntersectionType,'string',function(){
var qn="";
var first=true;
for (var i=0;i<this._types.length;i++) {
if (first)first=false;else qn+="&";
qn+=this._types[i].string;
}
return qn;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},d:['$','Object','$at','string']};});
atr$($$appliedIntersectionType,'hash',function(){
var h=this._types.length;
for (var i=0; i<this._types.length;i++) {
h+=this._types[i].hash;
}
return h;
},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},d:['$','Object','$at','hash']};});
$$appliedIntersectionType.equals=function(u) {
if(is$(u,{t:AppliedIntersectionType})) {
var mine=this._types;
var his=u.satisfiedTypes;
if (mine.size==his.size) {
for (var i=0;i<mine.length;i++) {
if (!his.contains(mine[i]))return false;
}
return true;
}
}
return false;
}
atr$($$appliedIntersectionType,'satisfiedTypes',function(){
var $$appliedIntersectionType=this;
return $$appliedIntersectionType._types;
},undefined,function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:{t:Type$meta$model,a:{Type$Type:'Intersection$IntersectionType'}}}},$cont:AppliedIntersectionType,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','IntersectionType','$at','satisfiedTypes']};});
$$appliedIntersectionType.typeOf=function typeOf(instance$23){
var tipos=[];
for (var i=0; i < this._types.length;i++) {
var _t = this._types[i];
if (_t.tipo) {
_t={t:_t.tipo};
} else if (_t.t===undefined) {
_t={t:_t};
}
tipos.push(_t);
}
return is$(instance$23,{t:'i',l:tipos});
};$$appliedIntersectionType.typeOf.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Boolean},$ps:[{$nm:'instance',$mt:'prm',$t:{t:Anything},$an:function(){return[];}}],$cont:AppliedIntersectionType,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','IntersectionType','$m','typeOf']};};
$$appliedIntersectionType.supertypeOf=function supertypeOf(type$24){
var $$appliedIntersectionType=this;
throw Exception("IMPL AppliedIntersectionType.supertypeOf");
};$$appliedIntersectionType.supertypeOf.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Boolean},$ps:[{$nm:'type',$mt:'prm',$t:{t:Type$meta$model,a:{Type$Type:{t:Anything}}},$an:function(){return[];}}],$cont:AppliedIntersectionType,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','IntersectionType','$m','supertypeOf']};};
$$appliedIntersectionType.exactly=function exactly(type$25){
if (is$(type$25, {t:AppliedIntersectionType})) {
for (var i=0; i<this._types.length;i++) {
var myt = this._types[i];
var was=false;
for (var j=0; j<type$25._types.length;j++) {
was |= myt.exactly(type$25._types[j]);
}
if (!was)return false;
}
for (var i=0; i<type$25._types.length;i++) {
var myt = type$25._types[i];
var was=false;
for (var j=0; j<this._types.length;j++) {
was |= myt.exactly(this._types[j]);
}
if (!was)return false;
}
return true;
}
return false;
};$$appliedIntersectionType.exactly.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Boolean},$ps:[{$nm:'type',$mt:'prm',$t:{t:Type$meta$model,a:{Type$Type:{t:Anything}}},$an:function(){return[];}}],$cont:AppliedIntersectionType,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','IntersectionType','$m','exactly']};};
})(AppliedIntersectionType.$$.prototype);
}
return AppliedIntersectionType;
}
ex$.$init$AppliedIntersectionType$meta$model=$init$AppliedIntersectionType;
$init$AppliedIntersectionType();
function AppliedFunction(m,$$targs$$,o,mptypes) {
var mm=getrtmm$$(m);
var ttargs;
if (mm.$tp) {
if (!mptypes || mptypes.size<1)throw TypeApplicationException$meta$model("Missing type arguments for AppliedFunction");
var i=0;ttargs={};
for (var tp in mm.$tp) {
var _ta=mptypes.$_get?mptypes.$_get(i):mptypes[i];
if(_ta&&_ta.tipo)ttargs[tp]={t:_ta.tipo};
else if (_ta) console.log("TODO assign type arg " + _ta + " to " + tp);
else if (mptypes[tp])ttargs[tp]=mptypes[tp];
else throw new Error("No more type arguments in AppliedFunction!");
i++;
}
}
var f = o===undefined&&mm.$cont?function(x){
return AppliedFunction(m,$$targs$$,x,mptypes);
}:function(){
var _fu=(o&&o[mm.d[mm.d.length-1]])||m;//Get the object's method if possible
if (mm.$tp) {
var _a=[];
for (var i=0;i<arguments.length;i++)_a.push(arguments[i]);
_a.push(ttargs);
return _fu.apply(o,_a);
}
return _fu.apply(o,arguments);
}
f.$crtmm$={mod:$CCMM$,d:['ceylon.language.meta.model','Function'],$t:mm.$t,$ps:mm.$ps,$an:mm.$an};
var dummy=new AppliedFunction.$$;
f.getT$all=function(){return dummy.getT$all();}
f.getT$name=function(){return dummy.getT$name();}
if ($$targs$$===undefined) {
throw TypeApplicationException$meta$model("Missing type arguments for AppliedFunction");
}
Function$meta$model($$targs$$,f);
f.tipo=m;
f.$targs=ttargs;
if (o)f.$bound=o;
atr$(f,'typeArguments',function(){
return FunctionModel$meta$model.$$.prototype.$prop$getTypeArguments.get.call(f);
},undefined,function(){return{mod:$CCMM$,$t:{t:Map,a:{Key$Map:{t:TypeParameter$meta$declaration},Item$Map:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$cont:AppliedFunction,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Generic','$at','typeArguments']};});
f.equals=function(oo){
return is$(oo,{t:AppliedFunction}) && oo.tipo===m && oo.typeArguments.equals(this.typeArguments) && (o?o.equals(oo.$bound):oo.$bound===o);
}
atr$(f,'string',function(){
return FunctionModel$meta$model.$$.prototype.$prop$getString.get.call(f);
},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},d:['$','Object','$at','string'],$cont:AppliedFunction};});
atr$(f,'parameterTypes',function(){
return FunctionModel$meta$model.$$.prototype.$prop$getParameterTypes.get.call(f);
},undefined,FunctionModel$meta$model.$$.prototype.$prop$getParameterTypes.$crtmm$);
atr$(f,'declaration',function(){
if (f._decl)return f._decl;
f._decl = OpenFunction(getModules$meta().find(mm.mod['$mod-name'],mm.mod['$mod-version']).findPackage(mm.d[0]), m);
return f._decl;
},undefined,function(){return{mod:$CCMM$,$t:{t:FunctionDeclaration$meta$declaration},d:['ceylon.language.meta.model','FunctionModel','$at','declaration']};});
f.$_apply=function(a){
a=convert$params(mm,a);
if (ttargs) {
var _a=[];
for (var i=0;i<a.size;i++)_a.push(a.$_get(i));
_a.push(ttargs);
a=_a;
}
return m.apply(o,a);
}
f.namedApply=function(args) {
if (mm.$ps===undefined)throw InvocationException$meta$model("Applied function does not have metamodel parameter info for named args call");
var mapped={};
var iter=args.iterator();var a;while((a=iter.next())!==getFinished()) {
mapped[a.key]=a.item===getNullArgument$meta$model()?null:a.item;
}
var ordered=[];
for (var i=0; i<mm.$ps.length; i++) {
var p=mm.$ps[i];
var v=mapped[p.$nm];
if (v===undefined && p.$def===undefined) {
throw InvocationException$meta$model("Required argument " + p.$nm + " missing in named-argument invocation");
} else if (v!==undefined) {
var t=p.$t;
if(typeof(t)==='string'&&ttargs)t=ttargs[t];
if (t&&!is$(v,t))throw IncompatibleTypeException$meta$model("Argument " + p.$nm + "="+v+" is not of the expected type.");
}
delete mapped[p.$nm];
ordered.push(v);
}
if (Object.keys(mapped).length>0)throw new InvocationException$meta$model("No arguments with names " + Object.keys(mapped));
if (ttargs) {
ordered.push(ttargs);
}
return m.apply(o,ordered);
}
return f;
}
AppliedFunction.$crtmm$=function(){return{mod:$CCMM$,d:['ceylon.language.meta.model','Function'],satisfies:{t:Function$meta$model,a:{Type$Function:'Type$Function',Arguments$Function:'Arguments$Function'}},$an:function(){return [shared(),actual()];}};};
ex$.AppliedFunction$meta$model=AppliedFunction;
initTypeProto(AppliedFunction,'ceylon.language.meta.model::AppliedFunction',Basic,Function$meta$model);
function AppliedValue(obj,attr,$$targs$$,$$appliedValue){
if (attr===undefined)throw Exception("Value reference not found. Metamodel doesn't work with modules compiled in lexical scope style.");
var mm = getrtmm$$(attr);
$init$AppliedValue();
if ($$appliedValue===undefined){
if (obj||mm.$cont===undefined)$$appliedValue=new AppliedValue.$$;
else {
$$appliedValue=function(x){return AppliedValue(x,attr,$$targs$$);};
$$appliedValue.$$=AppliedValue.$$;
var dummy=new AppliedValue.$$;
$$appliedValue.getT$all=function(){return dummy.getT$all();};
$$appliedValue.getT$name=function(){return dummy.getT$name();};
atr$($$appliedValue,'string',function(){
var qn;
if ($$targs$$ && $$targs$$.Container$Value) {
qn = typeLiteral$meta({Type$typeLiteral:$$targs$$.Container$Value}).string + "." + mm.d[mm.d.length-1];
} else if (mm.$cont) {
qn = typeLiteral$meta({Type$typeLiteral:{t:mm.$cont}}).string + "." + mm.d[mm.d.length-1];
} else {
qn=$qname(mm);
}
return qn;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},d:['$','Object','$at','string']};});
}
}
set_type_args($$appliedValue,$$targs$$);
Value$meta$model($$appliedValue.$$targs$$===undefined?$$targs$$:{Get$Value:$$appliedValue.$$targs$$.Get$Value,Set$Value:$$appliedValue.$$targs$$.Set$Value},$$appliedValue);
if($$targs$$.Container$Value)Attribute$meta$model({Get$Attribute:$$targs$$.Get$Value,
Set$Attribute:$$targs$$.Set$Value,Container$Attribute:$$targs$$.Container$Value},$$appliedValue);//TODO checar si no es if Container$Attribute
$$appliedValue.obj=obj;
$$appliedValue.tipo=attr;
return $$appliedValue;
}
AppliedValue.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$tp:{Get:{'var':'out'},Set:{'var':'in'}},
satisfies:[{t:Value$meta$model,a:{Get:'Get',Set:'Set'}}],$an:function(){return[shared()];},d:['ceylon.language.meta.model','Value']};};
ex$.AppliedValue$meta$model=AppliedValue;
function $init$AppliedValue(){
if (AppliedValue.$$===undefined){
initTypeProto(AppliedValue,'ceylon.language.meta.model::AppliedValue',Basic,Value$meta$model);
(function($$appliedValue){
atr$($$appliedValue,'string',function(){
return $qname(this.tipo);
},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},d:['$','Object','$at','string']};});
atr$($$appliedValue,'declaration',function(){
var $$av=this;
var mm = $$av.tipo.$crtmm$;
var _pkg = getModules$meta().find(mm.mod['$mod-name'],mm.mod['$mod-version']).findPackage(mm.d[0]);
return OpenValue(_pkg, $$av.tipo);
},undefined,function(){return{mod:$CCMM$,$t:{t:ValueDeclaration$meta$declaration},$cont:AppliedValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Value','$at','declaration']};});
$$appliedValue.$_get=function $_get(){
if (this.obj) {
var mm=this.tipo.$crtmm$;
return (mm&&mm.d&&this.obj[mm.d[mm.d.length-1]])||this.tipo.get.call(this.obj);
}
return this.tipo.get();
};$$appliedValue.$_get.$crtmm$=function(){return{mod:$CCMM$,$t:'Get',$ps:[],$cont:AppliedValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Value','$m','get']};};
$$appliedValue.set=function set(newValue$26){
if (!this.tipo.set)throw MutationException$meta$model("Value is not writable");
return this.obj?this.tipo.set.call(this.obj,newValue$26):this.tipo.set(newValue$26);
};$$appliedValue.set.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'newValue',$mt:'prm',$t:'Set',$an:function(){return[];}}],$cont:AppliedValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Value','$m','set']};};
$$appliedValue.setIfAssignable=function(v) {
var mm = this.tipo.$crtmm$;
if (!is$(v,mm.$t))throw IncompatibleTypeException$meta$model("The specified value has the wrong type");
var mdl=get_model(mm);
if (!(mdl &&mdl['var']))throw MutationException$meta$model("Attempt to modify a value that is not variable");
this.obj?this.tipo.set.call(this.obj,v):this.tipo.set(v);
};$$appliedValue.setIfAssignable.$crtmm$=function(){return{mod:$CCMM$,$ps:[],$cont:AppliedValue,d:['ceylon.language.meta.model','Value','$m','setIfAssignable']};};
atr$($$appliedValue,'type',function(){
var $$atr=this;
var t = $$atr.tipo.$crtmm$;
return typeLiteral$meta({Type$typeLiteral:t.$t});
},undefined,function(){return{mod:$CCMM$,$t:{t:Type$meta$model,a:{Type$Type:'Get$Value'}},$cont:AppliedValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Value','$at','type']};});
atr$($$appliedValue,'container',function(){
if (this.$$targs$$.Container$Value) {
return typeLiteral$meta({Type$typeLiteral:this.$$targs$$.Container$Value});
} else if (this.$$targs$$.Container$Attribute) {
return typeLiteral$meta({Type$typeLiteral:this.$$targs$$.Container$Attribute});
}
var mm=this.tipo.$crtmm$;
if (mm.$cont) {
return typeLiteral$meta({Type$typeLiteral:{t:mm.$cont}});
}
return null;
},undefined,function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:Type$meta$model,a:{Type$Type:{t:Anything}}}]},$cont:AppliedValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Value','$at','container']};});
})(AppliedValue.$$.prototype);
}
return AppliedValue;
}
ex$.$init$AppliedValue$meta$model=$init$AppliedValue;
$init$AppliedValue();
function AppliedMethod(tipo,typeArgs,$$targs$$,$$appliedMethod){
$init$AppliedMethod();
var mm = getrtmm$$(tipo);
if (mm.$tp) {
if (typeArgs===undefined || typeArgs.size<1)
throw TypeApplicationException$meta$model("Missing type arguments in call to FunctionDeclaration.apply");
var _ta={}; var i=0;
for (var tp in mm.$tp) {
if (typeArgs.$_get(i)===undefined)
throw TypeApplicationException$meta$model("Missing type argument for "+tp);
var _tp = mm.$tp[tp];
var _t = typeArgs.$_get(i).tipo;
_ta[tp]={t:_t};
if ((_tp.satisfies && _tp.satisfies.length>0) || (_tp.of && _tp.of.length > 0)) {
var restraints=(_tp.satisfies && _tp.satisfies.length>0)?_tp.satisfies:_tp.of;
for (var j=0; j<restraints.length;j++) {
var _r=restraints[j];if (typeof(_r)==='function')_r=getrtmm$$(_r).$t;
if (!extendsType(_ta[tp],_r))
throw TypeApplicationException$meta$model("Type argument for " + tp + " violates type parameter constraints");
}
}
i++;
}
}
if ($$appliedMethod===undefined){
$$appliedMethod=function(x){
return AppliedFunction(tipo,{Type$Function:$$targs$$.Type$Method,Arguments$Function:$$targs$$.Arguments$Method,
Container$Function:$$targs$$.Container$Method},x,typeArgs);
}
var dummy=new AppliedMethod.$$;
$$appliedMethod.getT$all=function(){return dummy.getT$all();};
$$appliedMethod.getT$name=function(){return dummy.getT$name();};
}
if (_ta)$$appliedMethod.$targs=_ta;
set_type_args($$appliedMethod,$$targs$$);
Method$meta$model($$appliedMethod.$$targs$$===undefined?$$targs$$:{Arguments$Method:$$appliedMethod.$$targs$$.Arguments$Method,
Type$Method:$$appliedMethod.$$targs$$.Type$Method,Container$Method:$$appliedMethod.$$targs$$.Container$Method},$$appliedMethod);
$$appliedMethod.tipo=tipo;
atr$($$appliedMethod,'declaration',function(){
var _pkg = getModules$meta().find(mm.mod['$mod-name'],mm.mod['$mod-version']).findPackage(mm.d[0]);
return OpenFunction(_pkg, $$appliedMethod.tipo);
},undefined,function(){return{mod:$CCMM$,$t:{t:FunctionDeclaration$meta$declaration},$cont:AppliedMethod,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Method','$at','declaration']};});
atr$($$appliedMethod,'type',function(){
return typeLiteral$meta({Type$typeLiteral:mm.$t});
},undefined,function(){return{mod:$CCMM$,$t:{t:Type$meta$model,a:{Type$Type:'Type'}},$cont:AppliedMethod,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Method','$at','type']};});
atr$($$appliedMethod,'typeArguments',function(){
return FunctionModel$meta$model.$$.prototype.$prop$getTypeArguments.get.call($$appliedMethod);
},undefined,function(){return{mod:$CCMM$,$t:{t:Map,a:{Key:{t:TypeParameter$meta$declaration},Item:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$cont:AppliedMethod,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Generic','$at','typeArguments']};});
atr$($$appliedMethod,'parameterTypes',function(){
return FunctionModel$meta$model.$$.prototype.$prop$getParameterTypes.get.call($$appliedMethod);
},undefined,FunctionModel$meta$model.$$.prototype.$prop$getParameterTypes.$crtmm$);
$$appliedMethod.equals=function(o){
return is$(o,{t:AppliedMethod}) && o.tipo===tipo && o.typeArguments.equals(this.typeArguments);
}
$$appliedMethod.$_bind=function(o){
if (!is$(o,{t:mm.$cont}))throw IncompatibleTypeException$meta$model("Cannot bind " + $$appliedMethod.string + " to "+o);
return $$appliedMethod(o);
}
atr$($$appliedMethod,'string',function(){
return FunctionModel$meta$model.$$.prototype.$prop$getString.get.call($$appliedMethod);
},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},d:['$','Object','$at','string'],$cont:AppliedMethod};});
return $$appliedMethod;
}
AppliedMethod.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$tp:{Container$Method:{'var':'in'},Type$Method:{'var':'out','def':{t:Anything}},Arguments$Method:{'var':'in','satisfies':[{t:Sequential,a:{Element$Iterable:{t:Anything}}}],'def':{t:Nothing}}},satisfies:[{t:Method$meta$model,a:{Arguments$Method:'Arguments$Method',Type$Method:'Type$Method',Container$Method:'Container$Method'}}],$an:function(){return[shared()];},d:['ceylon.language.meta.model','Method']};};
ex$.AppliedMethod$meta$model=AppliedMethod;
function $init$AppliedMethod(){
if (AppliedMethod.$$===undefined){
initTypeProto(AppliedMethod,'ceylon.language.meta.model::AppliedMethod',Basic,Method$meta$model);
(function($$appliedMethod){
})(AppliedMethod.$$.prototype);
}
return AppliedMethod;
}
ex$.$init$AppliedMethod$meta$model=$init$AppliedMethod;
$init$AppliedMethod();
function AppliedAttribute(pname, atr,$$targs$$,$$appliedAttribute){
$init$AppliedAttribute();
if ($$appliedAttribute===undefined) {
$$appliedAttribute=function(x){return AppliedValue(x,atr, {Get$Value:$$targs$$.Get$Attribute,Set$Value:$$targs$$.Set$Attribute,
Container$Value:$$targs$$.Container$Attribute});};
$$appliedAttribute.$$=AppliedAttribute.$$;
var dummy=new AppliedAttribute.$$;
$$appliedAttribute.getT$all=function(){return dummy.getT$all();};
$$appliedAttribute.getT$name=function(){return dummy.getT$name();};
}
set_type_args($$appliedAttribute,$$targs$$);
Attribute$meta$model($$appliedAttribute.$$targs$$===undefined?$$targs$$:{Get$Attribute:$$appliedAttribute.$$targs$$.Get$Attribute,Set$Attribute:$$appliedAttribute.$$targs$$.Set$Attribute,Container$Attribute:$$appliedAttribute.$$targs$$.Container$Attribute},$$appliedAttribute);
$$appliedAttribute.tipo=atr;
$$appliedAttribute.pname=pname;
atr$($$appliedAttribute,'type',function(){
var t = getrtmm$$(atr);
if (t===undefined)throw Exception("Attribute reference not found. Metamodel doesn't work in modules compiled in lexical scope style.");
t=t.$t;
return typeLiteral$meta({Type$typeLiteral:t});
},undefined,function(){return{mod:$CCMM$,$t:{t:Type$meta$model,a:{Type$Type:'Get$Attribute'}},$cont:AppliedAttribute,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Attribute','$at','type']};});
atr$($$appliedAttribute,'declaration',function(){
var mm = getrtmm$$(atr);
var pkg = getModules$meta().find(mm.mod['$mod-name'],mm.mod['$mod-version']).findPackage(mm.d[0]);
return OpenValue(pkg, atr);
},undefined,function(){return{mod:$CCMM$,$t:{t:ValueDeclaration$meta$declaration},$cont:AppliedAttribute,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Attribute','$at','declaration']};});
$$appliedAttribute.$_bind=function(cont){
return AppliedValue(cont,atr,{Get$Value:$$targs$$.Get$Attribute,Set$Value:$$targs$$.Set$Attribute,
Container$Value:$$targs$$.Container$Attribute});
}
atr$($$appliedAttribute,'string',function(){
var c=getrtmm$$(atr).$cont;
if (typeof(c.$crtmm$)==='function')c.$crtmm$=c.$crtmm$();
if (!c)return $qname(atr);
c=c.$crtmm$;
var qn=$qname(c);
if (c.$tp) {
qn+="<"; var first=true;
var cnt=$$targs$$&&$$targs$$.Container$Attribute&&$$targs$$.Container$Attribute.a;
for (var tp in c.$tp) {
if (first)first=false;else qn+=",";
var _ta=cnt&&cnt[tp];
if (_ta) {
qn+=$qname(_ta);
} else qn+=$qname(Anything);
}
qn+=">";
}
qn+="."+pname;
return qn;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},d:['$','Object','$at','string']};});
$$appliedAttribute.equals=function(o) {
return is$(o,{t:AppliedAttribute}) && o.tipo===atr;
}
return $$appliedAttribute;
}
AppliedAttribute.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$tp:{Get:{'var':'out','def':{t:Anything}},Set:{'var':'in','def':{t:Nothing}},Container:{'var':'in'}},satisfies:[{t:Attribute$meta$model,a:{Get:'Get',Set:'Set',Container:'Container'}}],$an:function(){return[shared()];},d:['ceylon.language.meta.model','Attribute']};};
ex$.AppliedAttribute=AppliedAttribute;
function $init$AppliedAttribute(){
if (AppliedAttribute.$$===undefined){
initTypeProto(AppliedAttribute,'ceylon.language.meta.model::AppliedAttribute',Basic,Attribute$meta$model);
(function($$appliedAttribute){
})(AppliedAttribute.$$.prototype);
}
return AppliedAttribute;
}
ex$.$init$AppliedAttribute$meta$model=$init$AppliedAttribute;
$init$AppliedAttribute();
function find$ann(cont,ant) {
var _m=getrtmm$$(cont);
if (!(_m && _m.$an))return null;
if (typeof(_m.$an)==='function')_m.$an=_m.$an();
for (var i=0; i < _m.$an.length; i++) {
if (is$(_m.$an[i],{t:ant}))return _m.$an[i];
}
return null;
}
function _findTypeFromModel(pkg,mdl,cont) {
var mod = pkg.container;
var nm = mdl.$nm;
var mt = mdl['$mt'];
if (mt === 'a' || mt === 'g' || mt === 'o' || mt === 's') {
nm = '$prop$get' + nm[0].toUpperCase() + nm.substring(1);
}
if (cont) {
var imm=getrtmm$$(cont);
if (mt==='c'||mt==='i')nm=nm+'$'+imm.d[imm.d.length-1];
}else if (pkg.suffix) {
nm+=pkg.suffix;
}
var out=cont?cont.$$.prototype:mod.meta;
var rv=out[nm];
if (rv===undefined)rv=out['$_'+nm];
if (rv===undefined){
rv=out['$init$'+nm];
if (typeof(rv)==='function')rv=rv();
}
return rv;
}
function _openTypeFromTarg(targ,o) {
if (targ.t==='u' || targ.t==='i') {
var tl=[];
for (var i=0; i < targ.l.length; i++) {
var _ct=targ.l[i];
if (typeof(_ct)==='string') {
tl.push(OpenTvar(OpenTypeParam(o,_ct)));
} else {
tl.push(_ct.t?_openTypeFromTarg(_ct,o):_ct);
}
}
return (targ.t==='u'?FreeUnion:FreeIntersection)(tl.reifyCeylonType({t:OpenType$meta$declaration}));
} else if (targ.t==='T') {
var mm=getrtmm$$(Tuple);
var lit = typeLiteral$meta({Type$typeLiteral:targ});
} else {
var mm=getrtmm$$(targ.t);
var lit = typeLiteral$meta({Type$typeLiteral:targ.t});
}
if (targ.a && lit)lit._targs=targ.a;
var mdl = get_model(mm);
if (mdl.$mt==='i') {
return FreeInterface(lit);
} else if (mdl.$mt==='c' || mdl.$mt==='o') {
return FreeClass(lit);
}
console.log("Don't know WTF to return for " + lit + " metatype " + mdl.$mt);
}
function FreeClass(declaration, $$freeClass){
$init$FreeClass();
if ($$freeClass===undefined)$$freeClass=new FreeClass.$$;
OpenClassType$meta$declaration($$freeClass);
$$freeClass._decl=declaration;
$$freeClass.$prop$getDeclaration={$crtmm$:function(){return{mod:$CCMM$,$t:{t:ClassDeclaration$meta$declaration},$cont:FreeClass,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','OpenClassType','$at','declaration']};}};
$$freeClass.$prop$getDeclaration.get=function(){return declaration};
return $$freeClass;
}
FreeClass.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:OpenClassType$meta$declaration}],d:['ceylon.language.meta.declaration','OpenClassType']};};
function $init$FreeClass(){
if (FreeClass.$$===undefined){
initTypeProto(FreeClass,'ceylon.language.meta.declaration::FreeClass',Basic,OpenClassType$meta$declaration);
(function($$freeClass){
$$freeClass.equals=function(other) {
return is$(other,{t:FreeClass}) && other.declaration.equals(this.declaration) && this.typeArguments.equals(other.typeArguments);
}
})(FreeClass.$$.prototype);
}
return FreeClass;
}
ex$.$init$FreeClass=$init$FreeClass;
$init$FreeClass();
function FreeInterface(declaration, $$freeInterface){
$init$FreeInterface();
if ($$freeInterface===undefined)$$freeInterface=new FreeInterface.$$;
OpenInterfaceType$meta$declaration($$freeInterface);
$$freeInterface._decl=declaration;
$$freeInterface.$prop$getDeclaration.get=function(){return declaration};
return $$freeInterface;
}
FreeInterface.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:OpenInterfaceType$meta$declaration}],d:['ceylon.language.meta.declaration','OpenInterfaceType']};};
function $init$FreeInterface(){
if (FreeInterface.$$===undefined){
initTypeProto(FreeInterface,'ceylon.language.meta.declaration::FreeInterface',Basic,OpenInterfaceType$meta$declaration);
(function($$freeInterface){
$$freeInterface.equals=function(other) {
return is$(other,{t:FreeInterface}) && other.declaration.equals(this.declaration) && this.typeArguments.equals(other.typeArguments);
}
})(FreeInterface.$$.prototype);
}
return FreeInterface;
}
ex$.$init$FreeInterface=$init$FreeInterface;
$init$FreeInterface();
function OpenFunction(pkg,meta,that){
if (meta===undefined)throw Exception("Function reference not found. Metamodel doesn't work with modules compiled in lexical scope style");
$init$OpenFunction();
if (that===undefined)that=new OpenFunction.$$;
that._pkg=pkg;
var _mm=getrtmm$$(meta);
if (_mm === undefined) {
that.meta=meta;
that.tipo=_findTypeFromModel(pkg,meta);
_mm=getrtmm$$(that.tipo);
} else {
that.tipo = meta;
that.meta = get_model(_mm);
}
that.name_=(that.meta&&that.meta.$nm)||'?';
that.toplevel_=_mm===undefined||_mm.$cont===undefined;
FunctionDeclaration$meta$declaration(that);
return that;
}
OpenFunction.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:FunctionDeclaration$meta$declaration}],d:['ceylon.language.meta.declaration','FunctionDeclaration']};};
function $init$OpenFunction(){
if (OpenFunction.$$===undefined){
initTypeProto(OpenFunction,'ceylon.language.meta.declaration::OpenFunction',Basic,FunctionDeclaration$meta$declaration);
(function($$openFunction){
$$openFunction.equals=function(o) {
if (is$(o,{t:OpenFunction})) {
return o.tipo === this.tipo;
}
return false;
}
$$openFunction.equals.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},d:['$','Object','$m','equals']};}
atr$($$openFunction,'container',function(){
if (this.$parent)return this.$parent;
if (this.toplevel)return this.containingPackage;
return typeLiteral$meta({Type$typeLiteral:this.tipo.$crtmm$.$cont});
},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:NestableDeclaration$meta$declaration},{t:Package$meta$declaration}]},d:['ceylon.language.meta.declaration','NestableDeclaration','$at','container']};});
atr$($$openFunction,'annotation',function(){
return find$ann(this.tipo,AnnotationAnnotation)!==null;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:OpenFunction,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionalDeclaration','$at','annotation']};});
$$openFunction.$_apply=function $_apply(types,$mptypes){
var mm=this.tipo.$crtmm$;
var ta={t:this.tipo};
validate$typeparams(ta,mm.$tp,types);
validate$params(mm.$ps,$mptypes.Arguments$apply,"Wrong number of arguments when applying function");
return ta.a?AppliedFunction(this.tipo,{Type:mm.$t,Arguments:tupleize$params(mm.$ps,ta.a)},undefined,ta.a):
AppliedFunction(this.tipo,{Type:mm.$t,Arguments:tupleize$params(mm.$ps)});
};$$openFunction.$_apply.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Function$meta$model,a:{Arguments:{t:Nothing},Type:{t:Anything}}},$ps:[{$nm:'types',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model}}}}],$cont:OpenFunction,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$m','apply']};};
$$openFunction.memberApply=function memberApply(cont,types,$mptypes){
var mm=this.tipo.$crtmm$;
if (!(cont.tipo && extendsType({t:cont.tipo},{t:mm.$cont}))&&cont!==getNothingType$meta$model())
throw IncompatibleTypeException$meta$model("Incompatible Container type argument");
if (!extendsType(mm.$t,$mptypes.Return$memberApply))throw IncompatibleTypeException$meta$model("Incompatible Return type argument");
validate$params(mm.$ps,$mptypes.Arguments$memberApply,"Wrong number of Arguments for memberApply");
var ta={t:this.tipo};
validate$typeparams(ta,mm.$tp,types);
return AppliedMethod(this.tipo,types,{Container$Method:$mptypes.Container$memberApply,
Type$Method:mm.$t,Arguments$Method:tupleize$params(mm.$ps,ta.a)});
};$$openFunction.memberApply.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Method$meta$model,a:{Arguments:'Arguments',Type:'MethodType',Container:'Container'}},$ps:[{$nm:'types',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model}}}}],$cont:OpenFunction,$tp:{Container:{},MethodType:{},Arguments:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}]}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$m','memberApply']};};
atr$($$openFunction,'defaulted',function(){
return false;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:OpenFunction,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','defaulted']};});
atr$($$openFunction,'variadic',function(){
var $$openFunction=this;
return false;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:OpenFunction,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','variadic']};});
$$openFunction.getParameterDeclaration=function (name$6){
var pd=this.parameterDeclarations;
for (var i=0; i < pd.size; i++) {
if (name$6.equals(pd[i].name))return pd[i];
}
return null;
};
$$openFunction.getParameterDeclaration.$crtmm$=function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:FunctionOrValueDeclaration$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String}}],$cont:OpenFunction,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$m','getParameterDeclaration']};};
atr$($$openFunction,'openType',function(){
var t = this.tipo.$crtmm$.$t;
if (typeof(t)==='string')return OpenTvar(OpenTypeParam(this.tipo,t));
return _openTypeFromTarg(t, this.tipo);
},undefined,function(){return{mod:$CCMM$,$t:{t:OpenType$meta$declaration},$cont:OpenFunction,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','openType']};});
atr$($$openFunction,'name',function(){return this.name_;},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:OpenFunction,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','name']};});
atr$($$openFunction,'containingPackage',function(){return this._pkg;},undefined,function(){return{mod:$CCMM$,$t:{t:Package$meta$declaration},$cont:OpenFunction,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','containingPackage']};});
atr$($$openFunction,'containingModule',function(){return this._pkg.container;},undefined,function(){return{mod:$CCMM$,$t:{t:Package$meta$declaration},$cont:OpenFunction,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','containingPackage']};});
atr$($$openFunction,'toplevel',function(){return this.toplevel_;},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:OpenFunction,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','toplevel']};});
atr$($$openFunction,'string',function(){return "function " + this.qualifiedName;},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:OpenFunction,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Declaration','$at','string']};});
atr$($$openFunction,'qualifiedName',function(){
return $qname(this.tipo);
},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:OpenFunction,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Declaration','$at','qualifiedName']};});
})(OpenFunction.$$.prototype);
}
return OpenFunction;
}
ex$.$init$OpenFunction=$init$OpenFunction;
$init$OpenFunction();
function OpenValue(pkg, meta, that){
if (meta===undefined)throw Exception("Value reference not found. Metamodel doesn't work with modules compiled in lexical scope style");
$init$OpenValue();
if (that===undefined)that=new OpenValue.$$;
that._pkg = pkg;
var _mm=getrtmm$$(meta);
if (_mm === undefined) {
that.meta=meta;
if (meta['$mt']==='prm') {
that.tipo={$crtmm$:meta};
} else {
that.tipo=_findTypeFromModel(pkg,meta);
}
_mm = getrtmm$$(that.tipo);
} else {
that.tipo = meta;
that.meta = get_model(_mm);
}
that.name_=that.meta?that.meta.$nm:_mm&&_mm.d&&_mm.d[_mm.d.length-1];
that.toplevel_=_mm.$cont === undefined;
ValueDeclaration$meta$declaration(that);
return that;
}
OpenValue.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:ValueDeclaration$meta$declaration}],d:['ceylon.language.meta.declaration','ValueDeclaration']};};
function $init$OpenValue(){
if (OpenValue.$$===undefined){
initTypeProto(OpenValue,'ceylon.language.meta.declaration::OpenValue',Basic,ValueDeclaration$meta$declaration);
(function($$openValue){
atr$($$openValue,'container',function(){
if (this.$parent)return this.$parent;
if (this.toplevel)return this.containingPackage;
return typeLiteral$meta({Type$typeLiteral:this.tipo.$crtmm$.$cont});
},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:NestableDeclaration$meta$declaration},{t:Package$meta$declaration}]},d:['ceylon.language.meta.declaration','NestableDeclaration','$at','container']};});
$$openValue.$_apply=function $_apply($$$mptypes){
var mm=getrtmm$$(this.tipo);
if (!extendsType(mm.$t,$$$mptypes.Get$apply))throw IncompatibleTypeException$meta$model("Incompatible Get type argument");
if (!extendsType($$$mptypes.Set$apply,this.tipo.set?mm.$t:{t:Nothing}))throw IncompatibleTypeException$meta$model("Incompatible Set type argument");
return AppliedValue(undefined,this.tipo,{Get$Value:$$$mptypes.Get$apply,Set$Value:$$$mptypes.Set$apply});
};$$openValue.$_apply.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Value$meta$model,a:{Type:{t:Anything}}},$ps:[{$nm:'instance',$mt:'prm',$def:1,$t:{t:Anything}}],$cont:OpenValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$m','apply']};};
$$openValue.memberApply=function memberApply(cont,$mptypes) {
var mm=getrtmm$$(this.tipo);
if (!(cont.tipo && extendsType({t:cont.tipo},{t:mm.$cont}))&&cont!==getNothingType$meta$model())
throw IncompatibleTypeException$meta$model("Incompatible Container type argument");
if (!extendsType(mm.$t,$mptypes.Get$memberApply))throw IncompatibleTypeException$meta$model("Incompatible Get type argument");
if (!extendsType($mptypes.Set$memberApply,this.tipo.set?mm.$t:{t:Nothing}))throw IncompatibleTypeException$meta$model("Incompatible Set type argument");
return AppliedAttribute(this.meta.$nm,this.tipo,{Get$Attribute:$mptypes.Get$apply,Set$Attribute:$mptypes.Set$apply,
Container$Attribute:$mptypes.Container$memberApply});
};$$openValue.memberApply.$crtmm$=function(){return{mod:$CCMM$,d:['ceylon.language.meta.declaration','ValueDeclaration','$m','memberApply']};};
atr$($$openValue,'defaulted',function(){
return false;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:OpenValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','defaulted']};});
atr$($$openValue,'variadic',function(){
return false;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:OpenValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','variadic']};});
atr$($$openValue,'variable',function(){
var _m = get_model(getrtmm$$(this.tipo));
if (_m && _m['var']) return true;
return find$ann(this.tipo,VariableAnnotation)!==null;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:OpenValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','variadic']};});
atr$($$openValue,'openType',function(){
if (this.tipo) {
var mm = getrtmm$$(this.tipo);
if (typeof(mm.$t)==='string') {
return OpenTvar(OpenTypeParam(mm.$cont,mm.$t));
}
return _openTypeFromTarg(mm.$t, this.tipo);
}
throw Error("OpenValue.openType-we don't have a metamodel!");
},undefined,function(){return{mod:$CCMM$,$t:{t:OpenType$meta$declaration},$cont:OpenValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','openType']};});
atr$($$openValue,'name',function(){return this.name_;},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:OpenValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','name']};});
atr$($$openValue,'containingPackage',function(){return this._pkg;},undefined,function(){return{mod:$CCMM$,$t:{t:Package$meta$declaration},$cont:OpenValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','containingPackage']};});
atr$($$openValue,'containingModule',function(){return this._pkg.container;},undefined,function(){return{mod:$CCMM$,$t:{t:Module$meta$declaration},$cont:OpenValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','containingModule']};});
atr$($$openValue,'toplevel',function(){return this.toplevel_;},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:OpenValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','toplevel']};});
$$openValue.equals=function(other) {
if (is$(other, {t:OpenValue}) && other.name.equals(this.name) && other.toplevel===this.toplevel && other.containingPackage.equals(this.containingPackage)) {
return other.meta==this.meta;
}
return false;
}
atr$($$openValue,'string',function(){return "value " + this.qualifiedName;},undefined,{$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','Object','$at','string']});
atr$($$openValue,'qualifiedName',function(){
return $qname(this.tipo);
},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:OpenValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Declaration','$at','qualifiedName']};});
$$openValue.memberSet=function(c,v) {
if (!is$(c,{t:this.tipo.$crtmm$.$cont}))throw IncompatibleTypeException$meta$model("Incompatible container type");
if (!is$(v,this.tipo.$crtmm$.$t))throw IncompatibleTypeException$meta$model("Incompatible value type");
if (!this.tipo.set)throw MutationException$meta$model($qname(this.tipo.$crtmm$)+" is not writable");
c[this.name]=v;
};
atr$($$openValue,'setter',function(){
return OpenSetter(this);
},undefined,function(){return{mod:$CCMM$,$t:{t:SetterDeclaration$meta$declaration},$cont:OpenValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','setter']};});
atr$($$openValue,'objectValue',function(){
return this.meta&&this.meta.$mt==='o';
},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:OpenValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','objectValue']};});
atr$($$openValue,'objectClass',function(){
if (this.objectValue) {
var _m=getrtmm$$(this.tipo);
if (_m && _m.$t && typeof(_m.$t.t)==='function')return OpenClass(this._pkg,_m.$t.t);
}
return null;
},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:ClassDeclaration$meta$declaration},{t:Null}]},$cont:OpenValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','objectClass']};});
})(OpenValue.$$.prototype);
}
return OpenValue;
}
ex$.$init$OpenValue=$init$OpenValue;
$init$OpenValue();
function OpenSetter(v, $$openSetter){
$init$OpenSetter();
if ($$openSetter===undefined)$$openSetter=new OpenSetter.$$;
$$openSetter.variable_=v;
SetterDeclaration$meta$declaration($$openSetter);
$$openSetter.tipo=v.tipo.set;
if (v.tipo.set && getrtmm$$(v.tipo.set)) {
var mm=getrtmm$$(v.tipo.set)
if (typeof(mm.$an)==='function')mm.$an=mm.$an();
v.tipo.set.$crtmm$=mm;
}
return $$openSetter;
}
OpenSetter.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:SetterDeclaration$meta$declaration}],d:['ceylon.language.meta.declaration','SetterDeclaration']};};
function $init$OpenSetter(){
if (OpenSetter.$$===undefined){
initTypeProto(OpenSetter,'ceylon.language.meta.declaration::OpenSetter',Basic,SetterDeclaration$meta$declaration);
(function($$openSetter){
atr$($$openSetter,'variable',function(){return this.variable_;},undefined,function(){return{mod:$CCMM$,$t:{t:ValueDeclaration$meta$declaration},$cont:OpenSetter,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','SetterDeclaration','$at','variable']};});
atr$($$openSetter,'name',function(){return this.variable_.name;},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:OpenSetter,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','SetterDeclaration','$at','name']};});
atr$($$openSetter,'name',function(){return this.variable.name;},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:OpenSetter,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','name']};});
atr$($$openSetter,'string',function(){return "setter " + this.qualifiedName;},undefined,function(){return{$t:{t:$_String},$cont:OpenSetter,$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','Object','$at','string']};});
atr$($$openSetter,'qualifiedName',function(){return this.variable.qualifiedName;},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:OpenSetter,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Declaration','$at','qualifiedName']};});
$$openSetter.equals=function(o) {
return is$(o,{t:OpenSetter}) && o.variable.equals(this.variable);
}
})(OpenSetter.$$.prototype);
}
return OpenSetter;
}
ex$.$init$OpenSetter=$init$OpenSetter;
$init$OpenSetter();
function OpenClass(pkg, meta, that){
if (meta===undefined)throw Exception("Class reference not found. Metamodel doesn't work with modules compiled in lexical scope style");
$init$OpenClass();
if (that===undefined)that=new OpenClass.$$;
that._pkg = pkg;
var _mm=getrtmm$$(meta);
if (_mm === undefined) {
that.meta=meta;
that.tipo=_findTypeFromModel(pkg,meta);
_mm = getrtmm$$(that.tipo);
} else {
that.tipo = meta;
that.meta = get_model(_mm);
}
that.name_=(that.meta&&that.meta.$nm)||_mm.d[_mm.d.length-1];
that.toplevel_=_mm.$cont===undefined;
ClassDeclaration$meta$declaration(that);
return that;
}
OpenClass.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:ClassDeclaration$meta$declaration}],d:['ceylon.language.meta.declaration','ClassDeclaration']};};
function $init$OpenClass(){
if (OpenClass.$$===undefined){
initTypeProto(OpenClass,'ceylon.language.meta.declaration::OpenClass',Basic,ClassDeclaration$meta$declaration);
(function($$openClass){
$$openClass.classApply=function(targs,$mptypes) {
var mm=this.tipo.$crtmm$;
if (mm.$tp) {
if (!targs)throw TypeApplicationException$meta$model("This class requires type arguments");
}
validate$params(mm.$ps,$mptypes.Arguments$classApply,"Wrong number of Arguments for classApply");
return this.$_apply(targs,$mptypes);
}
$$openClass.memberClassApply=function(cont,targs,$mptypes){
var mm=this.tipo.$crtmm$;
if (cont!==getNothingType$meta$model() && !extendsType({t:cont.tipo},{t:mm.$cont}))
throw IncompatibleTypeException$meta$model("Incompatible Container specified");
if (!extendsType({t:this.tipo},$mptypes.Type$memberClassApply))
throw IncompatibleTypeException$meta$model("Incompatible Type specified");
var _t={t:this.tipo};
validate$typeparams(_t,mm.$tp,targs);
validate$params(mm.$ps,$mptypes.Arguments$memberClassApply,"Wrong number of Arguments for classApply");
var rv=AppliedMemberClass(this.tipo,{Container$MemberClass:{t:mm.$cont},Type$MemberClass:_t,Arguments$MemberClass:tupleize$params(mm.$ps)});
if (_t.a)rv.$targs=_t.a;
return rv;
}
atr$($$openClass,'string',function(){
return "class " + this.qualifiedName;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:OpenClass,$an:function(){return[shared(),actual()];},d:['$','Object']};});
atr$($$openClass,'anonymous',function(){
return this.meta.$mt==='o';
},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:OpenClass,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$at','anonymous']};});
atr$($$openClass,'abstract',function(){
return find$ann(this.tipo,AbstractAnnotation)!==null;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:OpenClass,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$at','abstract']};});
atr$($$openClass,'$_final',function(){
return find$ann(this.tipo,FinalAnnotation)!==null;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:OpenClass,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$at','final']};});
atr$($$openClass,'annotation',function(){
return find$ann(this.tipo,AnnotationAnnotation)!==null;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:OpenClass,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionalDeclaration','$at','annotation']};});
atr$($$openClass,'openType',function(){
return FreeClass(this);
},undefined,function(){return{mod:$CCMM$,$t:{t:OpenType$meta$declaration},$cont:OpenClass,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$at','openType']};});
$$openClass.getParameterDeclaration=function (name$15){
var pd=this.parameterDeclarations;
for (var i=0; i < pd.size; i++) {
if (name$6.equals(pd[i].name))return pd[i];
}
return null;
};
$$openClass.getParameterDeclaration.$crtmm$=function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:FunctionOrValueDeclaration$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String}}],$cont:OpenClass,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$m','getParameterDeclaration']};};
atr$($$openClass,'extendedType',function(){
var sc = this.tipo.$crtmm$['super'];
if (sc === undefined)return null;
var mm = getrtmm$$(sc.t);
var fc=FreeClass(OpenClass(getModules$meta().find(mm.mod['$mod-name'],mm.mod['$mod-version']).findPackage(mm.d[0]), sc.t));
if (sc.a)fc.declaration._targs=sc.a;
return fc;
},undefined,function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:OpenClassType$meta$declaration}]},$cont:OpenClass,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$at','extendedType']};});
atr$($$openClass,'satisfiedTypes',function(){
var ints = this.tipo.$crtmm$['satisfies'];
if (ints && ints.length) {
var rv = [];
for (var i=0; i < ints.length; i++) {
var ifc = ints[i];
var mm = getrtmm$$(ifc.t);
var fi=FreeInterface(OpenInterface(getModules$meta().find(mm.mod['$mod-name'],mm.mod['$mod-version']).findPackage(mm.d[0]), ifc.t));
if (ifc.a)fi.declaration._targs=ifc.a;
rv.push(fi);
}
return rv.length===0?getEmpty():ArraySequence(rv,{Element$ArraySequence:{t:OpenInterfaceType$meta$declaration}});
}
return getEmpty();
},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:OpenInterfaceType$meta$declaration}}},$cont:OpenClass,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$at','satisfiedTypes']};});
atr$($$openClass,'name',function(){return this.name_;},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:OpenClass,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$at','name']};});
atr$($$openClass,'containingPackage',function(){return this._pkg;},undefined,function(){return{mod:$CCMM$,$t:{t:Package$meta$declaration},$cont:OpenClass,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$at','containingPackage']};});
atr$($$openClass,'containingModule',function(){return this._pkg.container;},undefined,function(){return{mod:$CCMM$,$t:{t:Module$meta$declaration},$cont:OpenClass,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$at','containingModule']};});
atr$($$openClass,'toplevel',function(){return this.toplevel_;},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:OpenClass,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$at','toplevel']};});
atr$($$openClass,'qualifiedName',function(){
return $qname(this.tipo);
},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:OpenClass,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Declaration','$at','qualifiedName']};});
$$openClass.equals=function(other) {
return is$(other, {t:OpenClass}) && other.tipo===this.tipo;
}
})(OpenClass.$$.prototype);
}
return OpenClass;
}
ex$.$init$OpenClass=$init$OpenClass;
$init$OpenClass();
function OpenInterface(pkg, meta, that) {
if (meta===undefined)throw Exception("Interface reference not found. Metamodel doesn't work with modules compiled in lexical scope style");
$init$OpenInterface();
if (that===undefined)that=new OpenInterface.$$;
that._pkg = pkg;
var _mm=getrtmm$$(meta);
if (_mm === undefined) {
that.meta=meta;
that.tipo=_findTypeFromModel(pkg,meta);
_mm = getrtmm$$(that.tipo);
} else {
that.tipo = meta;
that.meta = get_model(_mm);
}
that.name_=(that.meta&&that.meta.$nm)||_mm.d[_mm.d.length-1];
that.toplevel_=_mm.$cont === undefined;
InterfaceDeclaration$meta$declaration(that);
return that;
}
OpenInterface.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:InterfaceDeclaration$meta$declaration}],d:['ceylon.language.meta.declaration','InterfaceDeclaration']};};
function $init$OpenInterface(){
if (OpenInterface.$$===undefined){
initTypeProto(OpenInterface,'ceylon.language.meta.declaration::OpenInterface',Basic,InterfaceDeclaration$meta$declaration);
(function($$openInterface){
$$openInterface.equals=function(other) {
return is$(other, {t:OpenInterface}) && other.tipo==this.tipo;
}
$$openInterface.memberInterfaceApply=function(cont,targs,$mptypes){
var mm=this.tipo.$crtmm$;
if (cont!==getNothingType$meta$model() && !extendsType({t:cont.tipo},{t:mm.$cont}))
throw IncompatibleTypeException$meta$model("Incompatible Container specified");
var _t={t:this.tipo};
validate$typeparams(_t,mm.$tp,targs);
var rv=AppliedMemberInterface(this.tipo,{Container$MemberInterface:{t:mm.$cont},Type$MemberInterface:_t});
if (_t.a)rv.$targs=_t.a;
return rv;
}
$$openInterface.interfaceApply=function(targs,$mptypes) {
return this.$_apply(targs,$mptypes);
}
atr$($$openInterface,'string',function(){
return "interface " + this.qualifiedName;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:OpenInterface,$an:function(){return[shared(),actual()];},d:['$','Object']};});
atr$($$openInterface,'openType',function(){
return FreeInterface(this);
},undefined,function(){return{mod:$CCMM$,$t:{t:OpenType$meta$declaration},$cont:OpenInterface,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','InterfaceDeclaration','$at','openType']};});
atr$($$openInterface,'extendedType',function(){
var sc = this.tipo.$crtmm$['super'];
if (sc === undefined)return null;
var mm = getrtmm$$(sc.t);
return FreeClass(OpenClass(getModules$meta().find(mm.mod['$mod-name'],mm.mod['$mod-version']).findPackage(mm.d[0]), sc.t));
},undefined,function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:OpenClasType$meta$declaration}]},$cont:OpenInterface,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','InterfaceDeclaration','$at','extendedType']};});
atr$($$openInterface,'satisfiedTypes',function(){
var ints = this.tipo.$crtmm$['satisfies'];
if (ints && ints.length) {
var rv = [];
for (var i=0; i < ints.length; i++) {
var ifc = ints[i].t;
var mm = getrtmm$$(ifc);
rv.push(FreeInterface(OpenInterface(getModules$meta().find(mm.mod['$mod-name'],mm.mod['$mod-version']).findPackage(mm.d[0]), ifc)));
}
return rv.length===0?getEmpty():ArraySequence(rv,{Element$ArraySequence:{t:OpenInterfaceType$meta$declaration}});
}
return getEmpty();
},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:OpenInterfaceType$meta$declaration}}},$cont:OpenInterface,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','InterfaceDeclaration','$at','satisfiedTypes']};});
atr$($$openInterface,'name',function(){return this.name_;},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:OpenInterface,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','InterfaceDeclaration','$at','name']};});
atr$($$openInterface,'containingPackage',function(){return this._pkg;},undefined,function(){return{mod:$CCMM$,$t:{t:Package$meta$declaration},$cont:OpenInterface,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','InterfaceDeclaration','$at','containingPackage']};});
atr$($$openInterface,'containingModule',function(){return this._pkg.container;},undefined,function(){return{mod:$CCMM$,$t:{t:Module$meta$declaration},$cont:OpenInterface,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','InterfaceDeclaration','$at','containingModule']};});
atr$($$openInterface,'toplevel',function(){return this.toplevel_;},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:OpenInterface,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','InterfaceDeclaration','$at','toplevel']};});
atr$($$openInterface,'qualifiedName',function(){
return $qname(this.tipo);
},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:OpenInterface,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Declaration','$at','qualifiedName']};});
})(OpenInterface.$$.prototype);
}
return OpenInterface;
}
ex$.$init$OpenInterface=$init$OpenInterface;
$init$OpenInterface();
function OpenAlias(alias, $$openAlias){
$init$OpenAlias();
if ($$openAlias===undefined)$$openAlias=new OpenAlias.$$;
if (typeof(alias)==='function')alias=alias();
$$openAlias._alias = alias;
var mm=getrtmm$$(alias);
$$openAlias.meta=get_model(mm);
AliasDeclaration$meta$declaration($$openAlias);
return $$openAlias;
}
OpenAlias.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:AliasDeclaration$meta$declaration}],d:['ceylon.language.meta.declaration','OpenAlias']};};
function $init$OpenAlias(){
if (OpenAlias.$$===undefined){
initTypeProto(OpenAlias,'OpenAlias',Basic,AliasDeclaration$meta$declaration);
(function($$openAlias){
atr$($$openAlias,'extendedType',function(){
return _openTypeFromTarg(this._alias);
},undefined,function(){return{mod:$CCMM$,$t:{t:OpenType$meta$declaration},$cont:OpenAlias,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','AliasDeclaration','$at','extendedType']};});
atr$($$openAlias,'qualifiedName',function(){
return $qname(this._alias.$crtmm$);
},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:OpenAlias,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','AliasDeclaration','$at','qualifiedName']};});
atr$($$openAlias,'toplevel',function(){
return this._alias.$cont===undefined;
},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean},$cont:OpenAlias,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','AliasDeclaration','$at','toplevel']};});
atr$($$openAlias,'containingPackage',function(){
throw Error("IMPL OpenAlias.containingPackage");
},undefined,function(){return{mod:$CCMM$,$t:{t:Package$meta$declaration},$cont:OpenAlias,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','AliasDeclaration','$at','containingPackage']};});
atr$($$openAlias,'containingModule',function(){
throw Exception("IMPL OpenAlias.containingModule");
},undefined,function(){return{mod:$CCMM$,$t:{t:Module$meta$declaration},$cont:OpenAlias,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','AliasDeclaration','$at','containingModule']};});
atr$($$openAlias,'container',function(){
var cont=this.$$targs$$.Container;
if (cont===undefined) {
cont=this._alias.$crtmm$.$cont;
if (cont)cont={t:cont};
}
if (cont) {
return typeLiteral$meta({Type$typeLiteral:cont});
}
return null;
},undefined,function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:NestableDeclaration$meta$declaration},{t:Package$meta$declaration}]},$cont:OpenAlias,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','AliasDeclaration','$at','container']};});
atr$($$openAlias,'openType',function(){
return this.extendedType;
},undefined,function(){return{mod:$CCMM$,$t:{t:OpenType$meta$declaration},$cont:OpenAlias,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','AliasDeclaration','$at','openType']};});
atr$($$openAlias,'typeParameterDeclarations',function(){
var tps=this._alias.$crtmm$.$tp;
if (tps) {
var rv=[];
for (var tp in tps) {
rv.push(OpenTypeParam(this._alias, tp));
}
return rv.length===0?getEmpty():ArraySequence(rv,{Element$ArraySequence:{t:TypeParameter$meta$declaration}});
}
return getEmpty();
},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:TypeParameter$meta$declaration}}},$cont:OpenAlias,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','AliasDeclaration','$at','typeParameterDeclarations']};});
$$openAlias.getTypeParameterDeclaration=function getTypeParameterDeclaration(name$2){
var tp=this._alias.$crtmm$;
if (tp.$tp) {
var tpn=undefined;
for (var ftn in tp.$tp) {
if (ftn.substring(0,name$2.size+1)==name$2+'$') {
tpn=ftn;
}
}
tp=tpn;
} else {
tp=undefined;
}
return tp ? OpenTypeParam(this._alias, tp) : null;
};$$openAlias.getTypeParameterDeclaration.$crtmm$=function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:TypeParameter$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:OpenAlias,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','AliasDeclaration','$m','getTypeParameterDeclaration']};};
atr$($$openAlias,'name',function(){
return this._alias.$crtmm$.d[this._alias.$crtmm$.d.length-1];
},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:OpenAlias,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','AliasDeclaration','$at','name']};});
atr$($$openAlias,'string',function(){return "alias "+this.qualifiedName;},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:OpenAlias,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','AliasDeclaration','$at','string']};});
$$openAlias.equals=function equals(o) {
if (o && is$(o, {t:OpenAlias})) {
if (o._alias.a) {
return o._alias.a == this._alias.a;
}
return o._alias.t === this._alias.t;
}
return false;
}
})(OpenAlias.$$.prototype);
}
return OpenAlias;
}
ex$.$init$OpenAlias=$init$OpenAlias;
$init$OpenAlias();
function OpenTypeParam(cont, nom, that){
$init$OpenTypeParam();
if (that===undefined)that=new OpenTypeParam.$$;
that._cont=cont;
that._fname=nom;
if (nom.indexOf('$')>0)nom=nom.substring(0,nom.indexOf('$'));
that._name=nom;
TypeParameter$meta$declaration(that);
return that;
}
OpenTypeParam.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:TypeParameter$meta$declaration}],$an:function(){return[shared()];},d:['ceylon.language.meta.declaration','TypeParameter']};};
ex$.OpenTypeParam=OpenTypeParam;
function $init$OpenTypeParam(){
if (OpenTypeParam.$$===undefined){
initTypeProto(OpenTypeParam,'ceylon.language.meta.declaration::OpenTypeParam',Basic,TypeParameter$meta$declaration);
(function($$openTypeParam){
atr$($$openTypeParam,'container',function(){return this._cont;},undefined,function(){return{mod:$CCMM$,$t:{t:NestableDeclaration$meta$declaration},$cont:OpenTypeParam,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','TypeParameter','$at','container']};});
atr$($$openTypeParam,'defaulted',function(){
var tp=this._cont.$crtmm$.$tp[this._fname];
if (tp) {
return tp['def'] !== undefined;
}
throw wrapexc(Exception("TypeParameter.defaulted"),'8:38-8:80','caca.ceylon');
},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean},$cont:OpenTypeParam,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','TypeParameter','$at','defaulted']};});
atr$($$openTypeParam,'defaultTypeArgument',function(){
var tp=this._cont.$crtmm$.$tp[this._fname];
if (typeof(tp.def)==='string') {
return OpenTvar(OpenTypeParam(this._cont, tp.def));
}
return tp.def?_openTypeFromTarg(tp.def,this._cont):null;
},undefined,function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:OpenType$meta$declaration}]},$cont:OpenTypeParam,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','TypeParameter','$at','defaultTypeArgument']};});
atr$($$openTypeParam,'variance',function(){
var tp=this._cont.$crtmm$.$tp[this._fname];
if (tp) {
if (tp['var']==='out')return getCovariant$meta$declaration();
if (tp['var']=== 'in')return getContravariant$meta$declaration();
return getInvariant$meta$declaration();
}
throw wrapexc(Exception("TypeParameter.variance"),'10:38-10:79','caca.ceylon');
},undefined,function(){return{mod:$CCMM$,$t:{t:Variance$meta$declaration},$cont:OpenTypeParam,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','TypeParameter','$at','variance']};});
atr$($$openTypeParam,'satisfiedTypes',function(){
var tp=this._cont.$crtmm$.$tp[this._fname];
if (tp.satisfies) {
var a=[];
for (var i=0;i<tp.satisfies.length;i++) {
a.push(_openTypeFromTarg(tp.satisfies[i],this._cont));
}
return a.length===0?getEmpty():ArraySequence(a,{Element$ArraySequence:{t:OpenType$meta$declaration}});
}
return getEmpty();
},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:OpenType$meta$declaration}}},$cont:OpenTypeParam,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','TypeParameter','$at','satisfiedTypes']};});
atr$($$openTypeParam,'caseTypes',function(){
var tp=this._cont.$crtmm$.$tp[this._fname];
if (tp.of) {
var a=[];
for (var i=0;i<tp.of.length;i++) {
var _ct=tp.of[i];if (typeof(_ct)==='function')_ct=getrtmm$$(_ct).$t;
a.push(_openTypeFromTarg(_ct,this._cont));
}
return a.length===0?getEmpty():ArraySequence(a,{Element$ArraySequence:{t:OpenType$meta$declaration}});
}
return getEmpty();
},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:OpenType$meta$declaration}}},$cont:OpenTypeParam,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','TypeParameter','$at','caseTypes']};});
atr$($$openTypeParam,'name',function(){return this._name;},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:OpenTypeParam,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Declaration','$at','name']};});
atr$($$openTypeParam,'qualifiedName',function(){
return $qname(this._cont)+"."+this._name;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:OpenTypeParam,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Declaration','$at','qualifiedName']};});
atr$($$openTypeParam,'hash',function(){return this.string.hash;},undefined,function(){return {mod:$CCMM$,$t:{t:Integer},d:['$','Object','$at','hash']};});
atr$($$openTypeParam,'string',function(){return "given " + this.qualifiedName;},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:OpenTypeParam,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Declaration','$at','string']};});
$$openTypeParam.equals=function(o) {
return is$(o,{t:OpenTypeParam}) && o._cont==this._cont && o._fname==this._fname;
}
})(OpenTypeParam.$$.prototype);
}
return OpenTypeParam;
}
ex$.$init$OpenTypeParam=$init$OpenTypeParam;
$init$OpenTypeParam();
function OpenTvar(p$2, $$openTvar){
$init$OpenTvar();
if ($$openTvar===undefined)$$openTvar=new OpenTvar.$$;
$$openTvar.p$2=p$2;
OpenTypeVariable$meta$declaration($$openTvar);
$$openTvar.$prop$getDeclaration={$crtmm$:function(){return{mod:$CCMM$,$t:{t:TypeParameter$meta$declaration},$cont:OpenTvar,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','OpenTvar','$at','declaration']};}};
$$openTvar.$prop$getDeclaration.get=function(){return declaration};
return $$openTvar;
}
OpenTvar.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:OpenTypeVariable$meta$declaration}],$an:function(){return[shared()];},d:['ceylon.language.meta.declaration','OpenTvar']};};
ex$.OpenTvar=OpenTvar;
function $init$OpenTvar(){
if (OpenTvar.$$===undefined){
initTypeProto(OpenTvar,'ceylon.language.meta.declaration::OpenTvar',Basic,$init$OpenTypeVariable$meta$declaration());
(function($$openTvar){
atr$($$openTvar,'string',function(){return this.p$2.qualifiedName;},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:OpenTvar,$an:function(){return[shared(),actual()];},d:['$','Object','$at','string']};});
atr$($$openTvar,'declaration',function(){
return this.p$2;
},undefined,function(){return{mod:$CCMM$,$t:{t:TypeParameter$meta$declaration},$cont:OpenTvar,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','OpenTypeVariable','$at','declaration']};});
$$openTvar.equals=function(o) {
return is$(o, {t:OpenTvar}) && this.p$2.equals(o.p$2);
}
atr$($$openTvar,'hash',function(){return this.string.hash;},undefined,function(){return{mod:$$CCMM$,$t:{t:Integer},$cont:OpenTvar,$an:function(){return[shared(),actual()];},d:['$','Object','$at','string']};});
})(OpenTvar.$$.prototype);
}
return OpenTvar;
}
ex$.$init$OpenTvar=$init$OpenTvar;
$init$OpenTvar();
function FreeUnion(ts$2, $$freeUnion){
$init$FreeUnion();
if ($$freeUnion===undefined)$$freeUnion=new FreeUnion.$$;
$$freeUnion.ts$2_=ts$2;
OpenUnion$meta$declaration($$freeUnion);
$$freeUnion.$prop$getCaseTypes={$crtmm$:function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:{t:OpenType$meta$declaration}}},$cont:FreeUnion,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','OpenUnion','$at','caseTypes']};}};
$$freeUnion.$prop$getCaseTypes.get=function(){return caseTypes};
return $$freeUnion;
}
FreeUnion.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:OpenUnion$meta$declaration}],$an:function(){return[shared()];},d:['ceylon.language.meta.declaration','OpenUnion']};};
ex$.FreeUnion=FreeUnion;
function $init$FreeUnion(){
if (FreeUnion.$$===undefined){
initTypeProto(FreeUnion,'ceylon.language.meta.declaration::FreeUnion',Basic,OpenUnion$meta$declaration);
(function($$freeUnion){
$$freeUnion.equals=function(u) {
if(is$(u,{t:FreeUnion})) {
var mine=this.caseTypes;
var his=u.caseTypes;
if (mine.size==his.size) {
for (var i=0;i<mine.length;i++) {
if (!his.contains(mine[i]))return false;
}
return true;
}
}
return false;
}
atr$($$freeUnion,'string',function(){
var s="";
var first=true;
for (var i=0;i<this.ts$2.size;i++) {
if (first)first=false;else s+="|";
s+=this.ts$2.$_get(i).string;
}
return s;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},d:['$','Object','$at','string']};});
atr$($$freeUnion,'hash',function(){
var s=this.ts$2.size;
for (var i=0;i<this.ts$2.size;i++) {
s+=this.ts$2.$_get(i).string.hash;
}
return s;
},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},d:['$','Object','$at','hash']};});
atr$($$freeUnion,'caseTypes',function(){
var $$freeUnion=this;
return $$freeUnion.ts$2;
},undefined,function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:{t:OpenType$meta$declaration}}},$cont:FreeUnion,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','OpenUnion','$at','caseTypes']};});
atr$($$freeUnion,'ts$2',function(){return this.ts$2_;},undefined,function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:{t:OpenType$meta$declaration}}},$cont:FreeUnion,d:['ceylon.language.meta.declaration','OpenUnion','$at','ts']};});
})(FreeUnion.$$.prototype);
}
return FreeUnion;
}
ex$.$init$FreeUnion=$init$FreeUnion;
$init$FreeUnion();
function FreeIntersection(ts$3, $$freeIntersection){
$init$FreeIntersection();
if ($$freeIntersection===undefined)$$freeIntersection=new FreeIntersection.$$;
$$freeIntersection.ts$3_=ts$3;
OpenIntersection$meta$declaration($$freeIntersection);
$$freeIntersection.$prop$getSatisfiedTypes={$crtmm$:function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:{t:OpenType$meta$declaration}}},$cont:FreeIntersection,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','OpenIntersection','$at','satisfiedTypes']};}};
$$freeIntersection.$prop$getSatisfiedTypes.get=function(){return satisfiedTypes};
return $$freeIntersection;
}
FreeIntersection.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:OpenIntersection$meta$declaration}],$an:function(){return[shared()];},d:['ceylon.language.meta.declaration','OpenIntersection']};};
ex$.FreeIntersection=FreeIntersection;
function $init$FreeIntersection(){
if (FreeIntersection.$$===undefined){
initTypeProto(FreeIntersection,'ceylon.language.meta.declaration::FreeIntersection',Basic,OpenIntersection$meta$declaration);
(function($$freeIntersection){
$$freeIntersection.equals=function(u) {
if(is$(u,{t:FreeIntersection})) {
var mine=this.satisfiedTypes;
var his=u.satisfiedTypes;
if (mine.size==his.size) {
for (var i=0;i<mine.size;i++) {
if (!his.contains(mine.$_get(i))){
return false;
}
}
return true;
}
}
return false;
}
atr$($$freeIntersection,'string',function(){
var s="";
var first=true;
for (var i=0;i<this.ts$3.size;i++) {
if (first)first=false;else s+="&";
s+=this.ts$3.$_get(i).string;
}
return s;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},d:['$','Object','$at','string']};});
atr$($$freeIntersection,'hash',function(){
var s=this.ts$3.size;
for (var i=0;i<this.ts$3.size;i++) {
s+=this.ts$3.$_get(i).string.hash;
}
return s;
},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},d:['$','Object','$at','hash']};});
atr$($$freeIntersection,'satisfiedTypes',function(){
var $$freeIntersection=this;
return $$freeIntersection.ts$3;
},undefined,function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:{t:OpenType$meta$declaration}}},$cont:FreeIntersection,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','OpenIntersection','$at','satisfiedTypes']};});
atr$($$freeIntersection,'ts$3',function(){return this.ts$3_;},undefined,function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:{t:OpenType$meta$declaration}}},$cont:FreeIntersection,d:['ceylon.language.meta.declaration','OpenIntersection','$at','ts']};});
})(FreeIntersection.$$.prototype);
}
return FreeIntersection;
}
ex$.$init$FreeIntersection=$init$FreeIntersection;
$init$FreeIntersection();
function FunParamDecl(cont,param,$$funParamDecl){
$init$FunParamDecl();
if ($$funParamDecl===undefined)$$funParamDecl=new FunParamDecl.$$;
FunctionDeclaration$meta$declaration($$funParamDecl);
$$funParamDecl.cont=cont;
$$funParamDecl.param=param;
$$funParamDecl.tipo={$crtmm$:{$cont:cont.tipo,$t:param.$t,$ps:param.$ps,$mt:'prm',d:cont.tipo.$crtmm$.d,$an:param.$an}};
$$funParamDecl.$prop$getParameter={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','parameter']};}};
$$funParamDecl.$prop$getParameter.get=function(){return true;};
$$funParamDecl.$prop$getAnnotation={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','annotation']};}};
$$funParamDecl.$prop$getAnnotation.get=function(){return false;};
$$funParamDecl.$prop$getShared={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','shared']};}};
$$funParamDecl.$prop$getShared.get=function(){return false;};
$$funParamDecl.$prop$getToplevel={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','toplevel']};}};
$$funParamDecl.$prop$getToplevel.get=function(){return false;};
$$funParamDecl.$prop$getFormal={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','formal']};}};
$$funParamDecl.$prop$getFormal.get=function(){return false;};
$$funParamDecl.$prop$getDefault={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','default']};}};
$$funParamDecl.$prop$getDefault.get=function(){return false};
$$funParamDecl.$prop$getActual={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','actual']};}};
$$funParamDecl.$prop$getActual.get=function(){return false;};
return $$funParamDecl;
}
FunParamDecl.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],satisfies:[{t:FunctionDeclaration$meta$declaration}],d:['ceylon.language.meta.declaration','FunParamDecl']};};
function $init$FunParamDecl(){
if (FunParamDecl.$$===undefined){
initTypeProto(FunParamDecl,'ceylon.language.meta.declaration::FunParamDecl',Basic,FunctionDeclaration$meta$declaration);
(function($$funParamDecl){
atr$($$funParamDecl,'parameter',function(){return true;},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','parameter']};});
atr$($$funParamDecl,'defaulted',function(){
return this.param.$def!==undefined;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','defaulted']};});
atr$($$funParamDecl,'variadic',function(){
return this.param.seq!==undefined;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','variadic']};});
atr$($$funParamDecl,'container',function(){
return this.cont;
},undefined,function(){return{mod:$CCMM$,$t:{t:'u', l:[{t:Package$meta$declaration},{t:NestableDeclaration$meta$declaration}]},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','container']};});
atr$($$funParamDecl,'containingPackage',function(){
return this.cont.containingPackage;
},undefined,function(){return{mod:$CCMM$,$t:{t:Package$meta$declaration},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','containingPackage']};});
atr$($$funParamDecl,'containingModule',function(){
return this.cont.containingModule;
},undefined,function(){return{mod:$CCMM$,$t:{t:Module$meta$declaration},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','containingModule']};});
atr$($$funParamDecl,'openType',function(){
var t = this.param.$t;
if (typeof(t)==='string')return OpenTvar(OpenTypeParam(this.cont,t));
return _openTypeFromTarg(t);
},undefined,function(){return{mod:$CCMM$,$t:{t:OpenType$meta$declaration},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','openType']};});
atr$($$funParamDecl,'annotation',function(){return false;},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','annotation']};});
atr$($$funParamDecl,'shared',function(){return false;},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','shared']};});
atr$($$funParamDecl,'toplevel',function(){return false;},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','toplevel']};});
atr$($$funParamDecl,'formal',function(){return false;},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','formal']};});
atr$($$funParamDecl,'$_default',function(){return false;},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','default']};});
atr$($$funParamDecl,'actual',function(){return false;},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','actual']};});
atr$($$funParamDecl,'qualifiedName',function(){
return $qname(cont.tipo.$crtmm$)+"."+this.param.$nm;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','qualifiedName']};});
atr$($$funParamDecl,'name',function(){
return this.param.$nm;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','name']};});
$$funParamDecl.getParameterDeclaration=function getParameterDeclaration(name$10){
var pd=this.parameterDeclarations;
for (var i=0; i < pd.size; i++) {
if (name$6.equals(pd[i].name))return pd[i];
}
return null;
};$$funParamDecl.getParameterDeclaration.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u', l:[{t:Null},{t:FunctionOrValueDeclaration$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$m','getParameterDeclaration']};};
$$funParamDecl.$_apply=function $_apply(typeArguments$11,$$$mptypes){
if(typeArguments$11===undefined){typeArguments$11=getEmpty();}
throw Exception("IMPL FunParamDecl.apply");
};$$funParamDecl.$_apply.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Function$meta$model,a:{Arguments:'Arguments',Type:'Return'}},$ps:[{$nm:'typeArguments',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:FunParamDecl,$tp:{Return:{'def':{t:Anything}},Arguments:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$m','apply']};};
$$funParamDecl.memberApply=function memberApply(containerType$12,typeArguments$13,$$$mptypes){
if(typeArguments$13===undefined){typeArguments$13=getEmpty();}
throw Exception("IMPL FunParamDecl.memberApply");
};$$funParamDecl.memberApply.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Method$meta$model,a:{Arguments:'Arguments',Type:'Return',Container:'Container'}},$ps:[{$nm:'containerType',$mt:'prm',$t:{t:Type$meta$model,a:{Type:'Container'}},$an:function(){return[];}},{$nm:'typeArguments',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:FunParamDecl,$tp:{Container:{'def':{t:Nothing}},Return:{'def':{t:Anything}},Arguments:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$m','memberApply']};};
})(FunParamDecl.$$.prototype);
}
return FunParamDecl;
}
ex$.$init$FunParamDecl=$init$FunParamDecl;
$init$FunParamDecl();
function ValParamDecl(cont,param,$$valParamDecl){
$init$ValParamDecl();
if ($$valParamDecl===undefined)$$valParamDecl=new ValParamDecl.$$;
ValueDeclaration$meta$declaration($$valParamDecl);
$$valParamDecl.cont=cont;
$$valParamDecl.param=param;
$$valParamDecl.tipo={$crtmm$:{$cont:cont.tipo,$t:param.$t,$mt:'prm',d:cont.tipo.$crtmm$.d,$an:param.$an}};
$$valParamDecl.$prop$getParameter.get=function(){return true;};
$$valParamDecl.$prop$getShared.get=function(){return false;};
$$valParamDecl.$prop$getToplevel.get=function(){return false;};
$$valParamDecl.$prop$getFormal.get=function(){return false;};
$$valParamDecl.$prop$getDefault.get=function(){return false;};
$$valParamDecl.$prop$getActual.get=function(){return false;};
return $$valParamDecl;
}
ValParamDecl.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],satisfies:[{t:ValueDeclaration$meta$declaration}],d:['ceylon.language.meta.declaration','ValParamDecl']};};
function $init$ValParamDecl(){
if (ValParamDecl.$$===undefined){
initTypeProto(ValParamDecl,'ceylon.language.meta.declaration::ValParamDecl',Basic,ValueDeclaration$meta$declaration);
(function($$valParamDecl){
atr$($$valParamDecl,'parameter',function(){return true;},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:ValParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','parameter']};});
atr$($$valParamDecl,'defaulted',function(){
return this.param.$def!==undefined;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:ValParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','defaulted']};});
atr$($$valParamDecl,'variadic',function(){
return this.param.seq!==undefined;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:ValParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','variadic']};});
atr$($$valParamDecl,'variable',function(){
return find$ann(this.param,VariableAnnotation)!==null;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:ValParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','variable']};});
atr$($$valParamDecl,'container',function(){
return this.cont;
},undefined,function(){return{mod:$CCMM$,$t:{t:'u', l:[{t:Package$meta$declaration},{t:NestableDeclaration$meta$declaration}]},$cont:ValParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','container']};});
atr$($$valParamDecl,'containingPackage',function(){
return this.cont.containingPackage;
},undefined,function(){return{mod:$CCMM$,$t:{t:Package$meta$declaration},$cont:ValParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','containingPackage']};});
atr$($$valParamDecl,'containingModule',function(){
return this.cont.containingModule;
},undefined,function(){return{mod:$CCMM$,$t:{t:Module$meta$declaration},$cont:ValParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','containingModule']};});
atr$($$valParamDecl,'openType',function(){
var t = this.param.$t;
if (typeof(t)==='string')return OpenTvar(OpenTypeParam(this.cont,t));
return _openTypeFromTarg(t);
},undefined,function(){return{mod:$CCMM$,$t:{t:OpenType$meta$declaration},$cont:ValParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','openType']};});
atr$($$valParamDecl,'shared',function(){return false;},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:ValParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','shared']};});
atr$($$valParamDecl,'toplevel',function(){return false;},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:ValParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','toplevel']};});
atr$($$valParamDecl,'formal',function(){return false;},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:ValParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','formal']};});
atr$($$valParamDecl,'$_default',function(){return false;},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:ValParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','default']};});
atr$($$valParamDecl,'actual',function(){return false;},undefined,function(){return{mod:$CCMM$,$t:{t:$_Boolean},$cont:ValParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','actual']};});
atr$($$valParamDecl,'qualifiedName',function(){
return $qname(this.cont.tipo.$crtmm$)+"."+this.param.$nm;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:ValParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','qualifiedName']};});
atr$($$valParamDecl,'name',function(){
return this.param.$nm;
},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:ValParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','name']};});
$$valParamDecl.$_apply=function $_apply($$$mptypes){
var $$valParamDecl=this;
throw Exception("IMPL ValParamDecl.apply");
};$$valParamDecl.$_apply.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Value$meta$model,a:{Type:'Type'}},$ps:[],$cont:ValParamDecl,$tp:{Type:{'def':{t:Anything}}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$m','apply']};};
$$valParamDecl.memberApply=function memberApply(containerType$20,$$$mptypes){
var $$valParamDecl=this;
throw Exception("IMPL ValParamDecl.memberApply");
};$$valParamDecl.memberApply.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Attribute$meta$model,a:{Type:'Type',Container:'Container'}},$ps:[{$nm:'containerType',$mt:'prm',$t:{t:Type$meta$model,a:{Type:'Container'}},$an:function(){return[];}}],$cont:ValParamDecl,$tp:{Container:{'def':{t:Nothing}},Type:{'def':{t:Anything}}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$m','memberApply']};};
})(ValParamDecl.$$.prototype);
}
return ValParamDecl;
}
ex$.$init$ValParamDecl=$init$ValParamDecl;
$init$ValParamDecl();
function get_model(mm) {
var map=mm.mod;
var path=mm.d;
for (var i=0; i < path.length; i++) {
var _p=path[i];
if (i===0 && _p==='$')_p='ceylon.language';
else if (i==path.length-1&&_p==='$set' && map.$nm && map.$set)return map;
map = map[_p];
}
return map;
}
function pushTypes(list, types) {
for (var i=0; i<types.length; i++) {
var t = types[i];
if (t.t === 'u') {
list.push(applyUnionType(t, t.l));
} else if (t.t === 'i') {
list.push(applyIntersectionType(t, t.l));
} else {
list.push(typeLiteral$meta({Type$typeLiteral:t}));
}
}
return list;
}
function applyUnionType(ut) { //return AppliedUnionType
var cases = [];
pushTypes(cases, ut.l);
return AppliedUnionType(ut, cases.reifyCeylonType({t:Type$meta$model}), {Union$UnionType:{t:Anything}});
}
function applyIntersectionType(it) { //return AppliedIntersectionType
var sats = [];
pushTypes(sats, it.l);
return AppliedIntersectionType(it, sats.reifyCeylonType({t:Type$meta$model}), {Intersection$IntersectionType:{t:Anything}});
}
ex$.$mod$ans$=function(){return[doc("The Ceylon language module containing the core types \nreferred to in the language specification."),by(["Gavin King","Tom Bentley","Tako Schotanus","Stephane Epardaud","Enrique Zamudio"].reifyCeylonType({t:$_String})),license("http://www.apache.org/licenses/LICENSE-2.0.html")];};ex$.$pkg$ans$ceylon$language=function(){return[doc("The Ceylon language package."),by(["Gavin King","Tom Bentley","Tako Schotanus","Stephane Epardaud","Enrique Zamudio"].reifyCeylonType({t:$_String})),shared()];};ex$.$pkg$ans$ceylon$language$meta=function(){return[doc("The Ceylon metamodel base package.\n\nThe Ceylon metamodel allows you to: \n\n* dynamically inspect modules, packages, functions, values and types, \n* invoke functions and class initialisers, or read and write values, and\n* inspect the annotations on program elements.\n\n### A little bit of terminology\n\nThere are a few concepts and terms in the Ceylon metamodel API that you should be familiar with:\n\n- A _declaration_ is the definition of a Ceylon construct, such as a module, package, value, function\n  or class. Declarations are singletons: there is only a single instance of a given class declaration,\n  for example. You can inspect declarations to get information about how they were defined by their\n  author. You cannot directly invoke function or class declarations, but you can _apply_ them to get\n  a _model_ that you can invoke.\n- A _model_ is a Ceylon definition that represents a declaration where all the type variables have\n  been bound to _closed type_ values. You can query models for their member models and you can directly\n  invoke models.\n- A _closed type_ is a type which does not contain any unbound type variables.\n- An _open type_ is a type which may contain unbound type variables.\n\nFor example, given the following Ceylon program:\n\n    shared abstract class MyList<T>() satisfies List<T>{}\n\nThe declaration of `MyList` represents the class declaration and contains the information that it is\n`abstract` and that it satisfies the `List<T>` open type. That type is open because it contains an\nunbound type variable `T`, which is not bound when we inspect the `MyList` class declaration.\n\nGiven an particular instance of `MyList`, we can query its (closed) type with the [[type]] function,\nand we obtain a closed type representing (for example) `MyList<Integer>`. Object instances necessarily\nhave a closed type at runtime, since in order to instantiate an object, all type arguments must be\nprovided and known during instantiation, so the type of an object instance at runtime is necessarily\na closed type: they cannot contain unbound type variables.\n\nClosed types that represent class or interfaces are also models. For example, the closed type of our\n`MyList<Integer>` instance is both a closed type and a class model: you can query its satisfied types\nand find that it satisfies `List<Integer>` closed type and model (as opposed to the class declaration\nof `MyList` which satisfies the `List<T>` open type). You can also invoke that model to obtain a new\ninstance of `MyList<Integer>`.\n\n### Model and declaration literals\n\nCeylon supports getting declaration values using either the declaration API or using declaration\nliterals:\n\n- <code>\\`module ceylon.file\\`</code> returns the [[Module|ceylon.language.meta.declaration::Module]] \n  declaration which corresponds to the `ceylon.file` module you imported in your module descriptor.\n- <code>\\`package ceylon.language.meta\\`</code> returns the [[Package|ceylon.language.meta.declaration::Package]]\n  declaration from your current module imports.\n- <code>\\`interface List\\`</code> returns the [[InterfaceDeclaration|ceylon.language.meta.declaration::InterfaceDeclaration]] \n  for the [[List|ceylon.language::List]] type.\n- <code>\\`class Integer\\`</code> returns the [[ClassDeclaration|ceylon.language.meta.declaration::ClassDeclaration]] \n  for the [[Integer|ceylon.language::Integer]] type.\n- <code>\\`function type\\`</code> returns the [[FunctionDeclaration|ceylon.language.meta.declaration::FunctionDeclaration]] \n  for the [[type]] function. Similarly <code>\\`function List.shorterThan\\`</code> for methods.\n- <code>\\`value modules\\`</code> returns the [[ValueDeclaration|ceylon.language.meta.declaration::ValueDeclaration]] \n  for the [[modules]] value. Similarly <code>\\`function List.size\\`</code> for attributes.\n- <code>\\`alias AliasName\\`</code> returns the [[AliasDeclaration|ceylon.language.meta.declaration::AliasDeclaration]]\n  for the `AliasName` type alias. \n- <code>\\`given T\\`</code> returns the [[TypeParameter|ceylon.language.meta.declaration::TypeParameter]] \n  for the `T` type parameter.\n\nNote that declaration literals cannot have type arguments specified on types or methods, as declarations are not types.\n\nYou can also get access to closed types and model using either the model API or using literals: \n\n- <code>\\`List&lt;Integer>\\`</code> returns the [[Interface|ceylon.language.meta.model::Interface]] model and \n  closed type for the [[List|ceylon.language::List]] type applied with the [[Integer|ceylon.language::Integer]] type argument.\n- <code>\\`Integer\\`</code> returns the [[Class|ceylon.language.meta.model::Class]] model and closed type \n  for the [[Integer|ceylon.language::Integer]] type.\n- <code>\\`type&lt;Integer>\\`</code> returns the [[Function|ceylon.language.meta.model::Function]] model \n  for the [[type]] function applied with the [[Integer|ceylon.language::Integer]] type argument.\n  Similarly <code>\\`List&lt;Integer>.shorterThan\\`</code> for method models.\n- <code>\\`modules\\`</code> returns the [[Value|ceylon.language.meta.model::Value]] model \n  for the [[modules]] value. Similarly <code>\\`List&lt;Integer>.size\\`</code> for attribute models.\n- <code>\\`A & B\\`</code> returns a [[IntersectionType|ceylon.language.meta.model::IntersectionType]]\n  for the `A & B` intersection type.\n- <code>\\`A | B\\`</code> returns a [[UnionType|ceylon.language.meta.model::UnionType]]\n  for the `A | B` union type.\n- <code>\\`T\\`</code> returns a [[Type|ceylon.language.meta.model::Type]] representing the runtime type \n  argument value for the `T` type parameter.\n\nNotice that all model and close type literals must be applied with all required type arguments.\n\n### Accessing the metamodel using the API\n\nAside from declaration and model literals there are several ways you can start using the metamodel API:\n\n- The [[modules]] object contains a list of all currently loaded [[Module|ceylon.language.meta.declaration::Module]]\n  declarations. Note that these contain even modules you did not import as it contains all transitive\n  dependencies, and may contain multiple different versions of the same module.\n- The [[type]] function will return the closed type of the given instance, which can only be a\n  [[ClassModel|ceylon.language.meta.model::ClassModel]] since only classes can be instantiated.\n- The [[typeLiteral]] function is the functional equivalent to closed type literals: it turns a type argument\n  value into a metamodel closed type.\n- The [declaration](declaration/index.html) package contains all the declaration and open types.\n- The [model](model/index.html) package contains all the model and closed types.\n\n### Inspecting annotations\n\nConstrained annotations can be inspected using the [[annotations]] \nfunction, like this:\n\n    // Does the process declaration have the Shared annotation?\n    value isShared = annotations(`Shared`, `value process`) exists;\n\nor the related [[optionalAnnotation]] and [[sequencedAnnotations]] functions.\n\nNote that annotations are queried for via their \n[[ceylon.language::Annotation]] type, \nnot by the annotation constructor which was used to annotate \nthe program element.\n"),by(["Gavin King","Stephane Epardaud"].reifyCeylonType({t:$_String})),shared()];};ex$.$pkg$ans$ceylon$language$meta$model=function(){return[doc("The Ceylon metamodel closed type and model package.\n\nAs described in the [ceylon.language.meta](../index.html) documentation, this package contains all\nthe types that represent Ceylon closed types and models.\n\n### Usage example\n\nThe following code will list all the value declarations in the `ceylon.language` package and print their\ncurrent value:\n\n    Package languagePackage = `package ceylon.language`;\n    ValueDeclaration[] valueDeclarations = languagePackage.members<ValueDeclaration>();\n    Value<Anything>[] valueModels = valueDeclarations*.apply<Anything>();\n    for(val in valueModels){\n        // skip the nothing value which cannot be read\n        if(val.type != `Nothing`){\n            print(val.get());\n        }\n    }\n\nThe following code will iterate all the class declarations in the `ceylon.language` package that\nare not abstract, anonymous or annotations, and that have no type parameters nor initialiser\nparameters. For each matching class, we will apply it to get a class model which we can then\nuse to instantiate the class and display its instance:\n\n    for(decl in `package ceylon.language`.members<ClassDeclaration>()){\n        if(!decl.abstract \n                && !decl.anonymous \n                && !decl.annotation\n                && decl.parameterDeclarations.empty\n                && decl.typeParameterDeclarations.empty){\n            Class<Object,[]> classModel = decl.classApply<Object,[]>();\n            Object instance = classModel();\n            print(\"Instance of ``decl.name`` is: ``instance``\");\n        }\n    }\n"),by(["Gavin King","Stephane Epardaud"].reifyCeylonType({t:$_String})),shared()];};ex$.$pkg$ans$ceylon$language$meta$declaration=function(){return[doc("The Ceylon metamodel open type and declaration package.\n\nAs described in the [ceylon.language.meta](../index.html) documentation, this package contains all\nthe types that represent Ceylon declarations and open types.\n\n### Usage example\n\nThe following code will list all the classes in the `ceylon.language` package and print their\nextended type:\n\n    for(decl in `package ceylon.language`.members<ClassDeclaration>()){\n        if(exists extendedType = decl.extendedType){\n            print(\"Class ``decl.name`` extends: ``extendedType``\");\n        }else{\n            print(\"Class ``decl.name`` does not extend anything\");\n        }\n    }\n\nThe following code will iterate all the class declarations in the `ceylon.language` package that\nare not abstract, anonymous or annotations, and that have no type parameters nor initialiser\nparameters. For each matching class, we will apply it to get a class model which we can then\nuse to instantiate the class and display its instance:\n\n    for(decl in `package ceylon.language`.members<ClassDeclaration>()){\n        if(!decl.abstract \n                && !decl.anonymous \n                && !decl.annotation\n                && decl.parameterDeclarations.empty\n                && decl.typeParameterDeclarations.empty){\n            Class<Object,[]> classModel = decl.classApply<Object,[]>();\n            Object instance = classModel();\n            print(\"Instance of ``decl.name`` is: ``instance``\");\n        }\n    }\n"),by(["Gavin King","Stephane Epardaud"].reifyCeylonType({t:$_String})),shared()];};
var properties = {};
if (typeof navigator !== "undefined") {
if (navigator.language !== undefined) {
properties["user.language"] = $_String(navigator.language);
}
if (navigator.platform !== undefined) {
properties["os.name"] = $_String(navigator.platform);
}
if (navigator.userLanguage||navigator.browserLanguage||navigator.language) {
properties["user.locale"]=$_String(navigator.userLanguage||navigator.browserLanguage||navigator.language);
}
}
if (typeof process !== "undefined") {
if (process.platform !== undefined) {
properties["os.name"] = $_String(process.platform);
}
if (process.arch !== undefined) {
properties["os.arch"] = $_String(process.arch);
}
}
if (typeof document !== "undefined") {
if (document.defaultCharset !== undefined) {
properties["file.encoding"] = $_String(document.defaultCharset);
}
}
var linesep = '\n';
var filesep = '/';
var pathsep = ':';
var osname = properties["os.name"];
if ((osname !== undefined) && (osname.search(/windows/i) >= 0)) {
linesep = "\r\n";
filesep = '\\';
pathsep = ';';
}
properties["line.separator"] = linesep;
properties["file.separator"] = filesep;
properties["path.separator"] = pathsep;
function _process_pick_writeLine() {
if ((typeof process !== "undefined") && (process.stdout !== undefined)) {
return function(line) {
if(line)this.write(line.valueOf());
this.write(linesep.valueOf());
}
} else if ((typeof console !== "undefined") && (console.log !== undefined)) {
return function(line) {
console.log(line?line.valueOf():'');
}
}
return function(){};
}
function _process_pick_writeErrorLine() {
if ((typeof process !== "undefined") && (process.stderr !== undefined)) {
return function(line) {
if(line)this.writeError(line.valueOf());
this.writeError(linesep.valueOf());
}
} else if ((typeof console !== "undefined") && (console.error !== undefined)) {
return function(line) {
console.error(line?line.valueOf():'');
}
}
return function(x){this.writeLine(x);}
}
function $ye(){var process$=new $ye.$$;process$.$prop$getArguments={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:$_String}}},$cont:$ye,$an:function(){return[doc("The command line arguments to the virtual machine."),shared(),$_native()];},d:['$','process','$at','arguments']};}};return process$;
};$ye.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$an:function(){return[doc($CCMM$['ceylon.language'].process.$an.doc[0]),by("Gavin","Tako"),shared(),$_native()];},d:['$','process']};};function $init$$ye(){if($ye.$$===undefined){initTypeProto($ye,'ceylon.language::process',Basic);
(function(process$){atr$(process$,'$_arguments',function(){if (this.argv!==undefined)return this.argv;
this.argv = getEmpty();
this.namedArgs = {};
if ((typeof process !== "undefined") && (process.argv !== undefined)) {
// parse command line arguments
if (process.argv.length > 1) {
var args = process.argv.slice(1);
for (var i=0; i<args.length; ++i) {
var arg = args[i];
if (arg.charAt(0) == '-') {
var pos = 1;
if (arg.charAt(1) == '-') { pos = 2; }
arg = arg.substr(pos);
pos = arg.indexOf('=');
if (pos >= 0) {
this.namedArgs[arg.substr(0, pos)] = arg.substr(pos+1);
} else {
var value = args[i+1];
if ((value !== undefined) && (value.charAt(0) != '-')) {
this.namedArgs[arg] = value;
++i;
} else {
this.namedArgs[arg] = null;
}
}
}
args[i] = $_String(args[i]);
}
this.argv = args.length===0?getEmpty():ArraySequence(args, {Element$ArraySequence:{t:$_String}});
}
} else if (typeof window !== "undefined") {
// parse URL parameters
var parts = window.location.search.substr(1).replace('+', ' ').split('&');
if ((parts.length > 1) || ((parts.length > 0) && (parts[0].length > 0))) {
var argStrings = new Array(parts.length);
//can't do "for (i in parts)" anymore because of the added stuff to arrays
var i;
for (i=0; i<parts.length; i++) { argStrings[i] = parts[i]; }
this.argv = parts.length===0?getEmpty():ArraySequence(argStrings, {Element$ArraySequence:{t:$_String}});
for (i=0; i < parts.length; i++) {
var part = parts[i];
var pos = part.indexOf('=');
if (pos >= 0) {
var value = decodeURIComponent(part.substr(pos+1));
this.namedArgs[part.substr(0, pos)] = value;
} else {
this.namedArgs[part] = null;
}
}
}
}
return this.argv;
process$.$_arguments.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:$_String}}},$cont:$ye,$an:function(){return[doc("The command line arguments to the virtual machine."),shared(),$_native()];},d:['$','process','$at','arguments']};};},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:$_String}}},$cont:$ye,$an:function(){return[doc("The command line arguments to the virtual machine."),shared(),$_native()];},d:['$','process','$at','arguments']};});process$.namedArgumentPresent=function(name) {
if (this.namedArgs===undefined)this.$_arguments;
return (name in this.namedArgs);
}
process$.namedArgumentPresent.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_Boolean},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:$ye,$an:function(){return[doc($CCMM$['ceylon.language'].process.$m.namedArgumentPresent.$an.doc[0]),shared(),$_native()];},d:['$','process','$m','namedArgumentPresent']};};process$.namedArgumentValue=function(name) {
if (this.namedArgs===undefined)this.$_arguments;
return this.namedArgs[name]||null;
}
process$.namedArgumentValue.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:$_String}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:$ye,$an:function(){return[doc($CCMM$['ceylon.language'].process.$m.namedArgumentValue.$an.doc[0]),shared(),$_native()];},d:['$','process','$m','namedArgumentValue']};};process$.propertyValue=function(name) {
return properties[name]||null;
}
process$.propertyValue.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:$_String}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:$ye,$an:function(){return[doc($CCMM$['ceylon.language'].process.$m.propertyValue.$an.doc[0]),shared(),$_native()];},d:['$','process','$m','propertyValue']};};process$.write=(function() {
if ((typeof process !== "undefined") && (process.stdout !== undefined)) {
return function(string) {
if(string)process.stdout.write(string.valueOf());
}
} else if ((typeof console !== "undefined") && (console.log !== undefined)) {
return function(line) {
console.log(line?line.valueOf():'');
}
}
return function(){};
})()
process$.write.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'string',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:$ye,$an:function(){return[doc($CCMM$['ceylon.language'].process.$m.write.$an.doc[0]),shared(),$_native()];},d:['$','process','$m','write']};};process$.writeLine$defs$line=function($yf){return "";};process$.writeLine=function writeLine($yf){var process$=this;if($yf===undefined){$yf=process$.writeLine$defs$line($yf);}
process$.write($yf);process$.write(getOperatingSystem().newline);};process$.writeLine.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'line',$mt:'prm',$def:1,$t:{t:$_String},$an:function(){return[];}}],$cont:$ye,$an:function(){return[doc($CCMM$['ceylon.language'].process.$m.writeLine.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),print)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared()];},d:['$','process','$m','writeLine']};};process$.flush=function(){}
process$.flush.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[],$cont:$ye,$an:function(){return[doc($CCMM$['ceylon.language'].process.$m.flush.$an.doc[0]),shared(),$_native()];},d:['$','process','$m','flush']};};process$.writeError=(function(){
if ((typeof process !== "undefined") && (process.stderr !== undefined)) {
return function(string) {
if(string)process.stderr.write(string.valueOf());
}
} else if ((typeof console !== "undefined") && (console.error !== undefined)) {
return function(line) {
console.error(line?line.valueOf():'');
}
}
return function(x){this.write(x);}
})()
process$.writeError.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'string',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$cont:$ye,$an:function(){return[doc($CCMM$['ceylon.language'].process.$m.writeError.$an.doc[0]),shared(),$_native()];},d:['$','process','$m','writeError']};};process$.writeErrorLine$defs$line=function($yg){return "";};process$.writeErrorLine=function writeErrorLine($yg){var process$=this;if($yg===undefined){$yg=process$.writeErrorLine$defs$line($yg);}
process$.writeError($yg);process$.writeError(getOperatingSystem().newline);};process$.writeErrorLine.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'line',$mt:'prm',$def:1,$t:{t:$_String},$an:function(){return[];}}],$cont:$ye,$an:function(){return[doc($CCMM$['ceylon.language'].process.$m.writeErrorLine.$an.doc[0]),shared()];},d:['$','process','$m','writeErrorLine']};};process$.flushError=function(){}
process$.flushError.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[],$cont:$ye,$an:function(){return[doc("Flush the standard error of the \nvirtual machine process."),shared(),$_native()];},d:['$','process','$m','flushError']};};process$.readLine=function() {
this.writeLine("process.readLine not supported on this platform.");
return "";
}
process$.readLine.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:$_String}]},$ps:[],$cont:$ye,$an:function(){return[doc($CCMM$['ceylon.language'].process.$m.readLine.$an.doc[0]),shared(),$_native()];},d:['$','process','$m','readLine']};};process$.exit=(function(){
if ((typeof process !== "undefined") && (process.exit !== undefined)) {
return function(code) {
process.exit(code);
}
}
return function() {}
})()
process$.exit.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'code',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:$ye,$an:function(){return[doc($CCMM$['ceylon.language'].process.$m.exit.$an.doc[0]),shared(),$_native()];},d:['$','process','$m','exit']};};atr$(process$,'string',function(){var process$=this;return "process";},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$ye,$an:function(){return[shared(),actual()];},d:['$','process','$at','string']};});})($ye.$$.prototype);}
return $ye;}
ex$.$init$$ye=$init$$ye;$init$$ye();var $yh;function getProcess(){if($yh===undefined){$yh=$init$$ye()();$yh.$crtmm$=getProcess.$crtmm$;}
return $yh;}
ex$.getProcess=getProcess;getProcess.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$ye},$an:function(){return[doc($CCMM$['ceylon.language'].process.$an.doc[0]),by(["Gavin","Tako"].reifyCeylonType({t:$_String})),shared(),$_native()];},d:['$','process']};};$prop$getProcess={get:getProcess,$crtmm$:getProcess.$crtmm$};get$ye=getProcess;$prop$get$ye=getProcess;ex$.$prop$getProcess=$prop$getProcess;function $yi(){var language$=new $yi.$$;language$.$prop$getVersion={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$yi,$an:function(){return[doc("The Ceylon language version."),shared(),$_native()];},d:['$','language','$at','version']};}};language$.$prop$getMajorVersion={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yi,$an:function(){return[doc("The Ceylon language major version."),shared(),$_native()];},d:['$','language','$at','majorVersion']};}};language$.$prop$getMinorVersion={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yi,$an:function(){return[doc("The Ceylon language minor version."),shared(),$_native()];},d:['$','language','$at','minorVersion']};}};language$.$prop$getReleaseVersion={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yi,$an:function(){return[doc("The Ceylon language release version."),shared(),$_native()];},d:['$','language','$at','releaseVersion']};}};language$.$prop$getVersionName={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$yi,$an:function(){return[doc("The Ceylon language release name."),shared(),$_native()];},d:['$','language','$at','versionName']};}};language$.$prop$getMajorVersionBinary={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yi,$an:function(){return[doc("The major version of the code generated for the underlying runtime."),shared(),$_native()];},d:['$','language','$at','majorVersionBinary']};}};language$.$prop$getMinorVersionBinary={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yi,$an:function(){return[doc("The minor version of the code generated for the underlying runtime."),shared(),$_native()];},d:['$','language','$at','minorVersionBinary']};}};language$.$prop$getString={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$yi,$an:function(){return[shared(),$_native(),actual()];},d:['$','language','$at','string']};}};return language$;
};$yi.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$an:function(){return[doc("Contains information about the language"),shared(),$_native()];},d:['$','language']};};function $init$$yi(){if($yi.$$===undefined){initTypeProto($yi,'ceylon.language::language',Basic);
(function(language$){atr$(language$,'version',function(){return "1.1.0";
language$.version.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$yi,$an:function(){return[doc("The Ceylon language version."),shared(),$_native()];},d:['$','language','$at','version']};};},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$yi,$an:function(){return[doc("The Ceylon language version."),shared(),$_native()];},d:['$','language','$at','version']};});atr$(language$,'majorVersion',function(){return 1;
language$.majorVersion.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yi,$an:function(){return[doc("The Ceylon language major version."),shared(),$_native()];},d:['$','language','$at','majorVersion']};};},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yi,$an:function(){return[doc("The Ceylon language major version."),shared(),$_native()];},d:['$','language','$at','majorVersion']};});atr$(language$,'minorVersion',function(){return 1;
language$.minorVersion.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yi,$an:function(){return[doc("The Ceylon language minor version."),shared(),$_native()];},d:['$','language','$at','minorVersion']};};},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yi,$an:function(){return[doc("The Ceylon language minor version."),shared(),$_native()];},d:['$','language','$at','minorVersion']};});atr$(language$,'releaseVersion',function(){return 0;
language$.releaseVersion.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yi,$an:function(){return[doc("The Ceylon language release version."),shared(),$_native()];},d:['$','language','$at','releaseVersion']};};},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yi,$an:function(){return[doc("The Ceylon language release version."),shared(),$_native()];},d:['$','language','$at','releaseVersion']};});atr$(language$,'versionName',function(){return "Unflatzburged";
language$.versionName.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$yi,$an:function(){return[doc("The Ceylon language release name."),shared(),$_native()];},d:['$','language','$at','versionName']};};},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$yi,$an:function(){return[doc("The Ceylon language release name."),shared(),$_native()];},d:['$','language','$at','versionName']};});atr$(language$,'majorVersionBinary',function(){return 7;
language$.majorVersionBinary.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yi,$an:function(){return[doc("The major version of the code generated for the underlying runtime."),shared(),$_native()];},d:['$','language','$at','majorVersionBinary']};};},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yi,$an:function(){return[doc("The major version of the code generated for the underlying runtime."),shared(),$_native()];},d:['$','language','$at','majorVersionBinary']};});atr$(language$,'minorVersionBinary',function(){return 0;
language$.minorVersionBinary.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yi,$an:function(){return[doc("The minor version of the code generated for the underlying runtime."),shared(),$_native()];},d:['$','language','$at','minorVersionBinary']};};},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yi,$an:function(){return[doc("The minor version of the code generated for the underlying runtime."),shared(),$_native()];},d:['$','language','$at','minorVersionBinary']};});atr$(language$,'string',function(){return "language";
language$.string.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$yi,$an:function(){return[shared(),$_native(),actual()];},d:['$','language','$at','string']};};},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$yi,$an:function(){return[shared(),$_native(),actual()];},d:['$','language','$at','string']};});})($yi.$$.prototype);}
return $yi;}
ex$.$init$$yi=$init$$yi;$init$$yi();var $yj;function getLanguage(){if($yj===undefined){$yj=$init$$yi()();$yj.$crtmm$=getLanguage.$crtmm$;}
return $yj;}
ex$.getLanguage=getLanguage;getLanguage.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$yi},$an:function(){return[doc("Contains information about the language"),shared(),$_native()];},d:['$','language']};};$prop$getLanguage={get:getLanguage,$crtmm$:getLanguage.$crtmm$};get$yi=getLanguage;$prop$get$yi=getLanguage;ex$.$prop$getLanguage=$prop$getLanguage;function $yk(){var system$=new $yk.$$;system$.$prop$getMilliseconds={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yk,$an:function(){return[doc($CCMM$['ceylon.language'].system.$at.milliseconds.$an.doc[0]),shared(),$_native()];},d:['$','system','$at','milliseconds']};}};system$.$prop$getNanoseconds={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yk,$an:function(){return[doc($CCMM$['ceylon.language'].system.$at.nanoseconds.$an.doc[0]),shared(),$_native()];},d:['$','system','$at','nanoseconds']};}};system$.$prop$getTimezoneOffset={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yk,$an:function(){return[doc($CCMM$['ceylon.language'].system.$at.timezoneOffset.$an.doc[0]),shared(),$_native()];},d:['$','system','$at','timezoneOffset']};}};system$.$prop$getLocale={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$yk,$an:function(){return[doc($CCMM$['ceylon.language'].system.$at.locale.$an.doc[0]),shared(),$_native()];},d:['$','system','$at','locale']};}};return system$;
};$yk.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$an:function(){return[doc($CCMM$['ceylon.language'].system.$an.doc[0]),shared(),$_native()];},d:['$','system']};};function $init$$yk(){if($yk.$$===undefined){initTypeProto($yk,'ceylon.language::system',Basic);
(function(system$){atr$(system$,'milliseconds',function(){return Date.now();
system$.milliseconds.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yk,$an:function(){return[doc($CCMM$['ceylon.language'].system.$at.milliseconds.$an.doc[0]),shared(),$_native()];},d:['$','system','$at','milliseconds']};};},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yk,$an:function(){return[doc($CCMM$['ceylon.language'].system.$at.milliseconds.$an.doc[0]),shared(),$_native()];},d:['$','system','$at','milliseconds']};});atr$(system$,'nanoseconds',function(){return Date.now()*1000000;
system$.nanoseconds.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yk,$an:function(){return[doc($CCMM$['ceylon.language'].system.$at.nanoseconds.$an.doc[0]),shared(),$_native()];},d:['$','system','$at','nanoseconds']};};},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yk,$an:function(){return[doc($CCMM$['ceylon.language'].system.$at.nanoseconds.$an.doc[0]),shared(),$_native()];},d:['$','system','$at','nanoseconds']};});atr$(system$,'timezoneOffset',function(){return new Date().getTimezoneOffset()*60000;
system$.timezoneOffset.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yk,$an:function(){return[doc($CCMM$['ceylon.language'].system.$at.timezoneOffset.$an.doc[0]),shared(),$_native()];},d:['$','system','$at','timezoneOffset']};};},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yk,$an:function(){return[doc($CCMM$['ceylon.language'].system.$at.timezoneOffset.$an.doc[0]),shared(),$_native()];},d:['$','system','$at','timezoneOffset']};});atr$(system$,'locale',function(){return properties["user.locale"] || "Unknown";
system$.locale.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$yk,$an:function(){return[doc($CCMM$['ceylon.language'].system.$at.locale.$an.doc[0]),shared(),$_native()];},d:['$','system','$at','locale']};};},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$yk,$an:function(){return[doc($CCMM$['ceylon.language'].system.$at.locale.$an.doc[0]),shared(),$_native()];},d:['$','system','$at','locale']};});atr$(system$,'string',function(){var system$=this;return "system";},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$yk,$an:function(){return[shared(),actual()];},d:['$','system','$at','string']};});})($yk.$$.prototype);}
return $yk;}
ex$.$init$$yk=$init$$yk;$init$$yk();var $yl;function getSystem(){if($yl===undefined){$yl=$init$$yk()();$yl.$crtmm$=getSystem.$crtmm$;}
return $yl;}
ex$.getSystem=getSystem;getSystem.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$yk},$an:function(){return[doc($CCMM$['ceylon.language'].system.$an.doc[0]),shared(),$_native()];},d:['$','system']};};$prop$getSystem={get:getSystem,$crtmm$:getSystem.$crtmm$};get$yk=getSystem;$prop$get$yk=getSystem;ex$.$prop$getSystem=$prop$getSystem;function $ym(){var operatingSystem$=new $ym.$$;operatingSystem$.$prop$getName={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$ym,$an:function(){return[doc($CCMM$['ceylon.language'].operatingSystem.$at.name.$an.doc[0]),shared(),$_native()];},d:['$','operatingSystem','$at','name']};}};operatingSystem$.$prop$getVersion={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$ym,$an:function(){return[doc($CCMM$['ceylon.language'].operatingSystem.$at.version.$an.doc[0]),shared(),$_native()];},d:['$','operatingSystem','$at','version']};}};operatingSystem$.$prop$getNewline={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$ym,$an:function(){return[doc("The line ending character sequence on this platform."),shared(),$_native()];},d:['$','operatingSystem','$at','newline']};}};operatingSystem$.$prop$getFileSeparator={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$ym,$an:function(){return[doc($CCMM$['ceylon.language'].operatingSystem.$at.fileSeparator.$an.doc[0]),shared(),$_native()];},d:['$','operatingSystem','$at','fileSeparator']};}};operatingSystem$.$prop$getPathSeparator={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$ym,$an:function(){return[doc($CCMM$['ceylon.language'].operatingSystem.$at.pathSeparator.$an.doc[0]),shared(),$_native()];},d:['$','operatingSystem','$at','pathSeparator']};}};return operatingSystem$;
};$ym.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$an:function(){return[doc($CCMM$['ceylon.language'].operatingSystem.$an.doc[0]),shared(),$_native()];},d:['$','operatingSystem']};};function $init$$ym(){if($ym.$$===undefined){initTypeProto($ym,'ceylon.language::operatingSystem',Basic);
(function(operatingSystem$){atr$(operatingSystem$,'name',function(){if (typeof process !== "undefined" && typeof process.platform === 'string') {
return $_String(process.platform);
}
return "Unknown";
operatingSystem$.name.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$ym,$an:function(){return[doc($CCMM$['ceylon.language'].operatingSystem.$at.name.$an.doc[0]),shared(),$_native()];},d:['$','operatingSystem','$at','name']};};},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$ym,$an:function(){return[doc($CCMM$['ceylon.language'].operatingSystem.$at.name.$an.doc[0]),shared(),$_native()];},d:['$','operatingSystem','$at','name']};});atr$(operatingSystem$,'version',function(){return "Unknown";
operatingSystem$.version.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$ym,$an:function(){return[doc($CCMM$['ceylon.language'].operatingSystem.$at.version.$an.doc[0]),shared(),$_native()];},d:['$','operatingSystem','$at','version']};};},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$ym,$an:function(){return[doc($CCMM$['ceylon.language'].operatingSystem.$at.version.$an.doc[0]),shared(),$_native()];},d:['$','operatingSystem','$at','version']};});atr$(operatingSystem$,'newline',function(){return linesep;
operatingSystem$.newline.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$ym,$an:function(){return[doc("The line ending character sequence on this platform."),shared(),$_native()];},d:['$','operatingSystem','$at','newline']};};},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$ym,$an:function(){return[doc("The line ending character sequence on this platform."),shared(),$_native()];},d:['$','operatingSystem','$at','newline']};});atr$(operatingSystem$,'fileSeparator',function(){return filesep;
operatingSystem$.fileSeparator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$ym,$an:function(){return[doc($CCMM$['ceylon.language'].operatingSystem.$at.fileSeparator.$an.doc[0]),shared(),$_native()];},d:['$','operatingSystem','$at','fileSeparator']};};},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$ym,$an:function(){return[doc($CCMM$['ceylon.language'].operatingSystem.$at.fileSeparator.$an.doc[0]),shared(),$_native()];},d:['$','operatingSystem','$at','fileSeparator']};});atr$(operatingSystem$,'pathSeparator',function(){return pathsep;
operatingSystem$.pathSeparator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$ym,$an:function(){return[doc($CCMM$['ceylon.language'].operatingSystem.$at.pathSeparator.$an.doc[0]),shared(),$_native()];},d:['$','operatingSystem','$at','pathSeparator']};};},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$ym,$an:function(){return[doc($CCMM$['ceylon.language'].operatingSystem.$at.pathSeparator.$an.doc[0]),shared(),$_native()];},d:['$','operatingSystem','$at','pathSeparator']};});atr$(operatingSystem$,'string',function(){var operatingSystem$=this;return "operating system [".plus(operatingSystem$.name).plus(" / ").plus(operatingSystem$.version).plus("]");},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$ym,$an:function(){return[shared(),actual()];},d:['$','operatingSystem','$at','string']};});})($ym.$$.prototype);}
return $ym;}
ex$.$init$$ym=$init$$ym;$init$$ym();var $yn;function getOperatingSystem(){if($yn===undefined){$yn=$init$$ym()();$yn.$crtmm$=getOperatingSystem.$crtmm$;}
return $yn;}
ex$.getOperatingSystem=getOperatingSystem;getOperatingSystem.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$ym},$an:function(){return[doc($CCMM$['ceylon.language'].operatingSystem.$an.doc[0]),shared(),$_native()];},d:['$','operatingSystem']};};$prop$getOperatingSystem={get:getOperatingSystem,$crtmm$:getOperatingSystem.$crtmm$};get$ym=getOperatingSystem;$prop$get$ym=getOperatingSystem;ex$.$prop$getOperatingSystem=$prop$getOperatingSystem;function $yo(){var runtime$=new $yo.$$;runtime$.$prop$getName={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$yo,$an:function(){return[doc($CCMM$['ceylon.language'].runtime.$at.name.$an.doc[0]),shared(),$_native()];},d:['$','runtime','$at','name']};}};runtime$.$prop$getVersion={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$yo,$an:function(){return[doc($CCMM$['ceylon.language'].runtime.$at.version.$an.doc[0]),shared(),$_native()];},d:['$','runtime','$at','version']};}};runtime$.$prop$getIntegerSize={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yo,$an:function(){return[doc($CCMM$['ceylon.language'].runtime.$at.integerSize.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Integer)].reifyCeylonType({t:ClassDeclaration$meta$declaration})),shared(),$_native()];},d:['$','runtime','$at','integerSize']};}};runtime$.$prop$getIntegerAddressableSize={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yo,$an:function(){return[doc($CCMM$['ceylon.language'].runtime.$at.integerAddressableSize.$an.doc[0]),shared(),$_native()];},d:['$','runtime','$at','integerAddressableSize']};}};runtime$.$prop$getMinIntegerValue={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yo,$an:function(){return[doc($CCMM$['ceylon.language'].runtime.$at.minIntegerValue.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Integer)].reifyCeylonType({t:ClassDeclaration$meta$declaration})),shared(),$_native()];},d:['$','runtime','$at','minIntegerValue']};}};runtime$.$prop$getMaxIntegerValue={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yo,$an:function(){return[doc($CCMM$['ceylon.language'].runtime.$at.maxIntegerValue.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Integer)].reifyCeylonType({t:ClassDeclaration$meta$declaration})),shared(),$_native()];},d:['$','runtime','$at','maxIntegerValue']};}};runtime$.$prop$getMaxArraySize={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yo,$an:function(){return[doc($CCMM$['ceylon.language'].runtime.$at.maxArraySize.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$_Array)].reifyCeylonType({t:ClassDeclaration$meta$declaration})),shared(),$_native()];},d:['$','runtime','$at','maxArraySize']};}};return runtime$;
};$yo.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$an:function(){return[doc($CCMM$['ceylon.language'].runtime.$an.doc[0]),shared(),$_native()];},d:['$','runtime']};};function $init$$yo(){if($yo.$$===undefined){initTypeProto($yo,'ceylon.language::runtime',Basic);
(function(runtime$){atr$(runtime$,'name',function(){if (typeof process !== "undefined" && process.execPath && process.execPath.match(/node(js)?(\.exe)?$/)) {
return "node.js";
} else if (typeof window === 'object') {
return "Browser";
}
return "Unknown JavaScript environment";
runtime$.name.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$yo,$an:function(){return[doc($CCMM$['ceylon.language'].runtime.$at.name.$an.doc[0]),shared(),$_native()];},d:['$','runtime','$at','name']};};},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$yo,$an:function(){return[doc($CCMM$['ceylon.language'].runtime.$at.name.$an.doc[0]),shared(),$_native()];},d:['$','runtime','$at','name']};});atr$(runtime$,'version',function(){if (typeof process !== "undefined" && typeof process.version === 'string') {
return process.version;
}
return "Unknown";
runtime$.version.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$yo,$an:function(){return[doc($CCMM$['ceylon.language'].runtime.$at.version.$an.doc[0]),shared(),$_native()];},d:['$','runtime','$at','version']};};},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$yo,$an:function(){return[doc($CCMM$['ceylon.language'].runtime.$at.version.$an.doc[0]),shared(),$_native()];},d:['$','runtime','$at','version']};});atr$(runtime$,'integerSize',function(){return 53;
runtime$.integerSize.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yo,$an:function(){return[doc($CCMM$['ceylon.language'].runtime.$at.integerSize.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Integer)].reifyCeylonType({t:ClassDeclaration$meta$declaration})),shared(),$_native()];},d:['$','runtime','$at','integerSize']};};},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yo,$an:function(){return[doc($CCMM$['ceylon.language'].runtime.$at.integerSize.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Integer)].reifyCeylonType({t:ClassDeclaration$meta$declaration})),shared(),$_native()];},d:['$','runtime','$at','integerSize']};});atr$(runtime$,'integerAddressableSize',function(){return 32;
runtime$.integerAddressableSize.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yo,$an:function(){return[doc($CCMM$['ceylon.language'].runtime.$at.integerAddressableSize.$an.doc[0]),shared(),$_native()];},d:['$','runtime','$at','integerAddressableSize']};};},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yo,$an:function(){return[doc($CCMM$['ceylon.language'].runtime.$at.integerAddressableSize.$an.doc[0]),shared(),$_native()];},d:['$','runtime','$at','integerAddressableSize']};});atr$(runtime$,'minIntegerValue',function(){if (this.minInt$===undefined)this.minInt$=Integer(-9007199254740991); //-(2^53-1)
return this.minInt$;
runtime$.minIntegerValue.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yo,$an:function(){return[doc($CCMM$['ceylon.language'].runtime.$at.minIntegerValue.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Integer)].reifyCeylonType({t:ClassDeclaration$meta$declaration})),shared(),$_native()];},d:['$','runtime','$at','minIntegerValue']};};},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yo,$an:function(){return[doc($CCMM$['ceylon.language'].runtime.$at.minIntegerValue.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Integer)].reifyCeylonType({t:ClassDeclaration$meta$declaration})),shared(),$_native()];},d:['$','runtime','$at','minIntegerValue']};});atr$(runtime$,'maxIntegerValue',function(){if (this.maxInt$===undefined)this.maxInt$=Integer(9007199254740989); //(2^53-3) => ((2^53)-2 is NaN)
return this.maxInt$;
runtime$.maxIntegerValue.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yo,$an:function(){return[doc($CCMM$['ceylon.language'].runtime.$at.maxIntegerValue.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Integer)].reifyCeylonType({t:ClassDeclaration$meta$declaration})),shared(),$_native()];},d:['$','runtime','$at','maxIntegerValue']};};},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yo,$an:function(){return[doc($CCMM$['ceylon.language'].runtime.$at.maxIntegerValue.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Integer)].reifyCeylonType({t:ClassDeclaration$meta$declaration})),shared(),$_native()];},d:['$','runtime','$at','maxIntegerValue']};});atr$(runtime$,'maxArraySize',function(){if (this.maxArr$===undefined)this.maxArr$=Integer(4294967295); //(2^32-1)
return this.maxArr$;
runtime$.maxArraySize.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yo,$an:function(){return[doc($CCMM$['ceylon.language'].runtime.$at.maxArraySize.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$_Array)].reifyCeylonType({t:ClassDeclaration$meta$declaration})),shared(),$_native()];},d:['$','runtime','$at','maxArraySize']};};},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$yo,$an:function(){return[doc($CCMM$['ceylon.language'].runtime.$at.maxArraySize.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$_Array)].reifyCeylonType({t:ClassDeclaration$meta$declaration})),shared(),$_native()];},d:['$','runtime','$at','maxArraySize']};});atr$(runtime$,'string',function(){var runtime$=this;return "runtime [".plus(runtime$.name).plus(" / ").plus(runtime$.version).plus("]");},undefined,function(){return{mod:$CCMM$,$t:{t:$_String},$cont:$yo,$an:function(){return[shared(),actual()];},d:['$','runtime','$at','string']};});})($yo.$$.prototype);}
return $yo;}
ex$.$init$$yo=$init$$yo;$init$$yo();var $yp;function getRuntime(){if($yp===undefined){$yp=$init$$yo()();$yp.$crtmm$=getRuntime.$crtmm$;}
return $yp;}
ex$.getRuntime=getRuntime;getRuntime.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$yo},$an:function(){return[doc($CCMM$['ceylon.language'].runtime.$an.doc[0]),shared(),$_native()];},d:['$','runtime']};};$prop$getRuntime={get:getRuntime,$crtmm$:getRuntime.$crtmm$};get$yo=getRuntime;$prop$get$yo=getRuntime;ex$.$prop$getRuntime=$prop$getRuntime;var $yq;function $valinit$$yq(){if($yq===undefined)$yq=(2);return $yq;};$valinit$$yq();function getMinRadix(){return $valinit$$yq();}

ex$.getMinRadix=getMinRadix;var $prop$getMinRadix={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},d:['$','minRadix']};}};ex$.$prop$getMinRadix=$prop$getMinRadix;$prop$getMinRadix.get=getMinRadix;getMinRadix.$crtmm$=$prop$getMinRadix.$crtmm$;var $yr;function $valinit$$yr(){if($yr===undefined)$yr=(36);return $yr;};$valinit$$yr();function getMaxRadix(){return $valinit$$yr();}

ex$.getMaxRadix=getMaxRadix;var $prop$getMaxRadix={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},d:['$','maxRadix']};}};ex$.$prop$getMaxRadix=$prop$getMaxRadix;$prop$getMaxRadix.get=getMaxRadix;getMaxRadix.$crtmm$=$prop$getMaxRadix.$crtmm$;function parseInteger($ys,$yt){if($yt===undefined){$yt=(10);}
//assert at parseInteger.ceylon (39:4-39:49)
if(!(($yt>=getMinRadix())&&($yt<=getMaxRadix()))) {throw wrapexc(AssertionError("Assertion failed: \'radix >= minRadix, radix <= maxRadix\' at parseInteger.ceylon (39:11-39:48)"),'39:4-39:49','parseInteger.ceylon'); }
var $yu=(0);function set$yu($yv){return $yu=$yv;};var $yw=getRuntime().minIntegerValue.divided($yt);var $yx;var $yy;if(($yy=$ys.$_get($yu))!==null){if($yy.equals(Character(45,true))){$yx=true;($yz=$yu,$yu=$yz.successor,$yz);var $yz;}else {if($yy.equals(Character(43,true))){$yx=false;($z0=$yu,$yu=$z0.successor,$z0);var $z0;}else {$yx=false;}}}else {return null;}var $z1=($z2=($yx?getRuntime().minIntegerValue:null),nn$($z2)?$z2:(-getRuntime().maxIntegerValue));var $z2;var $z3=$ys.size;var $z4=(0);function set$z4($z5){return $z4=$z5;};var $z6=(-1);function set$z6($z7){return $z6=$z7;};var $z8=(0);function set$z8($z9){return $z8=$z9;};var $za=(-1);function set$za($zb){return $za=$zb;};while(($yu<$z3)){var $zc;var $zd;if(($zd=$ys.$_get($yu))!==null){$zc=$zd;}else {return null;}if($zc.equals(Character(95,true))){if(($z6==(-1))){var $ze;if(($ze=computeDigitGroupingSize($yt,$z8,$ys,$yu))!==null&&($z8<=$ze)){$za=$ze;$z6=$z8;}else {return null;}}else {if(($z8.minus($z6)==$za)){return null;}else {$z6=$z8;}}}else {if((!($z6==(-1))&&($z8.minus($z6)==$za.plus(1)))){return null;}if(((($yu.plus(1)==$z3)&&($yt==10))&&"kMGTP".contains($zc))){var $zf;if(($zf=parseIntegerExponent($zc))!==null){var $zg=(10).power($zf);if(($z1.divided($zg)<$z4)){($z4=$z4.times($zg));break;}else {return null;}}else {return null;}}else {var $zh;if(($zh=parseDigit($zc,$yt))!==null){if(($z4<$yw)){return null;}($z4=$z4.times($yt));if(($z4<$z1.plus($zh))){return null;}($z4=$z4.minus($zh));}else {return null;}}}($zi=$yu,$yu=$zi.successor,$zi);var $zi;($zj=$z8,$z8=$zj.successor,$zj);var $zj;}if((!($z6==(-1))&&!($z8.minus($z6)==$za.plus(1)))){return null;}if(($z8==0)){return null;}return ($zk=($yx?$z4:null),nn$($zk)?$zk:(-$z4));var $zk;}
ex$.parseInteger=parseInteger;parseInteger.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},$ps:[{$nm:'string',$mt:'prm',$t:{t:$_String},$an:function(){return[doc("The string representation to parse.")];}},{$nm:'radix',$mt:'prm',$def:1,$t:{t:Integer},$an:function(){return[doc("The base, between [[minRadix]] and [[maxRadix]] \ninclusive.")];}}],$an:function(){return[doc($CCMM$['ceylon.language'].parseInteger.$an.doc[0]),$_throws($init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),AssertionError),"if [[radix]] is not between [[minRadix]] and \n[[maxRadix]]"),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),formatInteger),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),parseFloat)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared()];},d:['$','parseInteger']};};function computeDigitGroupingSize($zl,$zm,$zn,$zo){var $zp;if(($zl==2)){$zp=(4);}else {if(($zl==10)){$zp=(3);}else {if(($zl==16)){var $zq;if(($zm<=2)&&($zq=$zn.$_get($zo.plus(3)))!==null&&$zq.equals(Character(95,true))){$zp=(2);}else {$zp=(4);}}else {$zp=null;}}}return $zp;};computeDigitGroupingSize.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},$ps:[{$nm:'radix',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'digitIndex',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'string',$mt:'prm',$t:{t:$_String},$an:function(){return[];}},{$nm:'ii',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],d:['$','computeDigitGroupingSize']};};function parseIntegerExponent($zr){var $zs=$zr;if($zs.equals(Character(80,true))) {return 15}else if($zs.equals(Character(84,true))) {return 12}else if($zs.equals(Character(71,true))) {return 9}else if($zs.equals(Character(77,true))) {return 6}else if($zs.equals(Character(107,true))) {return 3}else {return null;}};parseIntegerExponent.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},$ps:[{$nm:'char',$mt:'prm',$t:{t:Character},$an:function(){return[];}}],d:['$','parseIntegerExponent']};};var $zt;function $valinit$$zt(){if($zt===undefined)$zt=Character(97,true).integer;return $zt;};$valinit$$zt();function getAIntLower(){return $valinit$$zt();}

ex$.getAIntLower=getAIntLower;var $prop$getAIntLower={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},d:['$','aIntLower']};}};ex$.$prop$getAIntLower=$prop$getAIntLower;$prop$getAIntLower.get=getAIntLower;getAIntLower.$crtmm$=$prop$getAIntLower.$crtmm$;var $zu;function $valinit$$zu(){if($zu===undefined)$zu=Character(65,true).integer;return $zu;};$valinit$$zu();function getAIntUpper(){return $valinit$$zu();}

ex$.getAIntUpper=getAIntUpper;var $prop$getAIntUpper={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},d:['$','aIntUpper']};}};ex$.$prop$getAIntUpper=$prop$getAIntUpper;$prop$getAIntUpper.get=getAIntUpper;getAIntUpper.$crtmm$=$prop$getAIntUpper.$crtmm$;var $zv;function $valinit$$zv(){if($zv===undefined)$zv=Character(48,true).integer;return $zv;};$valinit$$zv();function getZeroInt(){return $valinit$$zv();}

ex$.getZeroInt=getZeroInt;var $prop$getZeroInt={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},d:['$','zeroInt']};}};ex$.$prop$getZeroInt=$prop$getZeroInt;$prop$getZeroInt.get=getZeroInt;getZeroInt.$crtmm$=$prop$getZeroInt.$crtmm$;function parseDigit($zw,$zx){var $zy;var $zz=$zw.integer;if(($100=$zz.minus(getZeroInt()),$100.compare((0))!==getSmaller()&&$100.compare((10))===getSmaller())){$zy=$zz.minus(getZeroInt());}else {if(($101=$zz.minus(getAIntLower()),$101.compare((0))!==getSmaller()&&$101.compare((26))===getSmaller())){$zy=$zz.minus(getAIntLower()).plus(10);}else {if(($102=$zz.minus(getAIntUpper()),$102.compare((0))!==getSmaller()&&$102.compare((26))===getSmaller())){$zy=$zz.minus(getAIntUpper()).plus(10);}else {return null;}}}return (($zy<$zx)?$zy:null);};parseDigit.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},$ps:[{$nm:'digit',$mt:'prm',$t:{t:Character},$an:function(){return[];}},{$nm:'radix',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],d:['$','parseDigit']};};function parseFloat($103){var $104=$103.firstOccurrence(Character(46,true));var $105;if(($105=$104)!==null){var $106=$103.spanTo($105.minus(1));var $107=($108=(($106.startsWith("+")||$106.startsWith("-"))?$106.rest:null),nn$($108)?$108:$106);var $108;var $109=$JsCallable(not($JsCallable(or($JsCallable(function($O$) {return $O$.digit;},[],{Return$Callable:{t:$_Boolean},Arguments$Callable:{t:'T',l:[{t:Character}]}}),$JsCallable(($10a=Character(95,true),JsCallable($10a,$10a!==null?$10a.equals:null)),[{$nm:'that',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],{Return$Callable:{t:$_Boolean},Arguments$Callable:{t:'T',l:[{t:$_Object}]}}),{Value$or:{t:Character}}),[{$nm:'p2',$mt:'prm',$t:{t:Character}}],{Return$Callable:{t:$_Boolean},Arguments$Callable:{t:'T',l:[{t:Character}]}}),{Value$not:{t:Character}}),[{$nm:'p2',$mt:'prm',$t:{t:Character}}],{Return$Callable:{t:$_Boolean},Arguments$Callable:{t:'T',l:[{t:Character}]}});var $10a;if($107.any($109)){return null;}var $10b=$103.spanFrom($105.plus(1));var $10c=$10b.firstIndexWhere($109);var $10d;function set$10d($10e){return $10d=$10e;};var $10f;var $10g;if(($10g=$10c)!==null){$10d=$10b.spanTo($10g.minus(1));$10f=$10b.spanFrom($10g);}else {$10d=$10b;$10f=null;}var $10h=parseInteger($106);var $10i;if(($10i=$10h)!==null){var $10j;if(($10j=$10d.$_get(3))!==null&&$10j.equals(Character(95,true))){var $10k=StringBuilder();var $10l=(0);function set$10l($10m){return $10l=$10m;};var $10n=(3);function set$10n($10o){return $10n=$10o;};var $10q;for(var $10p=$10d.iterator();($10q=$10p.next())!==getFinished();){if(($10l==$10n)){if((!$10q.equals(Character(95,true)))){return null;}$10n=$10l.plus(4);}else {if(!$10q.digit){return null;}$10k.appendCharacter($10q);}($10r=$10l,$10l=$10r.successor,$10r);var $10r;}$10d=$10k.string;}var $10s;if(($10s=parseInteger($10d))!==null){var $10t=$10d.size;var $10u;var $10v;if(($10v=$10f)!==null){var $10w;if(($10w=parseFloatExponent($10v))!==null){$10u=$10w.minus($10t);}else {return null;}}else {$10u=(-$10t);}var $10x=$10i.times((10).power($10t)).plus($10s);var $10y=$10u.magnitude;if(($10y==0)){return $10x.$_float;}else {if(($10y<getMaximumIntegerExponent())){var $10z=(10).power($10y);return ($110=(($10u<0)?$10x.$_float.divided($10z):null),nn$($110)?$110:$10x.$_float.times($10z));var $110;}else {return $10x.times(Float(10.0).power($10u));}}}}}return null;}
ex$.parseFloat=parseFloat;parseFloat.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Float}]},$ps:[{$nm:'string',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$an:function(){return[doc($CCMM$['ceylon.language'].parseFloat.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),parseInteger)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared()];},d:['$','parseFloat']};};var $111;function $valinit$$111(){if($111===undefined)$111=smallest(getRuntime().maxIntegerValue.string.size,getRuntime().minIntegerValue.string.size.minus(1),{Element$smallest:{t:Integer}});return $111;};$valinit$$111();function getMaximumIntegerExponent(){return $valinit$$111();}

ex$.getMaximumIntegerExponent=getMaximumIntegerExponent;var $prop$getMaximumIntegerExponent={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},d:['$','maximumIntegerExponent']};}};ex$.$prop$getMaximumIntegerExponent=$prop$getMaximumIntegerExponent;$prop$getMaximumIntegerExponent.get=getMaximumIntegerExponent;getMaximumIntegerExponent.$crtmm$=$prop$getMaximumIntegerExponent.$crtmm$;function parseFloatExponent($112){var $113=$112;if($113==="k") {return 3}else if($113==="M") {return 6}else if($113==="G") {return 9}else if($113==="T") {return 12}else if($113==="P") {return 15}else if($113==="m") {return (-3);}else if($113==="u") {return (-6);}else if($113==="n") {return (-9);}else if($113==="p") {return (-12);}else if($113==="f") {return (-15);}else {if($112.lowercased.startsWith("e")){return parseInteger($112.rest);}else {return null;}}};parseFloatExponent.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},$ps:[{$nm:'string',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],d:['$','parseFloatExponent']};};function formatInteger($114,$115){if($115===undefined){$115=(10);}
//assert at formatInteger.ceylon (24:4-24:49)
if(!(($115>=getMinRadix())&&($115<=getMaxRadix()))) {throw wrapexc(AssertionError("Assertion failed: \'radix >= minRadix, radix <= maxRadix\' at formatInteger.ceylon (24:11-24:48)"),'24:4-24:49','formatInteger.ceylon'); }
if(($114==0)){return "0";}var $116=StringBuilder();var $117;var $118;function set$118($119){return $118=$119;};if(($114<0)){$116.append("-");$117=(1);$118=$114;}else {$117=(0);$118=(-$114);}while(!($118==0)){var $11a=(-$118.remainder($115));var $11b;if(($11c=$11a,$11c.compare((0))!==getSmaller()&&$11c.compare((10))===getSmaller())){$11b=$11a.plus(getZeroInt()).character;}else {if(($11d=$11a,$11d.compare((10))!==getSmaller()&&$11d.compare((36))===getSmaller())){$11b=$11a.minus(10).plus(getAIntLower()).character;}else {//assert at formatInteger.ceylon (49:12-49:26)
if(!(false)) {throw wrapexc(AssertionError("Assertion failed: \'false\' at formatInteger.ceylon (49:19-49:25)"),'49:12-49:26','formatInteger.ceylon'); }
}}$116.insertCharacter($117,$11b);$118=$118.plus($11a).divided($115);}return $116.string;}
ex$.formatInteger=formatInteger;formatInteger.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$ps:[{$nm:'integer',$mt:'prm',$t:{t:Integer},$an:function(){return[doc("The integer value to format.")];}},{$nm:'radix',$mt:'prm',$def:1,$t:{t:Integer},$an:function(){return[doc("The base, between [[minRadix]] and [[maxRadix]] \ninclusive.")];}}],$an:function(){return[doc($CCMM$['ceylon.language'].formatInteger.$an.doc[0]),$_throws($init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),AssertionError),"if [[radix]] is not between [[minRadix]] and \n[[maxRadix]]"),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),parseInteger)].reifyCeylonType({t:FunctionDeclaration$meta$declaration})),shared()];},d:['$','formatInteger']};};function parseBoolean($11e){var $11f=$11e;if($11f==="true") {return true;}else if($11f==="false") {return false;}else {return null;}}
ex$.parseBoolean=parseBoolean;parseBoolean.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:$_Boolean}]},$ps:[{$nm:'string',$mt:'prm',$t:{t:$_String},$an:function(){return[];}}],$an:function(){return[doc($CCMM$['ceylon.language'].parseBoolean.$an.doc[0]),shared()];},d:['$','parseBoolean']};};function className(obj) {
function _typename(t) {
if (t.t==='i' || t.t==='u') {
var _sep = t.t==='i'?'&':'|';
var ct = '';
for (var i=0; i < t.l.length; i++) {
if (i>0) { ct+=_sep; }
ct += _typename(t.l[i]);
}
return ct;
} else {
var tn = t.t.$$.T$name;
if (t.a) {
tn += '<';
for (var i = 0; i < t.a.length; i++) {
if (i>0) { tn += ','; }
tn += _typename(t.a[i]);
}
tn += '>';
}
return tn;
}
}
if (obj === null) return 'ceylon.language::Null';
if (obj === undefined) return "JavaScript UNDEFINED";
var tn = obj.getT$name === undefined ? 'UNKNOWN' : obj.getT$name();
if (tn === 'UNKNOWN') {
if (typeof obj === 'function') {
tn = 'ceylon.language::Callable';
}
}
/*else if (obj.$$targs$$) {
tn += '<';
for (var i=0; i < obj.$$targs$$.length; i++) {
if (i>0) { tn += ','; }
tn += _typename(obj.$$targs$$[i]);
}
tn += '>';
}*/
return tn;
}
className.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$_String},$ps:[{$nm:'obj',$mt:'prm',$t:{t:$_Object},$an:function(){return[];}}],$an:function(){return[doc($CCMM$['ceylon.language'].className.$an.doc[0]),shared(),$_native()];},d:['$','className']};};
ex$.className=className;
function NativeException(e) {
var that = new NativeException.$$;
var msg;
if (typeof e === 'string') {
msg = e;
} else if (e) {
msg = e.toString();
} else {
msg = "Native JavaScript Exception";
}
Exception(msg,null,that);
return that;
}
initTypeProto(NativeException, 'ceylon.language::NativeException', $init$Exception());
NativeException.$crtmm$=function(){return{$nm:'NativeException',$mt:'c',$ps:[{t:Exception}],$an:function(){return[shared()];},mod:$CCMM$,d:['$','Exception']};}
ex$.Anything=Anything;
ex$.Nothing=Nothing;
ex$.getTrue=getTrue;
ex$.getFalse=getFalse;
ex$.NativeException=NativeException;
});
}(typeof define==='function' && define.amd ?
define : function (factory) {
if (typeof exports!=='undefined') {
factory(require, exports, module);
} else {
throw "no module loader";
}
}));
